# Generated by Django 5.0.8 on 2024-12-07 22:33

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('assistants', '0014_assistant_is_beamguard_active'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DataSourceWebsiteStorageConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('description', models.TextField()),
                ('vector_index_path', models.CharField(blank=True, max_length=1000, null=True)),
                ('vectorizer', models.CharField(blank=True, choices=[('text2vec-openai', 'Text2Vec (OpenAI)')], default='text2vec-openai', max_length=100, null=True)),
                ('embedding_chunk_size', models.IntegerField(default=1024)),
                ('embedding_chunk_overlap', models.IntegerField(default=256)),
                ('search_instance_retrieval_limit', models.IntegerField(default=10)),
                ('maximum_pages_to_index', models.IntegerField(default=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assistant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assistants.assistant')),
                ('created_by_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_website_storage_connections', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Website Storage Connection',
                'verbose_name_plural': 'Website Storage Connections',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DataSourceWebsiteStorageItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website_url', models.URLField(blank=True, max_length=10000, null=True)),
                ('indexing_methodology', models.CharField(choices=[('text_content', 'Text Content'), ('html_content', 'HTML Content')], default='text_content', max_length=100)),
                ('sitemap_content', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_website_storage_items', to=settings.AUTH_USER_MODEL)),
                ('storage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='storage_items', to='datasource_website.datasourcewebsitestorageconnection')),
            ],
            options={
                'verbose_name': 'Website Storage Item',
                'verbose_name_plural': 'Website Storage Items',
                'db_table': 'datasource_website_storage_item',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WebsiteItemChunkVectorData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raw_data', models.JSONField(blank=True, null=True)),
                ('raw_data_hash', models.CharField(blank=True, max_length=255, null=True)),
                ('vector_data', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('website_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datasource_website.datasourcewebsitestorageitem')),
            ],
            options={
                'verbose_name': 'Website Item Chunk Vector Data',
                'verbose_name_plural': 'Website Item Chunk Vector Data',
            },
        ),
        migrations.AddIndex(
            model_name='datasourcewebsitestorageconnection',
            index=models.Index(fields=['assistant', 'name'], name='datasource__assista_19cc24_idx'),
        ),
        migrations.AddIndex(
            model_name='datasourcewebsitestorageconnection',
            index=models.Index(fields=['assistant', 'created_at'], name='datasource__assista_9adc2b_idx'),
        ),
        migrations.AddIndex(
            model_name='datasourcewebsitestorageconnection',
            index=models.Index(fields=['assistant', 'updated_at'], name='datasource__assista_de4b1f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='datasourcewebsitestorageconnection',
            unique_together={('assistant', 'name')},
        ),
        migrations.AddIndex(
            model_name='datasourcewebsitestorageitem',
            index=models.Index(fields=['website_url'], name='datasource__website_9f723a_idx'),
        ),
        migrations.AddIndex(
            model_name='datasourcewebsitestorageitem',
            index=models.Index(fields=['indexing_methodology'], name='datasource__indexin_6767ba_idx'),
        ),
        migrations.AddIndex(
            model_name='datasourcewebsitestorageitem',
            index=models.Index(fields=['created_at'], name='datasource__created_210385_idx'),
        ),
        migrations.AddIndex(
            model_name='datasourcewebsitestorageitem',
            index=models.Index(fields=['updated_at'], name='datasource__updated_ec3645_idx'),
        ),
        migrations.AddIndex(
            model_name='datasourcewebsitestorageitem',
            index=models.Index(fields=['website_url', 'indexing_methodology'], name='datasource__website_eb754c_idx'),
        ),
        migrations.AddIndex(
            model_name='datasourcewebsitestorageitem',
            index=models.Index(fields=['website_url', 'created_at'], name='datasource__website_66c8e0_idx'),
        ),
        migrations.AddIndex(
            model_name='websiteitemchunkvectordata',
            index=models.Index(fields=['website_item'], name='datasource__website_f895d9_idx'),
        ),
        migrations.AddIndex(
            model_name='websiteitemchunkvectordata',
            index=models.Index(fields=['created_at'], name='datasource__created_cb95ad_idx'),
        ),
        migrations.AddIndex(
            model_name='websiteitemchunkvectordata',
            index=models.Index(fields=['updated_at'], name='datasource__updated_d63689_idx'),
        ),
    ]
