Contents of ../../apps/organization/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:40
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#



Contents of ../../apps/organization/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:40
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.apps import AppConfig


class OrganizationConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.organization'


Contents of ../../apps/organization/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:40
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.urls import path
from .views import (OrganizationView_OrganizationCreate, OrganizationView_OrganizationList,
                    OrganizationView_OrganizationUpdate,
                    OrganizationView_OrganizationDelete, OrganizationView_AddBalanceCredits,
                    OrganizationView_TransferBalance,
                    OrganizationView_AddGiftCredits)

app_name = "organization"

urlpatterns = [
    path('create/',
         OrganizationView_OrganizationCreate.as_view(template_name="organization/create_organization.html"),
         name="create"),
    path('list/', OrganizationView_OrganizationList.as_view(template_name="organization/list_organizations.html"),
         name="list"),
    path('update/<int:pk>/', OrganizationView_OrganizationUpdate.as_view(
        template_name="organization/update_organization.html"), name="update"),
    path('delete/<int:pk>/', OrganizationView_OrganizationDelete.as_view(),
         name="delete"),
    path('add_credits/', OrganizationView_AddBalanceCredits.as_view(),
         name="add_credits"),
    path('balance_transfer/', OrganizationView_TransferBalance.as_view(), name='balance_transfer'),
    path('add_gift_credits/', OrganizationView_AddGiftCredits.as_view(), name='add_gift_credits'),
]


Contents of ../../apps/organization/models/organization_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: organization_models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:40
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.db import models


class Organization(models.Model):
    name = models.CharField(max_length=255)
    description = models.TextField(null=True, blank=True)
    mission = models.TextField(null=True, blank=True)
    vision = models.TextField(null=True, blank=True)
    email = models.EmailField()
    phone = models.CharField(max_length=20)
    address = models.TextField()
    city = models.CharField(max_length=100, blank=True, null=True)
    country = models.CharField(max_length=100, blank=True, null=True)
    postal_code = models.CharField(max_length=100, blank=True, null=True)
    industry = models.CharField(max_length=255)
    is_active = models.BooleanField(default=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    created_by_user = models.ForeignKey("auth.User", on_delete=models.CASCADE,
                                        related_name="organization_created_by_users", blank=True, null=True)
    last_updated_by_user = models.ForeignKey("auth.User", on_delete=models.CASCADE,
                                             related_name="organization_last_updated_by_users", blank=True, null=True)
    balance = models.DecimalField(max_digits=100, decimal_places=6, default=0.000000)
    organization_image_save_path = 'organization_images/%Y/%m/%d/'
    organization_image = models.ImageField(upload_to=organization_image_save_path, blank=True, max_length=1000,
                                           null=True)
    users = models.ManyToManyField("auth.User", related_name="organizations")
    auto_balance_topup = models.OneToOneField("llm_transaction.AutoBalanceTopUpModel",
                                              on_delete=models.SET_NULL, blank=True, null=True,
                                              related_name="organization_auto_balance_topup")

    def __str__(self):
        return self.name

    class Meta:
        verbose_name = "Organization"
        verbose_name_plural = "Organizations"
        ordering = ["-created_at"]
        indexes = [
            models.Index(fields=["name"]),
            models.Index(fields=["email"]),
            models.Index(fields=["phone"]),
            models.Index(fields=["industry"]),
            models.Index(fields=["is_active"]),
            models.Index(fields=["created_at"]),
            models.Index(fields=["updated_at"]),
            models.Index(fields=["created_by_user"]),
            models.Index(fields=["last_updated_by_user"]),
            models.Index(fields=["balance"]),
        ]


Contents of ../../apps/organization/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:40
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from .organization_models import *


Contents of ../../apps/harmoniq/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:34
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#



Contents of ../../apps/harmoniq/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:34
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class HarmoniqConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.harmoniq'


Contents of ../../apps/harmoniq/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:34
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path

from apps.harmoniq.views import (HarmoniqView_List, HarmoniqView_Use, HarmoniqView_Create,
                                 HarmoniqView_Update, HarmoniqView_ConfirmDelete, HarmoniqCommunicationView)
from apps.harmoniq.views.internal.internal_test_harmoniq_views import HarmoniqView_TestInternal

app_name = 'harmoniq'

urlpatterns = [
    path("use/", HarmoniqView_Use.as_view(
        template_name="harmoniq/use_harmoniq_agent.html"), name="use"),
    path("list/", HarmoniqView_List.as_view(
        template_name="harmoniq/list_harmoniq_agents.html"), name="list"),
    path("create/", HarmoniqView_Create.as_view(
        template_name="harmoniq/create_harmoniq_agent.html"), name="create"),
    path("update/<int:pk>/", HarmoniqView_Update.as_view(
        template_name="harmoniq/update_harmoniq_agent.html"), name="update"),
    path("delete/<int:pk>/", HarmoniqView_ConfirmDelete.as_view(
        template_name="harmoniq/confirm_delete_harmoniq_agent.html"), name="confirm_delete"),
    path("api/communicate/", HarmoniqCommunicationView.as_view(), name="harmoniq_api"),
    path("internal/test/", HarmoniqView_TestInternal.as_view(
        template_name="harmoniq/internal/test_harmoniq_agent.html"), name="internal_test"),
]


Contents of ../../apps/harmoniq/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:34
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from .harmoniq_models import *


Contents of ../../apps/harmoniq/models/harmoniq_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: harmoniq_models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:34
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models
from apps.harmoniq.utils.constant_utils import HARMONIQ_DEITIES


class Harmoniq(models.Model):
    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE)
    llm_model = models.ForeignKey('llm_core.LLMCore', on_delete=models.CASCADE)
    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE)
    consultant_expert_networks = models.ManyToManyField("leanmod.ExpertNetwork", related_name='harmoniqs',
                                                        blank=True)
    name = models.CharField(max_length=1000)
    description = models.TextField()
    harmoniq_deity = models.CharField(max_length=100, choices=HARMONIQ_DEITIES, default=HARMONIQ_DEITIES[0][0])
    optional_instructions = models.TextField(blank=True, null=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.name + ' - ' + self.organization.name + ' - ' + self.llm_model.nickname

    class Meta:
        verbose_name = 'Harmoniq Agent'
        verbose_name_plural = 'Harmoniq Agents'
        ordering = ['-created_at']
        indexes = [
            models.Index(fields=['organization']),
            models.Index(fields=['organization', 'llm_model']),
            models.Index(fields=['organization', 'llm_model', 'created_by_user']),
        ]


Contents of ../../apps/blog_app/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 12:51:58
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:34
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


Contents of ../../apps/blog_app/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 12:51:58
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:34
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class BlogConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.blog_app'


Contents of ../../apps/blog_app/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 12:51:58
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:34
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#

from django.urls import path

from apps.blog_app.views import BlogPostView_List, BlogPostView_Detail

app_name = 'blog_app'

urlpatterns = [
    path('', BlogPostView_List.as_view(
        template_name='blog_app/blogpost_list.html'
    ), name='post_list'),
    path('post/<slug:slug>/', BlogPostView_Detail.as_view(
        template_name='blog_app/blogpost_detail.html'
    ), name='post_detail'),
]


Contents of ../../apps/blog_app/models/blog_seo_meta_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: blog_seo_meta_models.py
#  Last Modified: 2024-10-05 12:51:58
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:34
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.db import models


class BlogSEOMeta(models.Model):
    post = models.OneToOneField("BlogPost", on_delete=models.CASCADE, related_name='seo_meta')
    meta_title = models.CharField(max_length=300, blank=True)
    meta_description = models.CharField(max_length=1000, blank=True)
    meta_keywords = models.CharField(max_length=300, blank=True)

    def __str__(self):
        return f'SEO Meta for {self.post.title}'

    class Meta:
        verbose_name = 'Blog SEO Meta'
        verbose_name_plural = 'Blog SEO Meta'
        ordering = ['post']
        indexes = [
            models.Index(fields=['post']),
            models.Index(fields=['meta_title']),
            models.Index(fields=['meta_description']),
            models.Index(fields=['meta_keywords']),
            models.Index(fields=['post', 'meta_title']),
            models.Index(fields=['post', 'meta_description']),
            models.Index(fields=['post', 'meta_keywords']),
        ]


Contents of ../../apps/blog_app/models/blog_tag_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: blog_tag_models.py
#  Last Modified: 2024-10-05 12:51:58
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:34
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.db import models
from slugify import slugify


class BlogTag(models.Model):
    blog_posts = models.ManyToManyField('BlogPost', related_name='tags', blank=True)
    name = models.CharField(max_length=255)
    slug = models.SlugField(max_length=255, unique=True)

    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def save(self, *args, **kwargs):
        if not self.slug:
            self.slug = slugify(self.name)
        super().save(*args, **kwargs)

    def __str__(self):
        return self.name

    class Meta:
        ordering = ['name']
        verbose_name = 'Blog Tag'
        verbose_name_plural = 'Blog Tags'
        indexes = [
            models.Index(fields=['name']),
            models.Index(fields=['slug']),
            models.Index(fields=['created_at']),
            models.Index(fields=['updated_at']),
        ]


Contents of ../../apps/blog_app/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 12:51:58
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:34
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from .blog_tag_models import *
from .blog_post_models import *
from .blog_seo_meta_models import *


Contents of ../../apps/blog_app/models/blog_post_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: blog_post_models.py
#  Last Modified: 2024-10-05 12:51:58
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:34
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.db import models
from django.utils import timezone
from slugify import slugify

from apps.blog_app.utils import STATUS_CHOICES


class BlogPost(models.Model):
    title = models.CharField(max_length=255)
    slug = models.SlugField(max_length=255, unique=True, blank=True)
    author = models.ForeignKey('auth.User', on_delete=models.CASCADE, null=True, blank=True)
    content = models.TextField()
    thumbnail_image = models.ImageField(upload_to='blog_post_images/%Y/%m/%d/', blank=True, null=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    published_at = models.DateTimeField(default=timezone.now)
    status = models.CharField(max_length=10, choices=STATUS_CHOICES, default='draft')

    def save(self, *args, **kwargs):
        if not self.slug:
            self.slug = slugify(self.title)
        super().save(*args, **kwargs)

    def __str__(self):
        return self.title + ' by ' + self.author.username if self.author else 'admin'

    class Meta:
        ordering = ['-published_at']
        verbose_name = 'Blog Post'
        verbose_name_plural = 'Blog Posts'
        indexes = [
            models.Index(fields=['title', 'slug']),
            models.Index(fields=['title', 'status']),
            models.Index(fields=['title', 'status', 'published_at']),
            models.Index(fields=['title', 'status', 'created_at']),
            models.Index(fields=['title', 'status', 'updated_at']),
            models.Index(fields=['title', 'status', 'published_at', 'created_at']),
            models.Index(fields=['title', 'status', 'published_at', 'updated_at']),
            models.Index(fields=['title', 'status', 'created_at', 'updated_at']),
            models.Index(fields=['title', 'status', 'created_at', 'published_at']),
            models.Index(fields=['title', 'status', 'updated_at', 'published_at']),
        ]


Contents of ../../apps/datasource_knowledge_base/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:48
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#



Contents of ../../apps/datasource_knowledge_base/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:47
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.apps import AppConfig


class DatasourceKnowledgeBaseConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.datasource_knowledge_base'


Contents of ../../apps/datasource_knowledge_base/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:47
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.urls import path

from apps.datasource_knowledge_base.views import VectorStoreView_Create, VectorStoreView_List, \
    VectorStoreView_Update, VectorStoreView_Delete, DocumentView_Create, DocumentView_List, \
    DocumentView_DeleteAll

app_name = "datasource_knowledge_base"

urlpatterns = [
    path("create/", VectorStoreView_Create.as_view(
        template_name="datasource_knowledge_base/base/create_knowledge_base.html"), name="create"),
    path("list/", VectorStoreView_List.as_view(
        template_name="datasource_knowledge_base/base/list_knowledge_bases.html"), name="list"),
    path("update/<int:pk>/", VectorStoreView_Update.as_view(
        template_name="datasource_knowledge_base/base/update_knowledge_base.html"), name="update"),
    path("delete/<int:pk>/", VectorStoreView_Delete.as_view(
        template_name="datasource_knowledge_base/base/confirm_delete_knowledge_base.html"), name="delete"),
    path('create_documents/', DocumentView_Create.as_view(
        template_name="datasource_knowledge_base/document/add_document.html"), name="create_documents"),
    path('list_documents/', DocumentView_List.as_view(
        template_name="datasource_knowledge_base/document/list_documents.html"), name="list_documents"),
    path('documents/delete-selected/', DocumentView_List.as_view(), name='delete_selected_documents'),
    path('documents/delete-all/<int:kb_id>/', DocumentView_DeleteAll.as_view(), name='delete_all_documents'),
]


Contents of ../../apps/datasource_knowledge_base/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:47
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from .document import *
from .context_history import *


Contents of ../../apps/drafting/__init__.py:


Contents of ../../apps/drafting/apps.py:
from django.apps import AppConfig


class DraftingConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.drafting'


Contents of ../../apps/drafting/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-14 13:50:43
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-14 13:50:44
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path

from apps.drafting.views import (DraftingView_DocumentDetail, DraftingView_DocumentDelete, DraftingView_DocumentCreate,
                                 DraftingView_DocumentList, DraftingView_FolderList, DraftingView_FolderCreate,
                                 DraftingView_FolderUpdate, DraftingView_FolderDelete, DraftingView_DocumentUpdate,
                                 DraftingView_SaveContent, DraftingView_GenerateViaAICommand,
                                 DraftingView_GenerateViaNoSQLCommand, DraftingView_GenerateViaSQLCommand,
                                 DraftingView_GenerateViaSSHCommand, DraftingView_GenerateViaSelectCommand,
                                 DraftingView_GenerateViaVectCommand, DraftingView_GenerateViaAutoCommand,
                                 DraftingView_GenerateViaImgCommand, DraftingView_GenerateViaWebCommand,
                                 DraftingView_PublicGenerateViaNoSQLCommand, DraftingView_PublicGenerateViaAICommand,
                                 DraftingView_PublicGenerateViaSQLCommand, DraftingView_PublicGenerateViaSelectCommand,
                                 DraftingView_PublicGenerateViaVectCommand, DraftingView_PublicGenerateViaWebCommand,
                                 DraftingView_PublicGenerateViaAutoCommand, DraftingView_PublicGenerateViaImgCommand,
                                 DraftingView_PublicGenerateViaRepoCommand, DraftingView_PublicGenerateViaSSHCommand,
                                 DraftingView_GoogleAppsConnectionCreate, DraftingView_GoogleAppsConnectionUpdate,
                                 DraftingView_GoogleAppsConnectionDelete, DraftingView_GoogleAppsConnectionList)

from apps.drafting.views.drafting_commands.repo_commands_views import DraftingView_GenerateViaRepoCommand

app_name = 'drafting'

urlpatterns = [
    path("folders/list/", DraftingView_FolderList.as_view(
        template_name="drafting/folder/drafting_folders_list.html"), name="folders_list"),
    path("folders/delete/<int:folder_id>/", DraftingView_FolderDelete.as_view(
        template_name="drafting/folder/drafting_folders_delete.html"), name="folders_delete"),
    path("folders/create/", DraftingView_FolderCreate.as_view(), name="folders_create"),
    path("folders/update/<int:folder_id>/", DraftingView_FolderUpdate.as_view(
        template_name="drafting/folder/drafting_folders_update.html"), name="folders_update"),

    path("documents/detail/<int:folder_id>/<int:document_id>/", DraftingView_DocumentDetail.as_view(
        template_name="drafting/document/drafting_documents_detail.html"), name="documents_detail"),
    path("documents/list/<int:folder_id>/", DraftingView_DocumentList.as_view(
        template_name="drafting/document/drafting_documents_list.html"), name="documents_list"),
    path("documents/delete/<int:folder_id>/<int:document_id>/", DraftingView_DocumentDelete.as_view(),
         name="documents_delete"),
    path("documents/create/<int:folder_id>/", DraftingView_DocumentCreate.as_view(), name="documents_create"),
    path("documents/update/<int:folder_id>/<int:document_id>/", DraftingView_DocumentUpdate.as_view(
        template_name="drafting/document/drafting_documents_update.html"
    ), name="documents_update"),
    path("documents/save/<int:folder_id>/<int:document_id>/", DraftingView_SaveContent.as_view(),
         name="documents_save"),

    path("generate/commands/ai/", DraftingView_GenerateViaAICommand.as_view(), name="generate_ai"),
    path("generate/commands/nosql/", DraftingView_GenerateViaNoSQLCommand.as_view(), name="generate_nosql"),
    path("generate/commands/sql/", DraftingView_GenerateViaSQLCommand.as_view(), name="generate_sql"),
    path("generate/commands/ssh/", DraftingView_GenerateViaSSHCommand.as_view(), name="generate_ssh"),
    path("generate/commands/select/", DraftingView_GenerateViaSelectCommand.as_view(), name="generate_select"),
    path("generate/commands/vect/", DraftingView_GenerateViaVectCommand.as_view(), name="generate_vect"),
    path("generate/commands/auto/", DraftingView_GenerateViaAutoCommand.as_view(), name="generate_auto"),
    path("generate/commands/img/", DraftingView_GenerateViaImgCommand.as_view(), name="generate_img"),
    path("generate/commands/web/", DraftingView_GenerateViaWebCommand.as_view(), name="generate_web"),
    path("generate/commands/repo/", DraftingView_GenerateViaRepoCommand.as_view(), name="generate_repo"),

    # Google Apps Connections
    path("google_apps/connections/list/", DraftingView_GoogleAppsConnectionList.as_view(
        template_name="drafting/google_apps_connection/manage_google_apps_connections.html"
    ), name="google_apps_connections_list"),
    path("google_apps/connections/create/", DraftingView_GoogleAppsConnectionCreate.as_view(), name="google_apps_connections_create"),
    path("google_apps/connections/update/<int:pk>/", DraftingView_GoogleAppsConnectionUpdate.as_view(), name="google_apps_connections_update"),
    path("google_apps/connections/delete/<int:pk>/", DraftingView_GoogleAppsConnectionDelete.as_view(), name="google_apps_connections_delete"),

    # Public endpoints
    path("public/generate/commands/ai/", DraftingView_PublicGenerateViaAICommand.as_view(), name="public_generate_ai"),
    path("public/generate/commands/nosql/", DraftingView_PublicGenerateViaNoSQLCommand.as_view(),
         name="public_generate_nosql"),
    path("public/generate/commands/sql/", DraftingView_PublicGenerateViaSQLCommand.as_view(),
         name="public_generate_sql"),
    path("public/generate/commands/ssh/", DraftingView_PublicGenerateViaSSHCommand.as_view(),
         name="public_generate_ssh"),
    path("public/generate/commands/select/", DraftingView_PublicGenerateViaSelectCommand.as_view(),
         name="public_generate_select"),
    path("public/generate/commands/vect/", DraftingView_PublicGenerateViaVectCommand.as_view(),
         name="public_generate_vect"),
    path("public/generate/commands/auto/", DraftingView_PublicGenerateViaAutoCommand.as_view(),
         name="public_generate_auto"),
    path("public/generate/commands/img/", DraftingView_PublicGenerateViaImgCommand.as_view(),
         name="public_generate_img"),
    path("public/generate/commands/web/", DraftingView_PublicGenerateViaWebCommand.as_view(),
         name="public_generate_web"),
    path("public/generate/commands/repo/", DraftingView_PublicGenerateViaRepoCommand.as_view(),
         name="public_generate_repo"),
]


Contents of ../../apps/drafting/models/drafting_document_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: drafting_document_models.py
#  Last Modified: 2024-10-14 18:31:03
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-14 18:31:04
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.db import models


class DraftingDocument(models.Model):
    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE)
    copilot_assistant = models.ForeignKey('assistants.Assistant', on_delete=models.CASCADE, default=1)

    document_folder = models.ForeignKey('drafting.DraftingFolder', on_delete=models.CASCADE)
    document_title = models.CharField(max_length=4000)
    document_content_json_quill = models.TextField(blank=True, null=True)
    context_instructions = models.TextField(blank=True, null=True)
    target_audience = models.TextField(blank=True, null=True)
    tone = models.TextField(blank=True, null=True)

    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE, related_name='drafting_document_created_by_user')
    last_updated_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE, related_name='drafting_document_last_updated_by_user')

    def __str__(self):
        return self.organization.name + ' - ' + self.document_folder.name + ' - ' + self.document_title

    class Meta:
        verbose_name = 'Drafting Document'
        verbose_name_plural = 'Drafting Documents'
        indexes = [
            models.Index(fields=['organization']),
            models.Index(fields=['organization', 'document_folder']),
            models.Index(fields=['organization', 'copilot_assistant']),
            models.Index(fields=['organization', 'copilot_assistant', 'document_folder']),
            models.Index(fields=['organization', 'document_folder', 'document_title']),
            models.Index(fields=['organization', 'copilot_assistant', 'document_folder', 'document_title']),
        ]


Contents of ../../apps/drafting/models/drafting_google_apps_connection_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: drafting_google_apps_connection_models.py
#  Last Modified: 2024-10-31 03:15:35
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-31 03:15:35
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models


class DraftingGoogleAppsConnection(models.Model):
    drafting_assistant = models.ForeignKey('assistants.Assistant', on_delete=models.CASCADE, null=True, blank=True)
    owner_user = models.ForeignKey('auth.User', on_delete=models.CASCADE)
    connection_api_key = models.CharField(max_length=4000)

    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.drafting_assistant.name + ' - ' + self.owner_user.username + ' - ' + self.connection_api_key

    class Meta:
        verbose_name = 'Drafting Google Apps Connection'
        verbose_name_plural = 'Drafting Google Apps Connections'
        indexes = [
            models.Index(fields=['drafting_assistant']),
            models.Index(fields=['owner_user']),
            models.Index(fields=['drafting_assistant', 'owner_user']),
        ]
        unique_together = [
            ['drafting_assistant', 'owner_user'],
        ]


Contents of ../../apps/drafting/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-14 13:51:21
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-14 13:51:21
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from .drafting_document_models import *
from .drafting_folder_models import *
from .drafting_google_apps_connection_models import *


Contents of ../../apps/drafting/models/drafting_folder_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: drafting_folder_models.py
#  Last Modified: 2024-10-14 18:32:43
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-14 18:32:44
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models


class DraftingFolder(models.Model):
    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE)
    name = models.CharField(max_length=1000)
    description = models.TextField(blank=True, null=True)
    meta_context_instructions = models.TextField(blank=True, null=True)

    created_at = models.DateTimeField(auto_now_add=True)
    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE)

    def __str__(self):
        return self.organization.name + ' - ' + self.name

    class Meta:
        verbose_name = 'Drafting Folder'
        verbose_name_plural = 'Drafting Folders'
        indexes = [
            models.Index(fields=['organization']),
            models.Index(fields=['organization', 'name']),
        ]
        unique_together = [
            ['organization', 'name'],
        ]


Contents of ../../apps/landing/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 02:33:49
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


Contents of ../../apps/landing/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class LandingConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.landing'


Contents of ../../apps/landing/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 02:13:34
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path

from apps.landing.views import (LandingView_Index, LandingView_ContactFormSubmit, LandingView_FAQ,
                                LandingView_AdminNotAccredited, LandingView_Endeavours,
                                LandingView_IntegrationToOrganizations, LandingView_ElectronCopilotReleases)

app_name = "landing"

urlpatterns = [
    path("", LandingView_Index.as_view(template_name="landing/index.html"), name="index"),
    path('contact-form-submit/', LandingView_ContactFormSubmit.as_view(template_name="landing/contact_form_submitted.html"),
         name='contact_form_submit'),
    path('faq/', LandingView_FAQ.as_view(template_name="landing/faq.html"), name="faq"),
    path('not_accredited/', LandingView_AdminNotAccredited.as_view(template_name="landing/not_accredited_admin.html"),
         name='not_accredited'),
    path('bimod_endeavours/', LandingView_Endeavours.as_view(template_name="landing/bimod_endeavours.html"),
         name='bimod_endeavours'),
    path('integration_to_organizations/',
         LandingView_IntegrationToOrganizations.as_view(template_name="landing/integration_to_organizations.html"),
         name='integration_to_organizations'),
    path('electron_copilot_releases/',
            LandingView_ElectronCopilotReleases.as_view(template_name="landing/electron_copilot_releases.html"),
            name='electron_copilot_releases'),
]


Contents of ../../apps/landing/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


Contents of ../../apps/formica/__init__.py:


Contents of ../../apps/formica/apps.py:
from django.apps import AppConfig


class FormicaConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.formica'


Contents of ../../apps/formica/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-11-02 12:45:27
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-02 12:45:28
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
from django.urls import path

from apps.formica.views import FormicaView_GoogleAppsConnectionList, FormicaView_GoogleAppsConnectionCreate, \
    FormicaView_GoogleAppsConnectionUpdate, FormicaView_GoogleAppsConnectionDelete, \
    FormicaView_PublicGenerateViaAICommand, FormicaView_PublicGenerateViaNoSQLCommand, \
    FormicaView_PublicGenerateViaSQLCommand, FormicaView_PublicGenerateViaSSHCommand, \
    FormicaView_PublicGenerateViaSelectCommand, FormicaView_PublicGenerateViaVectCommand, \
    FormicaView_PublicGenerateViaAutoCommand, FormicaView_PublicGenerateViaImgCommand, \
    FormicaView_PublicGenerateViaWebCommand, FormicaView_PublicGenerateViaRepoCommand

app_name = 'formica'

urlpatterns = [
    # Google Apps Connections
    path("google_apps/connections/list/", FormicaView_GoogleAppsConnectionList.as_view(
        template_name="formica/manage_google_apps_connections.html"
    ), name="google_apps_connections_list"),
    path("google_apps/connections/create/", FormicaView_GoogleAppsConnectionCreate.as_view(),
         name="google_apps_connections_create"),
    path("google_apps/connections/update/<int:pk>/", FormicaView_GoogleAppsConnectionUpdate.as_view(),
         name="google_apps_connections_update"),
    path("google_apps/connections/delete/<int:pk>/", FormicaView_GoogleAppsConnectionDelete.as_view(),
         name="google_apps_connections_delete"),

    # Public endpoints
    path("public/generate/commands/ai/", FormicaView_PublicGenerateViaAICommand.as_view(), name="public_generate_ai"),
    path("public/generate/commands/nosql/", FormicaView_PublicGenerateViaNoSQLCommand.as_view(),
         name="public_generate_nosql"),
    path("public/generate/commands/sql/", FormicaView_PublicGenerateViaSQLCommand.as_view(),
         name="public_generate_sql"),
    path("public/generate/commands/ssh/", FormicaView_PublicGenerateViaSSHCommand.as_view(),
         name="public_generate_ssh"),
    path("public/generate/commands/select/", FormicaView_PublicGenerateViaSelectCommand.as_view(),
         name="public_generate_select"),
    path("public/generate/commands/vect/", FormicaView_PublicGenerateViaVectCommand.as_view(),
         name="public_generate_vect"),
    path("public/generate/commands/auto/", FormicaView_PublicGenerateViaAutoCommand.as_view(),
         name="public_generate_auto"),
    path("public/generate/commands/img/", FormicaView_PublicGenerateViaImgCommand.as_view(),
         name="public_generate_img"),
    path("public/generate/commands/web/", FormicaView_PublicGenerateViaWebCommand.as_view(),
         name="public_generate_web"),
    path("public/generate/commands/repo/", FormicaView_PublicGenerateViaRepoCommand.as_view(),
         name="public_generate_repo"),
]


Contents of ../../apps/formica/models/formica_google_apps_connection_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: formica_google_apps_connection_models.py
#  Last Modified: 2024-11-02 12:46:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-02 12:46:49
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models


class FormicaGoogleAppsConnection(models.Model):
    formica_assistant = models.ForeignKey('assistants.Assistant', on_delete=models.CASCADE, null=True, blank=True)
    owner_user = models.ForeignKey('auth.User', on_delete=models.CASCADE)
    connection_api_key = models.CharField(max_length=4000)

    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.formica_assistant.name + ' - ' + self.owner_user.username + ' - ' + self.connection_api_key

    class Meta:
        verbose_name = 'Formica Google Apps Connection'
        verbose_name_plural = 'Formica Google Apps Connections'
        indexes = [
            models.Index(fields=['formica_assistant']),
            models.Index(fields=['owner_user']),
            models.Index(fields=['formica_assistant', 'owner_user']),
        ]
        unique_together = [
            ['formica_assistant', 'owner_user'],
        ]


Contents of ../../apps/formica/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-11-02 12:45:00
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-02 12:45:01
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from .formica_google_apps_connection_models import *


Contents of ../../apps/binexus/__init__.py:


Contents of ../../apps/binexus/apps.py:
from django.apps import AppConfig


class BinexusConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.binexus'


Contents of ../../apps/binexus/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-22 02:05:07
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-22 02:05:07
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
from django.urls import path

from apps.binexus.views import (BinexusView_ProcessCreate, BinexusView_ProcessList, BinexusView_ProcessDelete,
                                BinexusView_ProcessDetail, BinexusView_ProcessUpdate, BinexusView_ProcessExecute,
                                BinexusView_EliteAgentDelete, BinexusView_ProcessPurgeData)

app_name = 'binexus'

urlpatterns = [
    path('process/create/', BinexusView_ProcessCreate.as_view(
        template_name="binexus/process/create_binexus_process.html"), name='process_create'),
    path('process/list/', BinexusView_ProcessList.as_view(
        template_name="binexus/process/list_binexus_processes.html"), name='process_list'),
    path('process/delete/<int:pk>/', BinexusView_ProcessDelete.as_view(
        template_name="binexus/process/confirm_delete_binexus_process.html"
    ), name='process_delete'),
    path('process/detail/<int:pk>/', BinexusView_ProcessDetail.as_view(
        template_name="binexus/process/detail_binexus_process.html"
    ), name='process_detail'),
    path('process/update/<int:pk>/', BinexusView_ProcessUpdate.as_view(
        template_name="binexus/process/update_binexus_process.html"
    ), name='process_update'),

    #####

    path('elite_agent/delete/<int:pk>/', BinexusView_EliteAgentDelete.as_view(), name='elite_agent_delete'),
    path('process/purge_data/<int:pk>/', BinexusView_ProcessPurgeData.as_view(), name='process_purge_data'),

    #####

    path('process/execute/<int:pk>/', BinexusView_ProcessExecute.as_view(), name='process_execute'),
]


Contents of ../../apps/binexus/models/binexus_elite_agent_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: binexus_elite_agent_models.py
#  Last Modified: 2024-10-22 18:13:11
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-22 18:13:11
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models


class BinexusEliteAgent(models.Model):
    binexus_process = models.ForeignKey('binexus.BinexusProcess', on_delete=models.CASCADE)
    agent_nickname = models.CharField(max_length=255)
    agent_prompt = models.TextField(null=True, blank=True)
    agent_temperature = models.FloatField(default=0.0)
    binexus_fitness_score = models.IntegerField(default=0)
    agent_chromosome_parameters = models.JSONField(default=dict)

    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.agent_nickname + " - " + self.binexus_process.process_name + " - " + self.created_at.strftime(
            "%Y-%m-%d %H:%M:%S")

    class Meta:
        verbose_name = 'Binexus Elite Agent'
        verbose_name_plural = 'Binexus Elite Agents'
        ordering = ['-binexus_fitness_score']
        indexes = [
            models.Index(fields=['binexus_fitness_score'], name='binexus_fitness_score_idx'),
            models.Index(fields=['created_at'], name='created_at_idx'),
            models.Index(fields=['updated_at'], name='updated_at_idx'),
            models.Index(fields=['binexus_process'], name='binexus_process_idx'),
            models.Index(fields=['agent_nickname'], name='agent_nickname_idx'),
            models.Index(fields=['agent_temperature'], name='agent_temperature_idx'),
            models.Index(fields=['created_at', 'updated_at'], name='created_at_updated_at_idx'),
        ]


Contents of ../../apps/binexus/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-22 02:04:19
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-22 02:04:20
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from .binexus_process_models import *
from .binexus_elite_agent_models import *


Contents of ../../apps/binexus/models/binexus_process_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: binexus_process_models.py
#  Last Modified: 2024-10-22 18:04:50
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-22 18:04:50
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models


class BinexusProcess(models.Model):
    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE)
    llm_model = models.ForeignKey('llm_core.LLMCore', on_delete=models.CASCADE)

    process_name = models.CharField(max_length=255)
    process_description = models.TextField()

    process_objective = models.TextField(blank=True, null=True)
    process_success_criteria = models.TextField(blank=True, null=True)
    fitness_manager_selectiveness = models.FloatField(default=0.5)
    additional_genes = models.JSONField(default=dict, blank=True, null=True)

    # Optimization Hyper-Parameters
    optimization_generations = models.IntegerField(default=10)
    optimization_population_size = models.IntegerField(default=5)
    optimization_breeding_pool_rate = models.FloatField(default=0.4)
    optimization_mutation_rate_per_individual = models.FloatField(default=0.1)
    optimization_mutation_rate_per_gene = models.FloatField(default=0.1)
    optimization_crossover_rate = models.FloatField(default=0.5)
    self_breeding_possible = models.BooleanField(default=True)

    # Post-Processing History Logs
    post_processing_history_average_fitness_per_epoch = models.JSONField(default=list, blank=True, null=True)
    post_processing_history_best_fitness_per_epoch = models.JSONField(default=list, blank=True, null=True)
    post_processing_history_worst_fitness_per_epoch = models.JSONField(default=list, blank=True, null=True)
    post_processing_history_average_of_average_fitnesses = models.FloatField(default=0.0, blank=True, null=True)
    post_processing_history_average_of_best_fitnesses = models.FloatField(default=0.0, blank=True, null=True)
    post_processing_history_average_of_worst_fitnesses = models.FloatField(default=0.0, blank=True, null=True)
    post_processing_history_visual_chart = models.ImageField(upload_to='binexus_process_visual_charts/%Y/%m/%d/', blank=True, null=True)

    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.process_name + " - " + self.organization.name + " - " + self.llm_model.nickname + " - " + self.created_at.strftime(
            "%Y-%m-%d %H:%M:%S")

    class Meta:
        verbose_name = 'Binexus Process'
        verbose_name_plural = 'Binexus Processes'
        ordering = ['-created_at']
        indexes = [
            models.Index(fields=['organization']),
            models.Index(fields=['organization', 'llm_model']),
            models.Index(fields=['organization', 'llm_model', 'created_by_user']),
            models.Index(fields=['organization', 'llm_model', 'created_by_user', 'created_at']),
        ]


Contents of ../../apps/datasource_browsers/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:46
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#


Contents of ../../apps/datasource_browsers/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:46
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.apps import AppConfig


class DatasourceBrowsersConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.datasource_browsers'


Contents of ../../apps/datasource_browsers/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:46
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.urls import path

from apps.datasource_browsers.views import BrowserView_BrowserCreate, BrowserView_BrowserUpdate, \
    BrowserView_BrowserDelete, BrowserView_BrowserList, BrowserView_BrowserLogList, BrowserView_BrowserLogDownloadHTML, \
    BrowserView_BrowserLogDownload

app_name = "datasource_browsers"

urlpatterns = [
    path("create/", BrowserView_BrowserCreate.as_view(
        template_name="datasource_browsers/connections/create_browser_connection.html"
    ), name="create"),
    path("update/<int:pk>/", BrowserView_BrowserUpdate.as_view(
        template_name="datasource_browsers/connections/update_browser_connection.html"
    ), name="update"),
    path("delete/<int:pk>/", BrowserView_BrowserDelete.as_view(
        template_name="datasource_browsers/connections/confirm_delete_browser_connection.html"
    ), name="delete"),
    path("list/", BrowserView_BrowserList.as_view(
        template_name="datasource_browsers/connections/list_browser_connections.html"
    ), name="list"),
    path("logs/<int:pk>/", BrowserView_BrowserLogList.as_view(
        template_name="datasource_browsers/logs/list_browser_logs.html"
    ), name="logs"),

    path('logs/download_html/<int:pk>/', BrowserView_BrowserLogDownloadHTML.as_view(), name='download_html'),
    path('logs/download_context/<int:pk>/', BrowserView_BrowserLogDownload.as_view(), name='download_context'),
]


Contents of ../../apps/datasource_browsers/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:46
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from .browsing_log_models import *
from .browser_connection_models import *


Contents of ../../apps/datasource_browsers/models/browsing_log_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: browsing_log_models.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:46
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.db import models

from apps.datasource_browsers.models.browser_connection_models import DataSourceBrowserConnection


class DataSourceBrowserBrowsingLog(models.Model):
    connection = models.ForeignKey(DataSourceBrowserConnection, on_delete=models.CASCADE, related_name="logs")
    action = models.CharField(max_length=1000)
    context_url = models.CharField(max_length=1000, blank=True, null=True)
    html_content = models.TextField(blank=True, null=True)
    context_content = models.TextField(blank=True, null=True)
    log_content = models.TextField(blank=True, null=True)
    screenshot = models.ImageField(upload_to="datasource_browser_screenshots/%Y/%m/%d", blank=True, null=True)
    created_at = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return self.connection.name + " - " + self.action + " - " + self.created_at.strftime("%Y%m%d%H%M%S")

    class Meta:
        verbose_name = "Data Source Browser Browsing Log"
        verbose_name_plural = "Data Source Browser Browsing Logs"


Contents of ../../apps/datasource_browsers/models/browser_connection_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: browser_connection_models.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:46
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.db import models

from apps.datasource_browsers.utils import BROWSER_TYPES


class DataSourceBrowserConnection(models.Model):
    name = models.CharField(max_length=1000)
    description = models.TextField(blank=True, null=True)
    browser_type = models.CharField(max_length=100, choices=BROWSER_TYPES)
    assistant = models.ForeignKey("assistants.Assistant", on_delete=models.CASCADE)
    data_selectivity = models.FloatField(default=0.5)
    whitelisted_extensions = models.JSONField(default=list, blank=True, null=True)
    blacklisted_extensions = models.JSONField(default=list, blank=True, null=True)
    reading_abilities = models.JSONField(default=list, blank=True, null=True)
    minimum_investigation_sites = models.IntegerField(default=2)
    created_at = models.DateTimeField(auto_now_add=True)
    created_by_user = models.ForeignKey("auth.User", on_delete=models.CASCADE, null=True, blank=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.name + " - " + self.browser_type + " - " + self.created_at.strftime("%Y%m%d%H%M%S")

    class Meta:
        verbose_name = "Data Source Browser Connection"
        verbose_name_plural = "Data Source Browser Connections"


Contents of ../../apps/datasource_media_storages/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:48
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#



Contents of ../../apps/datasource_media_storages/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:48
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.apps import AppConfig


class DatasourceMediaStoragesConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.datasource_media_storages'


Contents of ../../apps/datasource_media_storages/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:48
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.urls import path

from apps.datasource_media_storages.views import MediaView_ManagerCreate, \
    MediaView_ManagerList, MediaView_ManagerUpdate, \
    MediaView_ManagerDelete, MediaView_ItemCreate, \
    MediaView_ItemList, MediaView_ItemDeleteAll, \
    MediaView_ItemUpdate, MediaView_ItemAIDescription, \
    MediaView_ItemHTTPRetrieval, MediaView_Generated

app_name = "datasource_media_storages"

urlpatterns = [
    path('create/', MediaView_ManagerCreate.as_view(
        template_name="datasource_media_storages/storage/create_datasource_media_storage.html"), name="create"),
    path('list/', MediaView_ManagerList.as_view(
        template_name="datasource_media_storages/storage/list_datasource_media_storages.html"), name="list"),
    path('update/<int:pk>/', MediaView_ManagerUpdate.as_view(
        template_name="datasource_media_storages/storage/update_datasource_media_storage.html"), name="update"),
    path('delete/<int:pk>/', MediaView_ManagerDelete.as_view(
        template_name="datasource_media_storages/storage/confirm_delete_datasource_media_storage.html"
    ), name="delete"),
    path('create_item/', MediaView_ItemCreate.as_view(
        template_name="datasource_media_storages/media/add_media.html"), name="create_item"),
    path('list_items/', MediaView_ItemList.as_view(
        template_name="datasource_media_storages/media/list_medias.html"), name="list_items"),
    path('item/detail/<int:pk>/', MediaView_ItemUpdate.as_view(
        template_name="datasource_media_storages/media/detail_media.html"), name='item_detail'),
    path('items/delete-selected/', MediaView_ItemList.as_view(), name='delete_selected_items'),
    path('items/delete-all/<int:id>/', MediaView_ItemDeleteAll.as_view(), name='delete_all_items'),
    path('items/generate_description/<int:pk>/', MediaView_ItemAIDescription.as_view(
        template_name="datasource_media_storages/media/detail_media.html"), name='generate_description'),
    path('items/fetch_file_from_url/', MediaView_ItemHTTPRetrieval.as_view(),
         name='fetch_file_from_url'),
    path('items/list_generated/', MediaView_Generated.as_view(
        template_name="datasource_media_storages/generated/list_generated_media.html"), name='list_generated_items'),
]


Contents of ../../apps/datasource_media_storages/models/media_item_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: media_item_models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:48
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

import random

from django.db import models
from slugify import slugify

from apps.datasource_media_storages.tasks import upload_file_to_storage
from apps.datasource_media_storages.utils import MEDIA_FILE_TYPES
from config.settings import MEDIA_URL


class DataSourceMediaStorageItem(models.Model):
    storage_base = models.ForeignKey('datasource_media_storages.DataSourceMediaStorageConnection',
                                     on_delete=models.CASCADE, related_name='items')
    media_file_name = models.CharField(max_length=255)
    description = models.TextField(blank=True, null=True)
    media_file_size = models.BigIntegerField(null=True, blank=True)
    media_file_type = models.CharField(max_length=10, choices=MEDIA_FILE_TYPES)
    full_file_path = models.CharField(max_length=1000, blank=True, null=True)
    file_bytes = models.BinaryField(null=True, blank=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.media_file_name + ' - ' + self.media_file_type + ' - ' + self.created_at.strftime(
            '%Y-%m-%d %H:%M:%S')

    class Meta:
        verbose_name = 'Data Source Media Storage Item'
        verbose_name_plural = 'Data Source Media Storage Items'
        ordering = ['-created_at']
        indexes = [
            models.Index(fields=['storage_base', 'media_file_name']),
            models.Index(fields=['storage_base', 'media_file_type']),
            models.Index(fields=['storage_base', 'media_file_size']),
            models.Index(fields=['storage_base', 'full_file_path']),
            models.Index(fields=['storage_base', 'description']),
            models.Index(fields=['storage_base', 'created_at']),
        ]

    def save(self, force_insert=False, force_update=False, using=None, update_fields=None):
        self.media_file_name = slugify(self.media_file_name)
        file_type = self.media_file_type
        if file_type not in [ft[0] for ft in MEDIA_FILE_TYPES]:
            return False
        if not self.full_file_path:
            base_dir = self.storage_base.directory_full_path
            file_name = self.media_file_name
            unique_suffix = str(random.randint(1_000_000, 9_999_999))
            relative_path = f"{base_dir.split(MEDIA_URL)[1]}/{file_name.split('.')[0]}_{unique_suffix}.{file_type}"
            self.full_file_path = f"{MEDIA_URL}{relative_path}"
            upload_file_to_storage.delay(file_bytes=self.file_bytes, full_path=relative_path,
                                         media_category=self.storage_base.media_category)
        self.file_bytes = None
        super().save(force_insert, force_update, using, update_fields)


Contents of ../../apps/datasource_media_storages/models/__init__.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:48
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from .media_item_models import *
from .media_storage_models import *


Contents of ../../apps/datasource_media_storages/models/media_storage_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: media_storage_models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:48
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#
import logging
import os

import boto3
from django.db import models
from slugify import slugify

from apps.datasource_media_storages.utils import MEDIA_MANAGER_ITEM_TYPES
from config.settings import MEDIA_URL


logger = logging.getLogger(__name__)


class DataSourceMediaStorageConnection(models.Model):
    assistant = models.ForeignKey('assistants.Assistant', on_delete=models.CASCADE)
    name = models.CharField(max_length=255)
    description = models.TextField()
    media_category = models.CharField(max_length=20, choices=MEDIA_MANAGER_ITEM_TYPES)
    directory_full_path = models.CharField(max_length=255, blank=True, null=True)
    directory_schema = models.TextField(blank=True, null=True)
    interpretation_temperature = models.FloatField(default=0.25)
    interpretation_maximum_tokens = models.IntegerField(default=2048)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.name + ' - ' + slugify(self.directory_full_path) + ' - ' + self.created_at.strftime(
            '%Y-%m-%d %H:%M:%S')

    class Meta:
        verbose_name = 'Data Source Media Storage Connection'
        verbose_name_plural = 'Data Source Media Storage Connections'
        ordering = ['-created_at']
        indexes = [
            models.Index(fields=['assistant', 'name']),
            models.Index(fields=['assistant', 'media_category']),
            models.Index(fields=['assistant', 'directory_full_path']),
            models.Index(fields=['assistant', 'created_at']),
        ]

    def save(self, force_insert=False, force_update=False, using=None, update_fields=None):
        if not self.directory_full_path:
            base_dir = self.assistant.storages_base_directory
            dir_suffix = self.media_category
            full_path = os.path.join(base_dir, dir_suffix)
            self.directory_full_path = full_path
        super().save(force_insert, force_update, using, update_fields)

    def delete(self, using=None, keep_parents=False):
        if self.directory_full_path and os.path.exists(self.directory_full_path):
            s3c = boto3.client('s3')
            bucket = os.getenv('AWS_STORAGE_BUCKET_NAME')
            bucket_path = self.directory_full_path.split(MEDIA_URL)[1]
            bucket_path = bucket_path.replace('/', '')
            bucket_path = f"{bucket_path}/"
            try:
                s3c.delete_object(Bucket=bucket, Key=bucket_path)
                logger.info(f"Deleted the S3 bucket path: {bucket_path}")
            except Exception as e:
                logger.error(f"Error occurred while deleting the S3 bucket path: {bucket_path} - {e}")
                pass
        super().delete(using, keep_parents)


Contents of ../../apps/mm_triggered_jobs/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:45
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#



Contents of ../../apps/mm_triggered_jobs/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:45
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.apps import AppConfig


class MmTriggeredJobsConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.mm_triggered_jobs'


Contents of ../../apps/mm_triggered_jobs/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:45
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.urls import path
from .views import TriggeredJobView_Create, TriggeredJobView_List, TriggeredJobView_LogList, \
    TriggeredJobView_Delete, TriggeredJobWebhookListenerView, TriggeredJobView_OrchestrationCreate, \
    TriggeredJobView_OrchestrationList, TriggeredJobView_OrchestrationLogList, TriggeredJobView_OrchestrationDelete, \
    OrchestrationTriggeredJobWebhookListenerView

app_name = "mm_triggered_jobs"

urlpatterns = [
    path('create/', TriggeredJobView_Create.as_view(
        template_name='mm_triggered_jobs/connections/create_triggered_job.html'), name='create'),
    path('list/', TriggeredJobView_List.as_view(
        template_name='mm_triggered_jobs/connections/list_triggered_jobs.html'), name='list'),
    path('logs/<int:pk>/', TriggeredJobView_LogList.as_view(
        template_name='mm_triggered_jobs/logs/list_triggered_job_logs.html'), name='logs'),
    path('delete/<int:pk>/', TriggeredJobView_Delete.as_view(
        template_name='mm_triggered_jobs/connections/confirm_delete_triggered_job.html'), name='delete'),
    path('api/v1/webhook/<str:assistant_id>/<int:triggered_job_id>/', TriggeredJobWebhookListenerView.as_view(),
         name='webhook'),

    #####

    path('orchestration/create/', TriggeredJobView_OrchestrationCreate.as_view(
        template_name='mm_triggered_jobs/connections/orchestration_create_triggered_job.html'), name='orchestration_create'),
    path('orchestration/list/', TriggeredJobView_OrchestrationList.as_view(
        template_name='mm_triggered_jobs/connections/orchestration_list_triggered_jobs.html'), name='orchestration_list'),
    path('orchestration/logs/<int:pk>/', TriggeredJobView_OrchestrationLogList.as_view(
        template_name='mm_triggered_jobs/logs/orchestration_list_triggered_job_logs.html'), name='orchestration_logs'),
    path('orchestration/delete/<int:pk>/', TriggeredJobView_OrchestrationDelete.as_view(
        template_name='mm_triggered_jobs/connections/orchestration_confirm_delete_triggered_job.html'), name='orchestration_delete'),
    path('orchestration/api/v1/webhook/<str:maestro_id>/<int:triggered_job_id>/', OrchestrationTriggeredJobWebhookListenerView.as_view(),
         name='orchestration_webhook'),
]


Contents of ../../apps/mm_triggered_jobs/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:45
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from .triggered_job_models import *
from .triggered_job_instance_models import *
from .orchestration_triggered_job_instance_models import *
from .orchestration_triggered_job_models import *


Contents of ../../apps/mm_triggered_jobs/models/triggered_job_instance_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: triggered_job_instance_models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:45
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

#
from django.db import models

from apps.mm_triggered_jobs.models import TriggeredJob
from apps.mm_triggered_jobs.utils import TRIGGERED_JOB_INSTANCE_STATUSES


class TriggeredJobInstance(models.Model):
    triggered_job = models.ForeignKey(TriggeredJob, on_delete=models.CASCADE, related_name='triggered_job_instances',
                                      null=True)
    status = models.CharField(max_length=255, choices=TRIGGERED_JOB_INSTANCE_STATUSES, default='pending')
    webhook_payload = models.JSONField(default=dict)
    logs = models.JSONField(default=list)
    execution_index = models.IntegerField(default=0, null=True)
    started_at = models.DateTimeField(auto_now_add=True)
    ended_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.triggered_job.name + ' - ' + self.status + ' - ' + self.started_at.strftime('%Y%m%d%H%M%S')

    class Meta:
        ordering = ['-started_at']
        verbose_name = 'Triggered Job Instance'
        verbose_name_plural = 'Triggered Job Instances'
        indexes = [
            models.Index(fields=['triggered_job', 'status', 'started_at']),
            models.Index(fields=['triggered_job', 'status', 'started_at', 'ended_at']),
            models.Index(fields=['triggered_job', 'status', 'started_at', 'ended_at', 'id']),
            models.Index(fields=['triggered_job', 'status', 'started_at', 'ended_at', 'id', 'status']),
            models.Index(fields=['triggered_job', 'status', 'started_at', 'ended_at', 'id', 'status', 'logs']),
            models.Index(fields=['triggered_job', 'status', 'started_at', 'ended_at', 'id', 'status', 'logs',
                                 'webhook_payload']),
        ]


Contents of ../../apps/mm_triggered_jobs/models/orchestration_triggered_job_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: orchestration_triggered_job_models.py
#  Last Modified: 2024-11-14 07:18:57
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-14 07:18:58
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models

from config.settings import BASE_URL


class OrchestrationTriggeredJob(models.Model):
    name = models.CharField(max_length=255)
    task_description = models.TextField(blank=True, null=True)
    step_guide = models.JSONField(default=list)
    trigger_maestro = models.ForeignKey('orchestrations.Maestro', on_delete=models.CASCADE,
                                        related_name='triggered_jobs')
    trigger_source = models.CharField(max_length=2000, blank=True, null=True)
    event_type = models.CharField(max_length=4000, blank=True, null=True)
    endpoint_url = models.CharField(max_length=2000, blank=True, null=True)
    current_run_count = models.PositiveIntegerField(default=0)
    maximum_runs = models.PositiveIntegerField(default=1000)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE,
                                        related_name='orchestration_triggered_jobs')

    def __str__(self):
        return self.name + ' - ' + self.trigger_maestro.name + ' - ' + self.created_by_user.username + ' - ' + self.created_at.strftime(
            '%Y%m%d%H%M%S')

    class Meta:
        ordering = ['-created_at']
        verbose_name = 'Orchestration Triggered Job'
        verbose_name_plural = 'Orchestration Triggered Jobs'
        indexes = [
            models.Index(fields=['name', 'trigger_maestro', 'created_by_user', 'created_at']),
            models.Index(fields=['created_at']),
            models.Index(fields=['trigger_maestro']),
            models.Index(fields=['created_by_user']),
            models.Index(fields=['trigger_maestro', 'created_by_user']),
            models.Index(fields=['trigger_maestro', 'created_by_user', 'created_at']),
            models.Index(fields=['trigger_maestro', 'created_by_user', 'created_at', 'name']),
            models.Index(fields=['trigger_maestro', 'created_by_user', 'created_at', 'name', 'current_run_count']),
        ]

    def save(
        self, force_insert=False, force_update=False, using=None, update_fields=None
    ):
        super().save(force_insert, force_update, using, update_fields)
        self.endpoint_url = BASE_URL + '/app/mm_triggered_jobs/orchestration/api/v1/webhook/' + str(
            self.trigger_maestro.id) + '/' + str(self.id) + '/'
        super().save(force_insert, force_update, using, update_fields)


Contents of ../../apps/mm_triggered_jobs/models/orchestration_triggered_job_instance_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: orchestration_triggered_job_instance_models.py
#  Last Modified: 2024-11-14 07:18:50
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-14 07:18:51
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.db import models

from apps.mm_triggered_jobs.utils import TRIGGERED_JOB_INSTANCE_STATUSES


class OrchestrationTriggeredJobInstance(models.Model):
    triggered_job = models.ForeignKey('mm_triggered_jobs.OrchestrationTriggeredJob', on_delete=models.CASCADE,
                                      related_name='triggered_job_instances',
                                      null=True)
    status = models.CharField(max_length=255, choices=TRIGGERED_JOB_INSTANCE_STATUSES, default='pending')
    webhook_payload = models.JSONField(default=dict)
    logs = models.JSONField(default=list)
    execution_index = models.IntegerField(default=0, null=True)
    started_at = models.DateTimeField(auto_now_add=True)
    ended_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.triggered_job.name + ' - ' + self.status + ' - ' + self.started_at.strftime('%Y%m%d%H%M%S')

    class Meta:
        ordering = ['-started_at']
        verbose_name = 'Orchestration Triggered Job Instance'
        verbose_name_plural = 'Orchestration Triggered Job Instances'
        indexes = [
            models.Index(fields=['triggered_job', 'status', 'started_at']),
            models.Index(fields=['triggered_job', 'status', 'started_at', 'ended_at']),
            models.Index(fields=['triggered_job', 'status', 'started_at', 'ended_at', 'id']),
            models.Index(fields=['triggered_job', 'status', 'started_at', 'ended_at', 'id', 'status']),
            models.Index(fields=['triggered_job', 'status', 'started_at', 'ended_at', 'id', 'status', 'logs']),
            models.Index(fields=['triggered_job', 'status', 'started_at', 'ended_at', 'id', 'status', 'logs',
                                 'webhook_payload']),
        ]


Contents of ../../apps/mm_triggered_jobs/models/triggered_job_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: triggered_job_models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:45
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

#
from django.db import models

from config.settings import BASE_URL


class TriggeredJob(models.Model):
    name = models.CharField(max_length=255)
    task_description = models.TextField(blank=True, null=True)
    step_guide = models.JSONField(default=list)
    trigger_assistant = models.ForeignKey('assistants.Assistant', on_delete=models.CASCADE,
                                          related_name='triggered_jobs')
    trigger_source = models.CharField(max_length=2000, blank=True, null=True)
    event_type = models.CharField(max_length=4000, blank=True, null=True)
    endpoint_url = models.CharField(max_length=2000, blank=True, null=True)
    current_run_count = models.PositiveIntegerField(default=0)
    maximum_runs = models.PositiveIntegerField(default=1000)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE, related_name='triggered_jobs')

    def __str__(self):
        return self.name + ' - ' + self.trigger_assistant.name + ' - ' + self.created_by_user.username + ' - ' + self.created_at.strftime(
            '%Y%m%d%H%M%S')

    class Meta:
        ordering = ['-created_at']
        verbose_name = 'Triggered Job'
        verbose_name_plural = 'Triggered Jobs'
        indexes = [
            models.Index(fields=['name', 'trigger_assistant', 'created_by_user', 'created_at']),
            models.Index(fields=['created_at']),
            models.Index(fields=['trigger_assistant']),
            models.Index(fields=['created_by_user']),
            models.Index(fields=['trigger_assistant', 'created_by_user']),
            models.Index(fields=['trigger_assistant', 'created_by_user', 'created_at']),
            models.Index(fields=['trigger_assistant', 'created_by_user', 'created_at', 'name']),
            models.Index(fields=['trigger_assistant', 'created_by_user', 'created_at', 'name', 'current_run_count']),
        ]

    def save(
        self, force_insert=False, force_update=False, using=None, update_fields=None
    ):
        super().save(force_insert, force_update, using, update_fields)
        self.endpoint_url = BASE_URL + '/app/mm_triggered_jobs/api/v1/webhook/' + str(self.trigger_assistant.id) + '/' + str(self.id) + '/'
        super().save(force_insert, force_update, using, update_fields)


Contents of ../../apps/datasource_codebase/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:46
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#



Contents of ../../apps/datasource_codebase/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:46
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.apps import AppConfig


class DatasourceCodebaseConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.datasource_codebase'


Contents of ../../apps/datasource_codebase/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:46
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.urls import path
from .views import (CodeBaseView_StorageCreate, CodeBaseView_StorageUpdate, CodeBaseView_StorageList,
                    CodeBaseView_StorageDelete, CodeBaseView_RepositoryCreate, CodeBaseView_RepositoryList, CodeBaseView_RepositoryDeleteAll)

app_name = 'datasource_codebase'

urlpatterns = [
    path('create/', CodeBaseView_StorageCreate.as_view(
        template_name='datasource_codebase/storage/create_codebase_storage.html'
    ), name='create'),
    path('list/', CodeBaseView_StorageList.as_view(
        template_name='datasource_codebase/storage/list_codebase_storages.html'
    ), name='list'),
    path('update/<int:pk>/', CodeBaseView_StorageUpdate.as_view(
        template_name='datasource_codebase/storage/update_codebase_storage.html'
    ), name='update'),
    path('delete/<int:pk>/', CodeBaseView_StorageDelete.as_view(
        template_name='datasource_codebase/storage/confirm_delete_codebase_storage.html'
    ), name='delete'),
    path('create_repositories/', CodeBaseView_RepositoryCreate.as_view(
        template_name="datasource_codebase/repository/connect_codebase_repository.html"
    ), name="create_repositories"),
    path('list_repositories/', CodeBaseView_RepositoryList.as_view(
        template_name="datasource_codebase/repository/list_codebase_repositories.html"
    ), name="list_repositories"),
    path('repositories/delete-selected/', CodeBaseView_RepositoryList.as_view(), name='delete_selected_repositories'),
    path('repositories/delete-all/<int:kb_id>/', CodeBaseView_RepositoryDeleteAll.as_view(), name='delete_all_repositories'),
]


Contents of ../../apps/datasource_codebase/models/code_repository_chunk_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: code_repository_chunk_models.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:46
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.db import models


class CodeBaseRepositoryChunk(models.Model):
    knowledge_base = models.ForeignKey("CodeRepositoryStorageConnection", on_delete=models.CASCADE)
    repository = models.ForeignKey("CodeBaseRepository", on_delete=models.CASCADE, related_name="repository_chunks")
    chunk_number = models.IntegerField()
    chunk_content = models.TextField()  # This will be the text content of the chunk
    chunk_metadata = models.TextField()
    chunk_repository_uri = models.CharField(max_length=1000, null=True, blank=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    knowledge_base_uuid = models.CharField(max_length=1000, null=True, blank=True)
    repository_uuid = models.CharField(max_length=1000, null=True, blank=True)

    def __str__(self):
        return str(
            self.chunk_number) + " - " + self.repository.repository_name + " - " + self.knowledge_base.name + " - " + self.created_at.strftime(
            "%Y%m%d%H%M%S")

    class Meta:
        verbose_name = "Code Base Document Chunk"
        verbose_name_plural = "Code Base Document Chunks"
        ordering = ["-created_at"]
        indexes = [
            models.Index(fields=["knowledge_base", "repository", "chunk_number"]),
            models.Index(fields=["knowledge_base", "repository", "created_at"]),
            models.Index(fields=["knowledge_base", "repository", "updated_at"]),
        ]

    def save(self, force_insert=False, force_update=False, using=None, update_fields=None):
        super().save(force_insert, force_update, using, update_fields)


Contents of ../../apps/datasource_codebase/models/code_repository_storage_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: code_repository_storage_models.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:46
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.db import models

from apps.core.codebase.codebase_decoder import CodeBaseDecoder
from apps.datasource_codebase.utils import KNOWLEDGE_BASE_SYSTEMS, VECTORIZERS, build_weaviate_class_name_with_random


class CodeRepositoryStorageConnection(models.Model):
    provider = models.CharField(max_length=100, choices=KNOWLEDGE_BASE_SYSTEMS)
    host_url = models.CharField(max_length=1000)
    provider_api_key = models.CharField(max_length=1000, null=True, blank=True)
    assistant = models.ForeignKey('assistants.Assistant', on_delete=models.CASCADE)
    name = models.CharField(max_length=1000)
    class_name = models.CharField(max_length=1000, null=True, blank=True)
    description = models.TextField()
    vectorizer = models.CharField(max_length=100, choices=VECTORIZERS, default="text2vec-openai", null=True,
                                  blank=True)
    vectorizer_api_key = models.CharField(max_length=1000, null=True, blank=True)
    embedding_chunk_size = models.IntegerField(default=1024)
    embedding_chunk_overlap = models.IntegerField(default=256)
    schema_json = models.TextField(null=True, blank=True)
    search_instance_retrieval_limit = models.IntegerField(default=10)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.name + " - " + self.assistant.name

    class Meta:
        verbose_name = "Code Repository Storage Connection"
        verbose_name_plural = "Code Repository Storage Connections"
        ordering = ["-created_at"]
        unique_together = ['host_url', 'assistant']
        indexes = [
            models.Index(fields=["provider", "assistant", "name"]),
            models.Index(fields=["provider", "assistant", "created_at"]),
            models.Index(fields=["provider", "assistant", "updated_at"]),
            models.Index(fields=["class_name"]),
            models.Index(fields=["vectorizer"]),
        ]

    def save(
        self, force_insert=False, force_update=False, using=None, update_fields=None
    ):
        if self.vectorizer is None:
            self.vectorizer = "text2vec-openai"
        if self.class_name is None:
            self.class_name = build_weaviate_class_name_with_random(self)

        client = CodeBaseDecoder.get(self)
        if client is not None:
            result = client.create_weaviate_classes()
            if not result["status"]:
                pass

        self.schema_json = client.retrieve_schema()
        super().save(force_insert, force_update, using, update_fields)

    def delete(self, using=None, keep_parents=False):
        client = CodeBaseDecoder.get(self)
        if client is not None:
            result = client.delete_weaviate_classes(class_name=self.class_name)
            if not result["status"]:
                pass
        super().delete(using, keep_parents)


Contents of ../../apps/datasource_codebase/models/code_repository_processing_log_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: code_repository_processing_log_models.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:46
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.db import models


class RepositoryProcessingLog(models.Model):
    repository_full_uri = models.CharField(max_length=1000)
    log_message = models.TextField()
    created_at = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return self.repository_full_uri + " - " + self.created_at.strftime("%Y%m%d%H%M%S")

    class Meta:
        verbose_name = "Repository Processing Log"
        verbose_name_plural = "Repository Processing Logs"
        ordering = ["-created_at"]
        indexes = [
            models.Index(fields=["repository_full_uri"]),
            models.Index(fields=["created_at"]),
        ]


Contents of ../../apps/datasource_codebase/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:46
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from .code_repository_models import *
from .code_repository_chunk_models import *
from .code_repository_storage_models import *
from .code_repository_processing_log_models import *


Contents of ../../apps/datasource_codebase/models/code_repository_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: code_repository_models.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:46
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#
import logging
import os

import boto3
from django.db import models
from slugify import slugify

from apps.core.codebase.codebase_decoder import CodeBaseDecoder
from config.settings import MEDIA_URL

logger = logging.getLogger(__name__)


class CodeBaseRepository(models.Model):
    knowledge_base = models.ForeignKey("CodeRepositoryStorageConnection", on_delete=models.CASCADE,
                                       related_name="code_base_repositories")
    repository_name = models.CharField(max_length=1000)
    repository_description = models.TextField()
    repository_metadata = models.JSONField()
    repository_uri = models.CharField(max_length=1000, null=True, blank=True)
    knowledge_base_uuid = models.CharField(max_length=1000, null=True, blank=True)
    repository_content_temporary = models.TextField(blank=True, null=True)  # This will be emptied before indexing
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return slugify(self.repository_name) + " - " + self.knowledge_base.name + " - " + self.created_at.strftime(
            "%Y%m%d%H%M%S")

    class Meta:
        verbose_name = "Code Base Repository"
        verbose_name_plural = "Code Base Repositories"
        ordering = ["-created_at"]
        indexes = [
            models.Index(fields=["knowledge_base", "repository_name"]),
            models.Index(fields=["knowledge_base", "created_at"]),
            models.Index(fields=["knowledge_base", "updated_at"]),
        ]

    def save(
        self, force_insert=False, force_update=False, using=None, update_fields=None
    ):
        self.document_file_name = slugify(self.repository_name)
        self.document_content_temporary = ""
        self.document_description = ""
        super().save(force_insert, force_update, using, update_fields)

    def delete(self, using=None, keep_parents=False):
        client = CodeBaseDecoder.get(self.knowledge_base)
        if client is not None:
            result = client.delete_weaviate_document(
                class_name=self.knowledge_base.class_name,
                document_uuid=self.knowledge_base_uuid)
            if not result["status"]:
                logger.error(f"Error occurred while deleting the document: {result['message']}")
                pass

            document_full_path = self.repository_uri
            boto3_client = boto3.client('s3')
            bucket_name = os.getenv('AWS_STORAGE_BUCKET_NAME')
            s3_path = document_full_path.split(MEDIA_URL)[1]
            s3_path = s3_path.replace('/', '')
            s3_path = f"{s3_path}/"
            if document_full_path is not None:
                try:
                    boto3_client.delete_object(Bucket=bucket_name, Key=s3_path)
                    logger.info(f"Document deleted from the S3 bucket: {document_full_path}")
                except Exception as e:
                    logger.error(f"Error occurred while deleting the document: {e}")
                    pass
        super().delete(using, keep_parents)


Contents of ../../apps/mm_functions/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:40
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#



Contents of ../../apps/mm_functions/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:40
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.apps import AppConfig


class MmFunctionsConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.mm_functions'


Contents of ../../apps/mm_functions/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:40
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.urls import path

from apps.mm_functions.views import (CustomFunctionView_Create, CustomFunctionView_List,
                                     CustomFunctionView_Connections, CustomFunctionView_Delete,
                                     CustomFunctionView_Store)

app_name = "mm_functions"

urlpatterns = [
    path("create/", CustomFunctionView_Create.as_view(
        template_name="mm_functions/functions/create_custom_function.html"), name="create"),
    path("list/", CustomFunctionView_List.as_view(
        template_name="mm_functions/functions/list_custom_functions.html"), name="list"),
    path("delete/<int:pk>/", CustomFunctionView_Delete.as_view(
        template_name="mm_functions/functions/confirm_delete_custom_function.html"), name="delete"),
    path("connect/", CustomFunctionView_Connections.as_view(
        template_name="mm_functions/connections/manage_assistant_connections.html"), name="connect"),
    path("store/", CustomFunctionView_Store.as_view(
        template_name="mm_functions/store/function_store.html"), name="store"),
]


Contents of ../../apps/mm_functions/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:40
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from .custom_function_models import *
from .custom_function_reference_models import *


Contents of ../../apps/mm_functions/models/custom_function_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: custom_function_models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:40
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.db import models


class CustomFunction(models.Model):
    is_public = models.BooleanField(default=False)
    categories = models.JSONField(default=list, blank=True)
    name = models.CharField(max_length=255)
    description = models.TextField()
    packages = models.JSONField(default=list, blank=True)
    input_fields = models.JSONField(default=list, blank=True)
    output_fields = models.JSONField(default=list, blank=True)
    code_text = models.TextField(default="", blank=True)
    secrets = models.JSONField(default=dict, blank=True)
    function_picture = models.ImageField(upload_to="custom_functions/%YYYY/%mm/%dd/", blank=True, null=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    created_by_user = models.ForeignKey("auth.User", on_delete=models.SET_NULL, null=True)
    is_featured = models.BooleanField(default=False)

    def __str__(self):
        return self.name + " - " + self.created_at.strftime("%Y-%m-%d %H:%M:%S")

    class Meta:
        verbose_name = "Custom Function"
        verbose_name_plural = "Custom Functions"
        indexes = [
            models.Index(fields=["name"]),
            models.Index(fields=["created_by_user"]),
            models.Index(fields=["created_at"]),
            models.Index(fields=["updated_at"]),
            models.Index(fields=["is_public"]),
            models.Index(fields=["is_featured"]),
            models.Index(fields=["name", "is_public"]),
        ]


Contents of ../../apps/mm_functions/models/custom_function_reference_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: custom_function_reference_models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:40
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.db import models


class CustomFunctionReference(models.Model):
    organization = models.ForeignKey("organization.Organization", on_delete=models.CASCADE, null=True, blank=True,
                                     related_name="custom_function_references")
    custom_function = models.ForeignKey("CustomFunction", on_delete=models.CASCADE,
                                        related_name="custom_function_references")
    assistant = models.ForeignKey("assistants.Assistant", on_delete=models.CASCADE)
    function_source = models.CharField(max_length=255, default="internal", blank=True)
    created_by_user = models.ForeignKey("auth.User", on_delete=models.SET_NULL, null=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.custom_function.name + " - " + self.assistant.name + " - " + self.created_at.strftime(
            "%Y-%m-%d %H:%M:%S")

    class Meta:
        verbose_name = "Custom Function Reference"
        verbose_name_plural = "Custom Function References"
        unique_together = [["custom_function", "assistant"]]
        indexes = [
            models.Index(fields=["custom_function", "assistant"]),
            models.Index(fields=["assistant", "custom_function", "created_by_user"]),
            models.Index(fields=["created_at"]),
            models.Index(fields=["assistant"]),
            models.Index(fields=["custom_function"]),
            models.Index(fields=["created_by_user"]),
        ]


Contents of ../../apps/community_forum/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:41
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#



Contents of ../../apps/community_forum/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:41
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.apps import AppConfig


class CommunityForumConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.community_forum'


Contents of ../../apps/community_forum/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:41
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.urls import path
from . import views
from .views import ForumView_CommentLike

app_name = 'community_forum'

urlpatterns = [
    path('categories/', views.ForumView_CategoryList.as_view(
        template_name='community_forum/category_list.html'), name='category_list'),
    path('category/<slug:slug>/', views.ForumView_ThreadList.as_view(
        template_name='community_forum/thread_list.html'
    ), name='thread_list'),
    path('thread/<int:thread_id>/', views.ForumView_ThreadDetail.as_view(
        template_name='community_forum/thread_detail.html'
    ), name='thread_detail'),
    path('thread/<int:thread_id>/create_post/', views.ForumView_PostCreate.as_view(
        template_name='community_forum/post_create.html'
    ), name='post_create'),
    path('post/<int:post_id>/verify_comment/<int:comment_id>/', views.ForumView_CommentVerify.as_view(),
         name='verify_comment'),
    path('comment/<int:comment_id>/like/', ForumView_CommentLike.as_view(), name='like_comment'),
]


Contents of ../../apps/community_forum/models/forum_like_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: forum_like_models.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:41
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.db import models


class ForumLike(models.Model):
    id = models.AutoField(primary_key=True)
    user = models.ForeignKey("auth.User", on_delete=models.CASCADE)
    comment = models.ForeignKey("ForumComment", related_name='likes', on_delete=models.CASCADE)
    created_at = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return f"Like by {self.user} on Comment ID {self.comment.id}"

    class Meta:
        verbose_name = "Like"
        verbose_name_plural = "Likes"
        ordering = ["-created_at"]
        indexes = [
            models.Index(fields=['user', 'comment', 'created_at']),
        ]


Contents of ../../apps/community_forum/models/forum_category_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: forum_category_models.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:41
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.db import models


class ForumCategory(models.Model):
    id = models.AutoField(primary_key=True)
    name = models.CharField(max_length=100, unique=True)
    description = models.TextField()
    slug = models.SlugField(unique=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.name + " - " + self.slug + " - " + self.created_at.strftime("%Y%m%d%H:%M:%S")

    class Meta:
        verbose_name = "Forum Category"
        verbose_name_plural = "Forum Categories"
        ordering = ["-created_at"]
        indexes = [
            models.Index(fields=['name', 'slug', 'created_at']),
            models.Index(fields=['name', 'slug', 'created_at', 'updated_at']),
        ]


Contents of ../../apps/community_forum/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:41
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from .forum_like_models import *
from .forum_post_models import *
from .forum_thread_models import *
from .forum_comment_models import *
from .forum_category_models import *


Contents of ../../apps/community_forum/models/forum_thread_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: forum_thread_models.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:41
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.db import models


class ForumThread(models.Model):
    id = models.AutoField(primary_key=True)
    category = models.ForeignKey("ForumCategory", related_name='threads', on_delete=models.CASCADE)
    title = models.CharField(max_length=255)
    created_by = models.ForeignKey("auth.User", on_delete=models.CASCADE, null=True, blank=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    is_closed = models.BooleanField(default=False)

    def __str__(self):
        return self.title

    class Meta:
        verbose_name = "Forum Thread"
        verbose_name_plural = "Forum Threads"
        ordering = ["-created_at"]
        indexes = [
            models.Index(fields=['title', 'created_at']),
            models.Index(fields=['title', 'created_at', 'updated_at']),
        ]


Contents of ../../apps/community_forum/models/forum_post_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: forum_post_models.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:41
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.db import models


class ForumPost(models.Model):
    id = models.AutoField(primary_key=True)
    thread = models.ForeignKey("ForumThread", related_name='posts', on_delete=models.CASCADE)

    content = models.TextField()
    created_by = models.ForeignKey("auth.User", on_delete=models.CASCADE)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    is_verified = models.BooleanField(default=False)  # Verification status for an answer
    verified_comment = models.OneToOneField("ForumComment", related_name='verified_post', on_delete=models.CASCADE,
                                            null=True, blank=True)

    def verify_comment(self, comment):
        if self.created_by == comment.created_by:
            self.verified_comment = comment
            self.is_verified = True
            self.save()

    def __str__(self):
        return f"Post by {self.created_by} in {self.thread.title}"

    class Meta:
        verbose_name = "Forum Post"
        verbose_name_plural = "Forum Posts"
        ordering = ["-created_at"]
        indexes = [
            models.Index(fields=['content', 'created_at']),
            models.Index(fields=['content', 'created_at', 'updated_at']),
        ]


Contents of ../../apps/community_forum/models/forum_comment_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: forum_comment_models.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:41
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.db import models


class ForumComment(models.Model):
    id = models.AutoField(primary_key=True)
    content = models.TextField()
    created_by = models.ForeignKey("auth.User", on_delete=models.CASCADE)
    post = models.ForeignKey("ForumPost", related_name='comments', on_delete=models.CASCADE)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    like_count = models.PositiveIntegerField(default=0)  # Storing the number of unique likes

    def __str__(self):
        return f"Comment by {self.created_by} on Post ID {self.post.id}"

    class Meta:
        verbose_name = "Comment"
        verbose_name_plural = "Comments"
        ordering = ["-created_at"]
        indexes = [
            models.Index(fields=['content', 'created_at']),
            models.Index(fields=['content', 'created_at', 'updated_at']),
        ]


Contents of ../../apps/assistants/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 12:51:58
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:38
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#



Contents of ../../apps/assistants/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 12:51:58
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:38
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class AssistantsConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.assistants'


Contents of ../../apps/assistants/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 12:51:58
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:38
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.urls import path

from apps.assistants.views import AssistantView_Create, AssistantView_List, AssistantView_Update, AssistantView_Delete

app_name = "assistants"

urlpatterns = [
    path("create/", AssistantView_Create.as_view(template_name="assistants/create_assistant.html"), name="create"),
    path("list/", AssistantView_List.as_view(template_name="assistants/list_assistants.html"), name="list"),
    path("update/<int:pk>/", AssistantView_Update.as_view(template_name="assistants/update_assistant.html"),
         name="update"),
    path("delete/<int:pk>/", AssistantView_Delete.as_view(template_name="assistants/confirm_delete_assistant.html"),
         name="delete"),
]


Contents of ../../apps/assistants/models/assistant_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: assistant_models.py
#  Last Modified: 2024-10-05 12:51:58
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:38
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
import logging

import boto3
from django.db import models

from apps.assistants.utils import (AGENT_SPEECH_LANGUAGES, CONTEXT_MANAGEMENT_STRATEGY, EMBEDDING_MANAGERS,
                                   MULTI_STEP_REASONING_CAPABILITY_CHOICE, generate_random_name_suffix)
from config import settings


logger = logging.getLogger(__name__)


class Assistant(models.Model):
    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE, related_name='assistants')
    llm_model = models.ForeignKey('llm_core.LLMCore', on_delete=models.CASCADE, related_name='assistants')
    name = models.CharField(max_length=255)
    description = models.TextField(default="", blank=True)
    instructions = models.TextField(default="", blank=True)
    response_template = models.TextField(default="", blank=True)
    audience = models.CharField(max_length=1000)
    tone = models.CharField(max_length=1000)
    response_language = models.CharField(max_length=10, choices=AGENT_SPEECH_LANGUAGES, default="auto")
    max_retry_count = models.IntegerField(default=3)
    tool_max_attempts_per_instance = models.IntegerField(default=3)
    tool_max_chains = models.IntegerField(default=3)
    glossary = models.JSONField(default=dict, blank=True)
    time_awareness = models.BooleanField(default=True)
    place_awareness = models.BooleanField(default=True)
    assistant_image_save_path = 'assistant_images/%Y/%m/%d/'
    assistant_image = models.ImageField(upload_to=assistant_image_save_path, blank=True, max_length=1000, null=True)
    memories = models.ManyToManyField("memories.AssistantMemory", related_name='assistants', blank=True)
    context_overflow_strategy = models.CharField(max_length=100, choices=CONTEXT_MANAGEMENT_STRATEGY, default="forget")
    max_context_messages = models.IntegerField(default=25)
    vectorizer_name = models.CharField(max_length=100, choices=EMBEDDING_MANAGERS, default="text2vec-openai",
                                       null=True, blank=True)
    vectorizer_api_key = models.CharField(max_length=1000, null=True, blank=True)
    document_base_directory = models.CharField(max_length=1000, null=True, blank=True)
    storages_base_directory = models.CharField(max_length=1000, null=True, blank=True)
    ml_models_base_directory = models.CharField(max_length=1000, null=True, blank=True)
    created_by_user = models.ForeignKey("auth.User", on_delete=models.CASCADE,
                                        related_name='assistants_created_by_user')
    last_updated_by_user = models.ForeignKey("auth.User", on_delete=models.CASCADE,
                                             related_name='assistants_updated_by_user')
    image_generation_capability = models.BooleanField(default=True)
    multi_step_reasoning_capability_choice = models.CharField(max_length=100,
                                                              choices=MULTI_STEP_REASONING_CAPABILITY_CHOICE,
                                                              default="none")
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    ner_integration = models.ForeignKey("data_security.NERIntegration", on_delete=models.SET_NULL,
                                        related_name='assistants', null=True, blank=True)

    project_items = models.ManyToManyField("projects.ProjectItem", related_name='assistants', blank=True)

    def __str__(self):
        return self.name

    def save(self, force_insert=False, force_update=False, using=None, update_fields=None):
        s3c = boto3.client('s3')
        bucket = settings.AWS_STORAGE_BUCKET_NAME
        bucket_root_url = f"https://{bucket}.s3.amazonaws.com/"
        if self.document_base_directory is None:
            try:
                dir_name = f"documents/{str(self.organization.id)}/{str(self.llm_model.id)}/{generate_random_name_suffix()}/"
                f_uri = f"{bucket_root_url}{dir_name}"
                s3c.put_object(Bucket=bucket, Key=f"{dir_name}/")
                self.document_base_directory = f_uri
            except Exception as e:
                logger.error(f"Error while creating document base directory: {e}")

        if self.storages_base_directory is None:
            try:
                dir_name = f"storages/{str(self.organization.id)}/{str(self.llm_model.id)}/{generate_random_name_suffix()}/"
                f_uri = f"{bucket_root_url}{dir_name}"
                s3c.put_object(Bucket=bucket, Key=f"{dir_name}/")
                self.storages_base_directory = f_uri
            except Exception as e:
                logger.error(f"Error while creating storages base directory: {e}")

        if self.ml_models_base_directory is None:
            try:
                dir_name = f"ml_models/{str(self.organization.id)}/{str(self.llm_model.id)}/{generate_random_name_suffix()}/"
                f_uri = f"{bucket_root_url}{dir_name}"
                s3c.put_object(Bucket=bucket, Key=f"{dir_name}/")
                self.ml_models_base_directory = f_uri
            except Exception as e:
                logger.error(f"Error while creating ml models base directory: {e}")

        logger.info(f"Assistant has been created for organization.")
        super().save(force_insert, force_update, using, update_fields)

    def delete(self, using=None, keep_parents=False):
        s3c = boto3.client('s3')
        bucket = settings.AWS_STORAGE_BUCKET_NAME
        def delete_s3_directory(full_uri):
            try:
                dir_name = full_uri.replace(f"https://{bucket}.s3.amazonaws.com/", "")
                paginator = s3c.get_paginator('list_objects_v2')
                pages = paginator.paginate(Bucket=bucket, Prefix=dir_name)
                for page in pages:
                    if 'Contents' in page:
                        delete_keys = {'Objects': [{'Key': obj['Key']} for obj in page['Contents']]}
                        s3c.delete_objects(Bucket=bucket, Delete=delete_keys)
                logger.info(f"Deleted s3 directory: {full_uri}")
            except Exception as e:
                logger.error(f"Error while deleting s3 directory: {e}")

        if self.document_base_directory is not None:
            delete_s3_directory(self.document_base_directory)
        if self.storages_base_directory is not None:
            delete_s3_directory(self.storages_base_directory)
        if self.ml_models_base_directory is not None:
            delete_s3_directory(self.ml_models_base_directory)
        logger.info(f"Assistant has been deleted for organization.")
        super().delete(using, keep_parents)

    class Meta:
        verbose_name = "Assistant"
        verbose_name_plural = "Assistants"
        ordering = ["-created_at"]
        indexes = [
            models.Index(fields=["organization"]),
            models.Index(fields=["llm_model"]),
            models.Index(fields=["name"]),
            models.Index(fields=["response_language"]),
            models.Index(fields=["created_by_user"]),
            models.Index(fields=["last_updated_by_user"]),
            models.Index(fields=["created_at"]),
            models.Index(fields=["updated_at"]),
            models.Index(fields=["context_overflow_strategy"]),
            models.Index(fields=["vectorizer_name"]),
            models.Index(fields=["organization", "llm_model"]),
            models.Index(fields=["organization", "name"]),
            models.Index(fields=["organization", "created_by_user"]),
            models.Index(fields=["organization", "last_updated_by_user"]),
            models.Index(fields=["organization", "created_at"]),
            models.Index(fields=["organization", "updated_at"]),
            models.Index(fields=["llm_model", "name"]),
            models.Index(fields=["llm_model", "created_by_user"]),
            models.Index(fields=["llm_model", "last_updated_by_user"]),
            models.Index(fields=["llm_model", "created_at"]),
            models.Index(fields=["llm_model", "updated_at"]),
            models.Index(fields=["created_by_user", "created_at"]),
            models.Index(fields=["created_by_user", "updated_at"]),
            models.Index(fields=["last_updated_by_user", "created_at"]),
            models.Index(fields=["last_updated_by_user", "updated_at"]),
            models.Index(fields=["organization", "llm_model", "name"]),
            models.Index(fields=["organization", "llm_model", "created_by_user"]),
            models.Index(fields=["organization", "llm_model", "last_updated_by_user"]),
            models.Index(fields=["organization", "llm_model", "created_at"]),
            models.Index(fields=["organization", "llm_model", "updated_at"]),
            models.Index(fields=["organization", "name", "created_at"]),
            models.Index(fields=["organization", "name", "updated_at"]),
            models.Index(fields=["organization", "created_by_user", "created_at"]),
            models.Index(fields=["organization", "created_by_user", "updated_at"]),
            models.Index(fields=["organization", "last_updated_by_user", "created_at"]),
            models.Index(fields=["organization", "last_updated_by_user", "updated_at"]),
            models.Index(fields=["llm_model", "name", "created_at"]),
            models.Index(fields=["llm_model", "name", "updated_at"]),
            models.Index(fields=["llm_model", "created_by_user", "created_at"]),
            models.Index(fields=["llm_model", "created_by_user", "updated_at"]),
            models.Index(fields=["llm_model", "last_updated_by_user", "created_at"]),
            models.Index(fields=["llm_model", "last_updated_by_user", "updated_at"]),
            models.Index(fields=["created_by_user", "created_at", "updated_at"]),
            models.Index(fields=["last_updated_by_user", "created_at", "updated_at"]),
            models.Index(fields=["organization", "llm_model", "name", "created_at"]),
            models.Index(fields=["organization", "llm_model", "name", "updated_at"]),
            models.Index(fields=["organization", "llm_model", "created_by_user", "created_at"]),
            models.Index(fields=["organization", "llm_model", "created_by_user", "updated_at"]),
            models.Index(fields=["organization", "llm_model", "last_updated_by_user", "created_at"]),
            models.Index(fields=["organization", "llm_model", "last_updated_by_user", "updated_at"]),
            models.Index(fields=["organization", "name", "created_at", "updated_at"]),
            models.Index(fields=["organization", "created_by_user", "created_at", "updated_at"]),
            models.Index(fields=["organization", "last_updated_by_user", "created_at", "updated_at"]),
            models.Index(fields=["llm_model", "name", "created_at", "updated_at"]),
            models.Index(fields=["llm_model", "created_by_user", "created_at", "updated_at"]),
            models.Index(fields=["llm_model", "last_updated_by_user", "created_at", "updated_at"]),
            models.Index(fields=["organization", "context_overflow_strategy"]),
            models.Index(fields=["organization", "vectorizer_name"]),
            models.Index(fields=["llm_model", "context_overflow_strategy"]),
            models.Index(fields=["llm_model", "vectorizer_name"]),
            models.Index(fields=["organization", "llm_model", "context_overflow_strategy"]),
            models.Index(fields=["organization", "llm_model", "vectorizer_name"]),
            models.Index(fields=["created_by_user", "context_overflow_strategy"]),
            models.Index(fields=["created_by_user", "vectorizer_name"]),
            models.Index(fields=["last_updated_by_user", "context_overflow_strategy"]),
            models.Index(fields=["last_updated_by_user", "vectorizer_name"]),
        ]


Contents of ../../apps/assistants/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 12:51:58
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:38
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#

from .assistant_models import *


Contents of ../../apps/data_security/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:40
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#


Contents of ../../apps/data_security/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:40
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.apps import AppConfig


class DataSecurityConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.data_security'


Contents of ../../apps/data_security/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:40
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.urls import path

from apps.data_security.views import (NERView_IntegrationCreate, NERView_IntegrationUpdate, NERView_IntegrationDelete,
                                      NERView_IntegrationList)

app_name = "data_security"

urlpatterns = [
    path("ner/create/", NERView_IntegrationCreate.as_view(
        template_name="data_security/ner/create_ner_integration.html"
    ), name="create_ner_integration"),
    path("ner/list/", NERView_IntegrationList.as_view(
        template_name="data_security/ner/list_ner_integrations.html"
    ), name="list_ner_integrations"),
    path("ner/update/<int:pk>/", NERView_IntegrationUpdate.as_view(
        template_name="data_security/ner/update_ner_integration.html"
    ), name="update_ner_integration"),
    path("ner/delete/<int:pk>/", NERView_IntegrationDelete.as_view(
        template_name="data_security/ner/confirm_delete_ner_integration.html"
    ), name="delete_ner_integration"),
]


Contents of ../../apps/data_security/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:40
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from .ner_integration_models import *


Contents of ../../apps/data_security/models/ner_integration_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: ner_integration_models.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:40
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.db import models

from apps.data_security.utils.constant_utils import NER_LANGUAGES


class NERIntegration(models.Model):
    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE)
    name = models.CharField(max_length=255)
    description = models.TextField()
    language = models.CharField(max_length=2, choices=NER_LANGUAGES, default='en')
    encrypt_persons = models.BooleanField(default=False)  # PERSON
    encrypt_orgs = models.BooleanField(default=False)  # ORG
    encrypt_nationality_religion_political = models.BooleanField(default=False)  # NORP
    encrypt_facilities = models.BooleanField(default=False)  # FAC
    encrypt_countries_cities_states = models.BooleanField(default=False)  # GPE
    encrypt_locations = models.BooleanField(default=False)  # LOC
    encrypt_products = models.BooleanField(default=False)  # PRODUCT
    encrypt_events = models.BooleanField(default=False)  # EVENT
    encrypt_artworks = models.BooleanField(default=False)  # WORK_OF_ART
    encrypt_laws = models.BooleanField(default=False)  # LAW
    encrypt_languages = models.BooleanField(default=False)  # LANGUAGE
    encrypt_dates = models.BooleanField(default=False)  # DATE
    encrypt_times = models.BooleanField(default=False)  # TIME
    encrypt_percentages = models.BooleanField(default=False)  # PERCENT
    encrypt_money = models.BooleanField(default=False)  # MONEY
    encrypt_quantities = models.BooleanField(default=False)  # QUANTITY
    encrypt_ordinal_numbers = models.BooleanField(default=False)  # ORDINAL
    encrypt_cardinal_numbers = models.BooleanField(default=False)  # CARDINAL
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    created_by_user = models.ForeignKey('auth.User', on_delete=models.SET_NULL, null=True,
                                        related_name='nerintegrations_created')

    def __str__(self):
        return self.name + ' (' + self.language + ')' + ' - ' + self.organization.name

    class Meta:
        verbose_name = 'NER Integration'
        verbose_name_plural = 'NER Integrations'
        indexes = [
            models.Index(fields=['organization']),
            models.Index(fields=['language']),
            models.Index(fields=['created_by_user']),
            models.Index(fields=['created_at']),
            models.Index(fields=['updated_at']),
            models.Index(fields=['name']),
            models.Index(fields=['organization', 'language']),
            models.Index(fields=['organization', 'created_by_user']),
            models.Index(fields=['organization', 'created_at']),
            models.Index(fields=['organization', 'updated_at']),
            models.Index(fields=['organization', 'name']),
            models.Index(fields=['organization', 'language', 'created_by_user']),
            models.Index(fields=['organization', 'language', 'created_at']),
            models.Index(fields=['organization', 'language', 'updated_at']),
            models.Index(fields=['organization', 'language', 'name']),
            models.Index(fields=['organization', 'created_by_user', 'created_at']),
            models.Index(fields=['organization', 'created_by_user', 'updated_at']),
            models.Index(fields=['organization', 'created_by_user', 'name']),
            models.Index(fields=['organization', 'created_at', 'updated_at']),
            models.Index(fields=['organization', 'created_at', 'name']),
        ]


Contents of ../../apps/knowledge_base_store/models.py:


# Create your models here.


Contents of ../../apps/knowledge_base_store/__init__.py:


Contents of ../../apps/knowledge_base_store/apps.py:
from django.apps import AppConfig


class KnowledgeBaseStoreConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.knowledge_base_store'


Contents of ../../apps/knowledge_base_store/admin.py:

# Register your models here.


Contents of ../../apps/knowledge_base_store/tests.py:


# Create your tests here.


Contents of ../../apps/knowledge_base_store/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-11-06 23:24:11
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-06 23:24:13
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


app_name = 'knowledge_base_store'

urlpatterns = []


Contents of ../../apps/knowledge_base_store/views.py:


# Create your views here.


Contents of ../../apps/brainstorms/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:39
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#



Contents of ../../apps/brainstorms/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:39
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class BrainstormsConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.brainstorms'


Contents of ../../apps/brainstorms/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:39
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path

from apps.brainstorms.views import BrainstormingView_SessionCreate, BrainstormingView_SessionList, \
    BrainstormingView_SessionUpdate, BrainstormingView_SessionConfirmDelete, BrainstormingView_SessionDetail, \
    BrainstormingView_IdeaBookmark, BrainstormingView_IdeasGenerate, BrainstormingView_IdeaDelete, BrainstormingView_LevelSynthesis, BrainstormingView_PerformCompleteSynthesis, \
    BrainstormingView_IdeaDeepen

app_name = 'brainstorms'

urlpatterns = [
    path("create/", BrainstormingView_SessionCreate.as_view(
        template_name='brainstorms/session/create_brainstorming_session.html'
    ), name="create_session"),
    path("list/", BrainstormingView_SessionList.as_view(
        template_name='brainstorms/session/list_brainstorming_sessions.html'
    ), name="list_sessions"),
    path("update/<int:session_id>/", BrainstormingView_SessionUpdate.as_view(
        template_name='brainstorms/session/update_brainstorming_session.html'
    ), name="update_session"),
    path("delete/<int:session_id>/", BrainstormingView_SessionConfirmDelete.as_view(
        template_name='brainstorms/session/confirm_delete_brainstorming_session.html'
    ), name="delete_session"),
    path("session/<int:session_id>/", BrainstormingView_SessionDetail.as_view(
        template_name='brainstorms/session/detail_brainstorming_session.html'
    ), name="detail_session"),
    #####
    path('idea/bookmark/<int:idea_id>/', BrainstormingView_IdeaBookmark.as_view(), name='bookmark_idea'),
    path('idea/generate/', BrainstormingView_IdeasGenerate.as_view(), name='generate_idea'),
    path('idea/deepen/<int:idea_id>/', BrainstormingView_IdeaDeepen.as_view(), name='deepen_idea'),
    path('idea/delete/<int:idea_id>/', BrainstormingView_IdeaDelete.as_view(), name='delete_idea'),
    path('synthesis/level/create/', BrainstormingView_LevelSynthesis.as_view(), name='create_level_synthesis'),
    path('synthesis/complete/create/', BrainstormingView_PerformCompleteSynthesis.as_view(), name='create_complete_synthesis'),
]


Contents of ../../apps/brainstorms/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:39
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from .brainstorming_idea_models import *
from .brainstorming_session_models import *
from .brainstorming_complete_synthesis_models import *
from .brainstorming_level_synthesis_models import *


Contents of ../../apps/brainstorms/models/brainstorming_idea_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: brainstorming_idea_models.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:39
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models


class BrainstormingIdea(models.Model):
    brainstorming_session = models.ForeignKey('BrainstormingSession', on_delete=models.CASCADE)
    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE)
    idea_title = models.CharField(max_length=1000)
    idea_description = models.TextField()
    depth_level = models.IntegerField(default=1)
    is_bookmarked = models.BooleanField(default=False)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.idea_title + ' - ' + self.brainstorming_session.session_name

    class Meta:
        verbose_name = 'Brainstorming Idea'
        verbose_name_plural = 'Brainstorming Ideas'
        ordering = ['-created_at']
        unique_together = ['brainstorming_session', 'idea_description', 'depth_level']
        indexes = [
            models.Index(fields=['brainstorming_session']),
            models.Index(fields=['created_by_user']),
            models.Index(fields=['idea_title']),
            models.Index(fields=['created_at']),
            models.Index(fields=['updated_at']),
            models.Index(fields=['brainstorming_session', 'idea_title']),
            models.Index(fields=['brainstorming_session', 'created_by_user']),
            models.Index(fields=['brainstorming_session', 'created_at']),
            models.Index(fields=['brainstorming_session', 'updated_at']),
            models.Index(fields=['brainstorming_session', 'idea_title', 'created_by_user']),
            models.Index(fields=['brainstorming_session', 'idea_title', 'created_at']),
            models.Index(fields=['brainstorming_session', 'idea_title', 'updated_at']),
        ]


Contents of ../../apps/brainstorms/models/brainstorming_session_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: brainstorming_session_models.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:39
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models


class BrainstormingSession(models.Model):
    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE)
    llm_model = models.ForeignKey('llm_core.LLMCore', on_delete=models.CASCADE)
    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE)
    session_name = models.CharField(max_length=1000)
    topic_definition = models.TextField()
    constraints = models.TextField()
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.session_name + ' - ' + self.organization.name + ' - ' + self.llm_model.nickname

    class Meta:
        verbose_name = 'Brainstorming Session'
        verbose_name_plural = 'Brainstorming Sessions'
        ordering = ['-created_at']
        unique_together = ['organization', 'llm_model', 'session_name']
        indexes = [
            models.Index(fields=['organization']),
            models.Index(fields=['llm_model']),
            models.Index(fields=['created_by_user']),
            models.Index(fields=['session_name']),
            models.Index(fields=['created_at']),
            models.Index(fields=['updated_at']),
            models.Index(fields=['organization', 'llm_model']),
            models.Index(fields=['organization', 'session_name']),
            models.Index(fields=['llm_model', 'session_name']),
            models.Index(fields=['organization', 'llm_model', 'created_by_user']),
            models.Index(fields=['organization', 'llm_model', 'created_at']),
            models.Index(fields=['organization', 'llm_model', 'updated_at']),
            models.Index(fields=['organization', 'llm_model', 'session_name']),
            models.Index(fields=['organization', 'llm_model', 'created_by_user', 'session_name']),
            models.Index(fields=['organization', 'llm_model', 'created_by_user', 'created_at']),
            models.Index(fields=['organization', 'llm_model', 'created_by_user', 'updated_at']),
        ]




Contents of ../../apps/brainstorms/models/brainstorming_level_synthesis_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: brainstorming_level_synthesis_models.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:39
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models


class BrainstormingLevelSynthesis(models.Model):
    brainstorming_session = models.ForeignKey('BrainstormingSession', on_delete=models.CASCADE)
    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE)
    depth_level = models.IntegerField()
    ideas = models.ManyToManyField('BrainstormingIdea')
    synthesis_content = models.TextField()
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.brainstorming_session.session_name + ' - ' + str(self.depth_level)

    class Meta:
        verbose_name = 'Brainstorming Level Synthesis'
        verbose_name_plural = 'Brainstorming Level Syntheses'
        ordering = ['-created_at']
        unique_together = ['brainstorming_session', 'depth_level']
        indexes = [
            models.Index(fields=['brainstorming_session']),
            models.Index(fields=['created_by_user']),
            models.Index(fields=['depth_level']),
            models.Index(fields=['created_at']),
            models.Index(fields=['updated_at']),
            models.Index(fields=['brainstorming_session', 'depth_level']),
            models.Index(fields=['brainstorming_session', 'created_by_user']),
            models.Index(fields=['brainstorming_session', 'created_at']),
            models.Index(fields=['brainstorming_session', 'updated_at']),
            models.Index(fields=['brainstorming_session', 'depth_level', 'created_by_user']),
            models.Index(fields=['brainstorming_session', 'depth_level', 'created_at']),
            models.Index(fields=['brainstorming_session', 'depth_level', 'updated_at']),
        ]


Contents of ../../apps/brainstorms/models/brainstorming_complete_synthesis_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: brainstorming_complete_synthesis_models.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:39
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models


class BrainstormingCompleteSynthesis(models.Model):
    brainstorming_session = models.ForeignKey('BrainstormingSession', on_delete=models.CASCADE)
    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE)
    synthesis_content = models.TextField()
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.brainstorming_session.session_name

    class Meta:
        verbose_name = 'Brainstorming Complete Synthesis'
        verbose_name_plural = 'Brainstorming Complete Syntheses'
        ordering = ['-created_at']
        unique_together = ['brainstorming_session']
        indexes = [
            models.Index(fields=['brainstorming_session']),
            models.Index(fields=['created_by_user']),
            models.Index(fields=['created_at']),
            models.Index(fields=['updated_at']),
            models.Index(fields=['brainstorming_session', 'created_by_user']),
            models.Index(fields=['brainstorming_session', 'created_at']),
            models.Index(fields=['brainstorming_session', 'updated_at']),
        ]


Contents of ../../apps/datasource_ml_models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:46
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#



Contents of ../../apps/datasource_ml_models/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:46
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.apps import AppConfig


class DatasourceMlModelsConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.datasource_ml_models'


Contents of ../../apps/datasource_ml_models/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:46
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.urls import path

from .views import (MLModelView_ManagerCreate, MLModelView_ManagerUpdate,
                    MLModelView_ManagerList, MLModelView_ManagerDelete,
                    MLModelView_ItemCreate, MLModelView_ItemList)

app_name = 'datasource_ml_models'

urlpatterns = [
    path('create/', MLModelView_ManagerCreate.as_view(
        template_name='datasource_ml_models/base/create_datasource_ml_model.html'), name='create'),
    path('update/<int:pk>/', MLModelView_ManagerUpdate.as_view(
        template_name='datasource_ml_models/base/update_datasource_ml_model.html'), name='update'),
    path('list/', MLModelView_ManagerList.as_view(
        template_name='datasource_ml_models/base/list_datasource_ml_models.html'), name='list'),
    path('delete/<int:pk>/', MLModelView_ManagerDelete.as_view(
        template_name='datasource_ml_models/base/confirm_delete_datasource_ml_model.html'), name='delete'),
    path('item/create/', MLModelView_ItemCreate.as_view(
        template_name='datasource_ml_models/models/create_datasource_ml_model_item.html'), name='item_create'),
    path('item/list/', MLModelView_ItemList.as_view(
        template_name='datasource_ml_models/models/list_datasource_ml_model_items.html'), name='item_list'),
    path('item/delete/', MLModelView_ItemList.as_view(
        template_name='datasource_ml_models/models/list_datasource_ml_model_items.html'), name='item_delete'),
]


Contents of ../../apps/datasource_ml_models/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:46
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from .ml_model_item_models import *
from .ml_model_storage_models import *


Contents of ../../apps/datasource_ml_models/models/ml_model_item_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: ml_model_item_models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:46
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

import random

from django.db import models
from slugify import slugify

from apps.datasource_ml_models.tasks import upload_model_to_ml_model_base
from apps.datasource_ml_models.utils import ML_MODEL_ITEM_CATEGORIES


class DataSourceMLModelItem(models.Model):
    ml_model_base = models.ForeignKey('datasource_ml_models.DataSourceMLModelConnection',
                                      on_delete=models.CASCADE, related_name='items')
    ml_model_name = models.CharField(max_length=255)
    description = models.TextField(blank=True, null=True)
    ml_model_size = models.BigIntegerField(null=True, blank=True)
    interpretation_temperature = models.FloatField(default=0.25)
    full_file_path = models.CharField(max_length=1000, blank=True, null=True)
    file_bytes = models.BinaryField(null=True, blank=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return (self.ml_model_name + ' - ' + slugify(self.full_file_path) + ' - ' +
                self.created_at.strftime('%Y-%m-%d %H:%M:%S'))

    class Meta:
        verbose_name = 'Data Source ML Model Item'
        verbose_name_plural = 'Data Source ML Model Items'
        ordering = ['-created_at']
        indexes = [
            models.Index(fields=['ml_model_base', 'ml_model_name']),
            models.Index(fields=['ml_model_base', 'description']),
            models.Index(fields=['ml_model_base', 'created_at']),
            models.Index(fields=['ml_model_base', 'updated_at']),
        ]

    def save(self, force_insert=False, force_update=False, using=None, update_fields=None):
        self.ml_model_name = slugify(self.ml_model_name)
        file_type = ML_MODEL_ITEM_CATEGORIES[0][0]  # hardcoded for now
        if not self.full_file_path:
            base_dir = self.ml_model_base.directory_full_path
            f_name = self.ml_model_name
            f_uri = f"{base_dir}{f_name.split('.')[0]}_{str(random.randint(1_000_000, 9_999_999))}.{file_type}"
            self.full_file_path = f_uri
        super().save(force_insert, force_update, using, update_fields)
        upload_model_to_ml_model_base.delay(file_bytes=self.file_bytes, full_path=self.full_file_path)


Contents of ../../apps/datasource_ml_models/models/ml_model_storage_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: ml_model_storage_models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:46
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

import boto3
from django.db import models
from slugify import slugify

from apps.datasource_ml_models.utils import ML_MODEL_ITEM_CATEGORIES
from config import settings


class DataSourceMLModelConnection(models.Model):
    assistant = models.ForeignKey('assistants.Assistant', on_delete=models.CASCADE)
    name = models.CharField(max_length=255)
    description = models.TextField()
    model_object_category = models.CharField(max_length=20, choices=ML_MODEL_ITEM_CATEGORIES)
    directory_full_path = models.CharField(max_length=255, blank=True, null=True)
    directory_schema = models.TextField(blank=True, null=True)
    interpretation_temperature = models.FloatField(default=0.25)
    interpretation_maximum_tokens = models.IntegerField(default=2048)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.name + ' - ' + slugify(self.directory_full_path) + ' - ' + self.created_at.strftime(
            '%Y-%m-%d %H:%M:%S')

    class Meta:
        verbose_name = 'Data Source ML Model Connection'
        verbose_name_plural = 'Data Source ML Model Connections'
        ordering = ['-created_at']
        indexes = [
            models.Index(fields=['assistant', 'name']),
            models.Index(fields=['assistant', 'model_object_category']),
            models.Index(fields=['assistant', 'directory_full_path']),
            models.Index(fields=['assistant', 'created_at']),
        ]

    def save(self, force_insert=False, force_update=False, using=None, update_fields=None):
        if not self.directory_full_path:
            base_dir = self.assistant.ml_models_base_directory
            dir_suffix = self.model_object_category
            full_path = f"{base_dir}{dir_suffix}/"
            self.directory_full_path = full_path
        super().save(force_insert, force_update, using, update_fields)

    def delete(self, using=None, keep_parents=False):
        if self.directory_full_path is not None:
            try:
                s3c = boto3.client('s3')
                bucket = settings.AWS_STORAGE_BUCKET_NAME
                s3c.delete_object(Bucket=bucket, Key=self.directory_full_path)
            except IOError:
                pass
        super().delete(using, keep_parents)


Contents of ../../apps/leanmod/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


Contents of ../../apps/leanmod/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class LeanmodConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.leanmod'


Contents of ../../apps/leanmod/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 12:51:58
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path

from apps.leanmod.views import LeanModAssistantView_Create, LeanModAssistantView_Update, LeanModAssistantView_Delete, \
    LeanModAssistantView_List, ExpertNetworkView_Create, ExpertNetworkView_Update, ExpertNetworkView_Delete, \
    ExpertNetworkView_List

app_name = 'leanmod'

urlpatterns = [
    path('create/', LeanModAssistantView_Create.as_view(
        template_name="leanmod/lean_assistant/create_lean_assistant.html"), name='create'),
    path('update/<int:pk>/', LeanModAssistantView_Update.as_view(
        template_name="leanmod/lean_assistant/update_lean_assistant.html"), name='update'),
    path('delete/<int:pk>/', LeanModAssistantView_Delete.as_view(
        template_name="leanmod/lean_assistant/confirm_delete_lean_assistant.html"), name='delete'),
    path('list/', LeanModAssistantView_List.as_view(
        template_name="leanmod/lean_assistant/list_lean_assistants.html"), name='list'),
    path('create_expert_network/', ExpertNetworkView_Create.as_view(
        template_name="leanmod/expert_network/create_expert_network.html"), name='create_expert_network'),
    path('update_expert_network/<int:pk>/', ExpertNetworkView_Update.as_view(
        template_name="leanmod/expert_network/update_expert_network.html"), name='update_expert_network'),
    path('delete_expert_network/<int:pk>/', ExpertNetworkView_Delete.as_view(
        template_name="leanmod/expert_network/confirm_delete_expert_network.html"), name='delete_expert_network'),
    path('list_expert_network/', ExpertNetworkView_List.as_view(
        template_name="leanmod/expert_network/list_expert_networks.html"), name='list_expert_networks'),
]


Contents of ../../apps/leanmod/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from .lean_assistant import *
from .expert_network import *


Contents of ../../apps/video_generations/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:46
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#



Contents of ../../apps/video_generations/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:45
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class VideoGenerationsConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.video_generations'


Contents of ../../apps/video_generations/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:45
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path

from apps.video_generations.views import (VideoGeneratorView_Create, VideoGeneratorView_Update,
                                          VideoGeneratorView_Connections, VideoGeneratorView_ConfirmDelete)

app_name = 'video_generations'

urlpatterns = [
    path('create/', VideoGeneratorView_Create.as_view(
        template_name='video_generations/connection/create_video_generator_connection.html'), name='create'),
    path('update/<int:pk>/', VideoGeneratorView_Update.as_view(
        template_name='video_generations/connection/update_video_generator_connection.html'), name='update'),
    path('list/', VideoGeneratorView_Connections.as_view(
        template_name='video_generations/connection/list_video_generator_connections.html'), name='list'),
    path('delete/<int:pk>/', VideoGeneratorView_ConfirmDelete.as_view(
        template_name='video_generations/connection/confirm_delete_video_generator_connection.html'), name='delete'),
]


Contents of ../../apps/video_generations/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:45
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from .video_generator_connection_models import *
from .generated_video_models import *


Contents of ../../apps/video_generations/models/video_generator_connection_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: video_generator_connection_models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:45
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models
from apps.core.video_generation.utils import VIDEO_GENERATOR_PROVIDER_TYPES


class VideoGeneratorConnection(models.Model):
    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE)
    assistant = models.ForeignKey('assistants.Assistant', on_delete=models.CASCADE)
    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE)
    name = models.CharField(max_length=1000)
    description = models.TextField()
    provider = models.CharField(max_length=255, choices=VIDEO_GENERATOR_PROVIDER_TYPES)
    provider_api_key = models.CharField(max_length=100000)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    class Meta:
        verbose_name = 'Video Generator Connection'
        verbose_name_plural = 'Video Generator Connections'

        indexes = [
            models.Index(fields=['organization']),
            models.Index(fields=['organization', 'assistant']),
            models.Index(fields=['organization', 'assistant', 'created_by_user']),
        ]

    def __str__(self):
        return self.name + ' - ' + self.provider + ' - ' + self.organization.name


Contents of ../../apps/video_generations/models/generated_video_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: generated_video_models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:45
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.db import models


class GeneratedVideo(models.Model):
    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE,
                                     related_name='generated_videos')
    assistant = models.ForeignKey('assistants.Assistant', on_delete=models.CASCADE,
                                  related_name='generated_videos')
    multimodal_chat = models.ForeignKey('multimodal_chat.MultimodalChat', on_delete=models.CASCADE,
                                        related_name='generated_videos')
    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE,
                                        related_name='generated_videos')
    video_url = models.URLField()
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    class Meta:
        verbose_name = 'Generated Video'
        verbose_name_plural = 'Generated Videos'
        indexes = [
            models.Index(fields=['organization']),
            models.Index(fields=['organization', 'assistant']),
            models.Index(fields=['organization', 'assistant', 'created_by_user']),
        ]

    def __str__(self):
        return self.video_url + ' - ' + self.organization.name + ' - ' + self.assistant.name


Contents of ../../apps/export_orchestrations/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:46
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#



Contents of ../../apps/export_orchestrations/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:46
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.apps import AppConfig

from config import settings


class ExportOrchestrationsConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.export_orchestrations'

    def ready(self):
        # Schedule the command to run after the server starts
        if settings.TESTING:
            return

        from threading import Thread
        from django.core.management import call_command

        def run_initialization_command():
            call_command('start_exported_orchestrations')

        # Use a separate thread to avoid blocking the server startup
        thread = Thread(target=run_initialization_command)
        thread.start()


Contents of ../../apps/export_orchestrations/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:46
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.urls import path

from .views import (ExportOrchestrationView_List, ExportOrchestrationView_Create, ExportOrchestrationView_Update,
                    ExportOrchestrationView_Delete, ExportOrchestrationAPIView, ExportOrchestrationView_ToggleService,
                    ExportOrchestrationAPIHealthCheckView)

app_name = 'export_orchestrations'

urlpatterns = [
    path('list/', ExportOrchestrationView_List.as_view(
        template_name="export_orchestrations/list_export_orchestrations.html"), name='list'),
    path('create/', ExportOrchestrationView_Create.as_view(
        template_name="export_orchestrations/create_export_orchestrations.html"), name='create'),
    path('update/<int:pk>/', ExportOrchestrationView_Update.as_view(
        template_name="export_orchestrations/update_export_orchestrations.html"), name='update'),
    path('delete/<int:pk>/', ExportOrchestrationView_Delete.as_view(), name='delete'),
    path('exported/<str:endpoint>/', ExportOrchestrationAPIView.as_view(), name='api'),
    path('ping/<str:endpoint>/', ExportOrchestrationAPIHealthCheckView.as_view(), name='health_check'),
    path('toggle_service/<int:pk>/', ExportOrchestrationView_ToggleService.as_view(), name='toggle_service'),
]


Contents of ../../apps/export_orchestrations/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:46
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from .exports import *
from .logs import *


Contents of ../../apps/projects/__init__.py:


Contents of ../../apps/projects/apps.py:
from django.apps import AppConfig


class ProjectsConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.projects'


Contents of ../../apps/projects/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-24 21:59:11
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-24 21:59:11
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
from django.urls import path

from apps.projects.views import (ProjectsView_ProjectCreate, ProjectsView_TeamCreate, ProjectsView_TeamDelete,
                                 ProjectsView_TeamList, ProjectsView_ProjectList, ProjectsView_ProjectDelete,
                                 ProjectsView_ProjectUpdate, ProjectsView_TeamUpdate)

app_name = 'projects'

urlpatterns = [
    path("project/create/", ProjectsView_ProjectCreate.as_view(
        template_name="projects/project/create_project.html"), name="project_create"),
    path("project/list/", ProjectsView_ProjectList.as_view(
        template_name="projects/project/list_projects.html"), name="project_list"),
    path("project/update/<int:pk>/", ProjectsView_ProjectUpdate.as_view(
        template_name="projects/project/update_project.html"), name="project_update"),
    path("project/delete/<int:pk>/", ProjectsView_ProjectDelete.as_view(
        template_name="projects/project/confirm_delete_project.html"), name="project_delete"),

    path("team/create/", ProjectsView_TeamCreate.as_view(
        template_name="projects/team/create_team.html"), name="team_create"),
    path("team/list/", ProjectsView_TeamList.as_view(
        template_name="projects/team/list_teams.html"), name="team_list"),
    path("team/update/<int:pk>/", ProjectsView_TeamUpdate.as_view(
        template_name="projects/team/update_team.html"), name="team_update"),
    path("team/delete/<int:pk>/", ProjectsView_TeamDelete.as_view(
        template_name="projects/team/confirm_delete_team.html"), name="team_delete"),
]


Contents of ../../apps/projects/models/team_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: team_models.py
#  Last Modified: 2024-10-24 22:00:10
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-24 22:00:10
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models


class ProjectTeamItem(models.Model):
    project = models.ForeignKey('ProjectItem', on_delete=models.CASCADE, related_name='project_teams')
    team_members = models.ManyToManyField('auth.User', related_name='project_teams', blank=True)

    team_name = models.CharField(max_length=1000)
    team_description = models.TextField(blank=True)
    team_lead = models.ForeignKey('auth.User', on_delete=models.CASCADE, related_name='led_project_teams')

    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE, related_name='created_project_teams')
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.project.project_name + ' - ' + self.team_name + ' - ' + self.created_at.strftime('%Y-%m-%d %H:%M:%S')

    class Meta:
        verbose_name = 'Project Team Item'
        verbose_name_plural = 'Project Team Items'
        ordering = ['-created_at']
        unique_together = ('project', 'team_name')
        indexes = [
            models.Index(fields=['project', 'team_name']),
            models.Index(fields=['project']),
            models.Index(fields=['team_name']),
            models.Index(fields=['created_at']),
            models.Index(fields=['updated_at']),
        ]


Contents of ../../apps/projects/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-24 21:58:08
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-24 21:58:08
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from .team_models import *
from .project_models import *


Contents of ../../apps/projects/models/project_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: project_models.py
#  Last Modified: 2024-10-24 22:00:05
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-24 22:00:05
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models


class ProjectItem(models.Model):
    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE)

    project_name = models.TextField()
    project_department = models.TextField()
    project_description = models.TextField()

    project_status = models.CharField(max_length=1000, blank=True, null=True)
    project_priority = models.CharField(max_length=1000, blank=True, null=True)
    project_risk_level = models.CharField(max_length=1000, blank=True, null=True)
    project_goals = models.TextField(blank=True, null=True)
    project_constraints = models.TextField(blank=True, null=True)
    project_stakeholders = models.TextField(blank=True, null=True)
    project_start_date = models.DateField(blank=True, null=True)
    project_end_date = models.DateField(blank=True, null=True)
    project_budget = models.DecimalField(max_digits=10, decimal_places=2, blank=True, null=True)

    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE, related_name='created_project_items')
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.organization.name + ' - ' + self.project_name + ' - ' + self.project_department + ' - ' + self.created_at.strftime(
            '%Y-%m-%d %H:%M:%S')

    class Meta:
        verbose_name = 'Project Item'
        verbose_name_plural = 'Project Items'
        ordering = ['-created_at']
        unique_together = ('organization', 'project_name', 'project_department')
        indexes = [
            models.Index(fields=['organization', 'project_name', 'project_department']),
            models.Index(fields=['organization', 'project_name']),
            models.Index(fields=['organization']),
            models.Index(fields=['project_name']),
            models.Index(fields=['project_department']),
            models.Index(fields=['created_at']),
            models.Index(fields=['updated_at']),
            models.Index(fields=['project_status']),
            models.Index(fields=['project_priority']),
            models.Index(fields=['project_risk_level']),
            models.Index(fields=['project_start_date']),
            models.Index(fields=['project_end_date']),
            models.Index(fields=['project_budget']),
            models.Index(fields=['created_by_user']),
        ]


Contents of ../../apps/user_profile_management/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:47
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#



Contents of ../../apps/user_profile_management/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:47
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.apps import AppConfig


class UserProfileManagementConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.user_profile_management'


Contents of ../../apps/user_profile_management/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:47
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.urls import path

from apps.user_profile_management.views import UserProfileView_List, UserProfileView_CreditCardRemove, \
    UserProfileView_ResetPassword

app_name = "user_profile_management"

urlpatterns = [
    path("profile/", UserProfileView_List.as_view(
        template_name="user_profile_management/profiles/user_profile_list.html"), name="list"),
    path("reset_password/<int:pk>", UserProfileView_ResetPassword.as_view(
        template_name="user_profile_management/profiles/user_profile_list.html"), name="reset_password"),
    path('billing/update/', UserProfileView_List.as_view(
        template_name="user_profile_management/billings/billing.html"), name='billing'),
    path('remove_card/<int:card_id>/', UserProfileView_CreditCardRemove.as_view(), name='remove_card'),
]


Contents of ../../apps/user_profile_management/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:47
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#



Contents of ../../apps/datasource_nosql/__init__.py:


Contents of ../../apps/datasource_nosql/apps.py:
from django.apps import AppConfig


class DatasourceNosqlConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.datasource_nosql'


Contents of ../../apps/datasource_nosql/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-10 16:16:13
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-10 16:16:14
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path

from apps.datasource_nosql.views.nosql_database import NoSQLDatabaseView_ManagerCreate, NoSQLDatabaseView_ManagerList, \
    NoSQLDatabaseView_ManagerUpdate, NoSQLDatabaseView_ManagerDelete
from apps.datasource_nosql.views.nosql_query import NoSQLDatabaseView_QueryCreate, NoSQLDatabaseView_QueryList, \
    NoSQLDatabaseView_QueryUpdate, NoSQLDatabaseView_QueryDelete

app_name = "datasource_nosql"


urlpatterns = [
    path("create/", NoSQLDatabaseView_ManagerCreate.as_view(
        template_name="datasource_nosql/connections/create_nosql_datasources.html"), name="create"),
    path("list/", NoSQLDatabaseView_ManagerList.as_view(
        template_name="datasource_nosql/connections/list_nosql_datasources.html"), name="list"),
    path("update/<int:pk>/", NoSQLDatabaseView_ManagerUpdate.as_view(
        template_name="datasource_nosql/connections/update_nosql_datasources.html"), name="update"),
    path("delete/<int:pk>/", NoSQLDatabaseView_ManagerDelete.as_view(), name="delete"),
    path("create_query/", NoSQLDatabaseView_QueryCreate.as_view(
        template_name="datasource_nosql/queries/create_nosql_query.html"), name="create_query"),
    path("list_queries/", NoSQLDatabaseView_QueryList.as_view(
        template_name="datasource_nosql/queries/list_nosql_queries.html"), name="list_queries"),
    path("update_query/<int:pk>/", NoSQLDatabaseView_QueryUpdate.as_view(
        template_name="datasource_nosql/queries/update_nosql_query.html"), name="update_query"),
    path("delete_query/<int:pk>/", NoSQLDatabaseView_QueryDelete.as_view(), name="delete_query"),
]


Contents of ../../apps/datasource_nosql/models/nosql_database_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: nosql_database_models.py
#  Last Modified: 2024-10-12 13:08:58
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-12 13:08:59
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
import logging
from datetime import timedelta

from couchbase.auth import PasswordAuthenticator
from couchbase.cluster import Cluster
from couchbase.options import QueryOptions, ClusterOptions, ClusterTimeoutOptions
from couchbase.exceptions import CouchbaseException, KeyspaceNotFoundException

from django.db import models

from apps.datasource_nosql.utils import NOSQL_DATABASE_CHOICES, NoSQLDatabaseChoicesNames, \
    RETRIEVE_NOSQL_SCHEMA_MAX_VALUE_CHARACTERS_ALLOWED, VALUE_TRUNCATION_PREFIX_LENGTH, VALUE_TRUNCATION_SUFFIX_LENGTH, \
    RETRIEVE_NOSQL_SCHEMA_MAX_DEPTH_ALLOWED, DEFAULT_SCHEMA_SAMPLING_LIMIT, NOSQL_KV_TIMOUT_CONSTANT, \
    NOSQL_CONNECT_TIMOUT_CONSTANT, NOSQL_QUERY_TIMOUT_CONSTANT


logger = logging.getLogger(__name__)


class NoSQLDatabaseConnection(models.Model):
    assistant = models.ForeignKey('assistants.Assistant', on_delete=models.CASCADE,
                                  related_name='nosql_database_connections', default=None, null=True)
    nosql_db_type = models.CharField(max_length=500, choices=NOSQL_DATABASE_CHOICES)
    name = models.CharField(max_length=255)
    description = models.TextField(blank=True, null=True)

    host = models.CharField(max_length=255)
    bucket_name = models.CharField(max_length=255)
    username = models.CharField(max_length=255)
    password = models.CharField(max_length=255)

    one_time_retrieval_instance_limit = models.IntegerField(default=100)
    one_time_retrieval_token_limit = models.IntegerField(default=10_000)
    is_read_only = models.BooleanField(default=True)
    schema_data_json = models.JSONField(blank=True, null=True)

    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE,
                                        related_name='nosql_database_connections', default=None, null=True)

    class Meta:
        ordering = ['-created_at']
        verbose_name_plural = 'NoSQL Database Connections'
        verbose_name = 'NoSQL Database Connection'
        indexes = [
            models.Index(fields=['assistant', 'nosql_db_type', 'name']),
            models.Index(fields=['assistant', 'nosql_db_type', 'created_at']),
            models.Index(fields=['assistant', 'nosql_db_type', 'updated_at']),
            models.Index(fields=['assistant', 'nosql_db_type', 'name', 'created_at']),
            models.Index(fields=['assistant', 'nosql_db_type', 'name', 'updated_at']),
        ]

    def __str__(self):
        return self.nosql_db_type + ' - ' + self.name + ' - ' + self.bucket_name

    def save(self, *args, **kwargs):
        try:
            self.schema_data_json = self.retrieve_schema()
        except Exception as e:
            pass
        super().save(*args, **kwargs)

    def retrieve_schema(self):
        schema = {}
        if self.nosql_db_type == NoSQLDatabaseChoicesNames.COUCHBASE:
            schema = self.retrieve_couchbase_schema()
        return schema

    @staticmethod
    def _infer_collection_schema(cluster, bucket_name, collection_name,
                                 max_value_characters_allowed=RETRIEVE_NOSQL_SCHEMA_MAX_VALUE_CHARACTERS_ALLOWED,
                                 max_depth_infer_schema=RETRIEVE_NOSQL_SCHEMA_MAX_DEPTH_ALLOWED):
        schema = {}
        error = None
        try:
            query = f'SELECT * FROM `{bucket_name}`._default.`{collection_name}` LIMIT {DEFAULT_SCHEMA_SAMPLING_LIMIT}'
            result = cluster.query(query, QueryOptions())
            for row in result:
                document = row.get(collection_name, {})
                schema = NoSQLDatabaseConnection._merge_schemas(
                    schema, NoSQLDatabaseConnection._infer_fields(
                        document, max_value_characters_allowed, max_depth_infer_schema)
                )

        except KeyspaceNotFoundException as ke:
            pass
        except CouchbaseException as e:
            error = str(e)
        except Exception as ex:
            error = str(ex)
        if error:
            logger.error(f"[_infer_collection_schema] Error: {error}")
        return schema

    @staticmethod
    def _merge_schemas(existing_schema, new_schema):
        for key, value in new_schema.items():
            if key in existing_schema:
                if isinstance(existing_schema[key], dict) and isinstance(value, dict):
                    existing_schema[key] = NoSQLDatabaseConnection._merge_schemas(existing_schema[key], value)
                elif isinstance(existing_schema[key], list) and isinstance(value, list):
                    if existing_schema[key] and value:
                        existing_schema[key][0] = NoSQLDatabaseConnection._merge_schemas(
                            existing_schema[key][0], value[0])
            else:
                existing_schema[key] = value
        return existing_schema

    @staticmethod
    def _infer_fields(document, max_value_characters_allowed, max_depth, current_depth=0):
        inferred_schema = {}
        try:
            for field, value in document.items():
                if isinstance(value, dict):
                    if current_depth < max_depth:
                        inferred_schema[field] = NoSQLDatabaseConnection._infer_fields(
                            value, max_value_characters_allowed, max_depth, current_depth + 1)
                    else:
                        inferred_schema[field] = "Nested structure (max depth reached)"
                elif isinstance(value, list) and value and isinstance(value[0], dict):
                    if current_depth < max_depth:
                        inferred_schema[field] = [NoSQLDatabaseConnection._infer_fields(
                            value[0], max_value_characters_allowed, max_depth, current_depth + 1)]
                    else:
                        inferred_schema[field] = ["List of nested structures (max depth reached)"]
                else:
                    inferred_schema[field] = NoSQLDatabaseConnection._truncate_value(
                        value, max_value_characters_allowed)
        except Exception as e:
            logger.error(f"[_infer_fields] Error: {e}")
        return inferred_schema

    @staticmethod
    def _truncate_value(value, max_value_characters_allowed):
        try:
            if isinstance(value, str) and len(value) > max_value_characters_allowed:
                return value[:VALUE_TRUNCATION_PREFIX_LENGTH] + "..." + value[-VALUE_TRUNCATION_SUFFIX_LENGTH:]
        except Exception as e:
            logger.error(f"[_truncate_value] Error: {e}")
        return type(value).__name__

    def retrieve_couchbase_schema(self):
        schema = {}
        error = None
        timeout_options = ClusterTimeoutOptions(
            kv_timeout=timedelta(seconds=NOSQL_KV_TIMOUT_CONSTANT),
            connect_timeout=timedelta(seconds=NOSQL_CONNECT_TIMOUT_CONSTANT),
            query_timeout=timedelta(seconds=NOSQL_QUERY_TIMOUT_CONSTANT)
        )
        try:
            cluster = Cluster(
                f"couchbase://{self.host}",
                ClusterOptions(PasswordAuthenticator(self.username, self.password), timeout_options=timeout_options),
            )
            bucket = cluster.bucket(self.bucket_name)
            collection_manager = bucket.collections()
            for scope in collection_manager.get_all_scopes():
                for collection in scope.collections:
                    schema[collection.name] = self._infer_collection_schema(cluster, bucket.name, collection.name)
        except CouchbaseException as e:
            error = str(e)
        except Exception as ex:
            error = str(ex)
        if error:
            logger.error(f"[retrieve_couchbase_schema] Error: {error}")
        return schema


Contents of ../../apps/datasource_nosql/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-10 16:15:55
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-10 16:15:56
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from .nosql_query_models import *
from .nosql_database_models import *


Contents of ../../apps/datasource_nosql/models/nosql_query_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: nosql_query_models.py
#  Last Modified: 2024-10-12 13:09:05
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-12 13:09:05
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.db import models


class CustomNoSQLQuery(models.Model):
    database_connection = models.ForeignKey('datasource_nosql.NoSQLDatabaseConnection', on_delete=models.CASCADE,
                                            related_name='custom_queries')
    name = models.CharField(max_length=255)
    description = models.TextField(blank=True, null=True)

    nosql_query = models.TextField()
    parameters = models.JSONField(blank=True, null=True)

    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.name + ' - ' + self.database_connection.name + ' - ' + self.database_connection.nosql_db_type

    def save(self, force_insert=False, force_update=False, using=None, update_fields=None):
        super().save(force_insert, force_update, using, update_fields)
        self.database_connection.custom_queries.add(self)

    class Meta:
        ordering = ['-created_at']
        verbose_name_plural = 'Custom NoSQL Queries'
        verbose_name = 'Custom NoSQL Query'
        indexes = [
            models.Index(fields=['database_connection', 'name']),
            models.Index(fields=['database_connection', 'created_at']),
            models.Index(fields=['database_connection', 'updated_at']),
            models.Index(fields=['database_connection', 'name', 'created_at']),
            models.Index(fields=['database_connection', 'name', 'updated_at']),
        ]


Contents of ../../apps/ellma/__init__.py:


Contents of ../../apps/ellma/apps.py:
from django.apps import AppConfig


class EllmaConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.ellma'


Contents of ../../apps/ellma/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-30 17:28:25
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-30 17:28:26
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
from django.urls import path

from apps.ellma.views import (EllmaScriptView_CreateScript, EllmaScriptView_DeleteScript, EllmaScriptView_ScriptEditor,
                              EllmaScriptView_CompileScript, EllmaScriptView_ManageScripts)

app_name = 'ellma'

urlpatterns = [
    # Headless, templateless POST views
    path('create/', EllmaScriptView_CreateScript.as_view(), name='create-script'),
    path('delete/<int:pk>/', EllmaScriptView_DeleteScript.as_view(), name='delete-script'),
    path('compile/<int:pk>/', EllmaScriptView_CompileScript.as_view(), name='compile-script'),

    # TemplateView based views
    path('editor/<int:pk>/', EllmaScriptView_ScriptEditor.as_view(
        template_name='ellma/ellma_script_editor.html'), name='script-editor'),
    path('manage/', EllmaScriptView_ManageScripts.as_view(
        template_name='ellma/ellma_script_manager.html'
    ), name='manage-scripts'),
]


Contents of ../../apps/ellma/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-30 17:36:25
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-30 17:36:25
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from .ellma_script_models import *


Contents of ../../apps/ellma/models/ellma_script_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: ellma_script_models.py
#  Last Modified: 2024-10-30 17:40:54
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-30 17:40:54
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models

from apps.ellma.utils import ELLMA_TRANSCRIPTION_LANGUAGES


class EllmaScript(models.Model):
    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE,
                                     related_name='ellma_scripts')
    script_name = models.CharField(max_length=255, null=False, blank=False)
    llm_model = models.ForeignKey('llm_core.LLMCore', on_delete=models.CASCADE, related_name='ellma_scripts')

    ellma_script_content = models.TextField(null=True, blank=True)
    ellma_transcription_language = models.CharField(max_length=255, choices=ELLMA_TRANSCRIPTION_LANGUAGES,
                                                    null=True, blank=True)
    ellma_transcribed_content = models.TextField(null=True, blank=True)

    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE, related_name='ellma_scripts')
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return f'{self.script_name} - {self.organization.name} - {self.llm_model.nickname} - {self.created_at.strftime("%Y-%m-%d %H:%M:%S")}'

    class Meta:
        ordering = ['-created_at']
        verbose_name = 'eLLMa Script'
        verbose_name_plural = 'eLLMa Scripts'
        indexes = [
            models.Index(fields=['organization', 'llm_model', 'created_by_user']),
            models.Index(fields=['organization', 'llm_model']),
            models.Index(fields=['organization']),
            models.Index(fields=['llm_model']),
            models.Index(fields=['created_by_user']),
            models.Index(fields=['created_at']),
        ]


Contents of ../../apps/slider/__init__.py:


Contents of ../../apps/slider/apps.py:
from django.apps import AppConfig


class SliderConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.slider'


Contents of ../../apps/slider/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-11-02 19:19:43
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-02 19:21:47
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path

from apps.slider.views.google_apps_connection import SliderView_GoogleAppsConnectionList, \
    SliderView_GoogleAppsConnectionCreate, SliderView_GoogleAppsConnectionDelete, SliderView_GoogleAppsConnectionUpdate
from apps.slider.views.public import SliderView_PublicGenerateViaAICommand, SliderView_PublicGenerateViaNoSQLCommand, \
    SliderView_PublicGenerateViaSQLCommand, SliderView_PublicGenerateViaSSHCommand, \
    SliderView_PublicGenerateViaSelectCommand, SliderView_PublicGenerateViaVectCommand, \
    SliderView_PublicGenerateViaAutoCommand, SliderView_PublicGenerateViaImgCommand, \
    SliderView_PublicGenerateViaWebCommand, SliderView_PublicGenerateViaRepoCommand

app_name = 'slider'

urlpatterns = [
    # path("folders/list/", SliderView_FolderList
    # .as_view(
    #    template_name="slider/folder/slider_folders_list.html"), name="folders_list"),
    # path("folders/delete/<int:folder_id>/", SliderView_FolderDelete.as_view(
    #    template_name="slider/folder/slider_folders_delete.html"), name="folders_delete"),
    # path("folders/create/", SliderView_FolderCreate.as_view(), name="folders_create"),
    # path("folders/update/<int:folder_id>/", SliderView_FolderUpdate.as_view(
    #    template_name="slider/folder/slider_folders_update.html"), name="folders_update"),
    #
    # path("documents/detail/<int:folder_id>/<int:document_id>/", SliderView_DocumentDetail.as_view(
    #    template_name="slider/document/slider_documents_detail.html"), name="documents_detail"),
    # path("documents/list/<int:folder_id>/", SliderView_DocumentList.as_view(
    #    template_name="slider/document/slider_documents_list.html"), name="documents_list"),
    # path("documents/delete/<int:folder_id>/<int:document_id>/", SliderView_DocumentDelete.as_view(),
    #     name="documents_delete"),
    # path("documents/create/<int:folder_id>/", SliderView_DocumentCreate.as_view(), name="documents_create"),
    # path("documents/update/<int:folder_id>/<int:document_id>/", SliderView_DocumentUpdate.as_view(
    #    template_name="slider/document/slider_documents_update.html"
    # ), name="documents_update"),
    # path("documents/save/<int:folder_id>/<int:document_id>/", SliderView_SaveContent.as_view(),
    #     name="documents_save"),
    #
    # path("generate/commands/ai/", SliderView_GenerateViaAICommand.as_view(), name="generate_ai"),
    # path("generate/commands/nosql/", SliderView_GenerateViaNoSQLCommand.as_view(), name="generate_nosql"),
    # path("generate/commands/sql/", SliderView_GenerateViaSQLCommand.as_view(), name="generate_sql"),
    # path("generate/commands/ssh/", SliderView_GenerateViaSSHCommand.as_view(), name="generate_ssh"),
    # path("generate/commands/select/", SliderView_GenerateViaSelectCommand.as_view(), name="generate_select"),
    # path("generate/commands/vect/", SliderView_GenerateViaVectCommand.as_view(), name="generate_vect"),
    # path("generate/commands/auto/", SliderView_GenerateViaAutoCommand.as_view(), name="generate_auto"),
    # path("generate/commands/img/", SliderView_GenerateViaImgCommand.as_view(), name="generate_img"),
    # path("generate/commands/web/", SliderView_GenerateViaWebCommand.as_view(), name="generate_web"),
    # path("generate/commands/repo/", SliderView_GenerateViaRepoCommand.as_view(), name="generate_repo"),

    # Google Apps Connections
    path("google_apps/connections/list/", SliderView_GoogleAppsConnectionList.as_view(
        template_name="slider/google_apps_connection/manage_google_apps_connections.html"
    ), name="google_apps_connections_list"),
    path("google_apps/connections/create/", SliderView_GoogleAppsConnectionCreate.as_view(),
         name="google_apps_connections_create"),
    path("google_apps/connections/update/<int:pk>/", SliderView_GoogleAppsConnectionUpdate.as_view(),
         name="google_apps_connections_update"),
    path("google_apps/connections/delete/<int:pk>/", SliderView_GoogleAppsConnectionDelete.as_view(),
         name="google_apps_connections_delete"),

    # Public endpoints
    path("public/generate/commands/ai/", SliderView_PublicGenerateViaAICommand.as_view(), name="public_generate_ai"),
    path("public/generate/commands/nosql/", SliderView_PublicGenerateViaNoSQLCommand.as_view(),
         name="public_generate_nosql"),
    path("public/generate/commands/sql/", SliderView_PublicGenerateViaSQLCommand.as_view(),
         name="public_generate_sql"),
    path("public/generate/commands/ssh/", SliderView_PublicGenerateViaSSHCommand.as_view(),
         name="public_generate_ssh"),
    path("public/generate/commands/select/", SliderView_PublicGenerateViaSelectCommand.as_view(),
         name="public_generate_select"),
    path("public/generate/commands/vect/", SliderView_PublicGenerateViaVectCommand.as_view(),
         name="public_generate_vect"),
    path("public/generate/commands/auto/", SliderView_PublicGenerateViaAutoCommand.as_view(),
         name="public_generate_auto"),
    path("public/generate/commands/img/", SliderView_PublicGenerateViaImgCommand.as_view(),
         name="public_generate_img"),
    path("public/generate/commands/web/", SliderView_PublicGenerateViaWebCommand.as_view(),
         name="public_generate_web"),
    path("public/generate/commands/repo/", SliderView_PublicGenerateViaRepoCommand.as_view(),
         name="public_generate_repo"),
]


Contents of ../../apps/slider/models/slider_document_models.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: slider_document_models.py
#  Last Modified: 2024-10-17 16:15:05
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-02 19:53:10
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.db import models


class SliderDocument(models.Model):
    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE)
    copilot_assistant = models.ForeignKey('assistants.Assistant', on_delete=models.CASCADE, default=1)

    document_folder = models.ForeignKey('slider.SliderFolder', on_delete=models.CASCADE)
    document_title = models.CharField(max_length=4000)
    document_content_json_quill = models.TextField(blank=True, null=True)
    context_instructions = models.TextField(blank=True, null=True)
    target_audience = models.TextField(blank=True, null=True)
    tone = models.TextField(blank=True, null=True)

    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE, related_name='slider_document_created_by_user')
    last_updated_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE, related_name='slider_document_last_updated_by_user')

    def __str__(self):
        return self.organization.name + ' - ' + self.document_folder.name + ' - ' + self.document_title

    class Meta:
        verbose_name = 'Slider Document'
        verbose_name_plural = 'Slider Documents'
        indexes = [
            models.Index(fields=['organization']),
            models.Index(fields=['organization', 'document_folder']),
            models.Index(fields=['organization', 'copilot_assistant']),
            models.Index(fields=['organization', 'copilot_assistant', 'document_folder']),
            models.Index(fields=['organization', 'document_folder', 'document_title']),
            models.Index(fields=['organization', 'copilot_assistant', 'document_folder', 'document_title']),
        ]


Contents of ../../apps/slider/models/slider_folder_models.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: slider_folder_models.py
#  Last Modified: 2024-10-17 16:15:05
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-02 19:53:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.db import models


class SliderFolder(models.Model):
    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE)
    name = models.CharField(max_length=1000)
    description = models.TextField(blank=True, null=True)
    meta_context_instructions = models.TextField(blank=True, null=True)

    created_at = models.DateTimeField(auto_now_add=True)
    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE)

    def __str__(self):
        return self.organization.name + ' - ' + self.name

    class Meta:
        verbose_name = 'Slider Folder'
        verbose_name_plural = 'Slider Folders'
        indexes = [
            models.Index(fields=['organization']),
            models.Index(fields=['organization', 'name']),
        ]
        unique_together = [
            ['organization', 'name'],
        ]


Contents of ../../apps/slider/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-11-02 19:21:00
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-02 19:21:01
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from .slider_folder_models import *
from .slider_document_models import *
from .slider_google_apps_connection_models import *


Contents of ../../apps/slider/models/slider_google_apps_connection_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: slider_google_apps_connection_models.py
#  Last Modified: 2024-10-31 05:36:06
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-02 19:54:22
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.db import models


class SliderGoogleAppsConnection(models.Model):
    slider_assistant = models.ForeignKey('assistants.Assistant', on_delete=models.CASCADE, null=True, blank=True)
    owner_user = models.ForeignKey('auth.User', on_delete=models.CASCADE)
    connection_api_key = models.CharField(max_length=4000)

    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.slider_assistant.name + ' - ' + self.owner_user.username + ' - ' + self.connection_api_key

    class Meta:
        verbose_name = 'Slider Google Apps Connection'
        verbose_name_plural = 'Slider Google Apps Connections'
        indexes = [
            models.Index(fields=['slider_assistant']),
            models.Index(fields=['owner_user']),
            models.Index(fields=['slider_assistant', 'owner_user']),
        ]
        unique_together = [
            ['slider_assistant', 'owner_user'],
        ]


Contents of ../../apps/starred_messages/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:44
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#



Contents of ../../apps/starred_messages/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:44
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.apps import AppConfig


class StarredMessagesConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.starred_messages'


Contents of ../../apps/starred_messages/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:44
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.urls import path

from apps.starred_messages.views import StarredMessageView_List, StarredMessageView_Delete

app_name = "starred_messages"

urlpatterns = [
    path("list/", StarredMessageView_List.as_view(template_name="starred_messages/list_starred_messages.html"),
         name="list"),
    path("delete/<int:pk>/", StarredMessageView_Delete.as_view(), name="delete"),
]


Contents of ../../apps/starred_messages/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:44
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from .starred_message_models import *


Contents of ../../apps/starred_messages/models/starred_message_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: starred_message_models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:44
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models

from apps.starred_messages.utils import STARRED_MESSAGE_SENDER_TYPES


class StarredMessage(models.Model):
    user = models.ForeignKey("auth.User", on_delete=models.CASCADE)
    organization = models.ForeignKey("organization.Organization", on_delete=models.CASCADE)
    assistant = models.ForeignKey("assistants.Assistant", on_delete=models.CASCADE)
    chat = models.ForeignKey("multimodal_chat.MultimodalChat", on_delete=models.CASCADE,
                             related_name="starred_messages")
    chat_message = models.ForeignKey("multimodal_chat.MultimodalChatMessage", on_delete=models.CASCADE)
    sender_type = models.CharField(max_length=10, choices=STARRED_MESSAGE_SENDER_TYPES, default="USER")
    message_text = models.TextField(blank=True, null=True)
    message_image_urls = models.JSONField(blank=True, null=True)
    message_file_urls = models.JSONField(blank=True, null=True)
    starred_at = models.DateTimeField(auto_now_add=True)

    class Meta:
        verbose_name = "Starred Message"
        verbose_name_plural = "Starred Messages"
        ordering = ["-starred_at"]
        indexes = [
            models.Index(fields=["user", "organization", "assistant", "chat", "chat_message"]),
            models.Index(fields=["user", "organization", "assistant", "chat", "starred_at"]),
            models.Index(fields=["user", "organization", "assistant", "chat", "sender_type"]),
            models.Index(fields=["user", "organization", "assistant", "chat", "sender_type", "starred_at"]),
            models.Index(fields=["user", "organization", "assistant", "chat", "sender_type", "chat_message"]),
            models.Index(fields=["user", "organization", "assistant", "chat", "chat_message", "starred_at"]),
            models.Index(fields=["user", "organization", "assistant", "chat", "chat_message", "sender_type"]),
            models.Index(
                fields=["user", "organization", "assistant", "chat", "chat_message", "sender_type", "starred_at"]),
        ]

    def __str__(self):
        return f"{self.user} starred {self.chat_message}"

    def save(self, *args, **kwargs):
        self.message_text = self.chat_message.message_text_content
        self.message_file_urls = self.chat_message.message_file_contents
        self.message_image_urls = self.chat_message.message_image_contents
        super().save(*args, **kwargs)


Contents of ../../apps/audit_logs/__init__.py:


Contents of ../../apps/audit_logs/apps.py:
from django.apps import AppConfig


class AuditLogsConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.audit_logs'


Contents of ../../apps/audit_logs/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-11 05:29:22
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-11 05:29:23
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


app_name = 'audit_logs'

urlpatterns = []


Contents of ../../apps/audit_logs/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-11 05:22:28
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-11 05:22:28
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from .audit_log_models import *


Contents of ../../apps/audit_logs/models/audit_log_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: audit_log_models.py
#  Last Modified: 2024-10-11 05:22:34
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-11 05:22:35
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models
from django.contrib.auth import get_user_model
from django.utils import timezone

from apps.audit_logs.utils import AUDIT_LOG_ACTION_CHOICES


class AuditLog(models.Model):
    action = models.CharField(max_length=6, choices=AUDIT_LOG_ACTION_CHOICES)
    model_name = models.CharField(max_length=10000)
    object_id = models.PositiveIntegerField()
    timestamp = models.DateTimeField(default=timezone.now)
    user = models.ForeignKey(get_user_model(), null=True, blank=True, on_delete=models.SET_NULL)
    changes = models.JSONField(null=True, blank=True)

    class Meta:
        verbose_name = "Audit Log"
        verbose_name_plural = "Audit Logs"
        ordering = ["-timestamp"]
        indexes = [
            models.Index(fields=["object_id"]),
            models.Index(fields=["model_name"]),
            models.Index(fields=["timestamp"]),
            models.Index(fields=["user"]),
            models.Index(fields=["action"]),
            models.Index(fields=["model_name", "object_id"]),
            models.Index(fields=["model_name", "object_id", "action"]),
            models.Index(fields=["model_name", "object_id", "timestamp"]),
            models.Index(fields=["model_name", "object_id", "user"]),
            models.Index(fields=["model_name", "object_id", "action", "timestamp"]),
            models.Index(fields=["model_name", "object_id", "action", "user"]),
            models.Index(fields=["model_name", "object_id", "action", "timestamp", "user"]),
        ]

    def __str__(self):
        return f"AuditLog - {self.model_name} - {self.object_id} - {self.action}"

    def save_changes(self, old_instance, new_instance):
        old_values = old_instance.__dict__
        new_values = new_instance.__dict__
        changes = {field: {"old": old_values[field], "new": new_values[field]}
                   for field in new_values if old_values.get(field) != new_values.get(field)}
        self.changes = changes


Contents of ../../apps/sheetos/__init__.py:


Contents of ../../apps/sheetos/apps.py:
from django.apps import AppConfig


class SheetosConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.sheetos'


Contents of ../../apps/sheetos/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-31 18:29:53
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-31 18:29:54
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
from django.urls import path

from apps.sheetos.views import SheetosView_FolderList, SheetosView_FolderDelete, SheetosView_FolderCreate, \
    SheetosView_FolderUpdate, SheetosView_DocumentDetail, SheetosView_DocumentList, SheetosView_DocumentDelete, \
    SheetosView_DocumentCreate, SheetosView_DocumentUpdate, SheetosView_SaveContent, SheetosView_GenerateViaAICommand, \
    SheetosView_GenerateViaNoSQLCommand, SheetosView_GenerateViaSQLCommand, SheetosView_GenerateViaSSHCommand, \
    SheetosView_GenerateViaSelectCommand, SheetosView_GenerateViaAutoCommand, SheetosView_GenerateViaVectCommand, \
    SheetosView_GenerateViaWebCommand, SheetosView_GenerateViaRepoCommand, SheetosView_GoogleAppsConnectionList, \
    SheetosView_GoogleAppsConnectionCreate, SheetosView_GoogleAppsConnectionUpdate, \
    SheetosView_GoogleAppsConnectionDelete
from apps.sheetos.views.public.public_ai_command_views import SheetosView_PublicGenerateViaAICommand
from apps.sheetos.views.public.public_auto_commands_views import SheetosView_PublicGenerateViaAutoCommand
from apps.sheetos.views.public.public_nosql_commands_views import SheetosView_PublicGenerateViaNoSQLCommand
from apps.sheetos.views.public.public_repo_commands_views import SheetosView_PublicGenerateViaRepoCommand
from apps.sheetos.views.public.public_select_commands_views import SheetosView_PublicGenerateViaSelectCommand
from apps.sheetos.views.public.public_sql_commands_views import SheetosView_PublicGenerateViaSQLCommand
from apps.sheetos.views.public.public_ssh_commands_views import SheetosView_PublicGenerateViaSSHCommand
from apps.sheetos.views.public.public_vect_commands_views import SheetosView_PublicGenerateViaVectCommand
from apps.sheetos.views.public.public_web_commands_views import SheetosView_PublicGenerateViaWebCommand

app_name = 'sheetos'

urlpatterns = [
    path("folders/list/", SheetosView_FolderList.as_view(
        template_name="sheetos/folder/sheetos_folder_list.html"), name="folders_list"),
    path("folders/delete/<int:folder_id>/", SheetosView_FolderDelete.as_view(
        template_name="sheetos/folder/sheetos_folder_delete.html"), name="folders_delete"),
    path("folders/create/", SheetosView_FolderCreate.as_view(), name="folders_create"),
    path("folders/update/<int:folder_id>/", SheetosView_FolderUpdate.as_view(
        template_name="sheetos/folder/sheetos_folder_update.html"), name="folders_update"),

    path("documents/detail/<int:folder_id>/<int:document_id>/", SheetosView_DocumentDetail.as_view(
        template_name="sheetos/document/sheetos_document_detail.html"), name="documents_detail"),
    path("documents/list/<int:folder_id>/", SheetosView_DocumentList.as_view(
        template_name="sheetos/document/sheetos_document_list.html"), name="documents_list"),
    path("documents/delete/<int:folder_id>/<int:document_id>/", SheetosView_DocumentDelete.as_view(),
         name="documents_delete"),
    path("documents/create/<int:folder_id>/", SheetosView_DocumentCreate.as_view(), name="documents_create"),
    path("documents/update/<int:folder_id>/<int:document_id>/", SheetosView_DocumentUpdate.as_view(
        template_name="sheetos/document/sheetos_document_update.html"
    ), name="documents_update"),
    path("documents/save/<int:folder_id>/<int:document_id>/", SheetosView_SaveContent.as_view(),
         name="documents_save"),

    path("generate/commands/ai/", SheetosView_GenerateViaAICommand.as_view(), name="generate_ai"),
    path("generate/commands/nosql/", SheetosView_GenerateViaNoSQLCommand.as_view(), name="generate_nosql"),
    path("generate/commands/sql/", SheetosView_GenerateViaSQLCommand.as_view(), name="generate_sql"),
    path("generate/commands/ssh/", SheetosView_GenerateViaSSHCommand.as_view(), name="generate_ssh"),
    path("generate/commands/select/", SheetosView_GenerateViaSelectCommand.as_view(), name="generate_select"),
    path("generate/commands/vect/", SheetosView_GenerateViaVectCommand.as_view(), name="generate_vect"),
    path("generate/commands/auto/", SheetosView_GenerateViaAutoCommand.as_view(), name="generate_auto"),
    path("generate/commands/web/", SheetosView_GenerateViaWebCommand.as_view(), name="generate_web"),
    path("generate/commands/repo/", SheetosView_GenerateViaRepoCommand.as_view(), name="generate_repo"),

    # Google Apps Connections
    path("google_apps/connections/list/", SheetosView_GoogleAppsConnectionList.as_view(
        template_name="sheetos/google_apps_connection/manage_google_apps_connections.html"
    ), name="google_apps_connections_list"),
    path("google_apps/connections/create/", SheetosView_GoogleAppsConnectionCreate.as_view(),
         name="google_apps_connections_create"),
    path("google_apps/connections/update/<int:pk>/", SheetosView_GoogleAppsConnectionUpdate.as_view(),
         name="google_apps_connections_update"),
    path("google_apps/connections/delete/<int:pk>/", SheetosView_GoogleAppsConnectionDelete.as_view(),
         name="google_apps_connections_delete"),

    # Public endpoints
    path("public/generate/commands/ai/", SheetosView_PublicGenerateViaAICommand.as_view(), name="public_generate_ai"),
    path("public/generate/commands/nosql/", SheetosView_PublicGenerateViaNoSQLCommand.as_view(),
         name="public_generate_nosql"),
    path("public/generate/commands/sql/", SheetosView_PublicGenerateViaSQLCommand.as_view(),
         name="public_generate_sql"),
    path("public/generate/commands/ssh/", SheetosView_PublicGenerateViaSSHCommand.as_view(),
         name="public_generate_ssh"),
    path("public/generate/commands/select/", SheetosView_PublicGenerateViaSelectCommand.as_view(),
         name="public_generate_select"),
    path("public/generate/commands/vect/", SheetosView_PublicGenerateViaVectCommand.as_view(),
         name="public_generate_vect"),
    path("public/generate/commands/auto/", SheetosView_PublicGenerateViaAutoCommand.as_view(),
         name="public_generate_auto"),
    path("public/generate/commands/web/", SheetosView_PublicGenerateViaWebCommand.as_view(),
         name="public_generate_web"),
    path("public/generate/commands/repo/", SheetosView_PublicGenerateViaRepoCommand.as_view(),
         name="public_generate_repo"),
]


Contents of ../../apps/sheetos/models/sheetos_document_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: sheetos_document_models.py
#  Last Modified: 2024-10-31 18:34:36
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-31 18:34:37
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.db import models


class SheetosDocument(models.Model):
    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE)
    copilot_assistant = models.ForeignKey('assistants.Assistant', on_delete=models.CASCADE, default=1)

    document_folder = models.ForeignKey('sheetos.SheetosFolder', on_delete=models.CASCADE)
    document_title = models.CharField(max_length=4000)
    document_content_json_quill = models.TextField(blank=True, null=True)
    context_instructions = models.TextField(blank=True, null=True)
    target_audience = models.TextField(blank=True, null=True)
    tone = models.TextField(blank=True, null=True)

    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE, related_name='sheetos_document_created_by_user')
    last_updated_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE, related_name='sheetos_document_last_updated_by_user')

    def __str__(self):
        return self.organization.name + ' - ' + self.document_folder.name + ' - ' + self.document_title

    class Meta:
        verbose_name = 'Sheetos Document'
        verbose_name_plural = 'Sheetos Documents'
        indexes = [
            models.Index(fields=['organization']),
            models.Index(fields=['organization', 'document_folder']),
            models.Index(fields=['organization', 'copilot_assistant']),
            models.Index(fields=['organization', 'copilot_assistant', 'document_folder']),
            models.Index(fields=['organization', 'document_folder', 'document_title']),
            models.Index(fields=['organization', 'copilot_assistant', 'document_folder', 'document_title']),
        ]




Contents of ../../apps/sheetos/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-31 18:31:37
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-31 18:31:38
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from .sheetos_folder_models import *
from .sheetos_document_models import *
from .sheetos_google_apps_connection_models import *


Contents of ../../apps/sheetos/models/sheetos_folder_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: sheetos_folder_models.py
#  Last Modified: 2024-10-31 18:34:43
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-31 18:34:44
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models


class SheetosFolder(models.Model):
    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE)
    name = models.CharField(max_length=1000)
    description = models.TextField(blank=True, null=True)
    meta_context_instructions = models.TextField(blank=True, null=True)

    created_at = models.DateTimeField(auto_now_add=True)
    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE)

    def __str__(self):
        return self.organization.name + ' - ' + self.name

    class Meta:
        verbose_name = 'Sheetos Folder'
        verbose_name_plural = 'Sheetos Folders'
        indexes = [
            models.Index(fields=['organization']),
            models.Index(fields=['organization', 'name']),
        ]
        unique_together = [
            ['organization', 'name'],
        ]




Contents of ../../apps/sheetos/models/sheetos_google_apps_connection_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: sheetos_google_apps_connection_models.py
#  Last Modified: 2024-10-31 18:35:13
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-31 18:35:14
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models


class SheetosGoogleAppsConnection(models.Model):
    sheetos_assistant = models.ForeignKey('assistants.Assistant', on_delete=models.CASCADE, null=True, blank=True)
    owner_user = models.ForeignKey('auth.User', on_delete=models.CASCADE)
    connection_api_key = models.CharField(max_length=4000)

    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.sheetos_assistant.name + ' - ' + self.owner_user.username + ' - ' + self.connection_api_key

    class Meta:
        verbose_name = 'Sheetos Google Apps Connection'
        verbose_name_plural = 'Sheetos Google Apps Connections'
        indexes = [
            models.Index(fields=['sheetos_assistant']),
            models.Index(fields=['owner_user']),
            models.Index(fields=['sheetos_assistant', 'owner_user']),
        ]
        unique_together = [
            ['sheetos_assistant', 'owner_user'],
        ]


Contents of ../../apps/finetuning/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:38
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#




Contents of ../../apps/finetuning/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:38
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.apps import AppConfig


class FinetuningConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.finetuning'


Contents of ../../apps/finetuning/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:38
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.urls import path

from .views import (FineTuningView_Delete,
                    FineTuningView_Add, FineTuningView_List)

app_name = 'finetuning'

urlpatterns = [
    path('list/', FineTuningView_List.as_view(
        template_name='finetuning/list_finetuned_connections.html'), name='list'),
    path('add/', FineTuningView_Add.as_view(
        template_name='finetuning/list_finetuned_connections.html'), name='add'),
    path('remove/<int:pk>/', FineTuningView_Delete.as_view(
        template_name='finetuning/list_finetuned_connections.html'), name='remove'),
]


Contents of ../../apps/finetuning/models/finetuning_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: finetuning_models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:38
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.db import models

from apps.finetuning.utils import FINE_TUNING_MODEL_PROVIDERS, FineTuningModelProvidersNames, MODEL_TYPES

class FineTunedModelConnection(models.Model):
    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE, blank=True, null=True)
    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE, blank=True, null=True)
    provider = models.CharField(max_length=255, choices=FINE_TUNING_MODEL_PROVIDERS,
                                default=FineTuningModelProvidersNames.OPENAI)
    provider_api_key = models.CharField(max_length=5000, blank=True, null=True)
    model_name = models.CharField(max_length=255)
    nickname = models.CharField(max_length=255)
    model_type = models.CharField(max_length=255, choices=MODEL_TYPES)
    model_description = models.TextField()
    created_at = models.DateTimeField(auto_now_add=True, blank=True, null=True)

    def __str__(self):
        return self.nickname + ' - ' + self.model_name

    class Meta:
        verbose_name = 'Fine-Tuned Model Connection'
        verbose_name_plural = 'Fine-Tuned Model Connections'
        ordering = ['-created_at']
        indexes = [
            models.Index(fields=['organization']),
            models.Index(fields=['nickname']),
            models.Index(fields=['model_name']),
            models.Index(fields=['created_at']),
            models.Index(fields=['organization', 'nickname']),
            models.Index(fields=['organization', 'model_name']),
            models.Index(fields=['organization', 'created_at']),
            models.Index(fields=['nickname', 'model_name']),
            models.Index(fields=['nickname', 'created_at']),
            models.Index(fields=['model_name', 'created_at']),
            models.Index(fields=['organization', 'nickname', 'model_name']),
            models.Index(fields=['organization', 'nickname', 'created_at']),
            models.Index(fields=['organization', 'model_name', 'created_at']),
            models.Index(fields=['nickname', 'model_name', 'created_at']),
            models.Index(fields=['organization', 'nickname', 'model_name', 'created_at']),
        ]


Contents of ../../apps/finetuning/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:38
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from .finetuning_models import *


Contents of ../../apps/export_leanmods/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:42
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#



Contents of ../../apps/export_leanmods/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:41
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.apps import AppConfig

from config import settings


class ExportLeanmodsConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.export_leanmods'

    def ready(self):
        if settings.TESTING:
            return

        from threading import Thread
        from django.core.management import call_command

        def run_initialization_command():
            call_command('start_exported_leanmods')

        thread = Thread(target=run_initialization_command)
        thread.start()


Contents of ../../apps/export_leanmods/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:41
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.urls import path

from apps.export_leanmods.views import (ExportLeanModView_List, ExportLeanModView_Create, ExportLeanModView_Update,
                                        ExportLeanModView_Delete, ExportLeanmodAssistantAPIView,
                                        ExportLeanModView_ToggleService, ExportLeanmodAssistantAPIHealthCheckView)

app_name = 'export_leanmods'

urlpatterns = [
    path('list/', ExportLeanModView_List.as_view(
        template_name="export_leanmods/list_export_leanmods.html"), name='list'),
    path('create/', ExportLeanModView_Create.as_view(
        template_name="export_leanmods/create_export_leanmods.html"), name='create'),
    path('update/<int:pk>/', ExportLeanModView_Update.as_view(
        template_name="export_leanmods/update_export_leanmods.html"), name='update'),
    path('delete/<int:pk>/', ExportLeanModView_Delete.as_view(), name='delete'),
    path('exported/<str:endpoint>/', ExportLeanmodAssistantAPIView.as_view(), name='api'),
    path('ping/<str:endpoint>/', ExportLeanmodAssistantAPIHealthCheckView.as_view(), name='health_check'),
    path('toggle_service/<int:pk>/', ExportLeanModView_ToggleService.as_view(), name='toggle_service'),
]


Contents of ../../apps/export_leanmods/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:41
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from .exports import *
from .logs import *


Contents of ../../apps/hadron_prime/__init__.py:


Contents of ../../apps/hadron_prime/apps.py:
from django.apps import AppConfig


class HadronPrimeConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.hadron_prime'


Contents of ../../apps/hadron_prime/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-17 21:40:19
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-17 21:40:20
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
from django.urls import path

from apps.hadron_prime.views import (HadronPrimeView_CreateHadronSystem, HadronPrimeView_DeleteHadronSystem,
                                     HadronPrimeView_UpdateHadronSystem, HadronPrimeView_ListHadronSystem,
                                     HadronPrimeView_CreateHadronNode, HadronPrimeView_DeleteHadronTopic,
                                     HadronPrimeView_CreateHadronTopic, HadronPrimeView_DeleteHadronNode,
                                     HadronPrimeView_UpdateHadronNode, HadronPrimeView_UpdateHadronTopic,
                                     HadronPrimeView_TriggerActiveHadronNode, HadronPrimeView_DetailHadronNode,
                                     HadronPrimeView_DetailHadronSystem, HadronPrimeView_DetailHadronTopic,
                                     HadronPrimeView_RegenerateNodeApiKey, HadronPrimeView_DeleteAllNodeExecutionLogs,
                                     HadronPrimeView_DeleteAllNodePublishHistoryLogs,
                                     HadronPrimeView_DeleteAllTopicMessages, HadronPrimeView_DeleteAllNodeSASELogs,
                                     HadronPrimeView_TriggerActiveHadronNodeViaForm,
                                     HadronPrimeView_DeleteAllNodeSpeechLogs, HadronPrimeView_SpeakWithHadronNode,
                                     HadronPrimeView_SpeakWithHadronNodeViaForm,
                                     HadronPrimeView_ConnectAssistantToHadronNode,
                                     HadronPrimeView_AssistantConnectionDelete)

app_name = "hadron_prime"

urlpatterns = [
    path("hadron_system/list/", HadronPrimeView_ListHadronSystem.as_view(
        template_name="hadron_prime/system/list_hadron_systems.html"
    ), name="list_hadron_system"),
    path("hadron_system/create/", HadronPrimeView_CreateHadronSystem.as_view(
        template_name="hadron_prime/system/create_hadron_system.html"
    ), name="create_hadron_system"),
    path("hadron_system/delete/<int:pk>/", HadronPrimeView_DeleteHadronSystem.as_view(
        template_name="hadron_prime/system/confirm_delete_hadron_system.html"
    ), name="delete_hadron_system"),
    path("hadron_system/update/<int:pk>/", HadronPrimeView_UpdateHadronSystem.as_view(
        template_name="hadron_prime/system/update_hadron_system.html"
    ), name="update_hadron_system"),
    path("hadron_system/detail/<int:pk>/", HadronPrimeView_DetailHadronSystem.as_view(
        template_name="hadron_prime/system/detail_hadron_system.html"), name="detail_hadron_system"),

    path("hadron_topic/create/", HadronPrimeView_CreateHadronTopic.as_view(
        template_name="hadron_prime/topic/create_hadron_topic.html"
    ), name="create_hadron_topic"),
    path("hadron_topic/delete/<int:pk>/", HadronPrimeView_DeleteHadronTopic.as_view(
        template_name="hadron_prime/topic/confirm_delete_hadron_topic.html"
    ), name="delete_hadron_topic"),
    path("hadron_topic/update/<int:pk>/", HadronPrimeView_UpdateHadronTopic.as_view(
        template_name="hadron_prime/topic/update_hadron_topic.html"
    ), name="update_hadron_topic"),
    path("hadron_topic/detail/<int:pk>/", HadronPrimeView_DetailHadronTopic.as_view(
        template_name="hadron_prime/topic/detail_hadron_topic.html"), name="detail_hadron_topic"),

    path("hadron_node/create/", HadronPrimeView_CreateHadronNode.as_view(
        template_name="hadron_prime/node/create_hadron_node.html"
    ), name="create_hadron_node"),
    path("hadron_node/delete/<int:pk>/", HadronPrimeView_DeleteHadronNode.as_view(
        template_name="hadron_prime/node/confirm_delete_hadron_node.html"
    ), name="delete_hadron_node"),
    path("hadron_node/update/<int:pk>/", HadronPrimeView_UpdateHadronNode.as_view(
        template_name="hadron_prime/node/update_hadron_node.html"
    ), name="update_hadron_node"),
    path("hadron_node/detail/<int:pk>/", HadronPrimeView_DetailHadronNode.as_view(
        template_name="hadron_prime/node/detail_hadron_node.html"), name="detail_hadron_node"),
    path("hadron_node/regenerate_api_key/<int:pk>/", HadronPrimeView_RegenerateNodeApiKey.as_view(),
         name="regenerate_node_api_key"),

    path("hadron_Node/activate/manual/<int:pk>/<str:hash>/", HadronPrimeView_TriggerActiveHadronNodeViaForm.as_view(),
         name="trigger_activate_hadron_node_via_form"),
    path("hadron_node/activate/<int:pk>/<str:hash>/", HadronPrimeView_TriggerActiveHadronNode.as_view(),
         name="trigger_activate_hadron_node"),
    path("hadron_Node/activate/speak/<int:pk>/<str:hash>/", HadronPrimeView_SpeakWithHadronNodeViaForm.as_view(),
         name="speak_with_hadron_node_via_form"),
    path("hadron_node/speak/<int:pk>/<str:hash>/", HadronPrimeView_SpeakWithHadronNode.as_view(),
         name="speak_with_hadron_node"),

    path("hadron_node/delete_all_execution_logs/<int:pk>/", HadronPrimeView_DeleteAllNodeExecutionLogs.as_view(),
         name="delete_all_execution_logs"),
    path("hadron_node/delete_all_publish_history_logs/<int:pk>/",
         HadronPrimeView_DeleteAllNodePublishHistoryLogs.as_view(),
         name="delete_all_publish_history_logs"),
    path("hadron_node/delete_all_sase_logs/<int:pk>/", HadronPrimeView_DeleteAllNodeSASELogs.as_view(),
         name="delete_all_sase_logs"),
    path("hadron_topic/delete_all_messages/<int:pk>/", HadronPrimeView_DeleteAllTopicMessages.as_view(),
         name="delete_all_messages"),
    path("hadron_node/delete_all_speech_logs/<int:pk>/", HadronPrimeView_DeleteAllNodeSpeechLogs.as_view(),
         name="delete_all_speech_logs"),

    #####

    # Connect Assistant to Hadron Prime Node
    path("connect/assistant/", HadronPrimeView_ConnectAssistantToHadronNode.as_view(
        template_name="hadron_prime/connect_assistant/connect_assistant_to_hadron_node.html"
    ), name="connect_assistant"),
    path("disconnect/assistant/<int:pk>/", HadronPrimeView_AssistantConnectionDelete.as_view(),
         name="disconnect_assistant"),
]


Contents of ../../apps/hadron_prime/models/hadron_sease_log_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: hadron_sas_log_models.py
#  Last Modified: 2024-10-17 21:48:31
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-17 21:48:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models


class HadronStateErrorActionStateErrorLog(models.Model):
    node = models.ForeignKey('hadron_prime.HadronNode', on_delete=models.CASCADE)
    old_state = models.TextField()
    old_error = models.TextField()
    action = models.TextField()
    new_state = models.TextField()
    new_error = models.TextField()
    created_at = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return self.node.node_name + ' - ' + self.action + ' - ' + self.created_at.strftime('%Y-%m-%d %H:%M:%S')

    class Meta:
        verbose_name = 'Hadron State-Error-Action-State-Error Log'
        verbose_name_plural = 'Hadron State-Error-Action-State-Error Logs'
        ordering = ['-created_at']
        indexes = [
            models.Index(fields=['node', 'action']),
            models.Index(fields=['node', 'created_at']),
        ]


Contents of ../../apps/hadron_prime/models/hadron_topic_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: hadron_topic_models.py
#  Last Modified: 2024-10-17 21:47:49
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-17 21:48:35
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models


from apps.hadron_prime.utils import HADRON_TOPIC_CATEGORIES


class HadronTopic(models.Model):
    system = models.ForeignKey('HadronSystem', on_delete=models.CASCADE)
    topic_name = models.CharField(max_length=4000)
    topic_description = models.TextField()
    topic_purpose = models.TextField()
    topic_category = models.CharField(max_length=100, choices=HADRON_TOPIC_CATEGORIES)
    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.topic_name + ' - ' + self.system.system_name + ' - ' + self.system.organization.name

    class Meta:
        verbose_name = 'Hadron Topic'
        verbose_name_plural = 'Hadron Topics'
        ordering = ['-created_at']
        indexes = [
            models.Index(fields=['system', 'topic_name']),
            models.Index(fields=['system', 'created_by_user']),
            models.Index(fields=['system', 'created_at']),
            models.Index(fields=['system', 'updated_at']),
        ]


Contents of ../../apps/hadron_prime/models/hadron_node_execution_log_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: hadron_node_execution_log_models.py
#  Last Modified: 2024-10-18 00:18:55
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-18 00:18:55
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models

from apps.hadron_prime.utils import HADRON_NODE_EXECUTION_STATUSES, HadronNodeExecutionStatusesNames


class HadronNodeExecutionLog(models.Model):
    node = models.ForeignKey('HadronNode', on_delete=models.CASCADE)
    execution_log = models.TextField(null=True, blank=True)
    execution_status = models.CharField(max_length=100, choices=HADRON_NODE_EXECUTION_STATUSES,
                                        default=HadronNodeExecutionStatusesNames.DEACTIVE)
    created_at = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return f"{self.node} - {self.created_at}"

    class Meta:
        verbose_name = 'Hadron Node Execution Log'
        verbose_name_plural = 'Hadron Node Execution Logs'
        ordering = ['-created_at']
        indexes = [
            models.Index(fields=['node', 'created_at']),
        ]


Contents of ../../apps/hadron_prime/models/hadron_node_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: hadron_node_models.py
#  Last Modified: 2024-10-17 21:48:04
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-17 21:48:36
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
import secrets
import uuid

from django.db import models

from apps.hadron_prime.utils import HADRON_NODE_AUTHENTICATION_KEY_TOKEN_SIZE


class HadronNode(models.Model):
    system = models.ForeignKey('hadron_prime.HadronSystem', on_delete=models.CASCADE)
    llm_model = models.ForeignKey('llm_core.LLMCore', on_delete=models.SET_NULL, null=True, blank=True)
    node_name = models.CharField(max_length=4000)
    node_description = models.TextField()
    optional_instructions = models.TextField(null=True, blank=True)

    # RETRIEVING CURRENT STATE
    current_state_curl = models.CharField(null=True, blank=True)
    current_state_input_params_description = models.TextField(null=True, blank=True)
    current_state_output_params_description = models.TextField(null=True, blank=True)

    # RETRIEVING THE GOAL STATE
    goal_state_curl = models.CharField(null=True, blank=True)
    goal_state_input_params_description = models.TextField(null=True, blank=True)
    goal_state_output_params_description = models.TextField(null=True, blank=True)

    # RETRIEVING THE ERROR CALCULATION
    error_calculation_curl = models.CharField(null=True, blank=True)
    error_calculation_input_params_description = models.TextField(null=True, blank=True)
    error_calculation_output_params_description = models.TextField(null=True, blank=True)

    # RETRIEVING THE SENSORY MEASUREMENTS
    measurements_curl = models.CharField(null=True, blank=True)
    measurements_input_params_description = models.TextField(null=True, blank=True)
    measurements_output_params_description = models.TextField(null=True, blank=True)

    # RETRIEVING THE ACTION SET
    action_set_curl = models.CharField(null=True, blank=True)
    action_set_input_params_description = models.TextField(null=True, blank=True)
    action_set_output_params_description = models.TextField(null=True, blank=True)

    # RETRIEVING THE ANALYTIC CALCULATION RESULTS (IF THERE IS ANY)
    analytic_calculation_curl = models.CharField(null=True, blank=True)
    analytic_calculation_input_params_description = models.TextField(null=True, blank=True)
    analytic_calculation_output_params_description = models.TextField(null=True, blank=True)

    # SENDING REQUEST FOR ACTUATION
    actuation_curl = models.CharField(null=True, blank=True)
    actuation_input_params_description = models.TextField(null=True, blank=True)
    actuation_output_params_description = models.TextField(null=True, blank=True)

    # CONNECTIONS
    subscribed_topics = models.ManyToManyField('hadron_prime.HadronTopic', blank=True)
    state_action_state_history_logs = models.ManyToManyField('hadron_prime.HadronStateErrorActionStateErrorLog',
                                                             blank=True)
    state_action_state_lookback_memory_size = models.IntegerField(default=20)
    publishing_history_logs = models.ManyToManyField('hadron_prime.HadronTopicMessage', blank=True)
    publishing_history_lookback_memory_size = models.IntegerField(default=20)
    topic_messages_history_lookback_memory_size = models.IntegerField(default=50)
    expert_networks = models.ManyToManyField('leanmod.ExpertNetwork', blank=True)
    execution_logs = models.ManyToManyField('hadron_prime.HadronNodeExecutionLog', blank=True)
    speech_logs = models.ManyToManyField('hadron_prime.HadronNodeSpeechLog', blank=True)

    # ACTIVATION TRIGGER FOR THE NODE
    activation_trigger_hashed_param = models.CharField(max_length=1000, null=True, blank=True)
    activation_trigger_authentication_key = models.CharField(max_length=1000, null=True, blank=True)

    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.node_name + ' - ' + self.system.system_name + ' - ' + self.system.organization.name

    class Meta:
        verbose_name = 'Hadron Node'
        verbose_name_plural = 'Hadron Nodes'
        ordering = ['-created_at']
        indexes = [
            models.Index(fields=['system', 'node_name']),
            models.Index(fields=['system', 'created_by_user']),
            models.Index(fields=['system', 'created_at']),
            models.Index(fields=['system', 'updated_at']),
        ]

    def save(self, *args, **kwargs):
        super(HadronNode, self).save(*args, **kwargs)
        if self.activation_trigger_hashed_param is None:
            self.activation_trigger_hashed_param = uuid.uuid4().hex + uuid.uuid4().hex
            self.save()
        if self.activation_trigger_authentication_key is None:
            self.activation_trigger_authentication_key = str(secrets.token_urlsafe(HADRON_NODE_AUTHENTICATION_KEY_TOKEN_SIZE))
            self.save()


Contents of ../../apps/hadron_prime/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-17 21:41:24
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-17 21:41:24
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from .hadron_node_models import *
from .hadron_topic_models import *
from .hadron_system_models import *
from .hadron_sease_log_models import *
from .hadron_topic_message_models import *
from .hadron_node_execution_log_models import *
from .hadron_node_speech_log_models import *
from .hadron_node_assistant_connection_models import *


Contents of ../../apps/hadron_prime/models/hadron_node_assistant_connection_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: hadron_node_assistant_connection_models.py
#  Last Modified: 2024-11-13 03:42:51
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-13 03:42:51
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models


class HadronNodeAssistantConnection(models.Model):
    hadron_prime_node = models.ForeignKey("hadron_prime.HadronNode", on_delete=models.CASCADE)
    assistant = models.ForeignKey("assistants.Assistant", on_delete=models.CASCADE)

    created_by_user = models.ForeignKey("auth.User", on_delete=models.CASCADE)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return f"{self.assistant} - {self.hadron_prime_node}"

    class Meta:
        unique_together = ("hadron_prime_node", "assistant")
        verbose_name = "Hadron Node Assistant Connection"
        verbose_name_plural = "Hadron Node Assistant Connections"
        ordering = ["-created_at"]
        indexes = [
            models.Index(fields=["hadron_prime_node", "assistant"]),
            models.Index(fields=["assistant", "hadron_prime_node"]),
        ]


Contents of ../../apps/hadron_prime/models/hadron_node_speech_log_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: hadron_node_speech_log_models.py
#  Last Modified: 2024-10-22 13:59:54
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-22 13:59:55
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.db import models


class HadronNodeSpeechLog(models.Model):
    node = models.ForeignKey('HadronNode', on_delete=models.CASCADE)
    user_query_text = models.TextField(null=True, blank=True)
    speech_log = models.TextField(null=True, blank=True)
    created_at = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return f"{self.node} - {self.created_at}"

    class Meta:
        verbose_name = 'Hadron Node Speech Log'
        verbose_name_plural = 'Hadron Node Speech Logs'
        ordering = ['-created_at']
        indexes = [
            models.Index(fields=['node', 'created_at']),
        ]


Contents of ../../apps/hadron_prime/models/hadron_system_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: hadron_system_models.py
#  Last Modified: 2024-10-17 21:47:41
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-17 21:47:41
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models


class HadronSystem(models.Model):
    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE)
    system_name = models.CharField(max_length=4000, unique=True)
    system_description = models.TextField()
    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.system_name + ' - ' + self.organization.name

    class Meta:
        verbose_name = 'Hadron System'
        verbose_name_plural = 'Hadron Systems'
        ordering = ['-created_at']
        indexes = [
            models.Index(fields=['organization', 'system_name']),
            models.Index(fields=['organization', 'created_by_user']),
            models.Index(fields=['organization', 'created_at']),
            models.Index(fields=['organization', 'updated_at']),
        ]


Contents of ../../apps/hadron_prime/models/hadron_topic_message_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: hadron_topic_message_models.py
#  Last Modified: 2024-10-17 21:47:57
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-17 21:48:34
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models


class HadronTopicMessage(models.Model):
    topic = models.ForeignKey('hadron_prime.HadronTopic', on_delete=models.CASCADE)
    sender_node = models.ForeignKey('hadron_prime.HadronNode', on_delete=models.CASCADE, related_name='sender_node')
    message = models.TextField()
    created_at = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return self.topic.topic_name + ' - ' + self.sender_node.node_name + ' - ' + self.created_at.strftime('%Y-%m-%d %H:%M:%S')

    class Meta:
        verbose_name = 'Hadron Topic Message'
        verbose_name_plural = 'Hadron Topic Messages'
        ordering = ['-created_at']
        indexes = [
            models.Index(fields=['topic', 'sender_node']),
            models.Index(fields=['topic', 'created_at']),
        ]


Contents of ../../apps/support_system/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:41
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#



Contents of ../../apps/support_system/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:41
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.apps import AppConfig


class SupportSystemConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.support_system'


Contents of ../../apps/support_system/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:41
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.urls import path
from .views import SupportView_TicketCreate, SupportView_TicketList, SupportView_TicketDetail

app_name = 'support_system'

urlpatterns = [
    path('create/', SupportView_TicketCreate.as_view(template_name='support_system/create_support_ticket.html'),
         name='create'),
    path('list/', SupportView_TicketList.as_view(template_name='support_system/list_support_tickets.html'),
         name='list'),
    path('list/<int:pk>/', SupportView_TicketDetail.as_view(template_name='support_system/support_ticket_detail.html'),
         name='detail'),
]


Contents of ../../apps/support_system/models/support_ticket_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: support_ticket_models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:41
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.db import models

from apps.support_system.utils import STATUSES_FOR_SUPPORT_TICKETS, PRIORITY_CATEGORY_OF_SUPPORT_TICKETS


class SupportTicket(models.Model):
    user = models.ForeignKey('auth.User', on_delete=models.CASCADE)
    title = models.CharField(max_length=255)
    issue_description = models.TextField()
    status = models.CharField(max_length=50, choices=STATUSES_FOR_SUPPORT_TICKETS, default='open')
    priority = models.CharField(max_length=50, choices=PRIORITY_CATEGORY_OF_SUPPORT_TICKETS, default='low')
    attachment = models.FileField(upload_to='tickets/attachments/%Y/%m/%d/', blank=True, null=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return f'{self.title} - {self.status} - {self.priority} - {self.created_at.strftime("%Y%m%d%H:%M")}'

    class Meta:
        ordering = ['created_at']
        verbose_name = 'Support Ticket'
        verbose_name_plural = 'Support Tickets'

        indexes = [
            models.Index(fields=['status', 'created_at']),
            models.Index(fields=['status', 'updated_at']),
            models.Index(fields=['status', 'priority']),
            models.Index(fields=['status', 'priority', 'created_at']),
            models.Index(fields=['status', 'priority', 'updated_at']),
        ]


Contents of ../../apps/support_system/models/support_ticket_response_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: support_ticket_response_models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:41
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.db import models

from apps.support_system.models.support_ticket_models import SupportTicket


class SupportTicketResponse(models.Model):
    ticket = models.ForeignKey(SupportTicket, on_delete=models.CASCADE, related_name='responses')
    user = models.ForeignKey('auth.User', on_delete=models.CASCADE)
    response = models.TextField()
    created_at = models.DateTimeField(auto_now_add=True)

    class Meta:
        ordering = ['created_at']
        verbose_name = 'Support Ticket Response'
        verbose_name_plural = 'Support Ticket Responses'

        indexes = [
            models.Index(fields=['ticket', 'created_at']),
            models.Index(fields=['user', 'created_at']),
            models.Index(fields=['ticket', 'user', 'created_at']),
        ]

    def __str__(self):
        return f'{self.ticket.title} - {self.user.username} - {self.created_at.strftime("%Y%m%d%H:%M")}'


Contents of ../../apps/support_system/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:41
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from .support_ticket_models import *
from .support_ticket_response_models import *


Contents of ../../apps/datasource_file_systems/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:46
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#


Contents of ../../apps/datasource_file_systems/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:46
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.apps import AppConfig


class DatasourceFileSystemsConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.datasource_file_systems'


Contents of ../../apps/datasource_file_systems/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:46
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.urls import path
from . import views

app_name = 'datasource_file_systems'

urlpatterns = [
    path('create/', views.FileSystemView_Create.as_view(
        template_name='datasource_file_systems/create_datasource_file_system.html'), name='create'),
    path('update/<int:pk>/', views.FileSystemView_Update.as_view(
        template_name='datasource_file_systems/update_datasource_file_system.html'), name='update'),
    path('list/', views.FileSystemView_List.as_view(
        template_name='datasource_file_systems/list_datasource_file_systems.html'), name='list'),
    path('delete/<int:pk>/', views.FileSystemView_Delete.as_view(), name='delete'),
]


Contents of ../../apps/datasource_file_systems/models/file_system_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: file_system_models.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:46
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.db import models

from apps.core.file_systems.file_systems_executor import FileSystemsExecutor
from apps.datasource_file_systems.utils import DATASOURCE_FILE_SYSTEMS_OS_TYPES


class DataSourceFileSystem(models.Model):
    assistant = models.ForeignKey('assistants.Assistant', on_delete=models.CASCADE,
                                  related_name='data_source_file_systems',
                                  default=None, null=True)
    os_type = models.CharField(max_length=50, choices=DATASOURCE_FILE_SYSTEMS_OS_TYPES)
    name = models.CharField(max_length=255)
    description = models.TextField(blank=True, null=True)
    host_url = models.CharField(max_length=255)
    port = models.IntegerField(default=22)
    username = models.CharField(max_length=255)
    password = models.CharField(max_length=255)
    file_directory_tree = models.TextField(blank=True, null=True)
    os_read_limit_tokens = models.IntegerField(default=10_000)
    is_read_only = models.BooleanField(default=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE,
                                        related_name='data_source_file_systems',
                                        default=None, null=True)

    class Meta:
        ordering = ['-created_at']
        verbose_name_plural = 'Data Source File Systems'
        verbose_name = 'Data Source File System'
        indexes = [
            models.Index(fields=['assistant', 'os_type', 'name']),
            models.Index(fields=['assistant', 'os_type', 'created_at']),
            models.Index(fields=['assistant', 'os_type', 'updated_at']),
            models.Index(fields=['assistant', 'os_type', 'name', 'created_at']),
            models.Index(fields=['assistant', 'os_type', 'name', 'updated_at']),
        ]

    def __str__(self):
        return self.name + ' (' + self.os_type + ')' + ' - ' + self.host_url + ':' + str(self.port)

    def save(
        self, force_insert=False, force_update=False, using=None, update_fields=None
    ):
        self.ssh_connection_uri = f"{self.username}@{self.host_url}"
        schema_str = FileSystemsExecutor(self).schema_str
        self.file_directory_tree = schema_str
        super().save(force_insert, force_update, using, update_fields)


Contents of ../../apps/datasource_file_systems/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:46
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from .file_system_models import *


Contents of ../../apps/dashboard/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:37
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


Contents of ../../apps/dashboard/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:37
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class DashboardConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.dashboard'


Contents of ../../apps/dashboard/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:37
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path
from .views import DashboardView_Main, DashboardView_Refresh, DashboardView_ChangeStatisticsInterval

app_name = "dashboard"

urlpatterns = [
    path("", DashboardView_Main.as_view(template_name="dashboard/dashboard_main.html"), name="main-dashboard"),
    path("refresh/<str:days>/", DashboardView_Refresh.as_view(
        template_name="dashboard/dashboard_main.html"
    ), name="refresh"),
    path("adjust_interval/<int:days>/", DashboardView_ChangeStatisticsInterval.as_view(
        template_name="dashboard/dashboard_main.html"
    ), name="adjust-interval"),
]


Contents of ../../apps/dashboard/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:37
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#



Contents of ../../apps/orchestrations/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:41
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#



Contents of ../../apps/orchestrations/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:41
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.apps import AppConfig


class OrchestrationsConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.orchestrations'


Contents of ../../apps/orchestrations/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:41
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.urls import path

from apps.orchestrations.views import (OrchestrationView_Create, OrchestrationView_Update, OrchestrationView_QueryList, \
                                       OrchestrationView_List, OrchestrationView_Delete,
                                       OrchestrationView_QueryDelete,
                                       OrchestrationView_QueryDetail, OrchestrationView_QueryRerun,
                                       OrchestrationView_ConnectReactantAssistantToOrchestration,
                                       OrchestrationView_AssistantConnectionDelete)

app_name = "orchestrations"

urlpatterns = [
    path("create/", OrchestrationView_Create.as_view(
        template_name="orchestrations/create_orchestration.html"), name="create"),
    path("list/", OrchestrationView_List.as_view(
        template_name="orchestrations/list_orchestrations.html"), name="list"),
    path("update/<int:pk>/", OrchestrationView_Update.as_view(
        template_name="orchestrations/update_orchestration.html"), name="update"),
    path("delete/<int:pk>/", OrchestrationView_Delete.as_view(
        template_name="orchestrations/delete_orchestration.html"), name="delete"),
    path("query/<int:pk>/list/", OrchestrationView_QueryList.as_view(
        template_name="orchestrations/query_list_orchestration.html"), name="query_list"),
    path("query/<int:pk>/delete/<int:query_id>/", OrchestrationView_QueryDelete.as_view(
        template_name="orchestrations/query_confirm_delete_orchestration.html"), name="query_delete"),
    path("query/<int:pk>/detail/<int:query_id>/", OrchestrationView_QueryDetail.as_view(
        template_name="orchestrations/query_detail_orchestration.html"), name="query_detail"),
    path("query/<int:pk>/rerun/<int:query_id>/", OrchestrationView_QueryRerun.as_view(
        template_name="orchestrations/query_detail_orchestration.html"), name="query_rerun"),

    #####

    # Connect Assistant to MetaKanban
    path("connect/assistant/", OrchestrationView_ConnectReactantAssistantToOrchestration.as_view(
        template_name="orchestrations/connect_reactant_assistant.html"), name="connect_assistant"),
    path("disconnect/assistant/<int:pk>/", OrchestrationView_AssistantConnectionDelete.as_view(),
         name="disconnect_assistant"),
]


Contents of ../../apps/orchestrations/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:41
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from .maestro import *
from .query import *
from .connect_reactant_assistant import *


Contents of ../../apps/integrations/__init__.py:


Contents of ../../apps/integrations/apps.py:
from django.apps import AppConfig


class IntegrationsConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.integrations'


Contents of ../../apps/integrations/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-11-05 19:19:46
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-05 19:19:47
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
from django.urls import path

from apps.integrations.views import (IntegrationView_IntegrationCategoryStore,
                                     IntegrationView_IntegrationCategoriesList,
                                     IntegrationView_IntegrateAssistantToOrganization)

app_name = 'integrations'

urlpatterns = [
    path("categories/", IntegrationView_IntegrationCategoriesList.as_view(
        template_name="integrations/list_integration_categories.html"), name="list"),
    path("categories/<slug:category_slug>/", IntegrationView_IntegrationCategoryStore.as_view(
        template_name="integrations/store_integration_category.html"), name="store"),

    path("integrate/", IntegrationView_IntegrateAssistantToOrganization.as_view(), name="integrate"),
]


Contents of ../../apps/integrations/models/assistant_integration_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: assistant_integration_models.py
#  Last Modified: 2024-11-05 19:22:53
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-05 19:22:53
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
import os
import random
import uuid

from django.core.files import File
from django.core.files.storage import default_storage
from django.db import models

from apps.assistants.utils import MultiStepReasoningCapabilityChoicesNames
from config import settings


class AssistantIntegration(models.Model):
    # (On Creation)
    integration_category = models.ForeignKey('AssistantIntegrationCategory', on_delete=models.CASCADE)
    tags = models.JSONField(null=True, blank=True)
    integration_name = models.CharField(max_length=1000)  # Important
    integration_description = models.TextField(null=True, blank=True)  # Important
    integration_instructions = models.TextField(null=True, blank=True)  # Important
    integration_audience = models.CharField(max_length=1000, null=True, blank=True)  # Important
    integration_tone = models.CharField(max_length=1000, null=True, blank=True)  # Important
    integration_assistant_image = models.ImageField(upload_to='integration_assistant_images/%Y/%m/%d/',
                                                    null=True, blank=True)

    # Multi-modalities (Optional) (After Creation)
    integration_multi_step_reasoning = models.CharField()  # Important
    integration_context_overflow_strategy = models.CharField(default="forget", max_length=1100)  # Optional field
    integration_response_language = models.CharField(default="auto", max_length=1000)  # Optional field
    integration_custom_functions = models.ManyToManyField('mm_functions.CustomFunction', blank=True)
    integration_custom_apis = models.ManyToManyField('mm_apis.CustomAPI', blank=True)
    integration_custom_scripts = models.ManyToManyField('mm_scripts.CustomScript', blank=True)
    integration_response_template = models.TextField(default="")  # Optional field
    integration_glossary = models.JSONField(default=dict, blank=True)  # Optional field
    ner_integration = models.ForeignKey("data_security.NERIntegration", on_delete=models.SET_NULL,
                                        related_name='assistant_integrations', null=True, blank=True)
    project_items = models.ManyToManyField('projects.ProjectItem', blank=True, related_name='assistant_integrations')

    # Overridable Configurations (After Creation)
    integration_time_awareness = models.BooleanField(default=True)  # Can be overridden
    integration_location_awareness = models.BooleanField(default=True)  # Can be overridden
    integration_max_retries = models.IntegerField(default=5)  # Can be overridden
    integration_max_tool_retries = models.IntegerField(default=5)  # Can be overridden
    integration_max_tool_pipelines = models.IntegerField(default=5)  # Can be overridden
    integration_max_message_memory = models.IntegerField(default=25)  # Can be overridden
    integration_image_generation_capability = models.BooleanField(default=True)  # Can be overridden

    # Metadata (On Creation + On Update)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    #################################################################################################################
    #  USER DEFINED PROPERTIES
    #################################################################################################################
    # Configuration: organization, llm_model
    #################################################################################################################

    def __str__(self):
        return self.integration_name + ' - ' + self.integration_category.category_name

    class Meta:
        verbose_name = 'Assistant Integration'
        verbose_name_plural = 'Assistant Integrations'
        ordering = ['-integration_name']
        indexes = [
            models.Index(fields=['integration_name']),
            models.Index(fields=['integration_name', 'integration_category']),
            models.Index(fields=['integration_name', 'integration_category', 'integration_audience']),
            models.Index(fields=['integration_name', 'integration_category', 'integration_tone']),
            models.Index(fields=['integration_name', 'integration_category', 'integration_multi_step_reasoning']),
            models.Index(fields=['integration_name', 'integration_category', 'integration_time_awareness']),
            models.Index(fields=['integration_name', 'integration_category', 'integration_location_awareness']),
            models.Index(fields=['integration_name', 'integration_category', 'integration_max_retries']),
            models.Index(fields=['integration_name', 'integration_category', 'integration_max_tool_retries']),
        ]

    def save(self, *args, **kwargs):
        # Check if the image field is empty
        self.integration_multi_step_reasoning = MultiStepReasoningCapabilityChoicesNames.HIGH_PERFORMANCE
        if not self.integration_assistant_image:
            static_image_directory = os.path.join(settings.STATIC_ROOT, 'img', 'integration-assistant-avatars')
            available_images = [f for f in os.listdir(static_image_directory) if f.endswith(('png', 'jpg', 'jpeg'))]
            if available_images:
                random_image = random.choice(available_images)
                random_image_path = os.path.join(static_image_directory, random_image)
                unique_filename = f'integration_assistant_images/{uuid.uuid4()}.png'
                with open(random_image_path, 'rb') as img_file:
                    default_storage.save(unique_filename, File(img_file))
                self.integration_assistant_image.name = unique_filename
        super(AssistantIntegration, self).save(*args, **kwargs)


Contents of ../../apps/integrations/models/assistant_integration_category_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: assistant_integration_category_models.py
#  Last Modified: 2024-11-05 19:23:46
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-05 19:23:47
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models
from slugify import slugify


class AssistantIntegrationCategory(models.Model):
    category_name = models.CharField(max_length=1000, null=False, blank=False)
    category_description = models.TextField(null=True, blank=True)
    category_image_url = models.URLField(null=True, blank=True)
    tags = models.JSONField(null=True, blank=True)
    category_slug = models.SlugField(max_length=1000, null=True, blank=True, unique=True)

    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.category_name

    class Meta:
        verbose_name = 'Assistant Integration Category'
        verbose_name_plural = 'Assistant Integration Categories'
        unique_together = ['category_name']
        indexes = [
            models.Index(fields=['category_name']),
        ]

    def save(self, *args, **kwargs):
        if not self.category_slug:
            self.category_slug = slugify(self.category_name)
        super(AssistantIntegrationCategory, self).save(*args, **kwargs)


Contents of ../../apps/integrations/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-11-05 19:21:08
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-05 19:21:09
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from .assistant_integration_models import *
from .assistant_integration_category_models import *


Contents of ../../apps/metatempo/__init__.py:


Contents of ../../apps/metatempo/apps.py:
from django.apps import AppConfig


class MetatempoConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.metatempo'


Contents of ../../apps/metatempo/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-28 19:35:45
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-28 19:35:45
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
from django.urls import path

from apps.metatempo.views import (MetaTempoView_ConnectionRegenerateAPIKey, MetaTempoView_TriggerManualAnalysis,
                                  MetaTempoView_ConnectionConfirmDelete, MetaTempoView_ConnectionList,
                                  MetaTempoView_ConnectionCreate, MetaTempoView_ConnectionUpdate,
                                  MetaTempoView_MainBoard, MetaTempoView_PurgeLogs, MetaTempoView_ScreenshotDelivery,
                                  MetaTempoView_AgentCommunication, MetaTempoView_GetConnectionConfig,
                                  MetaTempoView_ConnectAssistantToMetaTempo, MetaTempoView_AssistantConnectionDelete)

app_name = 'metatempo'

urlpatterns = [
    path("connection/create/", MetaTempoView_ConnectionCreate.as_view(
        template_name="metatempo/connection/create_metatempo_connection.html"), name="connection_create"),
    path("connection/list/", MetaTempoView_ConnectionList.as_view(
        template_name="metatempo/connection/list_metatempo_connections.html"), name="connection_list"),
    path("connection/update/<int:connection_id>/", MetaTempoView_ConnectionUpdate.as_view(
        template_name="metatempo/connection/update_metatempo_connection.html"), name="connection_update"),
    path("connection/confirm_delete/<int:connection_id>/", MetaTempoView_ConnectionConfirmDelete.as_view(
        template_name="metatempo/connection/confirm_delete_metatempo_connection.html"),
         name="connection_confirm_delete"),
    path("connection/regenerate_api_key/<int:connection_id>/", MetaTempoView_ConnectionRegenerateAPIKey.as_view(),
         name="connection_regenerate_api_key"),

    # A.K.A Detail Connection Page :-> is accessible from 'connection/list/' page.
    path("board/main/<int:connection_id>/", MetaTempoView_MainBoard.as_view(
        template_name="metatempo/board/metatempo_main_board.html"), name="main_board"),
    path("board/analysis/overall/trigger/<int:connection_id>/", MetaTempoView_TriggerManualAnalysis.as_view(),
         name="trigger_manual_analysis"),
    path("board/logs/purge/<int:connection_id>/", MetaTempoView_PurgeLogs.as_view(), name="purge_logs"),

    # AI Assistant
    path("agent/communication/", MetaTempoView_AgentCommunication.as_view(
        template_name="metatempo/agent/agent_communication.html"), name="agent_communication"),

    # Connect Assistant to MetaTempo Tracker
    path("connect/assistant/", MetaTempoView_ConnectAssistantToMetaTempo.as_view(
        template_name="metatempo/connect_assistant/connect_assistant_to_metatempo.html"
    ), name="connect_assistant"),
    path("disconnect/assistant/<int:pk>/", MetaTempoView_AssistantConnectionDelete.as_view(),
         name="disconnect_assistant"),

    ##############################################################################################################

    path("tempo/screenshot/delivery/", MetaTempoView_ScreenshotDelivery.as_view(), name="screenshot_delivery"),
    path("tempo/connection/config/", MetaTempoView_GetConnectionConfig.as_view(), name="get_connection_config"),
]


Contents of ../../apps/metatempo/models/metatempo_connection_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: metatempo_board_models.py
#  Last Modified: 2024-10-28 19:40:45
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-28 19:40:45
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models

from apps.metatempo.utils import METATEMPO_OVERALL_LOG_INTERVALS, MetaTempoOverallLogIntervalsNames, \
    METATEMPO_MEMBER_LOG_INTERVALS, MetaTempoMemberLogIntervalsNames


class MetaTempoConnection(models.Model):
    board = models.OneToOneField('metakanban.MetaKanbanBoard', on_delete=models.CASCADE, unique=True)
    is_tracking_active = models.BooleanField(default=True)
    optional_context_instructions = models.TextField(blank=True, null=True)
    overall_log_intervals = models.CharField(max_length=1000, choices=METATEMPO_OVERALL_LOG_INTERVALS,
                                             default=MetaTempoOverallLogIntervalsNames.DAILY)
    member_log_intervals = models.CharField(max_length=1000, choices=METATEMPO_MEMBER_LOG_INTERVALS,
                                            default=MetaTempoMemberLogIntervalsNames.TIMES_6_PER_HOUR)

    tracked_weekdays = models.JSONField(blank=True, null=True)
    tracking_start_time = models.TimeField(blank=True, null=True)
    tracking_end_time = models.TimeField(blank=True, null=True)

    # Additional key to user must be provided to ensure ID of the user
    connection_api_key = models.CharField(max_length=1000, blank=True, null=True)

    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE,
                                        related_name='metatempo_board_connections_created',
                                        blank=True, null=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return f'{self.board} - {self.is_tracking_active}'

    class Meta:
        verbose_name = 'MetaTempo Board Connection'
        verbose_name_plural = 'MetaTempo Board Connections'
        ordering = ['-created_at']
        indexes = [
            models.Index(fields=['board', 'is_tracking_active']),
            models.Index(fields=['connection_api_key']),
            models.Index(fields=['created_by_user']),
            models.Index(fields=['created_at']),
            models.Index(fields=['updated_at']),
        ]


Contents of ../../apps/metatempo/models/metatempo_assistant_connection_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: metatempo_assistant_connection_models.py
#  Last Modified: 2024-11-13 03:15:41
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-13 03:15:42
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.db import models


class MetaTempoAssistantConnection(models.Model):
    metatempo_instance = models.ForeignKey("metatempo.MetaTempoConnection", on_delete=models.CASCADE)
    assistant = models.ForeignKey("assistants.Assistant", on_delete=models.CASCADE)

    created_by_user = models.ForeignKey("auth.User", on_delete=models.CASCADE)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return f"{self.assistant} - {self.metatempo_instance}"

    class Meta:
        unique_together = ("metatempo_instance", "assistant")
        verbose_name = "Meta Tempo Assistant Connection"
        verbose_name_plural = "Meta Tempo Assistant Connections"
        ordering = ["-created_at"]
        indexes = [
            models.Index(fields=["metatempo_instance", "assistant"]),
            models.Index(fields=["assistant", "metatempo_instance"]),
        ]


Contents of ../../apps/metatempo/models/__init__.py:
# Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-28 19:34:18
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-28 19:34:18
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from .metatempo_connection_models import *
from .metatempo_member_log_models import *
from .metatempo_member_log_daily_models import *
from .metatempo_project_overall_log_models import *
from .metatempo_assistant_connection_models import *


Contents of ../../apps/metatempo/models/metatempo_member_log_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: metatempo_member_log_models.py
#  Last Modified: 2024-10-28 19:41:02
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-28 19:41:03
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.db import models


class MetaTempoMemberLog(models.Model):
    identifier_uuid = models.UUIDField(null=True, blank=True)
    metatempo_connection = models.ForeignKey('metatempo.MetaTempoConnection', on_delete=models.CASCADE)
    user = models.ForeignKey('auth.User', on_delete=models.CASCADE, null=True, blank=True)
    screenshot_image = models.ImageField(upload_to='metatempo/member_logs/%Y/%m/%d/', null=True, blank=True)

    #################################################################################################################
    # AI Generated Fields
    activity_summary = models.TextField(null=True, blank=True)
    activity_tags = models.JSONField(null=True, blank=True)
    work_intensity = models.IntegerField(null=True, blank=True)  # Score between 0-100
    application_usage_stats = models.JSONField(null=True, blank=True)
    #################################################################################################################

    timestamp = models.DateTimeField()

    def __str__(self):
        return f'{self.metatempo_connection} - {self.timestamp}'

    class Meta:
        verbose_name = 'MetaTempo Member Log'
        verbose_name_plural = 'MetaTempo Member Logs'
        ordering = ['-timestamp']
        indexes = [
            models.Index(fields=['metatempo_connection', 'user']),
            models.Index(fields=['timestamp']),
            models.Index(fields=['work_intensity']),
            models.Index(fields=['identifier_uuid']),
        ]


Contents of ../../apps/metatempo/models/metatempo_project_overall_log_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: metatempo_project_overall_log_models.py
#  Last Modified: 2024-10-28 19:41:41
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-28 19:41:41
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models


class MetaTempoProjectOverallLog(models.Model):
    metatempo_connection = models.ForeignKey('metatempo.MetaTempoConnection', on_delete=models.CASCADE)

    #################################################################################################################
    # AI Generated Fields
    overall_activity_summary = models.TextField(null=True, blank=True)
    overall_key_insights = models.JSONField(null=True, blank=True)
    overall_work_intensity = models.IntegerField(null=True, blank=True)
    overall_application_usage_stats = models.JSONField(null=True, blank=True)
    # :-> Mathematical average of individual 'interval logs' in the interval X

    datestamp = models.DateField(auto_now_add=True)
    created_at = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return f'{self.metatempo_connection} - {self.datestamp}'

    class Meta:
        verbose_name = 'MetaTempo Project Overall Log'
        verbose_name_plural = 'MetaTempo Project Overall Logs'
        ordering = ['-created_at']
        indexes = [
            models.Index(fields=['metatempo_connection']),
            models.Index(fields=['datestamp']),
            models.Index(fields=['overall_work_intensity']),
        ]


Contents of ../../apps/metatempo/models/metatempo_member_log_daily_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: metatempo_member_log_daily_models.py
#  Last Modified: 2024-10-28 19:55:46
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-28 19:55:47
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models


class MetaTempoMemberLogDaily(models.Model):
    metatempo_connection = models.ForeignKey('metatempo.MetaTempoConnection', on_delete=models.CASCADE)
    user = models.ForeignKey('auth.User', on_delete=models.CASCADE, null=True, blank=True)
    logs = models.ManyToManyField('metatempo.MetaTempoMemberLog', blank=True)

    #################################################################################################################
    # AI Generated Fields
    daily_activity_summary = models.TextField(null=True, blank=True)
    key_tasks = models.JSONField(null=True, blank=True)
    overall_work_intensity = models.IntegerField(null=True,
                                                 blank=True)  # Mathematical average of individual 'logs' in the day
    application_usage_stats = models.JSONField(null=True, blank=True)  # Accumulation of individual 'logs' in the day
    #################################################################################################################

    datestamp = models.DateField(auto_now_add=True)
    created_at = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return f'{self.metatempo_connection} - {self.datestamp}'

    class Meta:
        verbose_name = 'MetaTempo Member Log Daily'
        verbose_name_plural = 'MetaTempo Member Log Dailies'
        ordering = ['-created_at']
        indexes = [
            models.Index(fields=['metatempo_connection', 'user']),
            models.Index(fields=['datestamp']),
            models.Index(fields=['overall_work_intensity']),
        ]


Contents of ../../apps/llm_core/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:34
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#



Contents of ../../apps/llm_core/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:34
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class LlmCoreConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.llm_core'


Contents of ../../apps/llm_core/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:34
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path

from .views import LLMView_Create, LLMView_Update, LLMView_Delete, LLMView_List

app_name = "llm_core"

urlpatterns = [
    path('create/', LLMView_Create.as_view(template_name="llm_core/create_llm_core.html"),
         name="create"),
    path('list/', LLMView_List.as_view(template_name="llm_core/list_llm_cores.html"),
         name="list"),
    path('update/<int:pk>/', LLMView_Update.as_view(template_name="llm_core/update_llm_core.html"),
         name="update"),
    path('delete/<int:pk>/', LLMView_Delete.as_view(template_name="llm_core/llm_core_confirm_delete.html"),
         name="delete")
]


Contents of ../../apps/llm_core/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:34
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from .llm_core_models import *


Contents of ../../apps/llm_core/models/llm_core_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: llm_core_models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:34
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.db import models

from apps.finetuning.models import FineTunedModelConnection
from apps.llm_core.utils import LARGE_LANGUAGE_MODEL_PROVIDERS, GPT_MODEL_NAMES


class LLMCore(models.Model):
    nickname = models.CharField(max_length=255)
    description = models.TextField(default="", blank=True)
    provider = models.CharField(max_length=2, choices=LARGE_LANGUAGE_MODEL_PROVIDERS)
    api_key = models.CharField(max_length=8192)
    model_name = models.CharField(max_length=1000)
    temperature = models.DecimalField(max_digits=5, decimal_places=2, default=0.50)
    maximum_tokens = models.IntegerField(default=4094)
    stop_sequences = models.TextField(default="", blank=True)
    top_p = models.DecimalField(max_digits=5, decimal_places=2, default=1.0)
    frequency_penalty = models.DecimalField(max_digits=5, decimal_places=2, default=0.0)
    presence_penalty = models.DecimalField(max_digits=5, decimal_places=2, default=0.0)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    created_by_user = models.ForeignKey("auth.User", on_delete=models.CASCADE,
                                        related_name="llm_core_created_by_users")
    last_updated_by_user = models.ForeignKey("auth.User", on_delete=models.CASCADE,
                                             related_name="llm_core_last_updated_by_users")
    organization = models.ForeignKey("organization.Organization", on_delete=models.CASCADE,
                                     related_name="llm_cores", null=True)

    def __str__(self):
        return self.nickname

    class Meta:
        verbose_name = "LLM Core"
        verbose_name_plural = "LLM Cores"
        ordering = ["-created_at"]
        indexes = [
            models.Index(fields=["nickname"]),
            models.Index(fields=["provider"]),
            models.Index(fields=["model_name"]),
            models.Index(fields=["created_at"]),
            models.Index(fields=["updated_at"]),
            models.Index(fields=["organization"]),
            models.Index(fields=["created_by_user"]),
            models.Index(fields=["last_updated_by_user"]),
            models.Index(fields=["organization", "nickname"]),
            models.Index(fields=["organization", "provider"]),
            models.Index(fields=["organization", "model_name"]),
            models.Index(fields=["organization", "created_at"]),
            models.Index(fields=["organization", "updated_at"]),
            models.Index(fields=["organization", "created_by_user"]),
            models.Index(fields=["organization", "last_updated_by_user"]),
        ]

    def get_provider_name(self):
        return dict(LARGE_LANGUAGE_MODEL_PROVIDERS)[self.provider]

    def save(self, force_insert=False, force_update=False, using=None, update_fields=None):
        fine_tuned_models = FineTunedModelConnection.objects.filter(
            organization__in=[self.organization]
        ).all()
        for model in fine_tuned_models:
            if model.model_name not in [m[0] for m in GPT_MODEL_NAMES]:
                GPT_MODEL_NAMES.append((model.model_name, model.nickname))
        for model in GPT_MODEL_NAMES:
            if (model[0] not in [m[0] for m in GPT_MODEL_NAMES] and model[0] not in [m[0] for m in
                                                                                     fine_tuned_models]):
                GPT_MODEL_NAMES.remove(model)
        super().save(force_insert, force_update, using, update_fields)


Contents of ../../apps/metakanban/__init__.py:


Contents of ../../apps/metakanban/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-23 17:33:01
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-23 17:33:39
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class MetakanbanConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.metakanban'


Contents of ../../apps/metakanban/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-23 17:33:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-23 17:33:48
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
from django.urls import path

from apps.metakanban.views import (MetaKanbanView_TaskCreate, MetaKanbanView_TaskDelete,
                                   MetaKanbanView_TaskDetailAndUpdate, MetaKanbanView_TaskMove,
                                   MetaKanbanView_ColumnConfirmDelete, MetaKanbanView_BoardConfirmDelete,
                                   MetaKanbanView_BoardList, MetaKanbanView_BoardCreate, MetaKanbanView_BoardDetail,
                                   MetaKanbanView_ColumnCreate, MetaKanbanView_ColumnUpdate,
                                   MetaKanbanView_BoardUpdate, MetaKanbanView_TaskAssign, MetaKanbanView_LabelList,
                                   MetaKanbanView_LabelCreate, MetaKanbanView_LabelDelete, MetaKanbanView_LabelUpdate,
                                   MetaKanbanView_ColumnMove, MetaKanbanView_AgentCommunication,
                                   MetaKanbanView_BoardLogList, MetaKanbanView_MeetingRecordingAudioAIDelivery,
                                   MetaKanbanView_MeetingTranscriptionAIImplement,
                                   MetaKanbanView_MeetingTranscriptionList, MetaKanbanView_MeetingTranscriptionDelete,
                                   MetaKanbanView_MeetingRegenerateAPIKey, MetaKanbanView_ConnectAssistantToMetaKanban,
                                   MetaKanbanView_AssistantConnectionDelete)

app_name = 'metakanban'

urlpatterns = [
    # Board: All TemplateView
    path("board/list/", MetaKanbanView_BoardList.as_view(
        template_name="metakanban/board/list_boards.html"), name="board_list"),
    path("board/create/", MetaKanbanView_BoardCreate.as_view(
        template_name="metakanban/board/create_board.html"), name="board_create"),
    path("board/detail/<int:board_id>/", MetaKanbanView_BoardDetail.as_view(
        template_name="metakanban/board/detail_board.html"), name="board_detail"),
    path("board/update/<int:board_id>/", MetaKanbanView_BoardUpdate.as_view(
        template_name="metakanban/board/update_board_info.html"), name="board_update"),
    path("board/delete/<int:board_id>/", MetaKanbanView_BoardConfirmDelete.as_view(
        template_name="metakanban/board/confirm_delete_board.html"), name="board_delete"),

    # Label: Manager Page Template View / Create, Update, Delete HTTP Views
    path("label/list/<int:board_id>/", MetaKanbanView_LabelList.as_view(
        template_name="metakanban/label/add_update_list_delete_labels.html"), name="label_list"),
    path("label/create/<int:board_id>/", MetaKanbanView_LabelCreate.as_view(), name="label_create"),
    path("label/update/<int:board_id>/<int:label_id>/", MetaKanbanView_LabelUpdate.as_view(), name="label_update"),
    path("label/delete/<int:board_id>/<int:label_id>/", MetaKanbanView_LabelDelete.as_view(), name="label_delete"),

    # Column: Create, Update, Delete HTTP Views
    path("column/create/", MetaKanbanView_ColumnCreate.as_view(), name="column_create"),
    path("column/update/", MetaKanbanView_ColumnUpdate.as_view(), name="column_update"),
    path("column/move/", MetaKanbanView_ColumnMove.as_view(), name="column_move"),
    path("column/delete/", MetaKanbanView_ColumnConfirmDelete.as_view(), name="column_delete"),

    # Task: Create, Update, Delete, Move, Assign HTTP Views
    path("task/create/", MetaKanbanView_TaskCreate.as_view(), name="task_create"),
    path("task/move/", MetaKanbanView_TaskMove.as_view(), name="task_move"),
    path("task/assign/", MetaKanbanView_TaskAssign.as_view(), name="task_assign"),
    path("task/delete/", MetaKanbanView_TaskDelete.as_view(), name="task_delete"),
    path("task/detail/", MetaKanbanView_TaskDetailAndUpdate.as_view(), name="task_detail"),

    # Agent Communication: TemplateView
    path("agent/communication/", MetaKanbanView_AgentCommunication.as_view(
        template_name="metakanban/agent/agent_communication.html"), name="agent_communication"),

    # Board Logs: TemplateView
    path("board/logs/<int:board_id>/", MetaKanbanView_BoardLogList.as_view(
        template_name="metakanban/log/metakanban_board_logs.html"), name="board_logs"),

    # Connect Assistant to MetaKanban
    path("connect/assistant/", MetaKanbanView_ConnectAssistantToMetaKanban.as_view(
        template_name="metakanban/connect_assistant/connect_assistant_to_metakanban.html"
    ), name="connect_assistant"),
    path("disconnect/assistant/<int:pk>/", MetaKanbanView_AssistantConnectionDelete.as_view(),
         name="disconnect_assistant"),

    ###############################################################################################################

    # Meeting Recording Audio AI Delivery: HTTP Endpoint Retriever
    path("meeting/recording/delivery/", MetaKanbanView_MeetingRecordingAudioAIDelivery.as_view(),
         name="meeting_recording_delivery"),

    path("meeting/transcription/list/<int:board_id>/", MetaKanbanView_MeetingTranscriptionList.as_view(
        template_name="metakanban/meeting/meeting_transcriptions_list.html"
    ), name="meeting_transcription_list"),

    path("meeting/transcription/implement/<int:transcription_id>/", MetaKanbanView_MeetingTranscriptionAIImplement.as_view(),
            name="meeting_transcription_implement"),
    path("meeting/transcription/delete/<int:transcription_id>/", MetaKanbanView_MeetingTranscriptionDelete.as_view(),
            name="meeting_transcription_delete"),
    path("meeting/regenerate/api_key/", MetaKanbanView_MeetingRegenerateAPIKey.as_view(),
            name="meeting_regenerate_api_key"),

    ###############################################################################################################
]


Contents of ../../apps/metakanban/models/meta_kanban_task_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: meta_kanban_board_task_models.py
#  Last Modified: 2024-10-26 21:02:16
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-26 21:02:16
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models

from apps.metakanban.utils import META_KANBAN_TASK_PRIORITIES, MetaKanbanTaskPrioritiesNames


class MetaKanbanTask(models.Model):
    board = models.ForeignKey('metakanban.MetaKanbanBoard', on_delete=models.CASCADE)
    status_column = models.ForeignKey('metakanban.MetaKanbanStatusColumn', on_delete=models.CASCADE)
    title = models.CharField(max_length=10000)
    labels = models.ManyToManyField('metakanban.MetaKanbanTaskLabel', related_name='metakanban_tasks', blank=True)
    description = models.TextField(null=True, blank=True)
    priority = models.CharField(max_length=100, choices=META_KANBAN_TASK_PRIORITIES,
                                default=MetaKanbanTaskPrioritiesNames.UNCATEGORIZED, null=True, blank=True)
    due_date = models.DateTimeField(null=True, blank=True)
    assignees = models.ManyToManyField('auth.User', related_name='metakanban_tasks', blank=True)

    task_image = models.ImageField(upload_to='metakanban/task_images/%Y/%m/%d/', null=True, blank=True)
    task_url = models.URLField(null=True, blank=True)
    task_file = models.FileField(upload_to='metakanban/task_files/%Y/%m/%d/', null=True, blank=True)

    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE, null=True, blank=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.title + ' - ' + self.created_at.strftime('%Y-%m-%d %H:%M:%S')

    class Meta:
        verbose_name = 'Meta Kanban Task'
        verbose_name_plural = 'Meta Kanban Tasks'
        ordering = ['-created_at']
        indexes = [
            models.Index(fields=['created_at']),
            models.Index(fields=['updated_at']),
            models.Index(fields=['board']),
            models.Index(fields=['status_column']),
            models.Index(fields=['created_by_user']),
            models.Index(fields=['title']),
            models.Index(fields=['created_at', 'updated_at']),
            models.Index(fields=['created_at', 'updated_at', 'board']),
            models.Index(fields=['created_at', 'updated_at', 'status_column']),
            models.Index(fields=['created_at', 'updated_at', 'created_by_user']),
            models.Index(fields=['created_at', 'updated_at', 'title']),
            models.Index(fields=['created_at', 'updated_at', 'board', 'status_column']),
            models.Index(fields=['created_at', 'updated_at', 'board', 'created_by_user']),
            models.Index(fields=['created_at', 'updated_at', 'board', 'title']),
            models.Index(fields=['created_at', 'updated_at', 'status_column', 'created_by_user']),
            models.Index(fields=['created_at', 'updated_at', 'status_column', 'title']),
            models.Index(fields=['created_at', 'updated_at', 'created_by_user', 'title']),
            models.Index(fields=['created_at', 'updated_at', 'board', 'status_column', 'created_by_user']),
            models.Index(fields=['created_at', 'updated_at', 'board', 'status_column', 'title']),
            models.Index(fields=['created_at', 'updated_at', 'board', 'created_by_user', 'title']),
            models.Index(fields=['created_at', 'updated_at', 'status_column', 'created_by_user', 'title']),
        ]


Contents of ../../apps/metakanban/models/meta_kanban_column_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: meta_kanban_column_models.py
#  Last Modified: 2024-10-26 21:04:54
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-26 21:04:55
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models


class MetaKanbanStatusColumn(models.Model):
    board = models.ForeignKey('MetaKanbanBoard', on_delete=models.CASCADE)
    column_name = models.CharField(max_length=10000)
    position_id = models.IntegerField(default=0)

    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE, null=True, blank=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.column_name + ' - ' + self.created_at.strftime('%Y-%m-%d %H:%M:%S')

    class Meta:
        verbose_name = 'Meta Kanban Status Column'
        verbose_name_plural = 'Meta Kanban Status Columns'
        ordering = ['position_id']
        indexes = [
            models.Index(fields=['created_at']),
            models.Index(fields=['updated_at']),
            models.Index(fields=['created_by_user']),
            models.Index(fields=['column_name']),
            models.Index(fields=['created_at', 'updated_at']),
            models.Index(fields=['created_at', 'updated_at', 'created_by_user']),
            models.Index(fields=['created_at', 'updated_at', 'column_name']),
            models.Index(fields=['created_at', 'updated_at', 'column_name', 'created_by_user']),
        ]


Contents of ../../apps/metakanban/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-23 17:36:07
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-23 17:36:07
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from .meta_kanban_board_models import *
from .meta_kanban_task_models import *
from .meta_kanban_column_models import *
from .meta_kanban_change_log_models import *
from .meta_kanban_task_label_models import *
from .meta_kanban_meeting_transcription_models import *
from .meta_kanban_assistant_connection_models import *


Contents of ../../apps/metakanban/models/meta_kanban_change_log_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: meta_kanban_change_log_models.py
#  Last Modified: 2024-10-26 21:49:34
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-26 21:49:35
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.db import models

from apps.metakanban.utils import META_KANBAN_CHANGE_LOG_ACTION_TYPES


class MetaKanbanChangeLog(models.Model):
    board = models.ForeignKey('MetaKanbanBoard', on_delete=models.CASCADE, related_name='meta_kanban_change_logs',
                              null=True, blank=True)
    action_type = models.CharField(max_length=100, choices=META_KANBAN_CHANGE_LOG_ACTION_TYPES, default='update_task',
                                   null=True, blank=True)
    action_details = models.TextField(blank=True, null=True)
    change_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE,
                                       related_name='meta_kanban_changes_by_user', null=True, blank=True)
    timestamp = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return self.action_type + ' - ' + self.timestamp.strftime('%Y-%m-%d %H:%M:%S')

    class Meta:
        verbose_name = 'Meta Kanban Change Log'
        verbose_name_plural = 'Meta Kanban Change Logs'
        ordering = ['-timestamp']
        indexes = [
            models.Index(fields=['timestamp']),
            models.Index(fields=['board']),
            models.Index(fields=['action_type']),
            models.Index(fields=['change_by_user']),
            models.Index(fields=['timestamp', 'board']),
            models.Index(fields=['timestamp', 'action_type']),
            models.Index(fields=['timestamp', 'change_by_user']),
            models.Index(fields=['timestamp', 'board', 'action_type']),
            models.Index(fields=['timestamp', 'board', 'change_by_user']),
            models.Index(fields=['timestamp', 'action_type', 'change_by_user']),
            models.Index(fields=['timestamp', 'board', 'action_type', 'change_by_user']),
        ]


Contents of ../../apps/metakanban/models/meta_kanban_board_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: meta_kanban_board_models.py
#  Last Modified: 2024-10-26 21:02:20
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-26 21:02:21
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.db import models


class MetaKanbanBoard(models.Model):
    project = models.ForeignKey('projects.ProjectItem', on_delete=models.CASCADE)
    llm_model = models.ForeignKey('llm_core.LLMCore', on_delete=models.CASCADE)
    title = models.CharField(max_length=10000)
    description = models.TextField()
    connection_api_key = models.CharField(max_length=1000)

    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.title + ' - ' + self.created_at.strftime('%Y-%m-%d %H:%M:%S')

    class Meta:
        verbose_name = 'Meta Kanban Board'
        verbose_name_plural = 'Meta Kanban Boards'
        ordering = ['-created_at']
        indexes = [
            models.Index(fields=['created_at']),
            models.Index(fields=['updated_at']),
            models.Index(fields=['project']),
            models.Index(fields=['llm_model']),
            models.Index(fields=['created_by_user']),
            models.Index(fields=['title']),
            models.Index(fields=['created_at', 'updated_at']),
            models.Index(fields=['created_at', 'updated_at', 'project']),
            models.Index(fields=['created_at', 'updated_at', 'llm_model']),
            models.Index(fields=['created_at', 'updated_at', 'created_by_user']),
            models.Index(fields=['created_at', 'updated_at', 'title']),
            models.Index(fields=['created_at', 'updated_at', 'project', 'llm_model']),
            models.Index(fields=['created_at', 'updated_at', 'project', 'created_by_user']),
            models.Index(fields=['created_at', 'updated_at', 'project', 'title']),
            models.Index(fields=['created_at', 'updated_at', 'llm_model', 'created_by_user']),
            models.Index(fields=['created_at', 'updated_at', 'llm_model', 'title']),
            models.Index(fields=['created_at', 'updated_at', 'created_by_user', 'title']),
            models.Index(fields=['created_at', 'updated_at', 'project', 'llm_model', 'created_by_user']),
            models.Index(fields=['created_at', 'updated_at', 'project', 'llm_model', 'title']),
            models.Index(fields=['created_at', 'updated_at', 'project', 'created_by_user', 'title']),
            models.Index(fields=['created_at', 'updated_at', 'llm_model', 'created_by_user', 'title']),
        ]


Contents of ../../apps/metakanban/models/meta_kanban_task_label_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: meta_kanban_label_models.py
#  Last Modified: 2024-10-27 00:26:30
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-27 00:26:30
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models

from apps.metakanban.utils import META_KANBAN_TASK_LABEL_COLOR_CHOICES, MetaKanbanTaskLabelColorChoiceNames


class MetaKanbanTaskLabel(models.Model):
    board = models.ForeignKey('MetaKanbanBoard', on_delete=models.CASCADE)
    label_name = models.CharField(max_length=10000)
    label_color = models.CharField(max_length=100, choices=META_KANBAN_TASK_LABEL_COLOR_CHOICES,
                                   default=MetaKanbanTaskLabelColorChoiceNames.NAVY)

    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE, null=True, blank=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.label_name + ' - ' + self.created_at.strftime('%Y-%m-%d %H:%M:%S')

    class Meta:
        verbose_name = 'Meta Kanban Task Label'
        verbose_name_plural = 'Meta Kanban Task Labels'
        ordering = ['-created_at']
        indexes = [
            models.Index(fields=['created_at']),
            models.Index(fields=['updated_at']),
            models.Index(fields=['created_by_user']),
            models.Index(fields=['label_name']),
            models.Index(fields=['created_at', 'updated_at']),
            models.Index(fields=['created_at', 'updated_at', 'created_by_user']),
            models.Index(fields=['created_at', 'updated_at', 'label_name']),
            models.Index(fields=['created_at', 'updated_at', 'label_name', 'created_by_user']),
        ]


Contents of ../../apps/metakanban/models/meta_kanban_meeting_transcription_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: meta_kanban_meeting_transcription_models.py
#  Last Modified: 2024-10-28 03:39:52
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-28 03:39:53
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models


class MetaKanbanMeetingTranscription(models.Model):
    board = models.ForeignKey('MetaKanbanBoard', on_delete=models.CASCADE)
    meeting_transcription_text = models.TextField()

    is_processed_with_ai = models.BooleanField(default=False)
    meeting_transcription_key_takeaways = models.JSONField(null=True, blank=True)  # AI-Generated

    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return f'{self.board} - {self.created_at}'

    class Meta:
        verbose_name = 'Meta Kanban Meeting Transcription'
        verbose_name_plural = 'Meta Kanban Meeting Transcriptions'
        ordering = ['-created_at']
        indexes = [
            models.Index(fields=['board', 'is_processed_with_ai']),
            models.Index(fields=['board', 'is_processed_with_ai', 'created_at']),
            models.Index(fields=['board', 'created_at']),
            models.Index(fields=['is_processed_with_ai']),
            models.Index(fields=['is_processed_with_ai', 'created_at']),
            models.Index(fields=['created_at']),
        ]


Contents of ../../apps/metakanban/models/meta_kanban_assistant_connection_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: meta_kanban_assistant_connection_models.py
#  Last Modified: 2024-11-13 02:45:42
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-13 02:45:43
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models


class MetaKanbanAssistantConnection(models.Model):
    metakanban_board = models.ForeignKey("MetaKanbanBoard", on_delete=models.CASCADE)
    assistant = models.ForeignKey("assistants.Assistant", on_delete=models.CASCADE)

    created_by_user = models.ForeignKey("auth.User", on_delete=models.CASCADE)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return f"{self.assistant} - {self.metakanban_board}"

    class Meta:
        unique_together = ("metakanban_board", "assistant")
        verbose_name = "Meta Kanban Assistant Connection"
        verbose_name_plural = "Meta Kanban Assistant Connections"
        ordering = ["-created_at"]
        indexes = [
            models.Index(fields=["metakanban_board", "assistant"]),
            models.Index(fields=["assistant", "metakanban_board"]),
        ]


Contents of ../../apps/ml_model_store/__init__.py:


Contents of ../../apps/ml_model_store/apps.py:
from django.apps import AppConfig


class MlModelStoreConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.ml_model_store'


Contents of ../../apps/ml_model_store/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-11-06 23:24:38
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-06 23:24:38
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
from django.urls import path

from apps.ml_model_store.views import MLModelStoreView_IntegrateMLModel, MLModelStoreView_StoreMLModelsList

app_name = 'ml_model_store'

urlpatterns = [
    path('list/', MLModelStoreView_StoreMLModelsList.as_view(
        template_name='ml_model_store/store_ml_models_list.html'), name='list'),

    path("integrate/", MLModelStoreView_IntegrateMLModel.as_view(), name="integrate"),
]


Contents of ../../apps/ml_model_store/models/ml_model_integration_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: ml_model_integration_models.py
#  Last Modified: 2024-11-08 14:38:49
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-08 14:38:49
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models

from apps.ml_model_store.utils import MODEL_CATEGORIES, MLModelIntegrationCategoriesNames


class MLModelIntegration(models.Model):
    model_category = models.CharField(max_length=255, choices=MODEL_CATEGORIES,
                                      default=MLModelIntegrationCategoriesNames.MISCELLANEOUS)
    name = models.CharField(max_length=255)
    description = models.TextField(null=True, blank=True)

    model_image_url = models.URLField(null=True, blank=True)
    model_download_url = models.URLField()

    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.name + " - " + self.model_category

    class Meta:
        verbose_name = "ML Model Integration"
        verbose_name_plural = "ML Model Integrations"
        ordering = ["-created_at"]
        indexes = [
            models.Index(fields=["model_category"]),
            models.Index(fields=["created_at"]),
            models.Index(fields=["updated_at"])
        ]


Contents of ../../apps/ml_model_store/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-11-08 14:36:33
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-08 14:36:34
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from .ml_model_integration_models import *


Contents of ../../apps/smart_contracts/__init__.py:


Contents of ../../apps/smart_contracts/apps.py:
from django.apps import AppConfig


class SmartContractsConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.smart_contracts'


Contents of ../../apps/smart_contracts/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-19 22:22:16
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-19 22:22:17
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
from django.urls import path

from apps.smart_contracts.views import (
    SmartContractView_ContractCreate, SmartContractView_WalletConnectionCreate,
    SmartContractView_WalletConnectionDelete, SmartContractView_WalletConnectionUpdate,
    SmartContractView_WalletConnectionList, SmartContractView_ContractList, SmartContractView_ContractSoftDelete,
    SmartContractView_SyncWalletPublicData, SmartContractView_ContractGenerate,
    SmartContractView_ContractUpdateDeployStatus)

app_name = "smart_contracts"

urlpatterns = [
    path('wallet_connection/create/', SmartContractView_WalletConnectionCreate.as_view(
        template_name='smart_contracts/wallet/create_wallet_connection.html'), name='wallet_connection_create'),
    path('wallet_connection/delete/<int:pk>/', SmartContractView_WalletConnectionDelete.as_view(
        template_name='smart_contracts/wallet/delete_wallet_connection.html'), name='wallet_connection_delete'),
    path('wallet_connection/update/<int:pk>/', SmartContractView_WalletConnectionUpdate.as_view(
        template_name='smart_contracts/wallet/update_wallet_connection.html'), name='wallet_connection_update'),
    path('wallet_connection/list/', SmartContractView_WalletConnectionList.as_view(
        template_name='smart_contracts/wallet/list_wallet_connections.html'), name='wallet_connection_list'),
    path('wallet_connection/sync/<int:pk>/', SmartContractView_SyncWalletPublicData.as_view(),
         name='wallet_connection_sync'),

    path('contract/create/', SmartContractView_ContractCreate.as_view(
        template_name='smart_contracts/contract/create_smart_contract.html'), name='contract_create'),
    path('contract/list/', SmartContractView_ContractList.as_view(
        template_name='smart_contracts/contract/list_smart_contracts.html'), name='contract_list'),
    path('contract/delete/<int:pk>/', SmartContractView_ContractSoftDelete.as_view(
        template_name='smart_contracts/contract/soft_delete_smart_contract.html'), name='contract_soft_delete'),
    path('contract/generate/<int:pk>/', SmartContractView_ContractGenerate.as_view(
        template_name='smart_contracts/contract/generate_smart_contract.html'), name='contract_generate'),
    path('contract/update_deploy_status/<int:pk>/', SmartContractView_ContractUpdateDeployStatus.as_view(),
         name='contract_update_deploy_status'),
]


Contents of ../../apps/smart_contracts/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-19 22:22:56
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-19 22:22:56
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from .wallet_connection_models import *
from .blockchain_contract_models import *


Contents of ../../apps/smart_contracts/models/wallet_connection_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: wallet_connection_models.py
#  Last Modified: 2024-10-19 22:28:53
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-19 22:28:54
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

import logging

from django.db import models
from django.utils import timezone
from web3 import Web3

from apps.smart_contracts.utils import BLOCKCHAIN_TYPE, DEFAULT_WEI_UNIT
from config import settings

logger = logging.getLogger(__name__)


class BlockchainWalletConnection(models.Model):
    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE)
    blockchain_type = models.CharField(max_length=100, choices=BLOCKCHAIN_TYPE)
    nickname = models.CharField(max_length=1000)
    description = models.TextField()

    wallet_address = models.CharField(max_length=16000)
    wallet_private_key = models.CharField(max_length=16000)
    wallet_balance = models.DecimalField(max_digits=20, decimal_places=10, default=0)
    balance_last_synced_at = models.DateTimeField(null=True, blank=True)

    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE,
                                        related_name='blockchain_wallet_connections_created_by_user')
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.organization.name + " - " + self.nickname + ' (' + self.blockchain_type + ')' + ' - ' + self.wallet_address

    class Meta:
        verbose_name = 'Blockchain Wallet Connection'
        verbose_name_plural = 'Blockchain Wallet Connections'
        indexes = [
            models.Index(fields=['organization', 'blockchain_type', 'nickname']),
            models.Index(fields=['wallet_address']),
            models.Index(fields=['created_by_user']),
            models.Index(fields=['created_at']),
            models.Index(fields=['updated_at']),
        ]

    def get_and_sync_wallet_balance(self):
        infura_url = settings.INFURA_URL
        web3 = Web3(Web3.HTTPProvider(infura_url))
        if not web3.is_connected():
            logger.error('Web3 connection failed.')
            return None

        try:
            wei_balance = web3.eth.get_balance(self.wallet_address)
            eth_balance = Web3.from_wei(wei_balance, DEFAULT_WEI_UNIT)
            self.wallet_balance = eth_balance
            self.balance_last_synced_at = timezone.now()
            self.save()
            return eth_balance
        except Exception as e:
            logger.error('Error while getting wallet balance: ' + str(e))
            return None



Contents of ../../apps/smart_contracts/models/blockchain_contract_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: blockchain_contract_models.py
#  Last Modified: 2024-10-19 22:29:15
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-19 22:29:16
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
import os
from django.db import models
from apps.smart_contracts.utils import (SMART_CONTRACT_CATEGORIES, SMART_CONTRACT_TEMPLATE_CHOICES,
                                        SmartContractTemplateNames, DEPLOYMENT_STATUSES, DeploymentStatusesNames)
from config.settings import BASE_DIR
import logging

logger = logging.getLogger(__name__)


class BlockchainSmartContract(models.Model):
    wallet = models.ForeignKey('smart_contracts.BlockchainWalletConnection', on_delete=models.CASCADE,
                               related_name='smart_contracts')
    nickname = models.CharField(max_length=10000, null=True, blank=True)
    description = models.TextField(blank=True, null=True)
    category = models.CharField(max_length=100, choices=SMART_CONTRACT_CATEGORIES)
    contract_template = models.CharField(max_length=100, choices=SMART_CONTRACT_TEMPLATE_CHOICES)
    contract_template_filepath = models.CharField(max_length=1000, null=True, blank=True)
    offchain_contract_seed = models.TextField(null=True, blank=True)

    creation_prompt = models.TextField(blank=True, null=True)
    refinement_iterations_before_evaluation = models.IntegerField(default=3)
    generated_solidity_code = models.TextField(null=True, blank=True)
    generated_solidity_code_natural_language = models.TextField(null=True, blank=True)

    maximum_gas_limit = models.IntegerField(default=1_000_000)
    gas_price_gwei = models.IntegerField(default=20)

    ############################################
    # POST-GENERATION METADATA
    ############################################

    post_gen_topic = models.CharField(max_length=1000, null=True, blank=True)
    post_gen_protocol_details = models.TextField(null=True, blank=True)
    pot_gen_summary = models.TextField(null=True, blank=True)
    post_gen_parties = models.JSONField(default=list, null=True, blank=True)
    post_gen_clauses = models.JSONField(default=list, null=True, blank=True)
    post_gen_functions = models.JSONField(default=list, null=True, blank=True)
    contract_abi = models.JSONField(default=list, null=True, blank=True)
    contract_args = models.JSONField(default=dict, null=True, blank=True)

    ############################################

    tx_hash = models.CharField(max_length=1000, null=True, blank=True)
    tx_receipt_raw = models.TextField(null=True, blank=True)

    deployment_status = models.CharField(max_length=1000, choices=DEPLOYMENT_STATUSES,
                                         default=DeploymentStatusesNames.NOT_GENERATED)
    deployed_at = models.DateTimeField(null=True, blank=True)
    contract_address = models.CharField(max_length=1000, null=True, blank=True)

    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE,
                                        related_name='smart_contracts_created_by_user')
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return (
                self.wallet.organization.name + " - " + self.wallet.nickname + " - " + self.category + ' - '
                + self.contract_template)

    class Meta:
        verbose_name = 'Blockchain Smart Contract'
        verbose_name_plural = 'Blockchain Smart Contracts'
        indexes = [
            models.Index(fields=['wallet', 'category', 'contract_template']),
            models.Index(fields=['contract_address']),
            models.Index(fields=['created_by_user']),
            models.Index(fields=['created_at']),
            models.Index(fields=['updated_at']),
        ]

    def save(self, *args, **kwargs):
        if self.contract_template_filepath is None:
            if self.contract_template not in SmartContractTemplateNames.Custom.as_list():
                file_path = os.path.join(BASE_DIR, "apps", "smart_contracts", "contract_templates",
                                         self.category, str(self.contract_template + ".sol"))
                self.contract_template_filepath = file_path
            else:
                logger.info("Custom contract template detected. No file path provided.")
                pass
        super(BlockchainSmartContract, self).save(*args, **kwargs)


Contents of ../../apps/mm_apis/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:34
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


Contents of ../../apps/mm_apis/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class MmApisConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.mm_apis'


Contents of ../../apps/mm_apis/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 12:51:58
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path

from apps.mm_apis.views import CustomAPIView_Create, CustomAPIView_List, CustomAPIView_Delete, CustomAPIView_Store, \
    CustomAPIView_Connections

app_name = "mm_apis"

urlpatterns = [
    path("create/", CustomAPIView_Create.as_view(template_name="mm_apis/apis/create_custom_api.html"), name="create"),
    path("list/", CustomAPIView_List.as_view(template_name="mm_apis/apis/list_custom_apis.html"), name="list"),
    path("delete/<int:pk>/", CustomAPIView_Delete.as_view(template_name="mm_apis/apis/confirm_delete_custom_api.html"),
         name="delete"),
    path("connect/", CustomAPIView_Connections.as_view(
        template_name="mm_apis/connections/manage_api_connections.html"), name="connect"),
    path("store/", CustomAPIView_Store.as_view(template_name="mm_apis/store/api_store.html"), name="store"),
]


Contents of ../../apps/mm_apis/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from .custom_api_models import *
from .custom_api_reference_models import *


Contents of ../../apps/mm_apis/models/custom_api_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: custom_api_models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.db import models

from apps.mm_apis.utils import CUSTOM_API_AUTHENTICATION_TYPES


class CustomAPI(models.Model):
    is_public = models.BooleanField(default=False)
    categories = models.JSONField(default=list, blank=True)
    name = models.CharField(max_length=255)
    description = models.TextField()
    authentication_type = models.CharField(max_length=5000, default="None", choices=CUSTOM_API_AUTHENTICATION_TYPES)
    authentication_token = models.CharField(max_length=5000, default="", blank=True)
    base_url = models.CharField(max_length=5000, default="")
    endpoints = models.JSONField(default=dict, blank=True)
    api_picture = models.ImageField(upload_to="custom_apis/%YYYY/%mm/%dd/", blank=True, null=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    created_by_user = models.ForeignKey("auth.User", on_delete=models.SET_NULL, null=True)
    is_featured = models.BooleanField(default=False)

    def __str__(self):
        return self.name + " - " + self.created_at.strftime("%Y-%m-%d %H:%M:%S")

    class Meta:
        verbose_name = "Custom API"
        verbose_name_plural = "Custom APIs"
        indexes = [
            models.Index(fields=["name"]),
            models.Index(fields=["created_by_user"]),
            models.Index(fields=["created_at"]),
            models.Index(fields=["updated_at"]),
            models.Index(fields=["is_public"]),
            models.Index(fields=["is_featured"]),
            models.Index(fields=["name", "is_public"]),
            models.Index(fields=["name", "is_featured"]),
        ]


Contents of ../../apps/mm_apis/models/custom_api_reference_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: custom_api_reference_models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.db import models


class CustomAPIReference(models.Model):
    custom_api = models.ForeignKey("CustomAPI", on_delete=models.CASCADE, related_name="custom_api_references")
    assistant = models.ForeignKey("assistants.Assistant", on_delete=models.CASCADE)
    api_source = models.CharField(max_length=255, default="internal", blank=True)
    created_by_user = models.ForeignKey("auth.User", on_delete=models.SET_NULL, null=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.custom_api.name + " - " + self.assistant.name + " - " + self.created_at.strftime(
            "%Y-%m-%d %H:%M:%S")

    class Meta:
        verbose_name = "Custom API Reference"
        verbose_name_plural = "Custom API References"
        unique_together = [["custom_api", "assistant"]]
        indexes = [
            models.Index(fields=["custom_api", "assistant"]),
            models.Index(fields=["assistant", "custom_api", "created_by_user"]),
            models.Index(fields=["created_at"]),
            models.Index(fields=["assistant"]),
            models.Index(fields=["custom_api"]),
            models.Index(fields=["created_by_user"]),
        ]


Contents of ../../apps/theme/maps/models.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Create your models here.


Contents of ../../apps/theme/maps/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#



Contents of ../../apps/theme/maps/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class MapsConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "apps.theme.maps"


Contents of ../../apps/theme/maps/admin.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: admin.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Register your models here.


Contents of ../../apps/theme/maps/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path
from .views import MapView
from django.contrib.auth.decorators import login_required


urlpatterns = [
    path(
        "maps/leaflet/",
       login_required(MapView.as_view(template_name="maps_leaflet.html")),
        name="maps-leaflet",
    ),
]


Contents of ../../apps/theme/maps/views.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: views.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.views.generic import TemplateView
from web_project import TemplateLayout


"""
This file is a view controller for multiple pages as a module.
Here you can override the page view layout.
Refer to map/urls.py file for more pages.
"""


class MapView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        return context


Contents of ../../apps/theme/ui/models.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Create your models here.


Contents of ../../apps/theme/ui/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#



Contents of ../../apps/theme/ui/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class UiConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "apps.theme.ui"


Contents of ../../apps/theme/ui/admin.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: admin.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Register your models here.


Contents of ../../apps/theme/ui/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path
from .views import UIView
from django.contrib.auth.decorators import login_required


urlpatterns = [
    path(
        "ui/accordion/",
        login_required(UIView.as_view(template_name="ui_accordion.html")),
        name="ui-accordion",
    ),
    path(
        "ui/alerts/",
        login_required(UIView.as_view(template_name="ui_alerts.html")),
        name="ui-alerts",
    ),
    path(
        "ui/badges/",
        login_required(UIView.as_view(template_name="ui_badges.html")),
        name="ui-badges",
    ),
    path(
        "ui/buttons/",
        login_required(UIView.as_view(template_name="ui_buttons.html")),
        name="ui-buttons",
    ),
    path(
        "ui/carousel/",
        login_required(UIView.as_view(template_name="ui_carousel.html")),
        name="ui-carousel",
    ),
    path(
        "ui/collapse/",
        login_required(UIView.as_view(template_name="ui_collapse.html")),
        name="ui-collapse",
    ),
    path(
        "ui/dropdowns/",
        login_required(UIView.as_view(template_name="ui_dropdowns.html")),
        name="ui-dropdowns",
    ),
    path(
        "ui/footer/",
        login_required(UIView.as_view(template_name="ui_footer.html")),
        name="ui-footer",
    ),
    path(
        "ui/list_groups/",
        login_required(UIView.as_view(template_name="ui_list_groups.html")),
        name="ui-list-groups",
    ),
    path(
        "ui/modals/",
        login_required(UIView.as_view(template_name="ui_modals.html")),
        name="ui-modals",
    ),
    path(
        "ui/navbar/",
        login_required(UIView.as_view(template_name="ui_navbar.html")),
        name="ui-navbar",
    ),
    path(
        "ui/offcanvas/",
        login_required(UIView.as_view(template_name="ui_offcanvas.html")),
        name="ui-offcanvas",
    ),
    path(
        "ui/pagination_breadcrumbs/",
        login_required(UIView.as_view(template_name="ui_pagination_breadcrumbs.html")),
        name="ui-pagination-breadcrumbs",
    ),
    path(
        "ui/progress/",
        login_required(UIView.as_view(template_name="ui_progress.html")),
        name="ui-progress",
    ),
    path(
        "ui/spinners/",
        login_required(UIView.as_view(template_name="ui_spinners.html")),
        name="ui-spinners",
    ),
    path(
        "ui/tabs_pills/",
        login_required(UIView.as_view(template_name="ui_tabs_pills.html")),
        name="ui-tabs-pills",
    ),
    path(
        "ui/toasts/",
        login_required(UIView.as_view(template_name="ui_toasts.html")),
        name="ui-toasts",
    ),
    path(
        "ui/tooltips_popovers/",
        login_required(UIView.as_view(template_name="ui_tooltips_popovers.html")),
        name="ui-tooltips-popovers",
    ),
    path(
        "ui/typography/",
        login_required(UIView.as_view(template_name="ui_typography.html")),
        name="ui-typography",
    ),
]


Contents of ../../apps/theme/ui/views.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: views.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#

from django.views.generic import TemplateView
from web_project import TemplateLayout


"""
This file is a view controller for multiple pages as a module.
Here you can override the page view layout.
Refer to ui/urls.py file for more pages.
"""


class UIView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        return context


Contents of ../../apps/theme/tables/models.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Create your models here.


Contents of ../../apps/theme/tables/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#



Contents of ../../apps/theme/tables/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class TablesConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "apps.theme.tables"


Contents of ../../apps/theme/tables/admin.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: admin.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Register your models here.


Contents of ../../apps/theme/tables/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path
from .views import TableView
from django.contrib.auth.decorators import login_required


urlpatterns = [
    path(
        "tables/basic/",
        login_required(TableView.as_view(template_name="tables_basic.html")),
        name="tables-basic",
    ),
    path(
        "tables/datatables_basic/",
        login_required(TableView.as_view(template_name="tables_datatables_basic.html")),
        name="tables-datatables-basic",
    ),
    path(
        "tables/datatables_advanced/",
        login_required(TableView.as_view(template_name="tables_datatables_advanced.html")),
        name="tables-datatables-advanced",
    ),
    path(
        "tables/datatables_extensions/",
        login_required(TableView.as_view(template_name="tables_datatables_extensions.html")),
        name="tables-datatables-extensions",
    ),
]


Contents of ../../apps/theme/tables/views.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: views.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.views.generic import TemplateView
from web_project import TemplateLayout


"""
This file is a view controller for multiple pages as a module.
Here you can override the page view layout.
Refer to tables/urls.py file for more pages.
"""


class TableView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        return context


Contents of ../../apps/theme/forms/models.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Create your models here.


Contents of ../../apps/theme/forms/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#



Contents of ../../apps/theme/forms/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class FormsConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "apps.theme.forms"


Contents of ../../apps/theme/forms/admin.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: admin.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Register your models here.


Contents of ../../apps/theme/forms/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path
from .views import FormsView
from django.contrib.auth.decorators import login_required


urlpatterns = [
    path(
        "forms/basic_inputs/",
        login_required(FormsView.as_view(template_name="forms_basic_inputs.html")),
        name="forms-basic-inputs",
    ),
    path(
        "forms/input_groups/",
        login_required(FormsView.as_view(template_name="forms_input_groups.html")),
        name="forms-input-groups",
    ),
    path(
        "forms/custom_options/",
        login_required(FormsView.as_view(template_name="forms_custom_options.html")),
        name="forms-custom-options",
    ),
    path(
        "forms/editors/",
        login_required(FormsView.as_view(template_name="forms_editors.html")),
        name="forms-editors",
    ),
    path(
        "forms/file_upload/",
        login_required(FormsView.as_view(template_name="forms_file_upload.html")),
        name="forms-file-upload",
    ),
    path(
        "forms/pickers/",
        login_required(FormsView.as_view(template_name="forms_pickers.html")),
        name="forms-pickers",
    ),
    path(
        "forms/selects/",
        login_required(FormsView.as_view(template_name="forms_selects.html")),
        name="forms-selects",
    ),
    path(
        "forms/sliders/",
        login_required(FormsView.as_view(template_name="forms_sliders.html")),
        name="forms-sliders",
    ),
    path(
        "forms/switches/",
        login_required(FormsView.as_view(template_name="forms_switches.html")),
        name="forms-switches",
    ),
    path(
        "forms/extras/",
        login_required(FormsView.as_view(template_name="forms_extras.html")),
        name="forms-extras",
    ),
]


Contents of ../../apps/theme/forms/views.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: views.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.views.generic import TemplateView
from web_project import TemplateLayout


"""
This file is a view controller for multiple pages as a module.
Here you can override the page view layout.
Refer to form/urls.py file for more pages.
"""


class FormsView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        return context


Contents of ../../apps/theme/ecommerce/models.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Create your models here.


Contents of ../../apps/theme/ecommerce/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#



Contents of ../../apps/theme/ecommerce/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class EcommerceConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "apps.theme.ecommerce"


Contents of ../../apps/theme/ecommerce/admin.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: admin.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Register your models here.


Contents of ../../apps/theme/ecommerce/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path
from .views import eCommerceView
from django.contrib.auth.decorators import login_required


urlpatterns = [
    path(
        "app/ecommerce/dashboard/",
        login_required(eCommerceView.as_view(template_name="app_ecommerce_dashboard.html")),
        name="app-ecommerce-dashboard",
    ),
    path(
        "app/ecommerce/product/list/",
        login_required(eCommerceView.as_view(template_name="app_ecommerce_product_list.html")),
        name="app-ecommerce-product-list",
    ),
    path(
        "app/ecommerce/product/add/",
        login_required(eCommerceView.as_view(template_name="app_ecommerce_product_add.html")),
        name="app-ecommerce-product-add",
    ),
    path(
        "app/ecommerce/product/category/",
        login_required(eCommerceView.as_view(template_name="app_ecommerce_category_list.html")),
        name="app-ecommerce-product-category-list",
    ),
    path(
        "app/ecommerce/order/list/",
        login_required(eCommerceView.as_view(template_name="app_ecommerce_order_list.html")),
        name="app-ecommerce-order-list",
    ),
    path(
        "app/ecommerce/order/details/",
        login_required(eCommerceView.as_view(template_name="app_ecommerce_order_details.html")),
        name="app-ecommerce-order-details",
    ),
    path(
        "app/ecommerce/customer_all/",
        login_required(eCommerceView.as_view(template_name="app_ecommerce_customer_all.html")),
        name="app-ecommerce-customer-all",
    ),
    path(
        "app/ecommerce/customer/details/overview/",
        login_required(eCommerceView.as_view(template_name="app_ecommerce_customer_details_overview.html")),
        name="app-ecommerce-customer-details-overview",
    ),
    path(
        "app/ecommerce/customer/details/security/",
        login_required(eCommerceView.as_view(template_name="app_ecommerce_customer_details_security.html")),
        name="app-ecommerce-customer-details-security",
    ),
    path(
        "app/ecommerce/customer/details/billing/",
        login_required(eCommerceView.as_view(template_name="app_ecommerce_customer_details_billing.html")),
        name="app-ecommerce-customer-details-billing",
    ),
    path(
        "app/ecommerce/customer/details/notifications/",
        login_required(eCommerceView.as_view(template_name="app_ecommerce_customer_details_notifications.html")),
        name="app-ecommerce-customer-details-notifications",
    ),
    path(
        "app/ecommerce/manage_reviews/",
        login_required(eCommerceView.as_view(template_name="app_ecommerce_manage_reviews.html")),
        name="app-ecommerce-manage-reviews",
    ),
    path(
        "app/ecommerce/referrals/",
        login_required(eCommerceView.as_view(template_name="app_ecommerce_referral.html")),
        name="app-ecommerce-referrals",
    ),
    path(
        "app/ecommerce/settings/details/",
        login_required(eCommerceView.as_view(template_name="app_ecommerce_settings_detail.html")),
        name="app-ecommerce-settings-detail",
    ),
    path(
        "app/ecommerce/settings/payments/",
        login_required(eCommerceView.as_view(template_name="app_ecommerce_settings_payments.html")),
        name="app-ecommerce-settings-payments",
    ),
    path(
        "app/ecommerce/settings/checkout/",
        login_required(eCommerceView.as_view(template_name="app_ecommerce_settings_checkout.html")),
        name="app-ecommerce-settings-checkout",
    ),
    path(
        "app/ecommerce/settings/shipping/",
        login_required(eCommerceView.as_view(template_name="app_ecommerce_settings_shipping.html")),
        name="app-ecommerce-settings-shipping",
    ),
    path(
        "app/ecommerce/settings/locations/",
        login_required(eCommerceView.as_view(template_name="app_ecommerce_settings_locations.html")),
        name="app-ecommerce-settings-locations",
    ),
    path(
        "app/ecommerce/settings/notifications/",
        login_required(eCommerceView.as_view(template_name="app_ecommerce_settings_notifications.html")),
        name="app-ecommerce-settings-notifications",
    ),
]


Contents of ../../apps/theme/ecommerce/views.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: views.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.views.generic import TemplateView
from web_project import TemplateLayout


"""
This file is a view controller for multiple pages as a module.
Here you can override the page view layout.
Refer to ecommerce/urls.py file for more pages.
"""


class eCommerceView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        return context


Contents of ../../apps/theme/my_calendar/models.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Create your models here.


Contents of ../../apps/theme/my_calendar/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#



Contents of ../../apps/theme/my_calendar/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class MyCalendarConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "apps.theme.my_calendar"


Contents of ../../apps/theme/my_calendar/admin.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: admin.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Register your models here.


Contents of ../../apps/theme/my_calendar/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path
from .views import CalendarView
from django.contrib.auth.decorators import login_required

urlpatterns = [
    path(
        "app/calendar/",
        login_required(CalendarView.as_view(template_name="app_calendar.html")),
        name="app-calendar",
    ),
]


Contents of ../../apps/theme/my_calendar/views.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: views.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.views.generic import TemplateView
from web_project import TemplateLayout


"""
This file is a view controller for multiple pages as a module.
Here you can override the page view layout.
Refer to my_calendar/urls.py file for more pages.
"""


class CalendarView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        return context


Contents of ../../apps/theme/chat/models.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Create your models here.


Contents of ../../apps/theme/chat/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#



Contents of ../../apps/theme/chat/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class ChatConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "apps.theme.chat"


Contents of ../../apps/theme/chat/admin.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: admin.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Register your models here.


Contents of ../../apps/theme/chat/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path
from .views import ChatView
from django.contrib.auth.decorators import login_required


urlpatterns = [
    path(
        "app/chat/",
        login_required(ChatView.as_view(template_name="app_chat.html")),
        name="app-chat",
    ),
]


Contents of ../../apps/theme/chat/views.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: views.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.views.generic import TemplateView
from web_project import TemplateLayout


"""
This file is a view controller for multiple pages as a module.
Here you can override the page view layout.
Refer to chat/urls.py file for more pages.
"""


class ChatView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        return context


Contents of ../../apps/theme/access/models.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Create your models here.


Contents of ../../apps/theme/access/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


Contents of ../../apps/theme/access/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class AccessConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "apps.theme.access"


Contents of ../../apps/theme/access/admin.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: admin.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Register your models here.


Contents of ../../apps/theme/access/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path
from .views import AccessView
from django.contrib.auth.decorators import login_required


urlpatterns = [
    path(
        "app/access/roles/",
        login_required(AccessView.as_view(template_name="app_access_roles.html")),
        name="app-access-roles",
    ),
    path(
        "app/access/permission/",
        login_required(AccessView.as_view(template_name="app_access_permission.html")),
        name="app-access-permission",
    ),
]


Contents of ../../apps/theme/access/views.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: views.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.views.generic import TemplateView
from web_project import TemplateLayout
from django.contrib.auth.mixins import PermissionRequiredMixin


"""
This file is a view controller for multiple pages as a module.
Here you can override the page view layout.
Refer to access/urls.py file for more pages.
"""


class AccessView(PermissionRequiredMixin, TemplateView):
    permission_required = ("permission.view_permission", "permission.delete_permission", "permission.change_permission", "permission.add_permission")
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        return context


Contents of ../../apps/theme/form_validation/models.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Create your models here.


Contents of ../../apps/theme/form_validation/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#



Contents of ../../apps/theme/form_validation/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class FormvalidationConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "apps.theme.form_validation"


Contents of ../../apps/theme/form_validation/admin.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: admin.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Register your models here.


Contents of ../../apps/theme/form_validation/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path
from .views import FormValidationView
from django.contrib.auth.decorators import login_required


urlpatterns = [
    path(
        "form/validation/",
        login_required(FormValidationView.as_view(template_name="form_validation.html")),
        name="form-validation",
    ),
]


Contents of ../../apps/theme/form_validation/views.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: views.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.views.generic import TemplateView
from web_project import TemplateLayout


"""
This file is a view controller for multiple pages as a module.
Here you can override the page view layout.
Refer to form_validation/urls.py file for more pages.
"""


class FormValidationView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        return context


Contents of ../../apps/theme/mail/models.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Create your models here.


Contents of ../../apps/theme/mail/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#



Contents of ../../apps/theme/mail/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class MailConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "apps.theme.mail"


Contents of ../../apps/theme/mail/admin.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: admin.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Register your models here.


Contents of ../../apps/theme/mail/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path
from .views import EmailView
from django.contrib.auth.decorators import login_required


urlpatterns = [
    path(
        "app/email/",
        login_required(EmailView.as_view(template_name="app_email.html")),
        name="app-email",
    ),
]


Contents of ../../apps/theme/mail/views.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: views.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.views.generic import TemplateView
from web_project import TemplateLayout


"""
This file is a view controller for multiple pages as a module.
Here you can override the page view layout.
Refer to mail/urls.py file for more pages.
"""


class EmailView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        return context


Contents of ../../apps/theme/cards/models.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Create your models here.


Contents of ../../apps/theme/cards/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#



Contents of ../../apps/theme/cards/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class CardsConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "apps.theme.cards"


Contents of ../../apps/theme/cards/admin.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: admin.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Register your models here.


Contents of ../../apps/theme/cards/tests.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: tests.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Create your tests here.


Contents of ../../apps/theme/cards/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path
from .views import CardView
from django.contrib.auth.decorators import login_required


urlpatterns = [
    path(
        "cards/basic/",
        login_required(CardView.as_view(template_name="cards_basic.html")),
        name="cards-basic",
    ),
    path(
        "cards/advance/",
        login_required(CardView.as_view(template_name="cards_advance.html")),
        name="cards-advance",
    ),
    path(
        "cards/statistics/",
        login_required(CardView.as_view(template_name="cards_statistics.html")),
        name="cards-statistics",
    ),
    path(
        "cards/analytics/",
        login_required(CardView.as_view(template_name="cards_analytics.html")),
        name="cards-analytics",
    ),
    path(
        "cards/actions/",
        login_required(CardView.as_view(template_name="cards_actions.html")),
        name="cards-actions",
    ),
]


Contents of ../../apps/theme/cards/views.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: views.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.views.generic import TemplateView
from web_project import TemplateLayout


"""
This file is a view controller for multiple pages as a module.
Here you can override the page view layout.
Refer to card/urls.py file for more pages.
"""


class CardView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        return context


Contents of ../../apps/theme/charts/models.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Create your models here.


Contents of ../../apps/theme/charts/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#



Contents of ../../apps/theme/charts/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class ChartsConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "apps.theme.charts"


Contents of ../../apps/theme/charts/admin.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: admin.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Register your models here.


Contents of ../../apps/theme/charts/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path
from .views import ChartsView
from django.contrib.auth.decorators import login_required


urlpatterns = [
    path(
        "charts/apex/",
        login_required(ChartsView.as_view(template_name="charts_apex.html")),
        name="charts-apex",
    ),
    path(
        "charts/chartjs/",
        login_required(ChartsView.as_view(template_name="charts_chartjs.html")),
        name="charts-chartjs",
    ),
]


Contents of ../../apps/theme/charts/views.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: views.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.views.generic import TemplateView
from web_project import TemplateLayout


"""
This file is a view controller for multiple pages as a module.
Here you can override the page view layout.
Refer to charts/urls.py file for more pages.
"""


class ChartsView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        return context


Contents of ../../apps/theme/form_layouts/models.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Create your models here.


Contents of ../../apps/theme/form_layouts/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#



Contents of ../../apps/theme/form_layouts/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class FormlayoutsConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "apps.theme.form_layouts"


Contents of ../../apps/theme/form_layouts/admin.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: admin.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Register your models here.


Contents of ../../apps/theme/form_layouts/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path
from .views import FormLayoutsView
from django.contrib.auth.decorators import login_required


urlpatterns = [
    path(
        "form/layouts_vertical/",
        login_required(FormLayoutsView.as_view(template_name="form_layouts_vertical.html")),
        name="form-layouts-vertical",
    ),
    path(
        "form/layouts_horizontal/",
        login_required(FormLayoutsView.as_view(template_name="form_layouts_horizontal.html")),
        name="form-layouts-horizontal",
    ),
    path(
        "form/layouts_sticky/",
        login_required(FormLayoutsView.as_view(template_name="form_layouts_sticky.html")),
        name="form-layouts-sticky",
    ),
]


Contents of ../../apps/theme/form_layouts/views.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: views.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.views.generic import TemplateView
from web_project import TemplateLayout


"""
This file is a view controller for multiple pages as a module.
Here you can override the page view layout.
Refer to form_layouts/urls.py file for more pages.
"""


class FormLayoutsView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        return context


Contents of ../../apps/theme/academy/models.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


Contents of ../../apps/theme/academy/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#



Contents of ../../apps/theme/academy/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class AcademyConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "apps.theme.academy"


Contents of ../../apps/theme/academy/admin.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: admin.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Register your models here.


Contents of ../../apps/theme/academy/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path

from .views import AcademyView
from django.contrib.auth.decorators import login_required


urlpatterns = [
    path(
        "app/academy/dashboard/",
        login_required(AcademyView.as_view(template_name="app_academy_dashboard.html")),
        name="app-academy-dashboard",
    ),
    path(
        "app/academy/course/",
        login_required(AcademyView.as_view(template_name="app_academy_course.html")),
        name="app-academy-course",
    ),
    path(
        "app/academy/course_details/",
        login_required(AcademyView.as_view(template_name="app_academy_course_details.html")),
        name="app-academy-course-details",
    ),
]


Contents of ../../apps/theme/academy/views.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: views.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.views.generic import TemplateView
from web_project import TemplateLayout


"""
This file is a view controller for multiple pages as a module.
Here you can override the page view layout.
Refer to academy/urls.py file for more pages.
"""


class AcademyView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        return context


Contents of ../../apps/theme/front_pages/models.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Create your models here.


Contents of ../../apps/theme/front_pages/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#



Contents of ../../apps/theme/front_pages/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class FrontPagesConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "apps.theme.front_pages"


Contents of ../../apps/theme/front_pages/admin.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: admin.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Register your models here.


Contents of ../../apps/theme/front_pages/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path
from .views import FrontPagesView


urlpatterns = [
    path(
        "front/landing/",
        FrontPagesView.as_view(template_name="landing_page.html"),
        name="landing-page",
    ),
    path(
        "front/pricing/",
        FrontPagesView.as_view(template_name="pricing_page.html"),
        name="pricing-page",
    ),
    path(
        "front/payment/",
        FrontPagesView.as_view(template_name="payment_page.html"),
        name="payment-page",
    ),
    path(
        "front/checkout/",
        FrontPagesView.as_view(template_name="checkout_page.html"),
        name="checkout-page",
    ),
    path(
        "front/help_center/",
        FrontPagesView.as_view(template_name="help_center_landing.html"),
        name="help-center-landing",
    ),
    path(
        "front/help_center/article/",
        FrontPagesView.as_view(template_name="help_center_article.html"),
        name="help-center-article",
    ),
]


Contents of ../../apps/theme/front_pages/views.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: views.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.views.generic import TemplateView
from web_project import TemplateLayout
from web_project.template_helpers.theme import TemplateHelper


"""
This file is a view controller for multiple pages as a module.
Here you can override the page view layout.
Refer to front_pages/urls.py file for more pages.
"""


class FrontPagesView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        # Update the context
        context.update(
            {
                "layout": "front",
                "layout_path": TemplateHelper.set_layout("layout_front.html", context),
                "active_url": self.request.path,  # Get the current url path (active URL) from request
            }
        )

        # map_context according to updated context values
        TemplateHelper.map_context(context)

        return context


Contents of ../../apps/theme/transactions/models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.db import models


class Transaction(models.Model):
    customer = models.CharField(max_length=150)
    transaction_date = models.DateField()
    due_date = models.DateField()
    total = models.DecimalField(max_digits=20, decimal_places=2)
    status = models.CharField(max_length=20, choices=[("Paid", "Paid"), ("Due", "Due"), ("Canceled", "Canceled")])

    def __str__(self):
        return self.customer


Contents of ../../apps/theme/transactions/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#



Contents of ../../apps/theme/transactions/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class TransactionsConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.theme.transactions'


Contents of ../../apps/theme/transactions/forms.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: forms.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django import forms
from .models import Transaction

class TransactionForm(forms.ModelForm):
    class Meta:
        model = Transaction
        fields = '__all__'


Contents of ../../apps/theme/transactions/admin.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: admin.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Register your models here.
"""
class TransactionAdmin(admin.ModelAdmin):
    list_display = ('customer', 'transaction_date', 'due_date', 'total', 'status')
    list_filter = ('customer', 'transaction_date', 'due_date', 'total', 'status')
    search_fields = ('customer', 'transaction_date', 'due_date', 'total', 'status')
    ordering = ('customer', 'transaction_date', 'due_date', 'total', 'status')
    list_per_page = 10

admin.site.register(Transaction, TransactionAdmin)
"""


Contents of ../../apps/theme/transactions/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path
from django.contrib.auth.decorators import login_required
from apps.theme.transactions.transaction_list.views import TransactionListView
from apps.theme.transactions.transaction_add.views import TransactionAddView
from apps.theme.transactions.transaction_update.views import TransactionUpdateView
from apps.theme.transactions.transaction_delete.views import TransactionDeleteView

urlpatterns = [
    path(
        "llm_transaction/list/",
        login_required(TransactionListView.as_view(template_name="transactions_list.html")),
        name="llm_transaction",
    ),
    path(
        "llm_transaction/add/",
        login_required(TransactionAddView.as_view(template_name="transactions_add.html")),
        name="llm_transaction-add",
    ),
    path (
        "llm_transaction/update/<int:pk>",
        login_required(TransactionUpdateView.as_view(template_name="transactions_update.html")),
        name="llm_transaction-update",
    ),
    path (
        "llm_transaction/delete/<int:pk>/",
        login_required(TransactionDeleteView.as_view()),
        name="llm_transaction-delete",
    ),

]


Contents of ../../apps/theme/layouts/models.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


# Create your models here.


Contents of ../../apps/theme/layouts/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#



Contents of ../../apps/theme/layouts/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class LayoutsConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "apps.theme.layouts"


Contents of ../../apps/theme/layouts/admin.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: admin.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Register your models here.


Contents of ../../apps/theme/layouts/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path
from .views import (
    CollapsedMenuView,
    ContentNavSidebarView,
    VerticalView,
    HorizontalView,
    WithoutMenuView,
    WithoutNavView,
    FluidView,
    ContainerView,
    BlankView,
)
from django.contrib.auth.decorators import login_required


urlpatterns = [
    path(
        "layouts/collapsed_menu/",
        login_required(CollapsedMenuView.as_view(template_name="layouts_collapsed_menu.html")),
        name="layouts-collapsed-menu",
    ),
    path(
        "layouts/content_navbar/",
        login_required(VerticalView.as_view(template_name="layouts_content_navbar.html")),
        name="layouts-content-navbar",
    ),
    path(
        "layouts/content_nav_sidebar/",
        login_required(ContentNavSidebarView.as_view(template_name="layouts_content_navbar_with_sidebar.html")),
        name="layouts-content-nav-sidebar",
    ),
    path(
        "layouts/horizontal/",
        login_required(HorizontalView.as_view(template_name="layouts_horizontal.html")),
        name="layouts-horizontal",
    ),
    path(
        "layouts/without_menu/",
        login_required(WithoutMenuView.as_view(template_name="layouts_without_menu.html")),
        name="layouts-without-menu",
    ),
    path(
        "layouts/without_navbar/",
        login_required(WithoutNavView.as_view(template_name="layouts_without_navbar.html")),
        name="layouts-without-navbar",
    ),
    path(
        "layouts/fluid/",
        login_required(FluidView.as_view(template_name="layouts_fluid.html")),
        name="layouts-fluid",
    ),
    path(
        "layouts/container/",
        login_required(ContainerView.as_view(template_name="layouts_container.html")),
        name="layouts-container",
    ),
    path(
        "layouts/blank/",
        login_required(BlankView.as_view(template_name="layouts_blank.html")),
        name="layouts-blank",
    ),
]


Contents of ../../apps/theme/layouts/views.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: views.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.views.generic import TemplateView
from web_project import TemplateLayout
from web_project.template_helpers.theme import TemplateHelper


"""
This file is a view controller for multiple pages as a module.
Here you can override the page view layout.
Refer to layouts/urls.py file for more pages.
"""


class CollapsedMenuView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        # Update the context
        context.update(
            {
                "menu_collapsed": True,
            }
        )
        TemplateHelper.map_context(context)

        return context


class ContentNavSidebarView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        # Update the context
        context.update(
            {
                "is_flex": True,
            }
        )

        TemplateHelper.map_context(context)

        return context


class VerticalView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        # Update the context
        context.update(
            {
                "layout": "vertical",
                "navbar_full": False,
                "layout_path": TemplateHelper.set_layout(
                    "layout_vertical.html", context
                ),
            }
        )

        TemplateHelper.map_context(context)

        return context


class HorizontalView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        # Update the context
        context.update(
            {
                "layout": "horizontal",
                "layout_path": TemplateHelper.set_layout(
                    "layout_horizontal.html", context
                ),
            }
        )

        TemplateHelper.map_context(context)

        return context


class WithoutMenuView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        # Update the context
        context.update(
            {
                "is_menu": False,
            }
        )

        TemplateHelper.map_context(context)

        return context


class WithoutNavView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        # Update the context
        context.update(
            {
                "is_navbar": False,
                "navbar_type": "hidden",
            }
        )

        TemplateHelper.map_context(context)

        return context


class FluidView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        # Update the context
        context.update(
            {
                "content_layout": "wide",
            }
        )

        TemplateHelper.map_context(context)

        return context


class ContainerView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        # Update the context
        context.update(
            {
                "content_layout": "compact",
            }
        )

        TemplateHelper.map_context(context)

        return context


class BlankView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        # Update the context
        context.update(
            {
                "layout_path": TemplateHelper.set_layout("layout_blank.html", context),
            }
        )

        TemplateHelper.map_context(context)

        return context


Contents of ../../apps/theme/modal_examples/models.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Create your models here.


Contents of ../../apps/theme/modal_examples/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#



Contents of ../../apps/theme/modal_examples/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class ModalExampleConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "apps.theme.modal_examples"


Contents of ../../apps/theme/modal_examples/admin.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: admin.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Register your models here.


Contents of ../../apps/theme/modal_examples/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path
from .views import ModalExampleView
from django.contrib.auth.decorators import login_required


urlpatterns = [
    path(
        "modal_examples/",
        login_required(ModalExampleView.as_view(template_name="modal_examples.html")),
        name="modal-examples",
    ),
]


Contents of ../../apps/theme/modal_examples/views.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: views.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.views.generic import TemplateView
from web_project import TemplateLayout


"""
This file is a view controller for multiple pages as a module.
Here you can override the page view layout.
Refer to modal_example/urls.py file for more pages.
"""


class ModalExampleView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        return context


Contents of ../../apps/theme/dashboards/models.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Create your models here.


Contents of ../../apps/theme/dashboards/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#



Contents of ../../apps/theme/dashboards/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class DashboardsConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "apps.theme.dashboards"


Contents of ../../apps/theme/dashboards/admin.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: admin.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Register your models here.


Contents of ../../apps/theme/dashboards/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path
from .views import DashboardsView
from django.contrib.auth.decorators import login_required


urlpatterns = [
    path(
        "",
        login_required(DashboardsView.as_view(template_name="dashboard_analytics.html")),
        name="index",
    ),

    path(
        "dashboard/crm/",
        login_required(DashboardsView.as_view(template_name="dashboard_crm.html")),
        name="dashboard-crm",
    ),
]


Contents of ../../apps/theme/dashboards/views.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: views.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.views.generic import TemplateView
from web_project import TemplateLayout


"""
This file is a view controller for multiple pages as a module.
Here you can override the page view layout.
Refer to dashboards/urls.py file for more pages.
"""


class DashboardsView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        return context


Contents of ../../apps/theme/kanban/models.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#

# Create your models here.


Contents of ../../apps/theme/kanban/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#



Contents of ../../apps/theme/kanban/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class KanbanConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "apps.theme.kanban"


Contents of ../../apps/theme/kanban/admin.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: admin.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Register your models here.


Contents of ../../apps/theme/kanban/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path
from .views import KanbanView
from django.contrib.auth.decorators import login_required


urlpatterns = [
    path(
        "app/kanban/",
        login_required(KanbanView.as_view(template_name="app_kanban.html")),
        name="app-kanban",
    ),
]


Contents of ../../apps/theme/kanban/views.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: views.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.views.generic import TemplateView
from web_project import TemplateLayout


"""
This file is a view controller for multiple pages as a module.
Here you can override the page view layout.
Refer to kanban/urls.py file for more pages.
"""


class KanbanView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        return context


Contents of ../../apps/theme/users/models.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Create your models here.


Contents of ../../apps/theme/users/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#



Contents of ../../apps/theme/users/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class UsersConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "apps.theme.users"


Contents of ../../apps/theme/users/admin.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: admin.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Register your models here.


Contents of ../../apps/theme/users/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path
from .views import UsersView
from django.contrib.auth.decorators import login_required


urlpatterns = [
    path(
        "app/user/list/",
        login_required(UsersView.as_view(template_name="app_user_list.html")),
        name="app-user-list",
    ),
    path(
        "app/user/view/account/",
        login_required(UsersView.as_view(template_name="app_user_view_account.html")),
        name="app-user-view-account",
    ),
    path(
        "app/user/view/security/",
        login_required(UsersView.as_view(template_name="app_user_view_security.html")),
        name="app-user-view-security",
    ),
    path(
        "app/user/view/billing/",
        login_required(UsersView.as_view(template_name="app_user_view_billing.html")),
        name="app-user-view-billing",
    ),
    path(
        "app/user/view/notifications/",
        login_required(UsersView.as_view(template_name="app_user_view_notifications.html")),
        name="app-user-view-notifications",
    ),
    path(
        "app/user/view/connections/",
        login_required(UsersView.as_view(template_name="app_user_view_connections.html")),
        name="app-user-view-connections",
    ),
]


Contents of ../../apps/theme/users/views.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: views.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.views.generic import TemplateView
from web_project import TemplateLayout
from django.contrib.auth.mixins import PermissionRequiredMixin


"""
This file is a view controller for multiple pages as a module.
Here you can override the page view layout.
Refer to users/urls.py file for more pages.
"""

class UsersView(PermissionRequiredMixin, TemplateView):
    permission_required = ("user.view_user", "user.delete_user", "user.change_user", "user.add_user")


    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        return context


Contents of ../../apps/theme/icons/models.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Create your models here.


Contents of ../../apps/theme/icons/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#



Contents of ../../apps/theme/icons/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class IconsConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "apps.theme.icons"


Contents of ../../apps/theme/icons/admin.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: admin.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Register your models here.


Contents of ../../apps/theme/icons/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path
from .views import IconsView
from django.contrib.auth.decorators import login_required


urlpatterns = [
    path(
        "icons/tabler/",
        login_required(IconsView.as_view(template_name="icons_tabler.html")),
        name="icons-tabler",
    ),
    path(
        "icons/font_awesome/",
        login_required(IconsView.as_view(template_name="icons_font_awesome.html")),
        name="icons-font-awesome",
    ),
]


Contents of ../../apps/theme/icons/views.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: views.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.views.generic import TemplateView
from web_project import TemplateLayout


"""
This file is a view controller for multiple pages as a module.
Here you can override the page view layout.
Refer to icons/urls.py file for more pages.
"""


class IconsView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        return context


Contents of ../../apps/theme/wizard_examples/models.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Create your models here.


Contents of ../../apps/theme/wizard_examples/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#



Contents of ../../apps/theme/wizard_examples/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.apps import AppConfig


class WizardExamplesConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "apps.theme.wizard_examples"


Contents of ../../apps/theme/wizard_examples/admin.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: admin.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Register your models here.


Contents of ../../apps/theme/wizard_examples/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path
from .views import WizardExamplesView
from django.contrib.auth.decorators import login_required


urlpatterns = [
    path(
        "wizard_ex/checkout/",
        login_required(WizardExamplesView.as_view(template_name="wizard_ex_checkout.html")),
        name="wizard-ex-checkout",
    ),
    path(
        "wizard_ex/property_listing/",
        login_required(WizardExamplesView.as_view(template_name="wizard_ex_property_listing.html")),
        name="wizard-ex-property-listing",
    ),
    path(
        "wizard_ex/create_deal/",
        login_required(WizardExamplesView.as_view(template_name="wizard_ex_create_deal.html")),
        name="wizard-ex-create-deal",
    ),
]


Contents of ../../apps/theme/wizard_examples/views.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: views.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.views.generic import TemplateView
from web_project import TemplateLayout


"""
This file is a view controller for multiple pages as a module.
Here you can override the page view layout.
Refer to wizard_examples/urls.py file for more pages.
"""


class WizardExamplesView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        return context


Contents of ../../apps/theme/form_wizard/models.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Create your models here.


Contents of ../../apps/theme/form_wizard/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#



Contents of ../../apps/theme/form_wizard/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class FormwizardConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "apps.theme.form_wizard"


Contents of ../../apps/theme/form_wizard/admin.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: admin.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Register your models here.


Contents of ../../apps/theme/form_wizard/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path
from .views import FormWizardView
from django.contrib.auth.decorators import login_required


urlpatterns = [
    path(
        "form/wizard_numbered/",
        login_required(FormWizardView.as_view(template_name="form_wizard_numbered.html")),
        name="form-wizard-numbered",
    ),
    path(
        "form/wizard_icons/",
        login_required(FormWizardView.as_view(template_name="form_wizard_icons.html")),
        name="form-wizard-icons",
    ),
]


Contents of ../../apps/theme/form_wizard/views.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: views.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.views.generic import TemplateView
from web_project import TemplateLayout


"""
This file is a view controller for multiple pages as a module.
Here you can override the page view layout.
Refer to form_wizard/urls.py file for more pages.
"""


class FormWizardView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        return context


Contents of ../../apps/theme/pages/models.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Create your models here.


Contents of ../../apps/theme/pages/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#



Contents of ../../apps/theme/pages/views_misc.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: views_misc.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.views.generic import TemplateView
from web_project import TemplateLayout
from web_project.template_helpers.theme import TemplateHelper


"""
This file is a view controller for multiple pages as a module.
Here you can override the page view layout.
Refer to pages/urls.py file for more pages.
"""


class MiscPagesView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        # Update the context
        context.update(
            {
                "layout_path": TemplateHelper.set_layout("layout_blank.html", context),
            }
        )

        return context


Contents of ../../apps/theme/pages/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class PagesConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "apps.theme.pages"


Contents of ../../apps/theme/pages/admin.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: admin.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Register your models here.


Contents of ../../apps/theme/pages/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path
from .views import PagesView
from .views_misc import MiscPagesView
from django.contrib.auth.decorators import login_required


urlpatterns = [
    path(
        "pages/profile/user/",
        login_required(PagesView.as_view(template_name="pages_profile_user.html")),
        name="pages-profile-user",
    ),
    path(
        "pages/profile/teams/",
        login_required(PagesView.as_view(template_name="pages_profile_teams.html")),
        name="pages-profile-teams",
    ),
    path(
        "pages/profile/projects/",
        login_required(PagesView.as_view(template_name="pages_profile_projects.html")),
        name="pages-profile-projects",
    ),
    path(
        "pages/profile/connections/",
        login_required(PagesView.as_view(template_name="pages_profile_connections.html")),
        name="pages-profile-connections",
    ),
    path(
        "pages/account_settings/account/",
        login_required(PagesView.as_view(template_name="pages_account_settings_account.html")),
        name="pages-account-settings-account",
    ),
    path(
        "pages/account_settings/security/",
        login_required(PagesView.as_view(template_name="pages_account_settings_security.html")),
        name="pages-account-settings-security",
    ),
    path(
        "pages/account_settings/billing/",
        login_required(PagesView.as_view(template_name="pages_account_settings_billing.html")),
        name="pages-account-settings-billing",
    ),
    path(
        "pages/account_settings/notifications/",
        login_required(PagesView.as_view(template_name="pages_account_settings_notifications.html")),
        name="pages-account-settings-notifications",
    ),
    path(
        "pages/account_settings/connections/",
        login_required(PagesView.as_view(template_name="pages_account_settings_connections.html")),
        name="pages-account-settings-connections",
    ),
    path(
        "pages/faq/",
        login_required(PagesView.as_view(template_name="pages_faq.html")),
        name="pages-faq",
    ),
    path(
        "pages/pricing/",
        login_required(PagesView.as_view(template_name="pages_pricing.html")),
        name="pages-pricing",
    ),
    path(
        "pages/misc/error/",
        MiscPagesView.as_view(template_name="pages_misc_error.html"),
        name="pages-misc-error",
    ),
    path(
        "pages/misc/under_maintenance/",
        MiscPagesView.as_view(template_name="pages_misc_under_maintenance.html"),
        name="pages-misc-under-maintenance",
    ),
    path(
        "pages/misc/comingsoon/",
        MiscPagesView.as_view(template_name="pages_misc_comingsoon.html"),
        name="pages-misc-comingsoon",
    ),
    path(
        "pages/misc/not_authorized/",
        MiscPagesView.as_view(template_name="pages_misc_not_authorized.html"),
        name="pages-misc-not-authorized",
    ),
]


Contents of ../../apps/theme/pages/views.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: views.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.views.generic import TemplateView
from web_project import TemplateLayout


"""
This file is a view controller for multiple pages as a module.
Here you can override the page view layout.
Refer to pages/urls.py file for more pages.
"""


class PagesView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        return context


Contents of ../../apps/theme/extended_ui/models.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Create your models here.


Contents of ../../apps/theme/extended_ui/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#



Contents of ../../apps/theme/extended_ui/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class ExtendedUiConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "apps.theme.extended_ui"


Contents of ../../apps/theme/extended_ui/admin.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: admin.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Register your models here.


Contents of ../../apps/theme/extended_ui/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path
from .views import ExtendedUiView
from django.contrib.auth.decorators import login_required


urlpatterns = [
    path(
        "extended_ui/avatar/",
        login_required(ExtendedUiView.as_view(template_name="extended_ui_avatar.html")),
        name="extended-ui-avatar",
    ),
    path(
        "extended_ui/blockui/",
        login_required(ExtendedUiView.as_view(template_name="extended_ui_blockui.html")),
        name="extended-ui-blockui",
    ),
    path(
        "extended_ui/drag_and_drop/",
        login_required(ExtendedUiView.as_view(template_name="extended_ui_drag_and_drop.html")),
        name="extended-ui-drag-and-drop",
    ),
    path(
        "extended_ui/media_player/",
        login_required(ExtendedUiView.as_view(template_name="extended_ui_media_player.html")),
        name="extended-ui-media-player",
    ),
    path(
        "extended_ui/perfect_scrollbar/",
        login_required(ExtendedUiView.as_view(template_name="extended_ui_perfect_scrollbar.html")),
        name="extended-ui-perfect-scrollbar",
    ),
    path(
        "extended_ui/star_ratings/",
        login_required(ExtendedUiView.as_view(template_name="extended_ui_star_ratings.html")),
        name="extended-ui-star-ratings",
    ),
    path(
        "extended_ui/sweetalert2/",
        login_required(ExtendedUiView.as_view(template_name="extended_ui_sweetalert2.html")),
        name="extended-ui-sweetalert2",
    ),
    path(
        "extended_ui/text_divider/",
        login_required(ExtendedUiView.as_view(template_name="extended_ui_text_divider.html")),
        name="extended-ui-text-divider",
    ),
    path(
        "extended_ui/timeline_basic/",
        login_required(ExtendedUiView.as_view(template_name="extended_ui_timeline_basic.html")),
        name="extended-ui-timeline-basic",
    ),
    path(
        "extended_ui/timeline_fullscreen/",
        login_required(ExtendedUiView.as_view(template_name="extended_ui_timeline_fullscreen.html")),
        name="extended-ui-timeline-fullscreen",
    ),
    path(
        "extended_ui/tour/",
        login_required(ExtendedUiView.as_view(template_name="extended_ui_tour.html")),
        name="extended-ui-tour",
    ),
    path(
        "extended_ui/treeview/",
        login_required(ExtendedUiView.as_view(template_name="extended_ui_treeview.html")),
        name="extended-ui-treeview",
    ),
    path(
        "extended_ui/misc/",
        login_required(ExtendedUiView.as_view(template_name="extended_ui_misc.html")),
        name="extended-ui-misc",
    ),
]


Contents of ../../apps/theme/extended_ui/views.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: views.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.views.generic import TemplateView
from web_project import TemplateLayout


"""
This file is a view controller for multiple pages as a module.
Here you can override the page view layout.
Refer to extended_ui/urls.py file for more pages.
"""


class ExtendedUiView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        return context


Contents of ../../apps/theme/authentication/models.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Create your models here.




Contents of ../../apps/theme/authentication/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


Contents of ../../apps/theme/authentication/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class AuthenticationConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "apps.theme.authentication"


Contents of ../../apps/theme/authentication/admin.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: admin.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


Contents of ../../apps/theme/authentication/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path
from .views import AuthView


urlpatterns = [
    path(
        "auth/login/basic/",
        AuthView.as_view(template_name="auth_login_basic.html"),
        name="auth-login-basic",
    ),
    path(
        "auth/login/cover/",
        AuthView.as_view(template_name="auth_login_cover.html"),
        name="auth-login-cover",
    ),
    path(
        "auth/register/basic/",
        AuthView.as_view(template_name="auth_register_basic.html"),
        name="auth-register-basic",
    ),
    path(
        "auth/register/cover/",
        AuthView.as_view(template_name="auth_register_cover.html"),
        name="auth-register-cover",
    ),
    path(
        "auth/register/multisteps/",
        AuthView.as_view(template_name="auth_register_multisteps.html"),
        name="auth-register-multisteps",
    ),
    path(
        "auth/verify_email/basic/",
        AuthView.as_view(template_name="auth_verify_email_basic.html"),
        name="auth-verify-email-basic",
    ),
    path(
        "auth/verify_email/cover/",
        AuthView.as_view(template_name="auth_verify_email_cover.html"),
        name="auth-verify-email-cover",
    ),
    path(
        "auth/reset_password/basic/",
        AuthView.as_view(template_name="auth_reset_password_basic.html"),
        name="auth-reset-password-basic",
    ),
    path(
        "auth/reset_password/cover/",
        AuthView.as_view(template_name="auth_reset_password_cover.html"),
        name="auth-reset-password-cover",
    ),
    path(
        "auth/forgot_password/basic/",
        AuthView.as_view(template_name="auth_forgot_password_basic.html"),
        name="auth-forgot-password-basic",
    ),
    path(
        "auth/forgot_password/cover/",
        AuthView.as_view(template_name="auth_forgot_password_cover.html"),
        name="auth-forgot-password-cover",
    ),
    path(
        "auth/two_steps/basic/",
        AuthView.as_view(template_name="auth_two_steps_basic.html"),
        name="auth-two-steps-basic",
    ),
    path(
        "auth/two_steps/cover/",
        AuthView.as_view(template_name="auth_two_steps_cover.html"),
        name="auth-two-steps-cover",
    ),
]


Contents of ../../apps/theme/authentication/views.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: views.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:33
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.views.generic import TemplateView
from web_project import TemplateLayout
from web_project.template_helpers.theme import TemplateHelper


"""
This file is a view controller for multiple pages as a module.
Here you can override the page view layout.
Refer to auth/urls.py file for more pages.
"""


class AuthView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        # Update the context
        context.update(
            {
                "layout_path": TemplateHelper.set_layout("layout_blank.html", context),
            }
        )

        return context


Contents of ../../apps/theme/logistics/models.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Create your models here.


Contents of ../../apps/theme/logistics/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#



Contents of ../../apps/theme/logistics/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class LogisticsConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "apps.theme.logistics"


Contents of ../../apps/theme/logistics/admin.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: admin.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Register your models here.


Contents of ../../apps/theme/logistics/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path
from .views import LogisticsView
from django.contrib.auth.decorators import login_required


urlpatterns = [
    path(
        "app/logistics/dashboard/",
        login_required(LogisticsView.as_view(template_name="app_logistics_dashboard.html")),
        name="app-logistics-dashboard",
    ),
    path(
        "app/logistics/fleet/",
        login_required(LogisticsView.as_view(template_name="app_logistics_fleet.html")),
        name="app-logistics-fleet",
    ),
]


Contents of ../../apps/theme/logistics/views.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: views.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:32
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.views.generic import TemplateView
from web_project import TemplateLayout


"""
This file is a view controller for multiple pages as a module.
Here you can override the page view layout.
Refer to logistics/urls.py file for more pages.
"""


class LogisticsView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        return context


Contents of ../../apps/theme/invoice/models.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Create your models here.


Contents of ../../apps/theme/invoice/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#



Contents of ../../apps/theme/invoice/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class InvoiceConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "apps.theme.invoice"


Contents of ../../apps/theme/invoice/admin.py:

#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: admin.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

# Register your models here.


Contents of ../../apps/theme/invoice/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path
from .views import InvoiceView, InvoicePrintView
from django.contrib.auth.decorators import login_required


urlpatterns = [
    path(
        "app/invoice/list/",
        login_required(InvoiceView.as_view(template_name="app_invoice_list.html")),
        name="app-invoice-list",
    ),
    path(
        "app/invoice/preview/",
        login_required(InvoiceView.as_view(template_name="app_invoice_preview.html")),
        name="app-invoice-preview",
    ),
    path(
        "app/invoice/edit/",
        login_required(InvoiceView.as_view(template_name="app_invoice_edit.html")),
        name="app-invoice-edit",
    ),
    path(
        "app/invoice/add/",
        login_required(InvoiceView.as_view(template_name="app_invoice_add.html")),
        name="app-invoice-add",
    ),
    path(
        "app/invoice/print/",
        login_required(InvoicePrintView.as_view(template_name="app_invoice_print.html")),
        name="app-invoice-print",
    ),
]


Contents of ../../apps/theme/invoice/views.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: views.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.views.generic import TemplateView
from web_project import TemplateLayout
from web_project.template_helpers.theme import TemplateHelper


"""
This file is a view controller for multiple pages as a module.
Here you can override the page view layout.
Refer to invoice/urls.py file for more pages.
"""


class InvoiceView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        return context


class InvoicePrintView(TemplateView):
    # Predefined function
    def get_context_data(self, **kwargs):
        # A function to init the global layout. It is defined in web_project/__init__.py.py file
        context = TemplateLayout.init(self, super().get_context_data(**kwargs))

        # Update the context
        context.update(
            {
                "layout_path": TemplateHelper.set_layout("layout_blank.html", context),
            }
        )

        return context


Contents of ../../apps/semantor/__init__.py:


Contents of ../../apps/semantor/apps.py:
from django.apps import AppConfig


class SemantorConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.semantor'

    def ready(self):
        from apps.semantor.signals.update_assistant_embedding_signals import update_assistant_embedding_after_save
        from apps.semantor.signals.update_leanmod_assistant_embedding_signals import update_leanmod_assistant_embedding_after_save
        from apps.semantor.signals.update_integration_embedding_signals import update_integration_embedding_after_save
        from apps.semantor.signals.delete_assistant_embedding_signals import remove_vector_from_index_on_assistant_delete
        from apps.semantor.signals.delete_leanmod_assistant_embedding_signals import remove_vector_from_index_on_leanmod_assistant_delete
        from apps.semantor.signals.delete_integration_embedding_signals import remove_vector_from_index_on_integration_delete
        pass


Contents of ../../apps/semantor/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-11-09 15:04:30
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-09 15:04:30
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path

from apps.semantor.views import SemantorView_Configure

app_name = 'semantor'

urlpatterns = [
    path("configuration/", SemantorView_Configure.as_view(
        template_name="semantor/semantor_integration_main_page.html"), name="configuration"),
]


Contents of ../../apps/semantor/models/semantor_configuration_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: semantor_configuration_models.py
#  Last Modified: 2024-11-10 00:33:35
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-10 00:33:35
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.db import models


class SemantorConfiguration(models.Model):
    user = models.OneToOneField('auth.User', on_delete=models.CASCADE, unique=True)
    is_local_network_active = models.BooleanField(default=True)
    is_global_network_active = models.BooleanField(default=True)

    maximum_assistant_search_items = models.IntegerField(default=5)
    maximum_integration_search_items = models.IntegerField(default=5)

    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    class Meta:
        verbose_name = 'Semantor Configuration'
        verbose_name_plural = 'Semantor Configurations'
        indexes = [
            models.Index(fields=['user', 'is_local_network_active', 'is_global_network_active']),
            models.Index(fields=['user', 'is_local_network_active', 'is_global_network_active',
                                 'maximum_assistant_search_items']),
            models.Index(fields=['user', 'is_local_network_active', 'is_global_network_active',
                                 'maximum_integration_search_items']),
            models.Index(fields=['user', 'is_local_network_active', 'is_global_network_active',
                                 'maximum_assistant_search_items', 'maximum_integration_search_items']),
        ]

    def __str__(self):
        return self.user.username + ' - ' + str(self.id) + ' - ' + str(self.is_local_network_active) + ' - ' + str(
            self.is_global_network_active)


Contents of ../../apps/semantor/models/assistant_vector_data_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: assistant_vector_data_models.py
#  Last Modified: 2024-11-09 15:09:39
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-09 15:09:39
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
import hashlib
import logging
import os
import faiss

import numpy as np

from apps.hadron_prime.models import HadronNodeAssistantConnection
from apps.metakanban.models import MetaKanbanAssistantConnection
from apps.metatempo.models import MetaTempoAssistantConnection
from apps.orchestrations.models import OrchestrationReactantAssistantConnection
from apps.semantor.utils.constant_utils import OpenAIEmbeddingModels, VECTOR_INDEX_PATH_ASSISTANTS, \
    OPEN_AI_DEFAULT_EMBEDDING_VECTOR_DIMENSIONS
import json

from django.db import models

from apps.datasource_browsers.models import DataSourceBrowserConnection
from apps.datasource_codebase.models import CodeRepositoryStorageConnection, CodeBaseRepository
from apps.datasource_file_systems.models import DataSourceFileSystem
from apps.datasource_knowledge_base.models import DocumentKnowledgeBaseConnection, KnowledgeBaseDocument
from apps.datasource_media_storages.models import DataSourceMediaStorageConnection
from apps.datasource_ml_models.models import DataSourceMLModelConnection, DataSourceMLModelItem
from apps.datasource_nosql.models import NoSQLDatabaseConnection, CustomNoSQLQuery
from apps.datasource_sql.models import SQLDatabaseConnection, CustomSQLQuery
from apps.mm_apis.models import CustomAPIReference
from apps.mm_functions.models import CustomFunctionReference
from apps.mm_scripts.models import CustomScriptReference
from apps.projects.models import ProjectItem, ProjectTeamItem
from apps.video_generations.models import VideoGeneratorConnection


logger = logging.getLogger(__name__)


class AssistantVectorData(models.Model):
    assistant = models.ForeignKey('assistants.Assistant', on_delete=models.CASCADE)

    raw_data = models.JSONField(blank=True, null=True)
    raw_data_hash = models.CharField(max_length=255, blank=True, null=True)
    vector_data = models.JSONField(blank=True, null=True)

    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.assistant.name + " - " + self.assistant.organization.name

    class Meta:
        verbose_name = "Assistant Vector Data"
        verbose_name_plural = "Assistant Vector Data"
        indexes = [
            models.Index(fields=['assistant']),
            models.Index(fields=['created_at']),
            models.Index(fields=['updated_at']),
        ]

    def _get_index_path(self):
        organization_id = self.assistant.organization.id
        return os.path.join(VECTOR_INDEX_PATH_ASSISTANTS, f'assistants_index_{organization_id}.index')

    def save(self, *args, **kwargs):

        raw_data = {
            "assistant_name": self.assistant.name,
            "assistant_description": self.assistant.description,
            "assistant_instructions": self.assistant.instructions,
            "tools": {
                "image_generation_capability": False,
                "time_awareness": False,
                "place_awareness": False,
                "reasoning_capability_choice": "N/A",
                "functions": [],
                "apis": [],
                "scripts": [],
            },
            "data_sources": {
                "browsers": {},
                "file_systems": {},
                "sql_dbs": {},
                "nosql_dbs": {},
                "knowledge_bases": {},
                "codebases": {},
                "media_storages": {},
                "ml_storages": {},
                "projects": {},
                "video_generators": {},
                "hadron_node_connections": {},
                "metakanban_board_connections": {},
                "metatempo_tracker_connections": {},
                "orchestration_trigger_connections": {},
            },
        }
        assistant_browsers = self.assistant.datasourcebrowserconnection_set.all()
        assistant_file_systems = self.assistant.data_source_file_systems.all()
        assistant_sql_dbs = self.assistant.sql_database_connections.all()  # -r Queries
        assistant_nosql_dbs = self.assistant.nosql_database_connections.all()  # -r Queries
        assistant_kbs = self.assistant.documentknowledgebaseconnection_set.all()  # -r Documents
        assistant_codebases = self.assistant.coderepositorystorageconnection_set.all()  # -r Code Files
        assistant_media_storages = self.assistant.datasourcemediastorageconnection_set.all()  # -r Media Files
        assistant_ml_storages = self.assistant.datasourcemlmodelconnection_set.all()  # -r ML Models
        assistant_projects = self.assistant.project_items.all()  # -r Teams
        assistant_video_generators = self.assistant.videogeneratorconnection_set.all()
        hadron_node_connections = self.assistant.hadronnodeassistantconnection_set.all()
        metakanban_board_connections = self.assistant.metakanbanassistantconnection_set.all()
        metatempo_tracker_connections = self.assistant.metatempoassistantconnection_set.all()
        orchestration_trigger_connections = self.assistant.orchestrationreactantassistantconnection_set.all()
        mm_functions = self.assistant.customfunctionreference_set.all()
        mm_apis = self.assistant.customapireference_set.all()
        mm_scripts = self.assistant.customscriptreference_set.all()
        image_generation_capability = self.assistant.image_generation_capability
        time_awareness = self.assistant.time_awareness
        place_awareness = self.assistant.place_awareness
        reasoning_capability_choice = self.assistant.multi_step_reasoning_capability_choice

        # Tools: Image Generation Capability, Time Awareness, Place Awareness
        raw_data["tools"]["image_generation_capability"] = image_generation_capability
        raw_data["tools"]["time_awareness"] = time_awareness
        raw_data["tools"]["place_awareness"] = place_awareness
        raw_data["tools"]["reasoning_capability_choice"] = reasoning_capability_choice

        raw_data = self._populate_assistant_tools(mm_apis, mm_functions, mm_scripts, raw_data)
        raw_data = self._populate_assistant_data_sources(assistant_browsers, assistant_codebases,
                                                         assistant_file_systems,
                                                         assistant_kbs, assistant_media_storages,
                                                         assistant_ml_storages,
                                                         assistant_nosql_dbs, assistant_projects, assistant_sql_dbs,
                                                         assistant_video_generators, hadron_node_connections,
                                                         metakanban_board_connections, metatempo_tracker_connections,
                                                         orchestration_trigger_connections, raw_data)

        self.raw_data = raw_data

        ##############################
        # Convert to Vector
        ##############################

        self._generate_embedding(raw_data)

        ##############################
        # Save the Index to Vector DB
        ##############################

        self.raw_data = raw_data
        if self.has_raw_data_changed() or self.vector_data is None or self.vector_data == []:
            print("Vector data has changed, generating new embedding...")
            self._generate_embedding(raw_data)
        else:
            print("Vector data has not changed, using existing embedding...")
            pass

        super().save(*args, **kwargs)

        self._save_embedding()

    def _populate_assistant_data_sources(self, assistant_browsers, assistant_codebases, assistant_file_systems,
                                         assistant_kbs, assistant_media_storages, assistant_ml_storages,
                                         assistant_nosql_dbs, assistant_projects, assistant_sql_dbs,
                                         assistant_video_generators, assistant_hadron_node_connections,
                                         assistant_metakanban_board_connections,
                                         assistant_metatempo_tracker_connections,
                                         assistant_orchestration_trigger_connections, raw_data):
        # Data Sources: Browsers
        for browser in assistant_browsers:
            browser: DataSourceBrowserConnection
            raw_data["data_sources"]["browsers"][browser.name] = {
                "description": browser.description,
                "type": browser.browser_type,
                "data_selectivity": browser.data_selectivity,
                "minimum_investigation_websites": browser.minimum_investigation_sites,
            }
        # Data Sources: File Systems
        for file_system in assistant_file_systems:
            file_system: DataSourceFileSystem
            raw_data["data_sources"]["file_systems"][file_system.name] = {
                "description": file_system.description,
                "is_read_only": file_system.is_read_only,
                "os_type": file_system.os_type,
            }
        # Data Sources: SQL DBs
        for sql_db in assistant_sql_dbs:
            sql_db: SQLDatabaseConnection
            raw_data["data_sources"]["sql_dbs"][sql_db.name] = {
                "description": sql_db.description,
                "host_uri": sql_db.host,
                "database_name": sql_db.database_name,
                "is_read_only": sql_db.is_read_only,
                "queries": {}
            }

            # Internal: Custom SQL Queries
            for query in sql_db.custom_queries.all():
                query: CustomSQLQuery
                raw_data["data_sources"]["sql_dbs"][sql_db.name]["queries"][query.name] = {
                    "query_content": query.sql_query,
                    "description": query.description,
                }
        # Data Sources: NoSQL DBs
        for nosql_db in assistant_nosql_dbs:
            nosql_db: NoSQLDatabaseConnection
            raw_data["data_sources"]["nosql_dbs"][nosql_db.name] = {
                "description": nosql_db.description,
                "host_uri": nosql_db.host,
                "bucket_name": nosql_db.bucket_name,
                "is_read_only": nosql_db.is_read_only,
                "queries": {}
            }

            # Internal: Custom NoSQL Queries
            for query in nosql_db.custom_queries.all():
                query: CustomNoSQLQuery
                raw_data["data_sources"]["nosql_dbs"][nosql_db.name]["queries"][query.name] = {
                    "query_content": query.nosql_query,
                    "description": query.description,
                }
        # Data Sources: Knowledge Bases
        for kb in assistant_kbs:
            kb: DocumentKnowledgeBaseConnection
            raw_data["data_sources"]["knowledge_bases"][kb.name] = {
                "description": kb.description,
                "provider": kb.provider,
                "vectorizer": kb.vectorizer,
                "documents": {}
            }

            # Internal: Documents
            for doc in kb.knowledge_base_documents.all():
                doc: KnowledgeBaseDocument
                raw_data["data_sources"]["knowledge_bases"][kb.name]["documents"][doc.document_file_name] = {
                    "document_type": doc.document_type,
                }
        # Data Sources: Code Bases
        for codebase in assistant_codebases:
            codebase: CodeRepositoryStorageConnection
            raw_data["data_sources"]["codebases"][codebase.name] = {
                "description": codebase.description,
                "provider": codebase.provider,
                "vectorizer": codebase.vectorizer,
                "code_files": {}
            }

            # Internal: Repositories
            for repo in codebase.code_base_repositories.all():
                repo: CodeBaseRepository
                raw_data["data_sources"]["codebases"][codebase.name]["code_files"][repo.repository_name] = {
                    "repository_uri": repo.repository_uri,
                }
        # Data Sources: Media Storages
        for media_storage in assistant_media_storages:
            media_storage: DataSourceMediaStorageConnection
            raw_data["data_sources"]["media_storages"][media_storage.name] = {
                "description": media_storage.description,
                "media_category": media_storage.media_category,
            }

            # Internal: Media Files (skip)
            pass

        # Data Sources: ML Storages
        for ml_storage in assistant_ml_storages:
            ml_storage: DataSourceMLModelConnection
            raw_data["data_sources"]["ml_storages"][ml_storage.name] = {
                "description": ml_storage.description,
                "models": {}
            }

            # Internal: ML Models
            for model in ml_storage.items.all():
                model: DataSourceMLModelItem
                raw_data["data_sources"]["ml_storages"][ml_storage.name]["models"][model.ml_model_name] = {
                    "model_name": model.ml_model_name,
                }

        # Data Sources: Projects
        for project in assistant_projects:
            project: ProjectItem
            raw_data["data_sources"]["projects"][project.project_name] = {
                "description": project.project_description,
                "priority": project.project_priority,
                "risk_level": project.project_risk_level,
                "status": project.project_status,
                "stakeholders": project.project_stakeholders,
                "teams": {}
            }

            # Internal: Teams
            for team in project.project_teams.all():
                team: ProjectTeamItem
                raw_data["data_sources"]["projects"][project.project_name]["teams"][team.team_name] = {
                    "description": team.team_description,
                    "team_lead": team.team_lead.username,
                }

        # Data Sources: Video Generators
        for video_generator in assistant_video_generators:
            video_generator: VideoGeneratorConnection
            raw_data["data_sources"]["video_generators"][video_generator.name] = {
                "description": video_generator.description,
                "provider": video_generator.provider,
            }

        # Data Sources: Hadron Prime Node Connections
        for hadron_node_connection in assistant_hadron_node_connections:
            hadron_node_connection: HadronNodeAssistantConnection
            raw_data["data_sources"]["hadron_node_connections"][hadron_node_connection.hadron_prime_node.node_name] = {
                "node_description": hadron_node_connection.hadron_prime_node.node_description,
            }

        # Data Sources: MetaKanban Board Connections
        for hadron_node_connection in assistant_metakanban_board_connections:
            hadron_node_connection: MetaKanbanAssistantConnection
            raw_data["data_sources"]["metakanban_board_connections"][
                hadron_node_connection.metakanban_board.title] = {
                "board_description": hadron_node_connection.metakanban_board.description,
            }

        # Data Sources: MetaTempo Tracker Connections
        for hadron_node_connection in assistant_metatempo_tracker_connections:
            hadron_node_connection: MetaTempoAssistantConnection
            raw_data["data_sources"]["metatempo_tracker_connections"][
                hadron_node_connection.metatempo_instance.board.title] = {
                "associated_board_title": hadron_node_connection.metatempo_instance.board.title,
                "associated_board_description": hadron_node_connection.metatempo_instance.board.description,
            }

        # Data Sources: Orchestration Trigger Connections
        for hadron_node_connection in assistant_orchestration_trigger_connections:
            hadron_node_connection: OrchestrationReactantAssistantConnection
            raw_data["data_sources"]["orchestration_trigger_connections"][
                hadron_node_connection.orchestration_maestro.name] = {
                "orchestrator_description": hadron_node_connection.orchestration_maestro.description,
            }

        return raw_data

    def _populate_assistant_tools(self, mm_apis, mm_functions, mm_scripts, raw_data):
        # Tools: Functions
        for function_ref in mm_functions:
            function_ref: CustomFunctionReference
            raw_data["tools"]["functions"].append({
                "name": function_ref.custom_function.name,
                "description": function_ref.custom_function.description,
            })

        # Tools: APIs
        for api_ref in mm_apis:
            api_ref: CustomAPIReference
            raw_data["tools"]["apis"].append({
                "name": api_ref.custom_api.name,
                "description": api_ref.custom_api.description,
            })

        # Tools: Scripts
        for script_ref in mm_scripts:
            script_ref: CustomScriptReference
            raw_data["tools"]["scripts"].append({
                "name": script_ref.custom_script.name,
                "description": script_ref.custom_script.description,
            })

        return raw_data

    def _generate_embedding(self, raw_data):
        from apps.core.generative_ai.gpt_openai_manager import OpenAIGPTClientManager
        c = OpenAIGPTClientManager.get_naked_client(llm_model=self.assistant.llm_model)
        raw_data_text = json.dumps(raw_data, indent=2)
        try:
            response = c.embeddings.create(input=raw_data_text, model=OpenAIEmbeddingModels.TEXT_EMBEDDING_3_LARGE)
            embedding_vector = response.data[0].embedding
            self.vector_data = embedding_vector
        except Exception as e:
            logger.error(f"Error in generating embedding: {e}")
            self.vector_data = []

    def _save_embedding(self):
        if self.vector_data:
            x = np.array([self.vector_data], dtype=np.float32).reshape(1, OPEN_AI_DEFAULT_EMBEDDING_VECTOR_DIMENSIONS)
            xids = np.array([self.id], dtype=np.int64)
            index_path = self._get_index_path()
            if not os.path.exists(index_path):
                index = faiss.IndexIDMap(faiss.IndexFlatL2(OPEN_AI_DEFAULT_EMBEDDING_VECTOR_DIMENSIONS))
            else:
                index = faiss.read_index(index_path)
                if not isinstance(index, faiss.IndexIDMap):
                    index = faiss.IndexIDMap(index)
                index.remove_ids(xids)

            index.add_with_ids(x, xids)
            faiss.write_index(index, index_path)

    def has_raw_data_changed(self):
        raw_data_str = json.dumps(self.raw_data, sort_keys=True)
        new_raw_data_hash = hashlib.sha256(raw_data_str.encode('utf-8')).hexdigest()
        if self.raw_data_hash == new_raw_data_hash:
            return False
        self.raw_data_hash = new_raw_data_hash
        return True


Contents of ../../apps/semantor/models/leanmod_vector_data_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: leanmod_vector_data_models.py
#  Last Modified: 2024-11-15 23:45:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-15 23:45:49
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
import hashlib
import json
import logging
import os

import faiss
import numpy as np
from django.db import models

from apps.leanmod.models import ExpertNetworkAssistantReference, ExpertNetwork
from apps.semantor.utils.constant_utils import VECTOR_INDEX_PATH_LEANMOD_ASSISTANTS, OpenAIEmbeddingModels, \
    OPEN_AI_DEFAULT_EMBEDDING_VECTOR_DIMENSIONS

logger = logging.getLogger(__name__)


class LeanModVectorData(models.Model):
    leanmod_assistant = models.ForeignKey('leanmod.LeanAssistant', on_delete=models.CASCADE)

    raw_data = models.JSONField(blank=True, null=True)
    raw_data_hash = models.CharField(max_length=255, blank=True, null=True)
    vector_data = models.JSONField(blank=True, null=True)

    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.leanmod_assistant.name + " - " + self.leanmod_assistant.organization.name

    class Meta:
        verbose_name = "LeanMod Assistant Vector Data"
        verbose_name_plural = "LeanMod Assistant Vector Data"
        indexes = [
            models.Index(fields=['leanmod_assistant']),
            models.Index(fields=['created_at']),
            models.Index(fields=['updated_at']),
        ]

    def _get_index_path(self):
        organization_id = self.leanmod_assistant.organization.id
        return os.path.join(VECTOR_INDEX_PATH_LEANMOD_ASSISTANTS, f'leanmod_assistants_index_{organization_id}.index')

    def save(self, *args, **kwargs):

        raw_data = {
            "assistant_name": self.leanmod_assistant.name,
            "assistant_instructions": self.leanmod_assistant.instructions,
            "data_sources": {
                "expert_networks": {}
            }
        }

        expert_networks = self.leanmod_assistant.expert_networks.all()
        for xnet in expert_networks:
            xnet: ExpertNetwork
            xnet_name = xnet.name
            xnet_description = xnet.meta_description
            xnet_assistant_refs = xnet.assistant_references.all()

            raw_data["data_sources"]["expert_networks"][xnet_name] = {
                "description": xnet_description,
                "network_assistants": {}
            }

            for xnet_assistant_ref in xnet_assistant_refs:
                xnet_assistant_ref: ExpertNetworkAssistantReference
                xnet_assistant_name = xnet_assistant_ref.assistant.name
                xnet_assistant_description = xnet_assistant_ref.context_instructions
                raw_data["data_sources"]["expert_networks"][xnet_name]["network_assistants"][xnet_assistant_name] = {
                    "description": xnet_assistant_description
                }

        self.raw_data = raw_data

        ##############################
        # Convert to Vector
        ##############################

        self._generate_embedding(raw_data)

        ##############################
        # Save the Index to Vector DB
        ##############################

        self.raw_data = raw_data
        if self.has_raw_data_changed() or self.vector_data is None or self.vector_data == []:
            print("Vector data has changed, generating new embedding...")
            self._generate_embedding(raw_data)
        else:
            print("Vector data has not changed, using existing embedding...")
            pass

        super().save(*args, **kwargs)
        self._save_embedding()

    def _generate_embedding(self, raw_data):
        from apps.core.generative_ai.gpt_openai_manager import OpenAIGPTClientManager
        c = OpenAIGPTClientManager.get_naked_client(llm_model=self.leanmod_assistant.llm_model)
        raw_data_text = json.dumps(raw_data, indent=2)
        try:
            response = c.embeddings.create(input=raw_data_text, model=OpenAIEmbeddingModels.TEXT_EMBEDDING_3_LARGE)
            embedding_vector = response.data[0].embedding
            self.vector_data = embedding_vector
        except Exception as e:
            logger.error(f"Error in generating embedding: {e}")
            self.vector_data = []

    def _save_embedding(self):
        if self.vector_data:
            x = np.array([self.vector_data], dtype=np.float32).reshape(1, OPEN_AI_DEFAULT_EMBEDDING_VECTOR_DIMENSIONS)
            xids = np.array([self.id], dtype=np.int64)
            index_path = self._get_index_path()
            if not os.path.exists(index_path):
                index = faiss.IndexIDMap(faiss.IndexFlatL2(OPEN_AI_DEFAULT_EMBEDDING_VECTOR_DIMENSIONS))
            else:
                index = faiss.read_index(index_path)
                if not isinstance(index, faiss.IndexIDMap):
                    index = faiss.IndexIDMap(index)
                index.remove_ids(xids)

            index.add_with_ids(x, xids)
            faiss.write_index(index, index_path)

    def has_raw_data_changed(self):
        raw_data_str = json.dumps(self.raw_data, sort_keys=True)
        new_raw_data_hash = hashlib.sha256(raw_data_str.encode('utf-8')).hexdigest()
        if self.raw_data_hash == new_raw_data_hash:
            return False
        self.raw_data_hash = new_raw_data_hash
        return True


Contents of ../../apps/semantor/models/integration_vector_data_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: integration_vector_data_models.py
#  Last Modified: 2024-11-09 15:09:46
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-09 15:09:46
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
import hashlib
import json
import logging
import os

import faiss
import numpy as np
from django.db import models

from apps.semantor.utils.constant_utils import OpenAIEmbeddingModels, VECTOR_INDEX_PATH_INTEGRATIONS, \
    OPEN_AI_DEFAULT_EMBEDDING_VECTOR_DIMENSIONS
from config import settings

logger = logging.getLogger(__name__)


class IntegrationVectorData(models.Model):
    integration_assistant = models.ForeignKey('integrations.AssistantIntegration', on_delete=models.CASCADE)

    raw_data = models.JSONField(blank=True, null=True)
    raw_data_hash = models.CharField(max_length=255, blank=True, null=True)
    vector_data = models.JSONField(blank=True, null=True)

    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.integration_assistant.integration_name

    class Meta:
        verbose_name = 'Integration Vector Data'
        verbose_name_plural = 'Integration Vector Data'
        ordering = ['-created_at']

    def save(self, *args, **kwargs):
        raw_data = {
            "assistant_name": self.integration_assistant.integration_name,
            "assistant_description": self.integration_assistant.integration_description,
            "assistant_instructions": self.integration_assistant.integration_instructions,
            "tools": {
                "image_generation_capability": False,
                "time_awareness": False,
                "place_awareness": False,
                "reasoning_capability_choice": "N/A",
            },
            "data_sources": {},
        }

        # Add tools
        raw_data['tools'][
            'image_generation_capability'] = self.integration_assistant.integration_image_generation_capability
        raw_data['tools']['time_awareness'] = self.integration_assistant.integration_time_awareness
        raw_data['tools']['place_awareness'] = self.integration_assistant.integration_location_awareness
        raw_data['tools']['reasoning_capability_choice'] = self.integration_assistant.integration_multi_step_reasoning

        self.raw_data = raw_data

        ##############################
        # Convert to Vector
        ##############################

        self._generate_embedding(raw_data)

        ##############################
        # Save the Index to Vector DB
        ##############################

        self.raw_data = raw_data
        if self.has_raw_data_changed() or self.vector_data is None or self.vector_data == []:
            print("Vector data has changed, generating new embedding...")
            self._generate_embedding(raw_data)
        else:
            print("Vector data has not changed, using existing embedding...")
            pass

        super().save(*args, **kwargs)

        if self.vector_data:
            self._save_embedding()

    def _get_index_path(self):
        return os.path.join(VECTOR_INDEX_PATH_INTEGRATIONS, f'integrations_index.index')

    def _generate_embedding(self, raw_data):
        from apps.core.generative_ai.gpt_openai_manager import OpenAIGPTClientManager
        c = OpenAIGPTClientManager.get_naked_client_with_api_key(api_key=settings.INTERNAL_OPENAI_API_KEY)
        raw_data_text = json.dumps(raw_data, indent=2)
        try:
            response = c.embeddings.create(input=raw_data_text, model=OpenAIEmbeddingModels.TEXT_EMBEDDING_3_LARGE)
            embedding_vector = response.data[0].embedding
            self.vector_data = embedding_vector
        except Exception as e:
            logger.error(f"Error in generating embedding: {e}")
            self.vector_data = []

    def _save_embedding(self):
        if self.vector_data:
            x = np.array([self.vector_data], dtype=np.float32).reshape(1, OPEN_AI_DEFAULT_EMBEDDING_VECTOR_DIMENSIONS)
            xids = np.array([self.id], dtype=np.int64)
            index_path = self._get_index_path()

            if not os.path.exists(index_path):
                index = faiss.IndexIDMap(faiss.IndexFlatL2(OPEN_AI_DEFAULT_EMBEDDING_VECTOR_DIMENSIONS))
            else:
                index = faiss.read_index(index_path)
                if not isinstance(index, faiss.IndexIDMap):
                    index = faiss.IndexIDMap(index)
                index.remove_ids(xids)

            index.add_with_ids(x, xids)
            faiss.write_index(index, index_path)

    def has_raw_data_changed(self):
        raw_data_str = json.dumps(self.raw_data, sort_keys=True)
        new_raw_data_hash = hashlib.sha256(raw_data_str.encode('utf-8')).hexdigest()
        if self.raw_data_hash == new_raw_data_hash:
            return False
        self.raw_data_hash = new_raw_data_hash
        return True


Contents of ../../apps/semantor/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-11-09 15:04:49
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-09 15:04:49
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from .assistant_vector_data_models import *
from .integration_vector_data_models import *
from .semantor_configuration_models import *
from .leanmod_vector_data_models import *


Contents of ../../apps/export_assistants/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:44
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#



Contents of ../../apps/export_assistants/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:44
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.apps import AppConfig

from config import settings


class ExportAssistantsConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.export_assistants'

    def ready(self):
        if settings.TESTING:
            return

        from threading import Thread
        from django.core.management import call_command

        def run_initialization_command():
            call_command('start_exported_assistants')

        thread = Thread(target=run_initialization_command)
        thread.start()


Contents of ../../apps/export_assistants/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:44
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.urls import path

from apps.export_assistants.views import (ExportAssistantView_List, ExportAssistantView_Create,
                                          ExportAssistantView_Update, ExportAssistantView_Delete,
                                          ExportAssistantAPIView, ExportAssistantView_ToggleService,
                                          ExportAssistantAPIHealthCheckView)

app_name = 'export_assistants'

urlpatterns = [
    path('list/', ExportAssistantView_List.as_view(
        template_name="export_assistants/list_export_assistants.html"), name='list'),
    path('create/', ExportAssistantView_Create.as_view(
        template_name="export_assistants/create_export_assistants.html"), name='create'),
    path('update/<int:pk>/', ExportAssistantView_Update.as_view(
        template_name="export_assistants/update_export_assistants.html"), name='update'),
    path('delete/<int:pk>/', ExportAssistantView_Delete.as_view(), name='delete'),
    path('exported/<str:endpoint>/', ExportAssistantAPIView.as_view(), name='api'),
    path('health/<str:endpoint>/', ExportAssistantAPIHealthCheckView.as_view(), name='health_check'),
    path('toggle_service/<int:pk>/', ExportAssistantView_ToggleService.as_view(), name='toggle_service'),
]


Contents of ../../apps/export_assistants/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:44
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from .logs import *
from .exports import *


Contents of ../../apps/bmd_academy/__init__.py:


Contents of ../../apps/bmd_academy/apps.py:
from django.apps import AppConfig


class AcademyConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.bmd_academy'


Contents of ../../apps/bmd_academy/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-11-03 17:19:13
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-03 17:19:13
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
from django.urls import path

from apps.bmd_academy.views import AcademyView_CourseList, AcademyView_CourseDetail

app_name = 'bmd_academy'

urlpatterns = [
    path('courses/', AcademyView_CourseList.as_view(template_name='bmd_academy/academy_courses.html'),
         name='course_list'),
    path('courses/<slug:slug>/',
         AcademyView_CourseDetail.as_view(template_name='bmd_academy/academy_course_detail.html'),
         name='course_detail'),
]


Contents of ../../apps/bmd_academy/models/academy_course_section_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: academy_course_section_models.py
#  Last Modified: 2024-11-03 17:24:00
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-03 17:24:00
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
import slugify
from django.db import models


class AcademyCourseSection(models.Model):
    course = models.ForeignKey('bmd_academy.AcademyCourse', on_delete=models.CASCADE, related_name='sections')
    section_name = models.CharField(max_length=1_000)
    section_slug = models.SlugField(max_length=1_000, null=True, blank=True)
    section_description = models.TextField()

    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.section_name + ' - ' + self.course.course_title

    class Meta:
        verbose_name = 'Academy Course Section'
        verbose_name_plural = 'Academy Course Sections'
        ordering = ['-created_at']
        indexes = [
            models.Index(fields=['section_name', 'created_at']),
        ]
        unique_together = ['course', 'section_name']

    def save(self, *args, **kwargs):
        if not self.section_slug:
            self.section_slug = slugify.slugify(self.course.course_slug + '-' + self.section_name)
        super(AcademyCourseSection, self).save(*args, **kwargs)


Contents of ../../apps/bmd_academy/models/academy_course_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: academy_course_models.py
#  Last Modified: 2024-11-03 17:21:07
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-03 17:21:08
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

import slugify
from django.db import models


class AcademyCourse(models.Model):
    course_title = models.CharField(max_length=1_000, unique=True)
    course_slug = models.SlugField(max_length=1_000, unique=True, null=True, blank=True)
    course_description = models.TextField()
    course_language = models.CharField(max_length=1_000)
    course_instructor = models.ForeignKey('bmd_academy.AcademyCourseInstructor', on_delete=models.CASCADE)
    course_thumbnail_image_url = models.URLField(null=True, blank=True)
    course_under_construction = models.BooleanField(default=True)

    tags = models.JSONField(null=True, blank=True)

    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.course_title + ' - ' + self.course_language + ' - ' + self.course_instructor.full_name

    class Meta:
        verbose_name = 'Academy Course'
        verbose_name_plural = 'Academy Courses'
        ordering = ['-created_at']
        indexes = [
            models.Index(fields=['course_title', 'course_language', 'created_at']),
        ]

    def save(self, *args, **kwargs):
        if not self.course_slug:
            self.course_slug = slugify.slugify(self.course_title)
        super(AcademyCourse, self).save(*args, **kwargs)


Contents of ../../apps/bmd_academy/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-11-03 17:20:14
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-03 17:20:14
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from .academy_course_models import *
from .academy_course_video_models import *
from .academy_course_section_models import *
from .academy_course_instructor_models import *


Contents of ../../apps/bmd_academy/models/academy_course_instructor_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: academy_course_instructor_models.py
#  Last Modified: 2024-11-03 17:26:16
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-03 17:26:17
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models


class AcademyCourseInstructor(models.Model):
    user = models.ForeignKey('auth.User', on_delete=models.CASCADE)
    full_name = models.CharField(max_length=1_000)
    course_instructor_bio = models.TextField()

    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.full_name + ' - ' + self.user.email

    class Meta:
        verbose_name = 'Academy Course Instructor'
        verbose_name_plural = 'Academy Course Instructors'
        ordering = ['-created_at']
        indexes = [
            models.Index(fields=['full_name', 'created_at']),
        ]


Contents of ../../apps/bmd_academy/models/academy_course_video_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: academy_course_video_models.py
#  Last Modified: 2024-11-03 17:24:08
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-03 17:24:09
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models
import slugify


class AcademyCourseVideo(models.Model):
    course_section = models.ForeignKey('bmd_academy.AcademyCourseSection', on_delete=models.CASCADE, related_name='videos')
    video_title = models.CharField(max_length=1_000)
    video_slug = models.SlugField(max_length=1_000, unique=True, null=True, blank=True)
    video_description = models.TextField(null=True, blank=True)
    video_content_url = models.URLField(null=True, blank=True)

    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.video_title + ' - ' + self.course_section.section_name + ' - ' + self.course_section.course.course_title

    class Meta:
        verbose_name = 'Academy Course Video'
        verbose_name_plural = 'Academy Course Videos'
        ordering = ['-created_at']
        indexes = [
            models.Index(fields=['video_title', 'created_at']),
        ]
        unique_together = ['course_section', 'video_title']

    def save(self, *args, **kwargs):
        if not self.video_slug:
            self.video_slug = self.course_section.section_slug + '-' + slugify.slugify(self.video_title)
        super(AcademyCourseVideo, self).save(*args, **kwargs)


Contents of ../../apps/user_settings/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:40
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#



Contents of ../../apps/user_settings/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:40
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.apps import AppConfig


class UserSettingsConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.user_settings'


Contents of ../../apps/user_settings/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:40
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.urls import path

from apps.user_settings.views import SettingsView_UserSettings, SettingsView_DeleteAllLLMModels, \
    SettingsView_DeleteAllAssistants, SettingsView_DeleteAllChats, SettingsView_DeleteAllStarredMessages, \
    SettingsView_DeleteAllStandardMemories, \
    SettingsView_DeleteAllMessageTemplates, SettingsView_DeleteAllExportAssistants, \
    SettingsView_DeleteAllOrchestrations, \
    SettingsView_DeleteAllFileSystems, SettingsView_DeleteAllBrowsers, SettingsView_DeleteAllSQLDBs, \
    SettingsView_DeleteAllSQLQueries, \
    SettingsView_DeleteAllVectorStoreManagers, SettingsView_DeleteAllVectorStoreDocuments, \
    SettingsView_DeleteAllCodeStorages, \
    SettingsView_DeleteAllMLManagers, SettingsView_DeleteAllMLModels, SettingsView_DeleteAllMediaManagers, \
    SettingsView_DeleteAllMediaItems, \
    SettingsView_DeleteAllFunctions, SettingsView_DeleteAllAPIs, SettingsView_DeleteAllScripts, \
    SettingsView_DeleteAllScheduledJobs, \
    SettingsView_DeleteAllTriggeredJobs, SettingsView_DeleteAllCodeRepos, SettingsView_DeleteAllLeanModAssistants, \
    SettingsView_DeleteAllExpertNets, \
    SettingsView_DeleteAllLeanModChats, SettingsView_ToggleAutoBackups, SettingsView_DeleteAllBrainstormingSessions, \
    SettingsView_DeleteAllDraftingDocuments, SettingsView_DeleteAllDraftingFolders, \
    SettingsView_DeleteAllHarmoniqAgents, SettingsView_DeleteAllNoSQLDBs, SettingsView_DeleteAllDataBackups, \
    SettingsView_DeleteAllVideoGeneratorConnections, SettingsView_DeleteAllNoSQLQueries, \
    SettingsView_DeleteAllHadronTopics, SettingsView_DeleteAllHadronNodes, SettingsView_DeleteAllHadronSystems, \
    SettingsView_DeleteAllHadronNodeExecutionLogs, SettingsView_DeleteAllHadronTopicMessagesLogs, \
    SettingsView_DeleteAllHadronNodeSEASELogs, SettingsView_DeleteAllWalletConnections, \
    SettingsView_DeleteSoftAllSmartContracts, SettingsView_DeleteAllBinexusEliteAgents, \
    SettingsView_DeleteAllBinexusProcesses, SettingsView_DeleteAllMetaTempoConnections, \
    SettingsView_DeleteAllProjects, SettingsView_DeleteAllMetaKanbanBoards, SettingsView_DeleteAllTeams, \
    SettingsView_DeleteAllEllmaScripts, SettingsView_DeleteAllSheetosDocuments, SettingsView_DeleteAllSheetosFolders

app_name = "user_settings"

urlpatterns = [
    path('settings/', SettingsView_UserSettings.as_view(template_name="user_settings/settings.html"),
         name='settings'),

    path('delete/all/llm_models/', SettingsView_DeleteAllLLMModels.as_view(),
         name='delete_all_llm_models'),
    path('delete/all/assistants/', SettingsView_DeleteAllAssistants.as_view(),
         name='delete_all_assistants'),
    path('delete/all/lean_assistants/', SettingsView_DeleteAllLeanModAssistants.as_view(),
         name='delete_all_lean_assistants'),
    path('delete/all/expert_networks/', SettingsView_DeleteAllExpertNets.as_view(),
         name='delete_all_expert_networks'),
    path('delete/all/chats/', SettingsView_DeleteAllChats.as_view(),
         name='delete_all_chats'),
    path('delete/all/lean_chats/', SettingsView_DeleteAllLeanModChats.as_view(),
         name='delete_all_lean_chats'),
    path('delete/all/starred_messages/', SettingsView_DeleteAllStarredMessages.as_view(),
         name='delete_all_starred_messages'),
    path('delete/all/memories/', SettingsView_DeleteAllStandardMemories.as_view(),
         name='delete_all_memories'),
    path('delete/all/message_templates/', SettingsView_DeleteAllMessageTemplates.as_view(),
         name='delete_all_message_templates'),
    path('delete/all/export_assistants/', SettingsView_DeleteAllExportAssistants.as_view(),
         name='delete_all_export_assistants'),
    path('delete/all/orchestrations/', SettingsView_DeleteAllOrchestrations.as_view(),
         name='delete_all_orchestrations'),
    path('delete/all/file_systems/', SettingsView_DeleteAllFileSystems.as_view(),
         name='delete_all_file_systems'),
    path('delete/all/web_browsers/', SettingsView_DeleteAllBrowsers.as_view(),
         name='delete_all_web_browsers'),
    path('delete/all/sql_databases/', SettingsView_DeleteAllSQLDBs.as_view(),
         name='delete_all_sql_databases'),
    path('delete/all/custom_sql_queries/', SettingsView_DeleteAllSQLQueries.as_view(),
         name='delete_all_custom_sql_queries'),
    path('delete/all/knowledge_bases/', SettingsView_DeleteAllVectorStoreManagers.as_view(),
         name='delete_all_knowledge_bases'),
    path('delete/all/knowledge_base_documents/', SettingsView_DeleteAllVectorStoreDocuments.as_view(),
         name='delete_all_knowledge_base_documents'),
    path('delete/all/code_storages/', SettingsView_DeleteAllCodeStorages.as_view(),
         name='delete_all_code_storages'),
    path('delete/all/repositories/', SettingsView_DeleteAllCodeRepos.as_view(),
         name='delete_all_repositories'),
    path('delete/all/ml_model_storages/', SettingsView_DeleteAllMLManagers.as_view(),
         name='delete_all_ml_model_storages'),
    path('delete/all/ml_models/', SettingsView_DeleteAllMLModels.as_view(),
         name='delete_all_ml_models'),
    path('delete/all/media_storages/', SettingsView_DeleteAllMediaManagers.as_view(),
         name='delete_all_media_storages'),
    path('delete/all/multimedia_files/', SettingsView_DeleteAllMediaItems.as_view(),
         name='delete_all_multimedia_files'),
    path('delete/all/functions/', SettingsView_DeleteAllFunctions.as_view(),
         name='delete_all_functions'),
    path('delete/all/apis/', SettingsView_DeleteAllAPIs.as_view(),
         name='delete_all_apis'),
    path('delete/all/scripts/', SettingsView_DeleteAllScripts.as_view(),
         name='delete_all_scripts'),
    path('delete/all/scheduled_jobs/', SettingsView_DeleteAllScheduledJobs.as_view(),
         name='delete_all_scheduled_jobs'),
    path('delete/all/triggered_jobs/', SettingsView_DeleteAllTriggeredJobs.as_view(),
         name='delete_all_triggered_jobs'),
    path('delete/all/brainstorming_sessions/', SettingsView_DeleteAllBrainstormingSessions.as_view(),
         name='delete_all_brainstorming_sessions'),
    path('delete/all/drafting_documents/', SettingsView_DeleteAllDraftingDocuments.as_view(),
         name='delete_all_drafting_documents'),
    path('delete/all/drafting_folders/', SettingsView_DeleteAllDraftingFolders.as_view(),
         name='delete_all_drafting_folders'),
    path('delete/all/sheetos_documents/', SettingsView_DeleteAllSheetosDocuments.as_view(),
            name='delete_all_sheetos_documents'),
    path('delete/all/sheetos_folders/', SettingsView_DeleteAllSheetosFolders.as_view(),
            name='delete_all_sheetos_folders'),
    path('delete/all/harmoniq_agents/', SettingsView_DeleteAllHarmoniqAgents.as_view(),
         name='delete_all_harmoniq_agents'),
    path('delete/all/nosql_databases/', SettingsView_DeleteAllNoSQLDBs.as_view(),
         name='delete_all_nosql_databases'),
    path('delete/all/data_backups/', SettingsView_DeleteAllDataBackups.as_view(),
         name='delete_all_data_backups'),
    path('delete/all/video_generator_connections/', SettingsView_DeleteAllVideoGeneratorConnections.as_view(),
         name='delete_all_video_generator_connections'),
    path('delete/all/nosql_queries/', SettingsView_DeleteAllNoSQLQueries.as_view(),
         name='delete_all_nosql_queries'),
    path('delete/all/hadron_topics/', SettingsView_DeleteAllHadronTopics.as_view(),
         name='delete_all_hadron_topics'),
    path('delete/all/hadron_nodes/', SettingsView_DeleteAllHadronNodes.as_view(),
         name='delete_all_hadron_nodes'),
    path('delete/all/hadron_systems/', SettingsView_DeleteAllHadronSystems.as_view(),
         name='delete_all_hadron_systems'),
    path('delete/all/hadron_node_execution_logs/', SettingsView_DeleteAllHadronNodeExecutionLogs.as_view(),
         name='delete_all_hadron_node_execution_logs'),
    path('delete/all/hadron_topic_message_logs/', SettingsView_DeleteAllHadronTopicMessagesLogs.as_view(),
         name='delete_all_hadron_topic_message_logs'),
    path('delete/all/hadron_node_sease_logs/', SettingsView_DeleteAllHadronNodeSEASELogs.as_view(),
         name='delete_all_hadron_node_sease_logs'),
    path('delete/all/wallet_connections/', SettingsView_DeleteAllWalletConnections.as_view(),
            name='delete_all_wallet_connections'),
    path('delete/soft/all/smart_contracts/', SettingsView_DeleteSoftAllSmartContracts.as_view(),
            name='delete_soft_all_smart_contracts'),
    path('delete/all/binexus_elite_agents/', SettingsView_DeleteAllBinexusEliteAgents.as_view(),
            name='delete_all_binexus_elite_agents'),
    path('delete/all/binexus_processes/', SettingsView_DeleteAllBinexusProcesses.as_view(),
            name='delete_all_binexus_processes'),
    path('delete/all/metatempo_connections/', SettingsView_DeleteAllMetaTempoConnections.as_view(),
            name='delete_all_metatempo_connections'),
    path('delete/all/projects/', SettingsView_DeleteAllProjects.as_view(),
            name='delete_all_projects'),
    path('delete/all/teams/', SettingsView_DeleteAllTeams.as_view(),
            name='delete_all_teams'),
    path('delete/all/metakanban_boards/', SettingsView_DeleteAllMetaKanbanBoards.as_view(),
            name='delete_all_metakanban_boards'),
    path('delete/all/ellma_scripts/', SettingsView_DeleteAllEllmaScripts.as_view(),
            name='delete_all_ellma_scripts'),

    path('auto_backups/toggle/', SettingsView_ToggleAutoBackups.as_view(),
         name='toggle_automated_backups'),
]


Contents of ../../apps/user_settings/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:40
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#



Contents of ../../apps/message_templates/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:45
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#



Contents of ../../apps/message_templates/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:44
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.apps import AppConfig


class MessageTemplatesConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.message_templates'


Contents of ../../apps/message_templates/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:44
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.urls import path

from apps.message_templates.views import MessageTemplateView_List, MessageTemplateView_Create, \
    MessageTemplateView_Update, \
    MessageTemplateView_Delete

app_name = "message_templates"

urlpatterns = [
    path("list/", MessageTemplateView_List.as_view(template_name="message_templates/list_message_templates.html"),
         name="list"),
    path("create/", MessageTemplateView_Create.as_view(template_name="message_templates/create_message_template.html"),
         name="create"),
    path("<int:pk>/update/", MessageTemplateView_Update.as_view(
        template_name="message_templates/update_message_template.html"), name="update"),
    path("<int:pk>/delete/", MessageTemplateView_Delete.as_view(), name="delete"),
]


Contents of ../../apps/message_templates/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:44
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from .message_template_models import *


Contents of ../../apps/message_templates/models/message_template_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: message_template_models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:44
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.db import models


class MessageTemplate(models.Model):
    user = models.ForeignKey("auth.User", on_delete=models.CASCADE)
    organization = models.ForeignKey("organization.Organization", on_delete=models.CASCADE)
    template_text = models.TextField()
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    class Meta:
        verbose_name = "Message Template"
        verbose_name_plural = "Message Templates"
        ordering = ["-created_at"]
        indexes = [
            models.Index(fields=["user"]),
            models.Index(fields=["organization"]),
            models.Index(fields=["template_text"]),
            models.Index(fields=["created_at"]),
            models.Index(fields=["updated_at"]),
            models.Index(fields=["user", "organization"]),
            models.Index(fields=["user", "template_text"]),
            models.Index(fields=["user", "created_at"]),
            models.Index(fields=["user", "updated_at"]),
            models.Index(fields=["organization", "template_text"]),
            models.Index(fields=["organization", "created_at"]),
            models.Index(fields=["organization", "updated_at"]),
            models.Index(fields=["template_text", "created_at"]),
            models.Index(fields=["template_text", "updated_at"]),
            models.Index(fields=["created_at", "updated_at"]),
            models.Index(fields=["user", "organization", "template_text"]),
            models.Index(fields=["user", "organization", "created_at"]),
            models.Index(fields=["user", "organization", "updated_at"]),
            models.Index(fields=["user", "template_text", "created_at"]),
            models.Index(fields=["user", "template_text", "updated_at"]),
            models.Index(fields=["organization", "template_text", "created_at"]),
            models.Index(fields=["organization", "template_text", "updated_at"]),
            models.Index(fields=["template_text", "created_at", "updated_at"]),
            models.Index(fields=["user", "organization", "template_text", "created_at"]),
            models.Index(fields=["user", "organization", "template_text", "updated_at"]),
            models.Index(fields=["user", "organization", "created_at", "updated_at"]),
            models.Index(fields=["user", "template_text", "created_at", "updated_at"]),
            models.Index(fields=["organization", "template_text", "created_at", "updated_at"]),
            models.Index(fields=["user", "organization", "template_text", "created_at", "updated_at"]),
        ]

    def __str__(self):
        return f"{self.user} - {self.organization} - {self.template_text}"


Contents of ../../apps/datasource_sql/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:41
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#



Contents of ../../apps/datasource_sql/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:41
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.apps import AppConfig


class DatasourceSqlConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.datasource_sql'


Contents of ../../apps/datasource_sql/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:41
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.urls import path

from apps.datasource_sql.views import SQLDatabaseView_ManagerCreate, SQLDatabaseView_ManagerList, \
    SQLDatabaseView_QueryCreate, SQLDatabaseView_ManagerUpdate, SQLDatabaseView_ManagerDelete, SQLDatabaseView_QueryUpdate, \
    SQLDatabaseView_QueryDelete, SQLDatabaseView_QueryList

app_name = "datasource_sql"

urlpatterns = [
    path("create/", SQLDatabaseView_ManagerCreate.as_view(
        template_name="datasource_sql/connections/create_sql_datasources.html"), name="create"),
    path("list/", SQLDatabaseView_ManagerList.as_view(
        template_name="datasource_sql/connections/list_sql_datasources.html"), name="list"),
    path("update/<int:pk>/", SQLDatabaseView_ManagerUpdate.as_view(
        template_name="datasource_sql/connections/update_sql_datasources.html"), name="update"),
    path("delete/<int:pk>/", SQLDatabaseView_ManagerDelete.as_view(), name="delete"),
    path("create_query/", SQLDatabaseView_QueryCreate.as_view(
        template_name="datasource_sql/queries/create_sql_query.html"), name="create_query"),
    path("list_queries/", SQLDatabaseView_QueryList.as_view(
        template_name="datasource_sql/queries/list_sql_queries.html"), name="list_queries"),
    path("update_query/<int:pk>/", SQLDatabaseView_QueryUpdate.as_view(
        template_name="datasource_sql/queries/update_sql_query.html"), name="update_query"),
    path("delete_query/<int:pk>/", SQLDatabaseView_QueryDelete.as_view(), name="delete_query"),
]


Contents of ../../apps/datasource_sql/models/sql_query_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: sql_query_models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:41
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.db import models


class CustomSQLQuery(models.Model):
    database_connection = models.ForeignKey('datasource_sql.SQLDatabaseConnection', on_delete=models.CASCADE,
                                            related_name='custom_queries')
    name = models.CharField(max_length=255)
    description = models.TextField(blank=True, null=True)
    sql_query = models.TextField()
    parameters = models.JSONField(blank=True, null=True)  # Optional: Use if you need to handle query parameters
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.name + ' - ' + self.database_connection.name + ' - ' + self.database_connection.dbms_type

    def save(
        self, force_insert=False, force_update=False, using=None, update_fields=None
    ):
        super().save(force_insert, force_update, using, update_fields)
        self.database_connection.custom_queries.add(self)

    class Meta:
        ordering = ['-created_at']
        verbose_name_plural = 'Custom SQL Queries'
        verbose_name = 'Custom SQL Query'
        indexes = [
            models.Index(fields=['database_connection', 'name']),
            models.Index(fields=['database_connection', 'created_at']),
            models.Index(fields=['database_connection', 'updated_at']),
            models.Index(fields=['database_connection', 'name', 'created_at']),
            models.Index(fields=['database_connection', 'name', 'updated_at']),
        ]


Contents of ../../apps/datasource_sql/models/sql_database_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: sql_database_models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:41
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
import logging

from django.db import models

from apps.datasource_sql.utils import DBMS_CHOICES, DBMSChoicesNames, POSTGRESQL_SCHEMA_RETRIEVAL_QUERY, \
    POSTGRESQL_SCHEMA_RETRIEVAL_QUERY_SUPPLY, MYSQL_SCHEMA_RETRIEVAL_QUERY, MYSQL_SCHEMA_RETRIEVAL_QUERY_SUPPLY
import psycopg2
import mysql.connector


logger = logging.getLogger(__name__)


class SQLDatabaseConnection(models.Model):
    assistant = models.ForeignKey('assistants.Assistant', on_delete=models.CASCADE,
                                  related_name='sql_database_connections',
                                  default=None, null=True)
    dbms_type = models.CharField(max_length=50, choices=DBMS_CHOICES)
    name = models.CharField(max_length=255)
    description = models.TextField(blank=True, null=True)
    host = models.CharField(max_length=255)
    port = models.IntegerField()
    database_name = models.CharField(max_length=255)
    username = models.CharField(max_length=255)
    password = models.CharField(max_length=255)
    one_time_sql_retrieval_instance_limit = models.IntegerField(default=100)
    one_time_sql_retrieval_token_limit = models.IntegerField(default=10_000)
    is_read_only = models.BooleanField(default=True)
    schema_data_json = models.JSONField(blank=True, null=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE,
                                        related_name='sql_database_connections',
                                        default=None, null=True)

    class Meta:
        ordering = ['-created_at']
        verbose_name_plural = 'SQL Database Connections'
        verbose_name = 'SQL Database Connection'
        indexes = [
            models.Index(fields=['assistant', 'dbms_type', 'name']),
            models.Index(fields=['assistant', 'dbms_type', 'created_at']),
            models.Index(fields=['assistant', 'dbms_type', 'updated_at']),
            models.Index(fields=['assistant', 'dbms_type', 'name', 'created_at']),
            models.Index(fields=['assistant', 'dbms_type', 'name', 'updated_at']),
        ]

    def __str__(self):
        return self.dbms_type + ' - ' + self.name

    def save(self, *args, **kwargs):
        self.schema_data_json = self.retrieve_schema()
        super().save(*args, **kwargs)

    def retrieve_schema(self):
        schema = {}
        if self.dbms_type == DBMSChoicesNames.POSTGRESQL:
            schema = self.retrieve_postgresql_schema()
        elif self.dbms_type == DBMSChoicesNames.MYSQL:
            schema = self.retrieve_mysql_schema()
        return schema

    def retrieve_postgresql_schema(self):
        schema = {}
        try:
            c = psycopg2.connect(dbname=self.database_name, user=self.username, password=self.password,
                                 host=self.host, port=self.port)
            crs = c.cursor()
            crs.execute(POSTGRESQL_SCHEMA_RETRIEVAL_QUERY)
            tables = crs.fetchall()
            for table in tables:
                table_name = table[0]
                crs.execute(POSTGRESQL_SCHEMA_RETRIEVAL_QUERY_SUPPLY, (table_name,))
                columns = crs.fetchall()
                schema[table_name] = [{'name': col[0], 'type': col[1]} for col in columns]
            crs.close()
            c.close()
            logger.info(f"Schema retrieved: {schema}")
        except Exception as e:
            logger.error(f"Error occurred while retrieving the schema: {e}")
            return {}
        return schema

    def retrieve_mysql_schema(self):
        schema = {}
        try:
            c = mysql.connector.connect(user=self.username, password=self.password, host=self.host,
                                        database=self.database_name, port=self.port)
            crs = c.cursor()
            crs.execute(MYSQL_SCHEMA_RETRIEVAL_QUERY)
            tables = crs.fetchall()
            for table in tables:
                table_name = table[0]
                crs.execute(MYSQL_SCHEMA_RETRIEVAL_QUERY_SUPPLY, (table_name,))
                columns = crs.fetchall()
                schema[table_name] = [{'name': col[0], 'type': col[1]} for col in columns]
            crs.close()
            c.close()
            logger.info(f"Schema retrieved: {schema}")
        except Exception as e:
            logger.error(f"Error occurred while retrieving the schema: {e}")
            return {}
        return schema


Contents of ../../apps/datasource_sql/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:41
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from .sql_query_models import *
from .sql_database_models import *


Contents of ../../apps/mm_scripts/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:38
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#



Contents of ../../apps/mm_scripts/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:38
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.apps import AppConfig


class MmScriptsConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.mm_scripts'


Contents of ../../apps/mm_scripts/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:38
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

#

from django.urls import path

from apps.mm_scripts.views import CustomScriptView_Create, CustomScriptView_List, \
    CustomScriptView_Connections, CustomScriptView_Delete, CustomScriptView_Store

app_name = "mm_scripts"

urlpatterns = [
    path("create/", CustomScriptView_Create.as_view(
        template_name="mm_scripts/scripts/create_custom_script.html"), name="create"),
    path("list/", CustomScriptView_List.as_view(
        template_name="mm_scripts/scripts/list_custom_scripts.html"), name="list"),
    path("delete/<int:pk>/", CustomScriptView_Delete.as_view(
        template_name="mm_scripts/scripts/confirm_delete_custom_script.html"), name="delete"),
    path("connect/", CustomScriptView_Connections.as_view(
        template_name="mm_scripts/connections/manage_script_connections.html"), name="connect"),
    path("store/", CustomScriptView_Store.as_view(
        template_name="mm_scripts/store/script_store.html"), name="store"),
]


Contents of ../../apps/mm_scripts/models/custom_script_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: custom_script_models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:38
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.db import models


class CustomScript(models.Model):
    is_public = models.BooleanField(default=False)
    categories = models.JSONField(default=list, blank=True)
    name = models.CharField(max_length=255)
    description = models.TextField(blank=True)
    script_content = models.TextField(blank=True)
    script_step_guide = models.JSONField(default=list, blank=True)
    script_picture = models.ImageField(upload_to="custom_scripts/%YYYY/%mm/%dd/", blank=True, null=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    created_by_user = models.ForeignKey("auth.User", on_delete=models.SET_NULL, null=True)
    is_featured = models.BooleanField(default=False)

    def __str__(self):
        return self.name + " - " + self.created_at.strftime("%Y-%m-%d %H:%M:%S")

    class Meta:
        verbose_name = "Custom Script"
        verbose_name_plural = "Custom Scripts"
        indexes = [
            models.Index(fields=["name"]),
            models.Index(fields=["created_by_user"]),
            models.Index(fields=["created_at"]),
            models.Index(fields=["updated_at"]),
            models.Index(fields=["is_public"]),
            models.Index(fields=["is_featured"]),
            models.Index(fields=["name", "is_public"]),
        ]


Contents of ../../apps/mm_scripts/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:38
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from .custom_script_models import *
from .custom_script_reference_models import *


Contents of ../../apps/mm_scripts/models/custom_script_reference_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: custom_script_reference_models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:38
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.db import models


class CustomScriptReference(models.Model):
    custom_script = models.ForeignKey("CustomScript", on_delete=models.CASCADE,
                                      related_name="custom_script_references")
    assistant = models.ForeignKey("assistants.Assistant", on_delete=models.CASCADE)
    script_source = models.CharField(max_length=255, default="internal", blank=True)
    created_by_user = models.ForeignKey("auth.User", on_delete=models.SET_NULL, null=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.custom_script.name + " - " + self.assistant.name + " - " + self.created_at.strftime(
            "%Y-%m-%d %H:%M:%S")

    class Meta:
        verbose_name = "Custom Script Reference"
        verbose_name_plural = "Custom Script References"
        unique_together = [["custom_script", "assistant"]]
        indexes = [
            models.Index(fields=["custom_script", "assistant"]),
            models.Index(fields=["assistant", "custom_script", "created_by_user"]),
            models.Index(fields=["created_at"]),
            models.Index(fields=["assistant"]),
            models.Index(fields=["custom_script"]),
            models.Index(fields=["created_by_user"]),
        ]


Contents of ../../apps/user_permissions/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:44
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#



Contents of ../../apps/user_permissions/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:44
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.apps import AppConfig


class UserPermissionsConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.user_permissions'


Contents of ../../apps/user_permissions/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:44
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.urls import path

from apps.user_permissions.views import PermissionView_PermissionCreate, PermissionView_PermissionList, \
    PermissionView_UserRoleManage, \
    PermissionView_UserRoleList, PermissionView_UserRoleCreate, PermissionView_UserRoleUpdate, \
    PermissionView_UserRoleDelete

app_name = "user_permissions"

urlpatterns = [
    path('add/', PermissionView_PermissionCreate.as_view(
        template_name="user_permissions/permissions/add_permissions.html"), name="add_permissions"),
    path('list/', PermissionView_PermissionList.as_view(
        template_name="user_permissions/permissions/list_permissions.html"), name="list_permissions"),
    path('roles/add/', PermissionView_UserRoleCreate.as_view(
        template_name="user_permissions/roles/add_user_role.html"), name="add_user_role"),
    path('roles/list/', PermissionView_UserRoleList.as_view(
        template_name="user_permissions/roles/list_user_roles.html"), name="list_user_roles"),
    path('roles/manage/', PermissionView_UserRoleManage.as_view(
        template_name="user_permissions/roles/manage_user_roles.html"), name="manage_user_roles"),
    path('roles/delete/<int:pk>/', PermissionView_UserRoleDelete.as_view(
        template_name="user_permissions/roles/confirm_delete_user_role.html"), name="delete_user_role"),
    path('roles/update/<int:pk>/', PermissionView_UserRoleUpdate.as_view(
        template_name="user_permissions/roles/update_user_role.html"), name="update_user_role"),
]


Contents of ../../apps/user_permissions/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:44
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from .user_permission_models import *
from .user_roles_models import *


Contents of ../../apps/user_permissions/models/user_permission_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: user_permission_models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:44
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.db import models

from apps.user_permissions.utils import PERMISSION_TYPES


class ActiveUserPermissionManager(models.Manager):
    def get_queryset(self):
        return super().get_queryset().filter(is_active=True)


class UserPermission(models.Model):
    user = models.ForeignKey("auth.User", on_delete=models.CASCADE, related_name="permissions", null=True)
    permission_type = models.CharField(max_length=255, choices=PERMISSION_TYPES)
    is_active = models.BooleanField(default=True)
    created_at = models.DateTimeField(auto_now_add=True)
    objects = models.Manager()  # The default manager.
    active_permissions = ActiveUserPermissionManager()  # Custom manager for active permissions.

    class Meta:
        verbose_name = "User Permission"
        verbose_name_plural = "User Permissions"
        ordering = ["-created_at"]
        constraints = [
            models.UniqueConstraint(fields=['user', 'permission_type'], name='unique_user_permission')
        ]
        indexes = [
            models.Index(fields=['user', 'permission_type']),
            models.Index(fields=['user', 'permission_type', 'is_active']),
            models.Index(fields=['user', 'is_active']),
            models.Index(fields=['permission_type', 'is_active']),
            models.Index(fields=['permission_type']),
            models.Index(fields=['is_active']),
            models.Index(fields=['created_at']),
            models.Index(fields=['user', 'created_at']),
            models.Index(fields=['permission_type', 'created_at']),
            models.Index(fields=['user', 'permission_type', 'created_at']),
            models.Index(fields=['user', 'permission_type', 'is_active', 'created_at']),
            models.Index(fields=['user', 'is_active', 'created_at']),
            models.Index(fields=['permission_type', 'is_active', 'created_at']),
        ]

    def get_permission_type_name(self):
        return dict(PERMISSION_TYPES)[self.permission_type]

    def get_permission_type_code(self):
        return self.permission_type


Contents of ../../apps/user_permissions/models/user_roles_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: user_roles_models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:44
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.contrib.auth.models import User
from django.db import models


class UserRole(models.Model):
    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE)
    role_name = models.CharField(max_length=1000)
    role_description = models.TextField(null=True, blank=True)
    role_permissions = models.JSONField(default=list)
    users = models.ManyToManyField(User, related_name='roles')
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    created_by_user = models.ForeignKey('auth.User', on_delete=models.SET_NULL, null=True, related_name='created_roles')

    class Meta:
        verbose_name = 'User Role'
        verbose_name_plural = 'User Roles'
        ordering = ['-created_at']
        indexes = [
            models.Index(fields=['organization']),
            models.Index(fields=['role_name']),
            models.Index(fields=['organization', 'role_name']),
            models.Index(fields=['organization', 'role_name', 'created_at']),
        ]

    def __str__(self):
        return self.organization.name + ' - ' + self.role_name + ' Role'


Contents of ../../apps/user_management/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:44
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#



Contents of ../../apps/user_management/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:43
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.apps import AppConfig


class UserManagementConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.user_management'


Contents of ../../apps/user_management/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:43
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.urls import path

from apps.user_management.views import UserManagementView_UserInvite, UserManagementView_UserList, \
    UserManagementView_UserDelete, UserManagementView_UserUpdateStatus, \
    UserManagementView_ConnectUser, UserManagementView_UserRemoveFromOrganization, UserManagementView_UserRemoveFromAll

app_name = "user_management"

urlpatterns = [
    path('add/', UserManagementView_UserInvite.as_view(template_name="user_management/users/add_new_user.html"),
         name="add"),
    path('list/', UserManagementView_UserList.as_view(template_name="user_management/users/list_users.html"),
         name="list"),
    path('remove/<int:pk>/', UserManagementView_UserDelete.as_view(
        template_name="user_management/users/confirm_remove_user.html"), name="remove"),
    path('update_user_status/', UserManagementView_UserUpdateStatus.as_view(), name='update_user_status'),
    path('add_user_to_organization/', UserManagementView_ConnectUser.as_view(
        template_name="user_management/connections/add_user_to_organization.html"), name='add_user_to_organization'),
    path('remove_user_from_organization/<int:pk>/<int:org_id>/', UserManagementView_UserRemoveFromOrganization.as_view(
        template_name="user_management/connections/confirm_remove_from_organization.html"),
         name='remove_user_from_organization'),
    path('remove_user_from_all_organizations/<int:pk>/', UserManagementView_UserRemoveFromAll.as_view(
        template_name="user_management/connections/confirm_remove_from_all_organizations.html"),
         name='remove_user_from_all_organizations'),
]


Contents of ../../apps/user_management/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:43
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#



Contents of ../../apps/meta_integrations/__init__.py:


Contents of ../../apps/meta_integrations/apps.py:
from django.apps import AppConfig


class MetaIntegrationsConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.meta_integrations'


Contents of ../../apps/meta_integrations/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-11-06 17:46:20
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-06 17:46:21
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
from django.urls import path
from apps.meta_integrations.views import MetaIntegrationView_MetaIntegrationCategoryList, \
    MetaIntegrationView_MetaIntegrationCategoryStore, MetaIntegrationView_IntegrateMetaIntegrationTeam

app_name = "meta_integrations"

urlpatterns = [
    path('categories/', MetaIntegrationView_MetaIntegrationCategoryList.as_view(
        template_name="meta_integrations/meta_integration_categories_list.html"), name="list"),
    path('categories/<slug:category_slug>/',
         MetaIntegrationView_MetaIntegrationCategoryStore.as_view(
             template_name="meta_integrations/store_meta_integration_category.html"), name="store"),

    path('integrate/', MetaIntegrationView_IntegrateMetaIntegrationTeam.as_view(), name="integrate"),
]


Contents of ../../apps/meta_integrations/models/meta_integration_category_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: meta_integration_category_models.py
#  Last Modified: 2024-11-06 17:49:15
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-06 17:49:28
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models
from slugify import slugify


class MetaIntegrationCategory(models.Model):
    category_name = models.CharField(max_length=1000, null=False, blank=False)
    category_description = models.TextField(null=True, blank=True)
    category_image_url = models.URLField(null=True, blank=True)
    tags = models.JSONField(null=True, blank=True)
    category_slug = models.SlugField(max_length=1000, null=True, blank=True, unique=True)

    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.category_name

    class Meta:
        verbose_name = 'Meta Integration Category'
        verbose_name_plural = 'Meta Integration Categories'
        unique_together = ['category_name']
        indexes = [
            models.Index(fields=['category_name']),
        ]

    def save(self, *args, **kwargs):
        if not self.category_slug:
            self.category_slug = slugify(self.category_name)
        super(MetaIntegrationCategory, self).save(*args, **kwargs)


Contents of ../../apps/meta_integrations/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-11-06 17:47:38
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-06 17:47:39
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from .meta_integration_team_models import *
from .meta_integration_category_models import *


Contents of ../../apps/meta_integrations/models/meta_integration_team_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: meta_integration_team_models.py
#  Last Modified: 2024-11-06 17:49:26
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-06 17:49:27
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
import os
import random
import uuid

from django.core.files import File
from django.core.files.storage import default_storage
from django.db import models
from config import settings


class MetaIntegrationTeam(models.Model):
    meta_integration_category = models.ForeignKey('MetaIntegrationCategory', on_delete=models.CASCADE, null=False,
                                                  blank=False)
    tags = models.JSONField(null=True, blank=True)
    meta_integration_name = models.CharField(max_length=1000, null=False, blank=False)
    meta_integration_description = models.TextField(null=True, blank=True)
    meta_integration_team_image = models.ImageField(upload_to='meta_integration_team_images/%Y/%m/%d/',
                                                    null=True, blank=True)

    integration_assistants = models.ManyToManyField('integrations.AssistantIntegration', blank=True,
                                                    related_name='meta_integration_teams')

    #################################################################################################################
    # OTHER FIELDS THAT ARE NEEDED (ON CREATION / INTEGRATION)
    #################################################################################################################
    # i. Organization -> will be taken from the user
    # ii. LLM Model -> will be taken from the user
    # iii. Management Type -> will be taken from the user
    #################################################################################################################

    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.meta_integration_name

    class Meta:
        verbose_name = 'Meta Integration Team'
        verbose_name_plural = 'Meta Integration Teams'
        indexes = [
            models.Index(fields=['meta_integration_name']),
            models.Index(fields=['meta_integration_category']),
            models.Index(fields=['tags']),
            models.Index(fields=['created_at']),
            models.Index(fields=['updated_at']),
        ]

    def save(self, *args, **kwargs):
        # Check if the image field is empty
        if not self.meta_integration_team_image:
            static_image_directory = os.path.join(settings.STATIC_ROOT, 'img', 'integration-teams-avatars')
            available_images = [f for f in os.listdir(static_image_directory) if f.endswith(('png', 'jpg', 'jpeg'))]
            if available_images:
                random_image = random.choice(available_images)
                random_image_path = os.path.join(static_image_directory, random_image)
                unique_filename = f'meta_integration_team_images/{uuid.uuid4()}.png'
                with open(random_image_path, 'rb') as img_file:
                    default_storage.save(unique_filename, File(img_file))
                self.meta_integration_team_image.name = unique_filename
        super(MetaIntegrationTeam, self).save(*args, **kwargs)


Contents of ../../apps/voidforger/__init__.py:


Contents of ../../apps/voidforger/apps.py:
from django.apps import AppConfig


class VoidforgerConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.voidforger'

    def ready(self):
        from apps.voidforger.signals import delete_toggle_auto_execution_memory_vector_embedding_signals
        from apps.voidforger.signals import delete_old_chat_messages_vector_embedding_signals
        from apps.voidforger.signals import delete_action_memory_vector_embedding_signals
        from apps.voidforger.signals import update_voidforger_toggle_auto_execution_memory_vector_embedding_after_save
        from apps.voidforger.signals import update_old_chat_messages_vector_embedding_signals
        from apps.voidforger.signals import update_action_memory_vector_embedding_signals
        pass


Contents of ../../apps/voidforger/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-11-14 21:28:02
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-14 21:28:03
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
from django.urls import path

from apps.voidforger.views import (VoidForgerView_ListVoidForgerAutoExecutionLogs,
                                   VoidForgerView_ManualTriggerVoidForgerRun,
                                   VoidForgerView_RefreshVoidForgerConnections, VoidForgerView_DeleteVoidForgerChat,
                                   VoidForgerView_AutoRunVoidForger, VoidForgerView_PurgeAutoExecutionLogs,
                                   VoidForgerView_PurgeActionMemoryLogs, VoidForgerView_ListActionMemoryLogs,
                                   VoidForgerView_Configuration)

app_name = 'voidforger'

urlpatterns = [
    # Configuration-related
    path("configuration/", VoidForgerView_Configuration.as_view(
        template_name="voidforger/configuration/voidforger_configuration.html"), name="configuration"),
    path("connections/refresh/<int:voidforger_id>/", VoidForgerView_RefreshVoidForgerConnections.as_view(),
         name="refresh_connections"),
    path("auto/run/<int:voidforger_id>/", VoidForgerView_AutoRunVoidForger.as_view(), name="auto_run"),
    path("manual/run/<int:voidforger_id>/", VoidForgerView_ManualTriggerVoidForgerRun.as_view(), name="manual_run"),

    # Logs-related
    path("auto_execution/logs/", VoidForgerView_ListVoidForgerAutoExecutionLogs.as_view(
        template_name="voidforger/logs/list_auto_execution_logs.html"), name="list_auto_execution_logs"),
    path("action_memory/logs/", VoidForgerView_ListActionMemoryLogs.as_view(
        template_name="voidforger/logs/list_action_memory_logs.html"), name="list_action_memory_logs"),
    path("auto_execution/logs/purge/<int:voidforger_id>/", VoidForgerView_PurgeAutoExecutionLogs.as_view(),
         name="purge_auto_execution_logs"),
    path("action_memory/logs/purge/<int:voidforger_id>/", VoidForgerView_PurgeActionMemoryLogs.as_view(),
         name="purge_action_memory_logs"),

    # Chat-related
    path("chat/delete/<int:pk>/", VoidForgerView_DeleteVoidForgerChat.as_view(
        template_name="voidforger/chats/voidforger_confirm_delete_chat.html"
    ), name="delete_chat"),
]


Contents of ../../apps/voidforger/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-11-14 21:28:26
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-14 21:28:27
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from .chat import *
from .logs import *
from .vectors import *
from .configuration import *


Contents of ../../apps/data_backups/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:39
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#



Contents of ../../apps/data_backups/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:39
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#

from django.apps import AppConfig


class DataBackupsConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.data_backups'


Contents of ../../apps/data_backups/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:39
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path

from apps.data_backups.views import DataBackupView_BackupManage, DataBackupView_BackupDelete, DataBackupView_ReloadBackup

app_name = 'data_backups'

urlpatterns = [
    path('manage/', DataBackupView_BackupManage.as_view(template_name='data_backups/manage_backups.html'), name='manage'),
    path('delete/<int:backup_id>/', DataBackupView_BackupDelete.as_view(), name='delete'),
    path('reload/<int:backup_id>/', DataBackupView_ReloadBackup.as_view(), name='reload'),
]


Contents of ../../apps/data_backups/models/data_backup_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: data_backup_models.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:39
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.db import models
from apps.data_backups.utils import BACKUP_TYPES


class DataBackup(models.Model):
    responsible_user = models.ForeignKey('auth.User', on_delete=models.CASCADE, null=True, blank=True)
    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE, null=True, blank=True)
    backup_name = models.CharField(max_length=255)
    backup_type = models.CharField(max_length=255, choices=BACKUP_TYPES, null=True, blank=True)
    backup_uuid = models.CharField(max_length=255, null=True, blank=True)
    created_at = models.DateTimeField(auto_now_add=True)
    serialized_data = models.TextField(null=True, blank=True)
    encryption_password = models.CharField(max_length=255)

    def __str__(self):
        return self.responsible_user.username + ' - ' + self.backup_name

    class Meta:
        verbose_name = 'Data Backup'
        verbose_name_plural = 'Data Backups'
        ordering = ['-created_at']
        indexes = [
            models.Index(fields=['organization']),
            models.Index(fields=['responsible_user']),
            models.Index(fields=['backup_name']),
            models.Index(fields=['backup_type']),
            models.Index(fields=['created_at']),
            models.Index(fields=['responsible_user', 'created_at']),
            models.Index(fields=['backup_name', 'created_at']),
            models.Index(fields=['organization', 'responsible_user']),
            models.Index(fields=['organization', 'backup_name']),
            models.Index(fields=['organization', 'backup_type']),
            models.Index(fields=['organization', 'created_at']),
            models.Index(fields=['responsible_user', 'backup_name', 'created_at']),
            models.Index(fields=['responsible_user', 'backup_type', 'created_at']),
            models.Index(fields=['organization', 'responsible_user', 'created_at']),
            models.Index(fields=['organization', 'backup_name', 'created_at']),
            models.Index(fields=['organization', 'responsible_user', 'backup_name', 'created_at']),
            models.Index(fields=['organization', 'responsible_user', 'backup_type', 'created_at']),
            models.Index(fields=['organization', 'backup_name', 'backup_type', 'created_at']),
            models.Index(fields=['organization', 'responsible_user', 'backup_name', 'backup_type', 'created_at']),
        ]


Contents of ../../apps/data_backups/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:47
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:39
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from .data_backup_models import *


Contents of ../../apps/notifications/__init__.py:


Contents of ../../apps/notifications/apps.py:
from django.apps import AppConfig


class NotificationsConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.notifications'


Contents of ../../apps/notifications/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-20 14:08:10
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-20 14:08:11
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
from django.urls import path

from apps.notifications.views import (NotificationView_ItemListCreate, NotificationView_ItemDelete,
                                      NotificationView_MarkAllAsRead)

app_name = 'notifications'

urlpatterns = [
    path("list/", NotificationView_ItemListCreate.as_view(
        template_name="notifications/list_create_notification.html"), name="list_create"),
    path("delete/<int:pk>/", NotificationView_ItemDelete.as_view(), name="delete"),
    path("mark_all_as_read/", NotificationView_MarkAllAsRead.as_view(), name="mark_all_as_read"),
]


Contents of ../../apps/notifications/models/notification_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: notification_models.py
#  Last Modified: 2024-10-20 14:08:28
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-20 14:08:29
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
import logging

from django.contrib.auth.models import User
from django.db import models

from apps.notifications.utils import (NOTIFICATION_FA_ICON_CHOICES, NOTIFICATION_TITLE_CATEGORY_CHOICES,
                                      NOTIFICATION_SENDER_TYPES, NotificationSenderTypeNames)
from apps.organization.models import Organization

logger = logging.getLogger(__name__)


class OrderedNotificationManager(models.Manager):
    def get_queryset(self):
        return super().get_queryset().order_by('-created_at')


class NotificationItem(models.Model):
    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name='associated_notifications', null=True, blank=True)
    organization = models.ForeignKey('organization.Organization', null=True, blank=True, on_delete=models.CASCADE)
    notification_sender_type = models.CharField(max_length=1000, choices=NOTIFICATION_SENDER_TYPES,
                                                default=NotificationSenderTypeNames.BIMOD_TEAM)
    notification_title_category = models.CharField(max_length=1000, choices=NOTIFICATION_TITLE_CATEGORY_CHOICES,
                                                   default='info')
    notification_fa_icon = models.CharField(max_length=1000, choices=NOTIFICATION_FA_ICON_CHOICES,
                                            default='fa fa-bell')

    notification_message = models.TextField()
    created_at = models.DateTimeField(auto_now_add=True)

    readers = models.ManyToManyField('auth.User', related_name='read_notifications', blank=True)
    objects = OrderedNotificationManager()

    def __str__(self):
        return self.notification_title_category + ' - ' + str(self.created_at)

    class Meta:
        verbose_name = 'Notification Item'
        verbose_name_plural = 'Notification Items'
        ordering = ('-created_at',)
        indexes = [
            models.Index(fields=['organization', 'created_at']),
            models.Index(fields=['notification_sender_type', 'created_at']),
            models.Index(fields=['notification_title_category', 'created_at']),
            models.Index(fields=['notification_fa_icon', 'created_at']),
            models.Index(fields=['created_at']),
        ]

    @staticmethod
    def add_notification_to_user(notification, user):
        try:
            if notification not in user.profile.notifications.all():
                user.profile.notifications.add(notification)
                logger.info(f"Notification added to user: {user}")
            else:
                logger.info("Notification already added to user, skipping...")
        except Exception as e:
            logger.error(f"Error adding notification to user: {e}")

    @staticmethod
    def add_notification_to_users(notification, acting_user):
        orgs_users = []
        if notification.notification_sender_type == NotificationSenderTypeNames.SYSTEM:
            user_orgs = Organization.objects.filter(users__in=[acting_user])
            for org in user_orgs:
                orgs_users += org.users.all()
            orgs_users = list(set(orgs_users))
        elif notification.notification_sender_type == NotificationSenderTypeNames.BIMOD_TEAM:
            orgs_users = User.objects.all()  # Send to all users

        for user in orgs_users:
            try:
                if notification not in user.profile.notifications.all():
                    user.profile.notifications.add(notification)
                    logger.info(f"Notification added to user: {user}")
                else:
                    logger.info("Notification already added to user, skipping...")
            except Exception as e:
                logger.error(f"Error adding notification to user: {e}")

    def save(self, force_insert=False, force_update=False, using=None, update_fields=None):
        super().save(force_insert, force_update, using, update_fields)
        if self.notification_sender_type == NotificationSenderTypeNames.BIMOD_TEAM:
            self.add_notification_to_users(notification=self, acting_user=None)
        elif self.notification_sender_type == NotificationSenderTypeNames.WELCOME:
            self.add_notification_to_user(notification=self, user=self.user)


Contents of ../../apps/notifications/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-20 14:06:28
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-20 14:06:29
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from .notification_models import *


Contents of ../../apps/memories/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:34
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#



Contents of ../../apps/memories/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:34
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.apps import AppConfig


class MemoriesConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.memories'


Contents of ../../apps/memories/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:34
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.urls import path

from apps.memories.views import AssistantMemoryView_List, AssistantMemoryView_Create, AssistantMemoryView_Delete

app_name = "memories"

urlpatterns = [
    path("list/", AssistantMemoryView_List.as_view(template_name="memories/list_memories.html"), name="list"),
    path("create/", AssistantMemoryView_Create.as_view(template_name="memories/create_memory.html"), name="create"),
    path("delete/<int:pk>/", AssistantMemoryView_Delete.as_view(), name="delete"),
]


Contents of ../../apps/memories/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:34
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from .assistant_memory_models import *


Contents of ../../apps/memories/models/assistant_memory_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: assistant_memory_models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:34
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.db import models

from apps.memories.utils import AGENT_STANDARD_MEMORY_TYPES


class AssistantMemory(models.Model):
    user = models.ForeignKey("auth.User", on_delete=models.CASCADE)
    organization = models.ForeignKey("organization.Organization", on_delete=models.CASCADE, null=True, blank=True)
    assistant = models.ForeignKey("assistants.Assistant", on_delete=models.CASCADE)
    memory_type = models.CharField(max_length=50, choices=AGENT_STANDARD_MEMORY_TYPES, default="user-specific")
    memory_text_content = models.TextField(default="")
    created_at = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return f"{self.assistant} - {self.memory_type}"

    class Meta:
        verbose_name = "Memory"
        verbose_name_plural = "Memories"
        ordering = ["-created_at"]
        indexes = [
            models.Index(fields=["assistant", "user", "created_at"]),
            models.Index(fields=["assistant", "user"]),
            models.Index(fields=["assistant", "created_at"]),
            models.Index(fields=["user", "created_at"]),
        ]


Contents of ../../apps/multimodal_chat/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:43
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#



Contents of ../../apps/multimodal_chat/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:43
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.apps import AppConfig


class MultimodalChatConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.multimodal_chat'

    def ready(self):
        from . import signals


Contents of ../../apps/multimodal_chat/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:43
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#


from django.urls import path

from .views import ChatView_Chat, ChatView_ChatDelete, ChatView_ChatArchive, ChatView_ListArchivedChats, \
    ChatView_ChatUnarchive, \
    ChatView_ChatStream, LeanChat_MessageNarration, ChatView_LeanChat, ChatView_LeanChatArchive, \
    ChatView_LeanChatUnarchive, ChatView_LeanChatListArchivedChats, ChatView_LeanChatStream, ChatView_LeanChatDelete, \
    ChatView_MainWorkspace, ChatView_MainWorkspaceStream, Chat_MessageNarration, VoidForgerChat_MessageNarration

app_name = "multimodal_chat"

urlpatterns = [
    path('chat/', ChatView_Chat.as_view(template_name="multimodal_chat/chats/chat.html"), name='chat'),
    path('chat/stream/', ChatView_ChatStream.as_view(), name='chat_stream'),
    path('chat/<int:pk>/', ChatView_ChatDelete.as_view(
        template_name="multimodal_chat/chats/confirm_delete_chat.html"), name='delete'),
    path('archive/<int:pk>/', ChatView_ChatArchive.as_view(
        template_name="multimodal_chat/archives/archived_chats.html"), name='archive'),
    path('unarchive/<int:pk>/', ChatView_ChatUnarchive.as_view(
        template_name="multimodal_chat/archives/archived_chats.html"), name='unarchive'),
    path('chat/archive/', ChatView_ListArchivedChats.as_view(
        template_name="multimodal_chat/archives/archived_chats.html"), name='archive_list'),

    path('tts/chat/message/<int:pk>/', Chat_MessageNarration.as_view(), name='tts_chat_message'),
    path('tts/lean_chat/message/<int:pk>/', LeanChat_MessageNarration.as_view(), name='tts_leanmod_chat_message'),
    path('tts/voidforger_chat/message/<int:pk>/', VoidForgerChat_MessageNarration.as_view(), name='tts_voidforger_chat_message'),

    path('lean_chat/', ChatView_LeanChat.as_view(template_name="multimodal_chat/chats/lean_chat.html"),
         name='lean_chat'),
    path('lean_chat/stream/', ChatView_LeanChatStream.as_view(), name='chat_stream_lean'),
    path('lean_chat/<int:pk>/', ChatView_LeanChatDelete.as_view(
        template_name="multimodal_chat/chats/confirm_delete_lean_chat.html"), name='delete_lean'),
    path('archive_lean/<int:pk>/', ChatView_LeanChatArchive.as_view(
        template_name="multimodal_chat/archives/archived_lean_chats.html"), name='archive_lean'),
    path('unarchive_lean/<int:pk>/', ChatView_LeanChatUnarchive.as_view(
        template_name="multimodal_chat/archives/archived_lean_chats.html"), name='unarchive_lean'),
    path('lean_chat/archive_lean/', ChatView_LeanChatListArchivedChats.as_view(
        template_name="multimodal_chat/archives/archived_lean_chats.html"), name='archive_list_lean'),

    path('workspace/stream/', ChatView_MainWorkspaceStream.as_view(), name='main_workspace_stream'),
    path('workspace/', ChatView_MainWorkspace.as_view(template_name="multimodal_chat/workspace/main_workspace.html"
                                                      ), name='main_workspace')
]


Contents of ../../apps/multimodal_chat/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:43
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

#
from .chat import *
from .lean_chat import *
from .creation_log import *


Contents of ../../apps/llm_transaction/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:43
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#



Contents of ../../apps/llm_transaction/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:43
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.apps import AppConfig


class LLMTransactionConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.llm_transaction'


Contents of ../../apps/llm_transaction/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:43
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.urls import path

from .views import Transactions_TransactionList, Transactions_AutoTopUpCreate, Transactions_AutoTopUpList, \
    Transactions_InvoiceList, Transactions_AutoTopUp_Update, Transactions_ManualTopUpCreate, Transactions_BalanceTransfer

app_name = "llm_transaction"

urlpatterns = [
    path('list/', Transactions_TransactionList.as_view(
        template_name="llm_transaction/transactions/list_transactions.html"), name='list'),
    path('auto_top_up/create/', Transactions_AutoTopUpCreate.as_view(
        template_name="llm_transaction/topup/create_auto_topup.html"), name='auto_top_up_create'),
    path('auto_top_up/update/<int:plan_id>/', Transactions_AutoTopUp_Update.as_view(
        template_name="llm_transaction/topup/update_auto_topup.html"), name='auto_top_up_update'),
    path('auto_top_up/list/', Transactions_AutoTopUpList.as_view(
        template_name="llm_transaction/topup/manage_auto_topup_plans.html"), name='auto_top_up_list'),
    path('transaction_invoices/list/', Transactions_InvoiceList.as_view(
        template_name="llm_transaction/invoices/list_transaction_invoices.html"), name='transaction_invoices_list'),
    path('top_up/create/', Transactions_ManualTopUpCreate.as_view(
        template_name="llm_transaction/topup/create_topup.html"), name='create_top_up'),
    path('top_up/transfer/', Transactions_BalanceTransfer.as_view(
        template_name="llm_transaction/topup/transfer_balance.html"), name='transfer_balance'),
]


Contents of ../../apps/llm_transaction/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:43
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from .llm_transaction import *
from .invoice import *
from .snapshot import *
from .auto_topup import *


Contents of ../../apps/mm_scheduled_jobs/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:45
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

default_app_config = 'apps.mm_scheduled_jobs.apps.MmScheduledJobsConfig'


Contents of ../../apps/mm_scheduled_jobs/apps.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: apps.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:45
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.apps import AppConfig


class MmScheduledJobsConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'apps.mm_scheduled_jobs'

    def ready(self):
        import apps.mm_scheduled_jobs.signals


Contents of ../../apps/mm_scheduled_jobs/urls.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: urls.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:45
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.urls import path

from .views import (ScheduledJobView_Create, ScheduledJobView_List, ScheduledJobView_LogList,
                    ScheduledJobView_Delete)
from .views.log.list_orchestration_scheduled_job_logs_views import ScheduledJobView_OrchestrationLogList
from .views.scheduled_job.create_orchestration_scheduled_job_views import ScheduledJobView_OrchestrationCreate
from .views.scheduled_job.delete_orchestration_scheduled_jobs_views import ScheduledJobView_OrchestrationDelete
from .views.scheduled_job.list_orchestration_scheduled_jobs_views import ScheduledJobView_OrchestrationList

app_name = "mm_scheduled_jobs"

urlpatterns = [
    path('create/', ScheduledJobView_Create.as_view(template_name='mm_scheduled_jobs/create_scheduled_job.html'),
         name='create'),
    path('list/', ScheduledJobView_List.as_view(template_name='mm_scheduled_jobs/list_scheduled_jobs.html'),
         name='list'),
    path('logs/<int:pk>/', ScheduledJobView_LogList.as_view(
        template_name='mm_scheduled_jobs/list_scheduled_job_logs.html'), name='logs'),
    path('confirm-delete/<int:pk>/', ScheduledJobView_Delete.as_view(
        template_name='mm_scheduled_jobs/confirm_delete_scheduled_job.html'), name='delete'),

    #####

    path('orchestration/create/', ScheduledJobView_OrchestrationCreate.as_view(
        template_name='mm_scheduled_jobs/create_orchestration_scheduled_job.html'), name='orchestration_create'),
    path('orchestration/list/', ScheduledJobView_OrchestrationList.as_view(
        template_name='mm_scheduled_jobs/list_orchestration_scheduled_jobs.html'), name='orchestration_list'),
    path('orchestration/logs/<int:pk>/', ScheduledJobView_OrchestrationLogList.as_view(
        template_name='mm_scheduled_jobs/list_orchestration_scheduled_job_logs.html'), name='orchestration_logs'),
    path('orchestration/confirm-delete/<int:pk>/', ScheduledJobView_OrchestrationDelete.as_view(
        template_name='mm_scheduled_jobs/confirm_delete_orchestration_scheduled_job.html'), name='orchestration_delete'),
]


Contents of ../../apps/mm_scheduled_jobs/models/scheduled_job_instance_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: scheduled_job_instance_models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:45
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.db import models

from apps.mm_scheduled_jobs.utils import SCHEDULED_JOB_INSTANCE_STATUSES


class ScheduledJobInstance(models.Model):
    scheduled_job = models.ForeignKey('mm_scheduled_jobs.ScheduledJob', on_delete=models.CASCADE, related_name='scheduled_job_instances',
                                      null=True)
    status = models.CharField(max_length=255, choices=SCHEDULED_JOB_INSTANCE_STATUSES, default='pending')
    logs = models.JSONField(default=list)
    execution_index = models.IntegerField(default=0, null=True)
    started_at = models.DateTimeField(auto_now_add=True)
    ended_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.scheduled_job.name + ' - ' + self.status + ' - ' + self.started_at.strftime('%Y%m%d%H%M%S')

    class Meta:
        ordering = ['-started_at']
        verbose_name = 'Scheduled Job Instance'
        verbose_name_plural = 'Scheduled Job Instances'
        indexes = [
            models.Index(fields=['scheduled_job', 'status', 'started_at']),
            models.Index(fields=['scheduled_job', 'status', 'started_at', 'ended_at']),
            models.Index(fields=['scheduled_job', 'status', 'started_at', 'ended_at', 'id']),
            models.Index(fields=['scheduled_job', 'status', 'started_at', 'ended_at', 'id', 'status']),
            models.Index(fields=['scheduled_job', 'status', 'started_at', 'ended_at', 'id', 'status', 'logs']),
        ]


Contents of ../../apps/mm_scheduled_jobs/models/scheduled_job_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: scheduled_job_models.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:45
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from django.db import models


class ScheduledJob(models.Model):
    name = models.CharField(max_length=255)
    task_description = models.TextField(blank=True, null=True)
    step_guide = models.JSONField(default=list)
    assistant = models.ForeignKey('assistants.Assistant', on_delete=models.CASCADE, related_name='scheduled_jobs')
    minute = models.CharField(max_length=600, blank=True, null=True)
    hour = models.CharField(max_length=240, blank=True, null=True)
    day_of_week = models.CharField(max_length=90, blank=True, null=True)  # e.g., "0,1,2,3,4"
    day_of_month = models.CharField(max_length=310, blank=True, null=True)  # e.g., "1,15,30"
    month_of_year = models.CharField(max_length=120, blank=True, null=True)  # e.g., "1,6,12"
    current_run_count = models.PositiveIntegerField(default=0)
    maximum_runs = models.PositiveIntegerField(default=1000)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE, related_name='scheduled_jobs')

    def __str__(self):
        return self.name + ' - ' + self.assistant.name + ' - ' + self.created_by_user.username + ' - ' + self.created_at.strftime(
            '%Y%m%d%H%M%S')

    class Meta:
        ordering = ['-created_at']
        verbose_name = 'Scheduled Job'
        verbose_name_plural = 'Scheduled Jobs'
        indexes = [
            models.Index(fields=['name', 'assistant', 'created_by_user', 'created_at']),
            models.Index(fields=['created_at']),
            models.Index(fields=['assistant']),
            models.Index(fields=['created_by_user']),
            models.Index(fields=['assistant', 'created_by_user']),
            models.Index(fields=['assistant', 'created_by_user', 'created_at']),
            models.Index(fields=['assistant', 'created_by_user', 'created_at', 'name']),
            models.Index(fields=['assistant', 'created_by_user', 'created_at', 'name', 'current_run_count']),
        ]


Contents of ../../apps/mm_scheduled_jobs/models/orchestration_scheduled_job_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: orchestration_scheduled_job_models.py
#  Last Modified: 2024-11-14 06:06:30
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-14 06:06:31
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.db import models

class OrchestrationScheduledJob(models.Model):
    maestro = models.ForeignKey('orchestrations.Maestro', on_delete=models.CASCADE, related_name='scheduled_jobs')
    name = models.CharField(max_length=255)
    task_description = models.TextField(blank=True, null=True)
    step_guide = models.JSONField(default=list)
    minute = models.CharField(max_length=600, blank=True, null=True)
    hour = models.CharField(max_length=240, blank=True, null=True)
    day_of_week = models.CharField(max_length=90, blank=True, null=True)  # e.g., "0,1,2,3,4"
    day_of_month = models.CharField(max_length=310, blank=True, null=True)  # e.g., "1,15,30"
    month_of_year = models.CharField(max_length=120, blank=True, null=True)  # e.g., "1,6,12"
    current_run_count = models.PositiveIntegerField(default=0)
    maximum_runs = models.PositiveIntegerField(default=1000)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)
    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE, related_name='orchestration_scheduled_jobs')

    def __str__(self):
        return self.name + ' - ' + self.maestro.name + ' - ' + self.created_by_user.username + ' - ' + self.created_at.strftime(
            '%Y%m%d%H%M%S')

    class Meta:
        ordering = ['-created_at']
        verbose_name = 'Orchestration Scheduled Job'
        verbose_name_plural = 'Orchestration Scheduled Jobs'
        indexes = [
            models.Index(fields=['name', 'maestro', 'created_by_user', 'created_at']),
            models.Index(fields=['created_at']),
            models.Index(fields=['maestro']),
            models.Index(fields=['created_by_user']),
            models.Index(fields=['maestro', 'created_by_user']),
            models.Index(fields=['maestro', 'created_by_user', 'created_at']),
            models.Index(fields=['maestro', 'created_by_user', 'created_at', 'name']),
            models.Index(fields=['maestro', 'created_by_user', 'created_at', 'name', 'current_run_count']),
        ]


Contents of ../../apps/mm_scheduled_jobs/models/__init__.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: __init__.py
#  Last Modified: 2024-10-05 01:39:48
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-10-05 14:42:45
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#
#
#
#

from .scheduled_job_models import *
from .scheduled_job_instance_models import *
from .orchestration_scheduled_job_instance_models import *
from .orchestration_scheduled_job_models import *


Contents of ../../apps/mm_scheduled_jobs/models/orchestration_scheduled_job_instance_models.py:
#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.
#
#  Project: Bimod.io™
#  File: orchestration_scheduled_job_instance_models.py
#  Last Modified: 2024-11-14 06:06:39
#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)
#  Created: 2024-11-14 06:06:40
#
#  This software is proprietary and confidential. Unauthorized copying,
#  distribution, modification, or use of this software, whether for
#  commercial, academic, or any other purpose, is strictly prohibited
#  without the prior express written permission of BMD™ Autonomous
#  Holdings.
#
#   For permission inquiries, please contact: admin@Bimod.io.
#

from django.db import models


from apps.mm_scheduled_jobs.utils import SCHEDULED_JOB_INSTANCE_STATUSES


class OrchestrationScheduledJobInstance(models.Model):
    scheduled_job = models.ForeignKey('mm_scheduled_jobs.OrchestrationScheduledJob', on_delete=models.CASCADE,
                                      related_name='scheduled_job_instances', null=True)
    status = models.CharField(max_length=255, choices=SCHEDULED_JOB_INSTANCE_STATUSES, default='pending')
    logs = models.JSONField(default=list)
    execution_index = models.IntegerField(default=0, null=True)
    started_at = models.DateTimeField(auto_now_add=True)
    ended_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.scheduled_job.name + ' - ' + self.status + ' - ' + self.started_at.strftime(
            '%Y%m%d%H%M%S')

    class Meta:
        ordering = ['-started_at']
        verbose_name = 'Orchestration Scheduled Job Instance'
        verbose_name_plural = 'Orchestration Scheduled Job Instances'
        indexes = [
            models.Index(fields=['scheduled_job', 'status', 'started_at']),
            models.Index(fields=['scheduled_job', 'status', 'started_at', 'ended_at']),
            models.Index(fields=['scheduled_job', 'status', 'started_at', 'ended_at', 'id']),
            models.Index(fields=['scheduled_job', 'status', 'started_at', 'ended_at', 'id', 'status']),
            models.Index(fields=['scheduled_job', 'status', 'started_at', 'ended_at', 'id', 'status', 'logs']),
        ]


