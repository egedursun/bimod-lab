[
    {
        "label": "logging",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "logging",
        "description": "logging",
        "detail": "logging",
        "documentation": {}
    },
    {
        "label": "os.path",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os.path",
        "description": "os.path",
        "detail": "os.path",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Container",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Iterable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "TextIO",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "cast",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Container",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Iterable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "argparse",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "argparse",
        "description": "argparse",
        "detail": "argparse",
        "documentation": {}
    },
    {
        "label": "ArgumentParser",
        "importPath": "argparse",
        "description": "argparse",
        "isExtraImport": true,
        "detail": "argparse",
        "documentation": {}
    },
    {
        "label": "pdfminer",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pdfminer",
        "description": "pdfminer",
        "detail": "pdfminer",
        "documentation": {}
    },
    {
        "label": "PDFDocument",
        "importPath": "pdfminer.pdfdocument",
        "description": "pdfminer.pdfdocument",
        "isExtraImport": true,
        "detail": "pdfminer.pdfdocument",
        "documentation": {}
    },
    {
        "label": "PDFNoOutlines",
        "importPath": "pdfminer.pdfdocument",
        "description": "pdfminer.pdfdocument",
        "isExtraImport": true,
        "detail": "pdfminer.pdfdocument",
        "documentation": {}
    },
    {
        "label": "PDFXRefFallback",
        "importPath": "pdfminer.pdfdocument",
        "description": "pdfminer.pdfdocument",
        "isExtraImport": true,
        "detail": "pdfminer.pdfdocument",
        "documentation": {}
    },
    {
        "label": "PDFPage",
        "importPath": "pdfminer.pdfpage",
        "description": "pdfminer.pdfpage",
        "isExtraImport": true,
        "detail": "pdfminer.pdfpage",
        "documentation": {}
    },
    {
        "label": "PDFParser",
        "importPath": "pdfminer.pdfparser",
        "description": "pdfminer.pdfparser",
        "isExtraImport": true,
        "detail": "pdfminer.pdfparser",
        "documentation": {}
    },
    {
        "label": "PDFObjectNotFound",
        "importPath": "pdfminer.pdftypes",
        "description": "pdfminer.pdftypes",
        "isExtraImport": true,
        "detail": "pdfminer.pdftypes",
        "documentation": {}
    },
    {
        "label": "PDFValueError",
        "importPath": "pdfminer.pdftypes",
        "description": "pdfminer.pdftypes",
        "isExtraImport": true,
        "detail": "pdfminer.pdftypes",
        "documentation": {}
    },
    {
        "label": "PDFStream",
        "importPath": "pdfminer.pdftypes",
        "description": "pdfminer.pdftypes",
        "isExtraImport": true,
        "detail": "pdfminer.pdftypes",
        "documentation": {}
    },
    {
        "label": "PDFObjRef",
        "importPath": "pdfminer.pdftypes",
        "description": "pdfminer.pdftypes",
        "isExtraImport": true,
        "detail": "pdfminer.pdftypes",
        "documentation": {}
    },
    {
        "label": "resolve1",
        "importPath": "pdfminer.pdftypes",
        "description": "pdfminer.pdftypes",
        "isExtraImport": true,
        "detail": "pdfminer.pdftypes",
        "documentation": {}
    },
    {
        "label": "stream_value",
        "importPath": "pdfminer.pdftypes",
        "description": "pdfminer.pdftypes",
        "isExtraImport": true,
        "detail": "pdfminer.pdftypes",
        "documentation": {}
    },
    {
        "label": "PSKeyword",
        "importPath": "pdfminer.psparser",
        "description": "pdfminer.psparser",
        "isExtraImport": true,
        "detail": "pdfminer.psparser",
        "documentation": {}
    },
    {
        "label": "PSLiteral",
        "importPath": "pdfminer.psparser",
        "description": "pdfminer.psparser",
        "isExtraImport": true,
        "detail": "pdfminer.psparser",
        "documentation": {}
    },
    {
        "label": "LIT",
        "importPath": "pdfminer.psparser",
        "description": "pdfminer.psparser",
        "isExtraImport": true,
        "detail": "pdfminer.psparser",
        "documentation": {}
    },
    {
        "label": "isnumber",
        "importPath": "pdfminer.utils",
        "description": "pdfminer.utils",
        "isExtraImport": true,
        "detail": "pdfminer.utils",
        "documentation": {}
    },
    {
        "label": "AnyIO",
        "importPath": "pdfminer.utils",
        "description": "pdfminer.utils",
        "isExtraImport": true,
        "detail": "pdfminer.utils",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "JSONDecoder",
        "importPath": "json",
        "description": "json",
        "isExtraImport": true,
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "JSONDecoder",
        "importPath": "json",
        "description": "json",
        "isExtraImport": true,
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "JSONDecoder",
        "importPath": "json",
        "description": "json",
        "isExtraImport": true,
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "pformat",
        "importPath": "pprint",
        "description": "pprint",
        "isExtraImport": true,
        "detail": "pprint",
        "documentation": {}
    },
    {
        "label": "pprint",
        "importPath": "pprint",
        "description": "pprint",
        "isExtraImport": true,
        "detail": "pprint",
        "documentation": {}
    },
    {
        "label": "jmespath",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "jmespath",
        "description": "jmespath",
        "detail": "jmespath",
        "documentation": {}
    },
    {
        "label": "exceptions",
        "importPath": "jmespath",
        "description": "jmespath",
        "isExtraImport": true,
        "detail": "jmespath",
        "documentation": {}
    },
    {
        "label": "pdfminer.high_level",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pdfminer.high_level",
        "description": "pdfminer.high_level",
        "detail": "pdfminer.high_level",
        "documentation": {}
    },
    {
        "label": "LAParams",
        "importPath": "pdfminer.layout",
        "description": "pdfminer.layout",
        "isExtraImport": true,
        "detail": "pdfminer.layout",
        "documentation": {}
    },
    {
        "label": "publish_cmdline",
        "importPath": "docutils.core",
        "description": "docutils.core",
        "isExtraImport": true,
        "detail": "docutils.core",
        "documentation": {}
    },
    {
        "label": "default_description",
        "importPath": "docutils.core",
        "description": "docutils.core",
        "isExtraImport": true,
        "detail": "docutils.core",
        "documentation": {}
    },
    {
        "label": "publish_cmdline",
        "importPath": "docutils.core",
        "description": "docutils.core",
        "isExtraImport": true,
        "detail": "docutils.core",
        "documentation": {}
    },
    {
        "label": "default_description",
        "importPath": "docutils.core",
        "description": "docutils.core",
        "isExtraImport": true,
        "detail": "docutils.core",
        "documentation": {}
    },
    {
        "label": "publish_cmdline",
        "importPath": "docutils.core",
        "description": "docutils.core",
        "isExtraImport": true,
        "detail": "docutils.core",
        "documentation": {}
    },
    {
        "label": "default_description",
        "importPath": "docutils.core",
        "description": "docutils.core",
        "isExtraImport": true,
        "detail": "docutils.core",
        "documentation": {}
    },
    {
        "label": "publish_cmdline",
        "importPath": "docutils.core",
        "description": "docutils.core",
        "isExtraImport": true,
        "detail": "docutils.core",
        "documentation": {}
    },
    {
        "label": "publish_cmdline",
        "importPath": "docutils.core",
        "description": "docutils.core",
        "isExtraImport": true,
        "detail": "docutils.core",
        "documentation": {}
    },
    {
        "label": "default_description",
        "importPath": "docutils.core",
        "description": "docutils.core",
        "isExtraImport": true,
        "detail": "docutils.core",
        "documentation": {}
    },
    {
        "label": "publish_cmdline_to_binary",
        "importPath": "docutils.core",
        "description": "docutils.core",
        "isExtraImport": true,
        "detail": "docutils.core",
        "documentation": {}
    },
    {
        "label": "default_description",
        "importPath": "docutils.core",
        "description": "docutils.core",
        "isExtraImport": true,
        "detail": "docutils.core",
        "documentation": {}
    },
    {
        "label": "publish_cmdline",
        "importPath": "docutils.core",
        "description": "docutils.core",
        "isExtraImport": true,
        "detail": "docutils.core",
        "documentation": {}
    },
    {
        "label": "default_description",
        "importPath": "docutils.core",
        "description": "docutils.core",
        "isExtraImport": true,
        "detail": "docutils.core",
        "documentation": {}
    },
    {
        "label": "publish_cmdline",
        "importPath": "docutils.core",
        "description": "docutils.core",
        "isExtraImport": true,
        "detail": "docutils.core",
        "documentation": {}
    },
    {
        "label": "default_description",
        "importPath": "docutils.core",
        "description": "docutils.core",
        "isExtraImport": true,
        "detail": "docutils.core",
        "documentation": {}
    },
    {
        "label": "publish_cmdline",
        "importPath": "docutils.core",
        "description": "docutils.core",
        "isExtraImport": true,
        "detail": "docutils.core",
        "documentation": {}
    },
    {
        "label": "publish_cmdline",
        "importPath": "docutils.core",
        "description": "docutils.core",
        "isExtraImport": true,
        "detail": "docutils.core",
        "documentation": {}
    },
    {
        "label": "default_description",
        "importPath": "docutils.core",
        "description": "docutils.core",
        "isExtraImport": true,
        "detail": "docutils.core",
        "documentation": {}
    },
    {
        "label": "publish_cmdline",
        "importPath": "docutils.core",
        "description": "docutils.core",
        "isExtraImport": true,
        "detail": "docutils.core",
        "documentation": {}
    },
    {
        "label": "default_description",
        "importPath": "docutils.core",
        "description": "docutils.core",
        "isExtraImport": true,
        "detail": "docutils.core",
        "documentation": {}
    },
    {
        "label": "locale",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "locale",
        "description": "locale",
        "detail": "locale",
        "documentation": {}
    },
    {
        "label": "manpage",
        "importPath": "docutils.writers",
        "description": "docutils.writers",
        "isExtraImport": true,
        "detail": "docutils.writers",
        "documentation": {}
    },
    {
        "label": "Writer",
        "importPath": "docutils.writers.odf_odt",
        "description": "docutils.writers.odf_odt",
        "isExtraImport": true,
        "detail": "docutils.writers.odf_odt",
        "documentation": {}
    },
    {
        "label": "Reader",
        "importPath": "docutils.writers.odf_odt",
        "description": "docutils.writers.odf_odt",
        "isExtraImport": true,
        "detail": "docutils.writers.odf_odt",
        "documentation": {}
    },
    {
        "label": "prepstyles",
        "importPath": "docutils.writers.odf_odt",
        "description": "docutils.writers.odf_odt",
        "isExtraImport": true,
        "detail": "docutils.writers.odf_odt",
        "documentation": {}
    },
    {
        "label": "print_function",
        "importPath": "__future__",
        "description": "__future__",
        "isExtraImport": true,
        "detail": "__future__",
        "documentation": {}
    },
    {
        "label": "absolute_import",
        "importPath": "__future__",
        "description": "__future__",
        "isExtraImport": true,
        "detail": "__future__",
        "documentation": {}
    },
    {
        "label": "unicode_literals",
        "importPath": "__future__",
        "description": "__future__",
        "isExtraImport": true,
        "detail": "__future__",
        "documentation": {}
    },
    {
        "label": "ZipFile",
        "importPath": "zipfile",
        "description": "zipfile",
        "isExtraImport": true,
        "detail": "zipfile",
        "documentation": {}
    },
    {
        "label": "BadZipFile",
        "importPath": "zipfile",
        "description": "zipfile",
        "isExtraImport": true,
        "detail": "zipfile",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "MOCK_STREAM_STRATEGIST",
        "importPath": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "description": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "isExtraImport": true,
        "detail": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "documentation": {}
    },
    {
        "label": "MOCK_STREAM_BACKTESTING",
        "importPath": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "description": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "isExtraImport": true,
        "detail": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "description": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "isExtraImport": true,
        "detail": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "documentation": {}
    },
    {
        "label": "MOCK_TRADING_ACTIVITY",
        "importPath": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "description": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "isExtraImport": true,
        "detail": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "description": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "isExtraImport": true,
        "detail": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "documentation": {}
    },
    {
        "label": "mock_legion_nodes",
        "importPath": "apps._meta.voidforger.test_helpers.mocker",
        "description": "apps._meta.voidforger.test_helpers.mocker",
        "isExtraImport": true,
        "detail": "apps._meta.voidforger.test_helpers.mocker",
        "documentation": {}
    },
    {
        "label": "mock_operation_nodes",
        "importPath": "apps._meta.voidforger.test_helpers.mocker",
        "description": "apps._meta.voidforger.test_helpers.mocker",
        "isExtraImport": true,
        "detail": "apps._meta.voidforger.test_helpers.mocker",
        "documentation": {}
    },
    {
        "label": "generate_stream_data",
        "importPath": "apps._meta.voidforger.test_helpers.mocker",
        "description": "apps._meta.voidforger.test_helpers.mocker",
        "isExtraImport": true,
        "detail": "apps._meta.voidforger.test_helpers.mocker",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps._meta.voidforger.test_helpers.mocker",
        "description": "apps._meta.voidforger.test_helpers.mocker",
        "isExtraImport": true,
        "detail": "apps._meta.voidforger.test_helpers.mocker",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "apps",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "PermissionRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "PermissionRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "PermissionRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "PermissionRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "PermissionRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "LoginRequiredMixin",
        "importPath": "django.contrib.auth.mixins",
        "description": "django.contrib.auth.mixins",
        "isExtraImport": true,
        "detail": "django.contrib.auth.mixins",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DeleteView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DeleteView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DeleteView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DeleteView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DeleteView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DeleteView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DeleteView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DeleteView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DeleteView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DeleteView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DeleteView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DeleteView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DeleteView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DeleteView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DeleteView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DeleteView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "DeleteView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateHelper",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateHelper",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateHelper",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateHelper",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateHelper",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateHelper",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateHelper",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateHelper",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateHelper",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "TemplateLayout",
        "importPath": "web_project",
        "description": "web_project",
        "isExtraImport": true,
        "detail": "web_project",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "AGENT_SPEECH_LANGUAGES",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "CONTEXT_MANAGEMENT_STRATEGY",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "EMBEDDING_MANAGERS",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "AGENT_SPEECH_LANGUAGES",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "CONTEXT_MANAGEMENT_STRATEGY",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "EMBEDDING_MANAGERS",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "AGENT_SPEECH_LANGUAGES",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "importPath": "apps.assistants.models",
        "description": "apps.assistants.models",
        "isExtraImport": true,
        "detail": "apps.assistants.models",
        "documentation": {}
    },
    {
        "label": "AGENT_ADMIN_DISPLAY_FIELDS",
        "importPath": "apps.assistants.utils",
        "description": "apps.assistants.utils",
        "isExtraImport": true,
        "detail": "apps.assistants.utils",
        "documentation": {}
    },
    {
        "label": "AGENT_ADMIN_FILTER_FIELDS",
        "importPath": "apps.assistants.utils",
        "description": "apps.assistants.utils",
        "isExtraImport": true,
        "detail": "apps.assistants.utils",
        "documentation": {}
    },
    {
        "label": "AGENT_ADMIN_SEARCH_FIELDS",
        "importPath": "apps.assistants.utils",
        "description": "apps.assistants.utils",
        "isExtraImport": true,
        "detail": "apps.assistants.utils",
        "documentation": {}
    },
    {
        "label": "AGENT_SPEECH_LANGUAGES",
        "importPath": "apps.assistants.utils",
        "description": "apps.assistants.utils",
        "isExtraImport": true,
        "detail": "apps.assistants.utils",
        "documentation": {}
    },
    {
        "label": "CONTEXT_MANAGEMENT_STRATEGY",
        "importPath": "apps.assistants.utils",
        "description": "apps.assistants.utils",
        "isExtraImport": true,
        "detail": "apps.assistants.utils",
        "documentation": {}
    },
    {
        "label": "EMBEDDING_MANAGERS",
        "importPath": "apps.assistants.utils",
        "description": "apps.assistants.utils",
        "isExtraImport": true,
        "detail": "apps.assistants.utils",
        "documentation": {}
    },
    {
        "label": "MULTI_STEP_REASONING_CAPABILITY_CHOICE",
        "importPath": "apps.assistants.utils",
        "description": "apps.assistants.utils",
        "isExtraImport": true,
        "detail": "apps.assistants.utils",
        "documentation": {}
    },
    {
        "label": "generate_random_name_suffix",
        "importPath": "apps.assistants.utils",
        "description": "apps.assistants.utils",
        "isExtraImport": true,
        "detail": "apps.assistants.utils",
        "documentation": {}
    },
    {
        "label": "RANDOM_SUFFIX_MAXIMUM_VALUE",
        "importPath": "apps.assistants.utils",
        "description": "apps.assistants.utils",
        "isExtraImport": true,
        "detail": "apps.assistants.utils",
        "documentation": {}
    },
    {
        "label": "RANDOM_SUFFIX_MINIMUM_VALUE",
        "importPath": "apps.assistants.utils",
        "description": "apps.assistants.utils",
        "isExtraImport": true,
        "detail": "apps.assistants.utils",
        "documentation": {}
    },
    {
        "label": "ContextManagementStrategyNames",
        "importPath": "apps.assistants.utils",
        "description": "apps.assistants.utils",
        "isExtraImport": true,
        "detail": "apps.assistants.utils",
        "documentation": {}
    },
    {
        "label": "MULTI_STEP_REASONING_CAPABILITY_CHOICE",
        "importPath": "apps.assistants.utils",
        "description": "apps.assistants.utils",
        "isExtraImport": true,
        "detail": "apps.assistants.utils",
        "documentation": {}
    },
    {
        "label": "ContextManagementStrategyNames",
        "importPath": "apps.assistants.utils",
        "description": "apps.assistants.utils",
        "isExtraImport": true,
        "detail": "apps.assistants.utils",
        "documentation": {}
    },
    {
        "label": "MULTI_STEP_REASONING_CAPABILITY_CHOICE",
        "importPath": "apps.assistants.utils",
        "description": "apps.assistants.utils",
        "isExtraImport": true,
        "detail": "apps.assistants.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.assistants.utils",
        "description": "apps.assistants.utils",
        "isExtraImport": true,
        "detail": "apps.assistants.utils",
        "documentation": {}
    },
    {
        "label": "ContextManagementStrategyNames",
        "importPath": "apps.assistants.utils",
        "description": "apps.assistants.utils",
        "isExtraImport": true,
        "detail": "apps.assistants.utils",
        "documentation": {}
    },
    {
        "label": "MultiStepReasoningCapabilityChoicesNames",
        "importPath": "apps.assistants.utils",
        "description": "apps.assistants.utils",
        "isExtraImport": true,
        "detail": "apps.assistants.utils",
        "documentation": {}
    },
    {
        "label": "MultiStepReasoningCapabilityModelNames",
        "importPath": "apps.assistants.utils",
        "description": "apps.assistants.utils",
        "isExtraImport": true,
        "detail": "apps.assistants.utils",
        "documentation": {}
    },
    {
        "label": "ContextManagementStrategyNames",
        "importPath": "apps.assistants.utils",
        "description": "apps.assistants.utils",
        "isExtraImport": true,
        "detail": "apps.assistants.utils",
        "documentation": {}
    },
    {
        "label": "ContextManagementStrategyNames",
        "importPath": "apps.assistants.utils",
        "description": "apps.assistants.utils",
        "isExtraImport": true,
        "detail": "apps.assistants.utils",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "IntegrityError",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "transaction",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "boto3",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "boto3",
        "description": "boto3",
        "detail": "boto3",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "config",
        "description": "config",
        "isExtraImport": true,
        "detail": "config",
        "documentation": {}
    },
    {
        "label": "pytest",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pytest",
        "description": "pytest",
        "detail": "pytest",
        "documentation": {}
    },
    {
        "label": "string",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "string",
        "description": "string",
        "detail": "string",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "isExtraImport": true,
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "NERIntegration",
        "importPath": "apps.data_security.models",
        "description": "apps.data_security.models",
        "isExtraImport": true,
        "detail": "apps.data_security.models",
        "documentation": {}
    },
    {
        "label": "NERIntegration",
        "importPath": "apps.data_security.models",
        "description": "apps.data_security.models",
        "isExtraImport": true,
        "detail": "apps.data_security.models",
        "documentation": {}
    },
    {
        "label": "NERIntegration",
        "importPath": "apps.data_security.models",
        "description": "apps.data_security.models",
        "isExtraImport": true,
        "detail": "apps.data_security.models",
        "documentation": {}
    },
    {
        "label": "NERIntegration",
        "importPath": "apps.data_security.models",
        "description": "apps.data_security.models",
        "isExtraImport": true,
        "detail": "apps.data_security.models",
        "documentation": {}
    },
    {
        "label": "NERIntegration",
        "importPath": "apps.data_security.models",
        "description": "apps.data_security.models",
        "isExtraImport": true,
        "detail": "apps.data_security.models",
        "documentation": {}
    },
    {
        "label": "NERIntegration",
        "importPath": "apps.data_security.models",
        "description": "apps.data_security.models",
        "isExtraImport": true,
        "detail": "apps.data_security.models",
        "documentation": {}
    },
    {
        "label": "NERIntegration",
        "importPath": "apps.data_security.models",
        "description": "apps.data_security.models",
        "isExtraImport": true,
        "detail": "apps.data_security.models",
        "documentation": {}
    },
    {
        "label": "NERIntegration",
        "importPath": "apps.data_security.models",
        "description": "apps.data_security.models",
        "isExtraImport": true,
        "detail": "apps.data_security.models",
        "documentation": {}
    },
    {
        "label": "NERIntegration",
        "importPath": "apps.data_security.models",
        "description": "apps.data_security.models",
        "isExtraImport": true,
        "detail": "apps.data_security.models",
        "documentation": {}
    },
    {
        "label": "LLMCore",
        "importPath": "apps.llm_core.models",
        "description": "apps.llm_core.models",
        "isExtraImport": true,
        "detail": "apps.llm_core.models",
        "documentation": {}
    },
    {
        "label": "LLMCore",
        "importPath": "apps.llm_core.models",
        "description": "apps.llm_core.models",
        "isExtraImport": true,
        "detail": "apps.llm_core.models",
        "documentation": {}
    },
    {
        "label": "LLMCore",
        "importPath": "apps.llm_core.models",
        "description": "apps.llm_core.models",
        "isExtraImport": true,
        "detail": "apps.llm_core.models",
        "documentation": {}
    },
    {
        "label": "LLMCore",
        "importPath": "apps.llm_core.models",
        "description": "apps.llm_core.models",
        "isExtraImport": true,
        "detail": "apps.llm_core.models",
        "documentation": {}
    },
    {
        "label": "LLMCore",
        "importPath": "apps.llm_core.models",
        "description": "apps.llm_core.models",
        "isExtraImport": true,
        "detail": "apps.llm_core.models",
        "documentation": {}
    },
    {
        "label": "LLMCore",
        "importPath": "apps.llm_core.models",
        "description": "apps.llm_core.models",
        "isExtraImport": true,
        "detail": "apps.llm_core.models",
        "documentation": {}
    },
    {
        "label": "LLMCore",
        "importPath": "apps.llm_core.models",
        "description": "apps.llm_core.models",
        "isExtraImport": true,
        "detail": "apps.llm_core.models",
        "documentation": {}
    },
    {
        "label": "LLMCore",
        "importPath": "apps.llm_core.models",
        "description": "apps.llm_core.models",
        "isExtraImport": true,
        "detail": "apps.llm_core.models",
        "documentation": {}
    },
    {
        "label": "LLMCore",
        "importPath": "apps.llm_core.models",
        "description": "apps.llm_core.models",
        "isExtraImport": true,
        "detail": "apps.llm_core.models",
        "documentation": {}
    },
    {
        "label": "LLMCore",
        "importPath": "apps.llm_core.models",
        "description": "apps.llm_core.models",
        "isExtraImport": true,
        "detail": "apps.llm_core.models",
        "documentation": {}
    },
    {
        "label": "LLMCore",
        "importPath": "apps.llm_core.models",
        "description": "apps.llm_core.models",
        "isExtraImport": true,
        "detail": "apps.llm_core.models",
        "documentation": {}
    },
    {
        "label": "LLMCore",
        "importPath": "apps.llm_core.models",
        "description": "apps.llm_core.models",
        "isExtraImport": true,
        "detail": "apps.llm_core.models",
        "documentation": {}
    },
    {
        "label": "LLMCore",
        "importPath": "apps.llm_core.models",
        "description": "apps.llm_core.models",
        "isExtraImport": true,
        "detail": "apps.llm_core.models",
        "documentation": {}
    },
    {
        "label": "LLMCore",
        "importPath": "apps.llm_core.models",
        "description": "apps.llm_core.models",
        "isExtraImport": true,
        "detail": "apps.llm_core.models",
        "documentation": {}
    },
    {
        "label": "LLMCore",
        "importPath": "apps.llm_core.models",
        "description": "apps.llm_core.models",
        "isExtraImport": true,
        "detail": "apps.llm_core.models",
        "documentation": {}
    },
    {
        "label": "LLMCore",
        "importPath": "apps.llm_core.models",
        "description": "apps.llm_core.models",
        "isExtraImport": true,
        "detail": "apps.llm_core.models",
        "documentation": {}
    },
    {
        "label": "LLMCore",
        "importPath": "apps.llm_core.models",
        "description": "apps.llm_core.models",
        "isExtraImport": true,
        "detail": "apps.llm_core.models",
        "documentation": {}
    },
    {
        "label": "LLMCore",
        "importPath": "apps.llm_core.models",
        "description": "apps.llm_core.models",
        "isExtraImport": true,
        "detail": "apps.llm_core.models",
        "documentation": {}
    },
    {
        "label": "LLMCore",
        "importPath": "apps.llm_core.models",
        "description": "apps.llm_core.models",
        "isExtraImport": true,
        "detail": "apps.llm_core.models",
        "documentation": {}
    },
    {
        "label": "LLMCore",
        "importPath": "apps.llm_core.models",
        "description": "apps.llm_core.models",
        "isExtraImport": true,
        "detail": "apps.llm_core.models",
        "documentation": {}
    },
    {
        "label": "LLMCore",
        "importPath": "apps.llm_core.models",
        "description": "apps.llm_core.models",
        "isExtraImport": true,
        "detail": "apps.llm_core.models",
        "documentation": {}
    },
    {
        "label": "LLMCore",
        "importPath": "apps.llm_core.models",
        "description": "apps.llm_core.models",
        "isExtraImport": true,
        "detail": "apps.llm_core.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "Organization",
        "importPath": "apps.organization.models",
        "description": "apps.organization.models",
        "isExtraImport": true,
        "detail": "apps.organization.models",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "USER_PERMISSIONS_ADMIN_LIST",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "USER_PERMISSIONS_ADMIN_FILTER",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "USER_ROLES_ADMIN_LIST",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "USER_ROLES_ADMIN_FILTER",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "USER_ROLES_ADMIN_SEARCH",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PERMISSION_TYPES",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PERMISSION_TYPES",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PERMISSION_TYPES",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "get_permissions_grouped",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PERMISSION_TYPES",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PERMISSION_TYPES",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "PERMISSION_TYPES",
        "importPath": "apps.user_permissions.utils",
        "description": "apps.user_permissions.utils",
        "isExtraImport": true,
        "detail": "apps.user_permissions.utils",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "re_path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "AssistantView_Create",
        "importPath": "apps.assistants.views",
        "description": "apps.assistants.views",
        "isExtraImport": true,
        "detail": "apps.assistants.views",
        "documentation": {}
    },
    {
        "label": "AssistantView_List",
        "importPath": "apps.assistants.views",
        "description": "apps.assistants.views",
        "isExtraImport": true,
        "detail": "apps.assistants.views",
        "documentation": {}
    },
    {
        "label": "AssistantView_Update",
        "importPath": "apps.assistants.views",
        "description": "apps.assistants.views",
        "isExtraImport": true,
        "detail": "apps.assistants.views",
        "documentation": {}
    },
    {
        "label": "AssistantView_Delete",
        "importPath": "apps.assistants.views",
        "description": "apps.assistants.views",
        "isExtraImport": true,
        "detail": "apps.assistants.views",
        "documentation": {}
    },
    {
        "label": "AuditLog",
        "importPath": "apps.audit_logs.models",
        "description": "apps.audit_logs.models",
        "isExtraImport": true,
        "detail": "apps.audit_logs.models",
        "documentation": {}
    },
    {
        "label": "AuditLog",
        "importPath": "apps.audit_logs.models",
        "description": "apps.audit_logs.models",
        "isExtraImport": true,
        "detail": "apps.audit_logs.models",
        "documentation": {}
    },
    {
        "label": "AuditLog",
        "importPath": "apps.audit_logs.models",
        "description": "apps.audit_logs.models",
        "isExtraImport": true,
        "detail": "apps.audit_logs.models",
        "documentation": {}
    },
    {
        "label": "AUDIT_LOG_ADMIN_LIST",
        "importPath": "apps.audit_logs.utils",
        "description": "apps.audit_logs.utils",
        "isExtraImport": true,
        "detail": "apps.audit_logs.utils",
        "documentation": {}
    },
    {
        "label": "AUDIT_LOG_ADMIN_SEARCH",
        "importPath": "apps.audit_logs.utils",
        "description": "apps.audit_logs.utils",
        "isExtraImport": true,
        "detail": "apps.audit_logs.utils",
        "documentation": {}
    },
    {
        "label": "AUDIT_LOG_ADMIN_FILTER",
        "importPath": "apps.audit_logs.utils",
        "description": "apps.audit_logs.utils",
        "isExtraImport": true,
        "detail": "apps.audit_logs.utils",
        "documentation": {}
    },
    {
        "label": "AUDIT_LOG_ACTION_CHOICES",
        "importPath": "apps.audit_logs.utils",
        "description": "apps.audit_logs.utils",
        "isExtraImport": true,
        "detail": "apps.audit_logs.utils",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "BlogPost",
        "importPath": "apps.blog_app.models",
        "description": "apps.blog_app.models",
        "isExtraImport": true,
        "detail": "apps.blog_app.models",
        "documentation": {}
    },
    {
        "label": "BlogSEOMeta",
        "importPath": "apps.blog_app.models",
        "description": "apps.blog_app.models",
        "isExtraImport": true,
        "detail": "apps.blog_app.models",
        "documentation": {}
    },
    {
        "label": "BlogTag",
        "importPath": "apps.blog_app.models",
        "description": "apps.blog_app.models",
        "isExtraImport": true,
        "detail": "apps.blog_app.models",
        "documentation": {}
    },
    {
        "label": "BlogPost",
        "importPath": "apps.blog_app.models",
        "description": "apps.blog_app.models",
        "isExtraImport": true,
        "detail": "apps.blog_app.models",
        "documentation": {}
    },
    {
        "label": "BlogPost",
        "importPath": "apps.blog_app.models",
        "description": "apps.blog_app.models",
        "isExtraImport": true,
        "detail": "apps.blog_app.models",
        "documentation": {}
    },
    {
        "label": "BlogTag",
        "importPath": "apps.blog_app.models",
        "description": "apps.blog_app.models",
        "isExtraImport": true,
        "detail": "apps.blog_app.models",
        "documentation": {}
    },
    {
        "label": "BlogPost",
        "importPath": "apps.blog_app.models",
        "description": "apps.blog_app.models",
        "isExtraImport": true,
        "detail": "apps.blog_app.models",
        "documentation": {}
    },
    {
        "label": "BLOG_POST_ADMIN_LIST",
        "importPath": "apps.blog_app.utils",
        "description": "apps.blog_app.utils",
        "isExtraImport": true,
        "detail": "apps.blog_app.utils",
        "documentation": {}
    },
    {
        "label": "BLOG_POST_ADMIN_FILTER",
        "importPath": "apps.blog_app.utils",
        "description": "apps.blog_app.utils",
        "isExtraImport": true,
        "detail": "apps.blog_app.utils",
        "documentation": {}
    },
    {
        "label": "BLOG_POST_ADMIN_SEARCH",
        "importPath": "apps.blog_app.utils",
        "description": "apps.blog_app.utils",
        "isExtraImport": true,
        "detail": "apps.blog_app.utils",
        "documentation": {}
    },
    {
        "label": "BLOG_SEO_ADMIN_LIST",
        "importPath": "apps.blog_app.utils",
        "description": "apps.blog_app.utils",
        "isExtraImport": true,
        "detail": "apps.blog_app.utils",
        "documentation": {}
    },
    {
        "label": "BLOG_SEO_ADMIN_FILTER",
        "importPath": "apps.blog_app.utils",
        "description": "apps.blog_app.utils",
        "isExtraImport": true,
        "detail": "apps.blog_app.utils",
        "documentation": {}
    },
    {
        "label": "BLOG_SEO_ADMIN_SEARCH",
        "importPath": "apps.blog_app.utils",
        "description": "apps.blog_app.utils",
        "isExtraImport": true,
        "detail": "apps.blog_app.utils",
        "documentation": {}
    },
    {
        "label": "BLOG_TAG_ADMIN_LIST",
        "importPath": "apps.blog_app.utils",
        "description": "apps.blog_app.utils",
        "isExtraImport": true,
        "detail": "apps.blog_app.utils",
        "documentation": {}
    },
    {
        "label": "BLOG_TAG_ADMIN_FILTER",
        "importPath": "apps.blog_app.utils",
        "description": "apps.blog_app.utils",
        "isExtraImport": true,
        "detail": "apps.blog_app.utils",
        "documentation": {}
    },
    {
        "label": "BLOG_TAG_ADMIN_SEARCH",
        "importPath": "apps.blog_app.utils",
        "description": "apps.blog_app.utils",
        "isExtraImport": true,
        "detail": "apps.blog_app.utils",
        "documentation": {}
    },
    {
        "label": "STATUS_CHOICES",
        "importPath": "apps.blog_app.utils",
        "description": "apps.blog_app.utils",
        "isExtraImport": true,
        "detail": "apps.blog_app.utils",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "slugify",
        "description": "slugify",
        "isExtraImport": true,
        "detail": "slugify",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "slugify",
        "description": "slugify",
        "isExtraImport": true,
        "detail": "slugify",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "slugify",
        "description": "slugify",
        "isExtraImport": true,
        "detail": "slugify",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "slugify",
        "description": "slugify",
        "isExtraImport": true,
        "detail": "slugify",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "slugify",
        "description": "slugify",
        "isExtraImport": true,
        "detail": "slugify",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "slugify",
        "description": "slugify",
        "isExtraImport": true,
        "detail": "slugify",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "slugify",
        "description": "slugify",
        "isExtraImport": true,
        "detail": "slugify",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "slugify",
        "description": "slugify",
        "isExtraImport": true,
        "detail": "slugify",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "slugify",
        "description": "slugify",
        "isExtraImport": true,
        "detail": "slugify",
        "documentation": {}
    },
    {
        "label": "slugify",
        "importPath": "slugify",
        "description": "slugify",
        "isExtraImport": true,
        "detail": "slugify",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "PageNotAnInteger",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "EmptyPage",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Prefetch",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Prefetch",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Prefetch",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Sum",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "BlogPostView_List",
        "importPath": "apps.blog_app.views",
        "description": "apps.blog_app.views",
        "isExtraImport": true,
        "detail": "apps.blog_app.views",
        "documentation": {}
    },
    {
        "label": "BlogPostView_Detail",
        "importPath": "apps.blog_app.views",
        "description": "apps.blog_app.views",
        "isExtraImport": true,
        "detail": "apps.blog_app.views",
        "documentation": {}
    },
    {
        "label": "BrainstormingCompleteSynthesis",
        "importPath": "apps.brainstorms.models",
        "description": "apps.brainstorms.models",
        "isExtraImport": true,
        "detail": "apps.brainstorms.models",
        "documentation": {}
    },
    {
        "label": "BrainstormingIdea",
        "importPath": "apps.brainstorms.models",
        "description": "apps.brainstorms.models",
        "isExtraImport": true,
        "detail": "apps.brainstorms.models",
        "documentation": {}
    },
    {
        "label": "BrainstormingLevelSynthesis",
        "importPath": "apps.brainstorms.models",
        "description": "apps.brainstorms.models",
        "isExtraImport": true,
        "detail": "apps.brainstorms.models",
        "documentation": {}
    },
    {
        "label": "BrainstormingSession",
        "importPath": "apps.brainstorms.models",
        "description": "apps.brainstorms.models",
        "isExtraImport": true,
        "detail": "apps.brainstorms.models",
        "documentation": {}
    },
    {
        "label": "BrainstormingSession",
        "importPath": "apps.brainstorms.models",
        "description": "apps.brainstorms.models",
        "isExtraImport": true,
        "detail": "apps.brainstorms.models",
        "documentation": {}
    },
    {
        "label": "BrainstormingIdea",
        "importPath": "apps.brainstorms.models",
        "description": "apps.brainstorms.models",
        "isExtraImport": true,
        "detail": "apps.brainstorms.models",
        "documentation": {}
    },
    {
        "label": "BrainstormingSession",
        "importPath": "apps.brainstorms.models",
        "description": "apps.brainstorms.models",
        "isExtraImport": true,
        "detail": "apps.brainstorms.models",
        "documentation": {}
    },
    {
        "label": "BrainstormingIdea",
        "importPath": "apps.brainstorms.models",
        "description": "apps.brainstorms.models",
        "isExtraImport": true,
        "detail": "apps.brainstorms.models",
        "documentation": {}
    },
    {
        "label": "BrainstormingIdea",
        "importPath": "apps.brainstorms.models",
        "description": "apps.brainstorms.models",
        "isExtraImport": true,
        "detail": "apps.brainstorms.models",
        "documentation": {}
    },
    {
        "label": "BrainstormingSession",
        "importPath": "apps.brainstorms.models",
        "description": "apps.brainstorms.models",
        "isExtraImport": true,
        "detail": "apps.brainstorms.models",
        "documentation": {}
    },
    {
        "label": "BrainstormingSession",
        "importPath": "apps.brainstorms.models",
        "description": "apps.brainstorms.models",
        "isExtraImport": true,
        "detail": "apps.brainstorms.models",
        "documentation": {}
    },
    {
        "label": "BrainstormingSession",
        "importPath": "apps.brainstorms.models",
        "description": "apps.brainstorms.models",
        "isExtraImport": true,
        "detail": "apps.brainstorms.models",
        "documentation": {}
    },
    {
        "label": "BrainstormingSession",
        "importPath": "apps.brainstorms.models",
        "description": "apps.brainstorms.models",
        "isExtraImport": true,
        "detail": "apps.brainstorms.models",
        "documentation": {}
    },
    {
        "label": "BrainstormingSession",
        "importPath": "apps.brainstorms.models",
        "description": "apps.brainstorms.models",
        "isExtraImport": true,
        "detail": "apps.brainstorms.models",
        "documentation": {}
    },
    {
        "label": "BrainstormingIdea",
        "importPath": "apps.brainstorms.models",
        "description": "apps.brainstorms.models",
        "isExtraImport": true,
        "detail": "apps.brainstorms.models",
        "documentation": {}
    },
    {
        "label": "BrainstormingLevelSynthesis",
        "importPath": "apps.brainstorms.models",
        "description": "apps.brainstorms.models",
        "isExtraImport": true,
        "detail": "apps.brainstorms.models",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.brainstorms.models",
        "description": "apps.brainstorms.models",
        "isExtraImport": true,
        "detail": "apps.brainstorms.models",
        "documentation": {}
    },
    {
        "label": "BrainstormingSession",
        "importPath": "apps.brainstorms.models",
        "description": "apps.brainstorms.models",
        "isExtraImport": true,
        "detail": "apps.brainstorms.models",
        "documentation": {}
    },
    {
        "label": "BrainstormingSession",
        "importPath": "apps.brainstorms.models",
        "description": "apps.brainstorms.models",
        "isExtraImport": true,
        "detail": "apps.brainstorms.models",
        "documentation": {}
    },
    {
        "label": "BrainstormingSession",
        "importPath": "apps.brainstorms.models",
        "description": "apps.brainstorms.models",
        "isExtraImport": true,
        "detail": "apps.brainstorms.models",
        "documentation": {}
    },
    {
        "label": "BrainstormingIdea",
        "importPath": "apps.brainstorms.models",
        "description": "apps.brainstorms.models",
        "isExtraImport": true,
        "detail": "apps.brainstorms.models",
        "documentation": {}
    },
    {
        "label": "BrainstormingIdea",
        "importPath": "apps.brainstorms.models",
        "description": "apps.brainstorms.models",
        "isExtraImport": true,
        "detail": "apps.brainstorms.models",
        "documentation": {}
    },
    {
        "label": "BRAINSTORMING_ADMIN_LIST",
        "importPath": "apps.brainstorms.utils",
        "description": "apps.brainstorms.utils",
        "isExtraImport": true,
        "detail": "apps.brainstorms.utils",
        "documentation": {}
    },
    {
        "label": "BRAINSTORMING_ADMIN_FILTER",
        "importPath": "apps.brainstorms.utils",
        "description": "apps.brainstorms.utils",
        "isExtraImport": true,
        "detail": "apps.brainstorms.utils",
        "documentation": {}
    },
    {
        "label": "BRAINSTORMING_ADMIN_SEARCH",
        "importPath": "apps.brainstorms.utils",
        "description": "apps.brainstorms.utils",
        "isExtraImport": true,
        "detail": "apps.brainstorms.utils",
        "documentation": {}
    },
    {
        "label": "BRAINSTORMING_IDEA_ADMIN_LIST",
        "importPath": "apps.brainstorms.utils",
        "description": "apps.brainstorms.utils",
        "isExtraImport": true,
        "detail": "apps.brainstorms.utils",
        "documentation": {}
    },
    {
        "label": "BRAINSTORMING_IDEA_ADMIN_FILTER",
        "importPath": "apps.brainstorms.utils",
        "description": "apps.brainstorms.utils",
        "isExtraImport": true,
        "detail": "apps.brainstorms.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.brainstorms.utils",
        "description": "apps.brainstorms.utils",
        "isExtraImport": true,
        "detail": "apps.brainstorms.utils",
        "documentation": {}
    },
    {
        "label": "BRAINSTORMING_LEVEL_SYNTHESIS_ADMIN_LIST",
        "importPath": "apps.brainstorms.utils",
        "description": "apps.brainstorms.utils",
        "isExtraImport": true,
        "detail": "apps.brainstorms.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.brainstorms.utils",
        "description": "apps.brainstorms.utils",
        "isExtraImport": true,
        "detail": "apps.brainstorms.utils",
        "documentation": {}
    },
    {
        "label": "BRAINSTORMING_SESSION_ADMIN_LIST",
        "importPath": "apps.brainstorms.utils",
        "description": "apps.brainstorms.utils",
        "isExtraImport": true,
        "detail": "apps.brainstorms.utils",
        "documentation": {}
    },
    {
        "label": "BRAINSTORMING_SESSION_ADMIN_FILTER",
        "importPath": "apps.brainstorms.utils",
        "description": "apps.brainstorms.utils",
        "isExtraImport": true,
        "detail": "apps.brainstorms.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.brainstorms.utils",
        "description": "apps.brainstorms.utils",
        "isExtraImport": true,
        "detail": "apps.brainstorms.utils",
        "documentation": {}
    },
    {
        "label": "BrainstormingActionTypeNames",
        "importPath": "apps.brainstorms.utils",
        "description": "apps.brainstorms.utils",
        "isExtraImport": true,
        "detail": "apps.brainstorms.utils",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "View",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "BrainstormsExecutor",
        "importPath": "apps.core.brainstorms.brainstorms_executor",
        "description": "apps.core.brainstorms.brainstorms_executor",
        "isExtraImport": true,
        "detail": "apps.core.brainstorms.brainstorms_executor",
        "documentation": {}
    },
    {
        "label": "BrainstormsExecutor",
        "importPath": "apps.core.brainstorms.brainstorms_executor",
        "description": "apps.core.brainstorms.brainstorms_executor",
        "isExtraImport": true,
        "detail": "apps.core.brainstorms.brainstorms_executor",
        "documentation": {}
    },
    {
        "label": "BrainstormsExecutor",
        "importPath": "apps.core.brainstorms.brainstorms_executor",
        "description": "apps.core.brainstorms.brainstorms_executor",
        "isExtraImport": true,
        "detail": "apps.core.brainstorms.brainstorms_executor",
        "documentation": {}
    },
    {
        "label": "BrainstormsExecutor",
        "importPath": "apps.core.brainstorms.brainstorms_executor",
        "description": "apps.core.brainstorms.brainstorms_executor",
        "isExtraImport": true,
        "detail": "apps.core.brainstorms.brainstorms_executor",
        "documentation": {}
    },
    {
        "label": "BrainstormsExecutor",
        "importPath": "apps.core.brainstorms.brainstorms_executor",
        "description": "apps.core.brainstorms.brainstorms_executor",
        "isExtraImport": true,
        "detail": "apps.core.brainstorms.brainstorms_executor",
        "documentation": {}
    },
    {
        "label": "defaultdict",
        "importPath": "collections",
        "description": "collections",
        "isExtraImport": true,
        "detail": "collections",
        "documentation": {}
    },
    {
        "label": "defaultdict",
        "importPath": "collections",
        "description": "collections",
        "isExtraImport": true,
        "detail": "collections",
        "documentation": {}
    },
    {
        "label": "defaultdict",
        "importPath": "collections",
        "description": "collections",
        "isExtraImport": true,
        "detail": "collections",
        "documentation": {}
    },
    {
        "label": "BrainstormingView_SessionCreate",
        "importPath": "apps.brainstorms.views",
        "description": "apps.brainstorms.views",
        "isExtraImport": true,
        "detail": "apps.brainstorms.views",
        "documentation": {}
    },
    {
        "label": "BrainstormingView_SessionList",
        "importPath": "apps.brainstorms.views",
        "description": "apps.brainstorms.views",
        "isExtraImport": true,
        "detail": "apps.brainstorms.views",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.brainstorms.views",
        "description": "apps.brainstorms.views",
        "isExtraImport": true,
        "detail": "apps.brainstorms.views",
        "documentation": {}
    },
    {
        "label": "ForumCategory",
        "importPath": "apps.community_forum.models",
        "description": "apps.community_forum.models",
        "isExtraImport": true,
        "detail": "apps.community_forum.models",
        "documentation": {}
    },
    {
        "label": "ForumComment",
        "importPath": "apps.community_forum.models",
        "description": "apps.community_forum.models",
        "isExtraImport": true,
        "detail": "apps.community_forum.models",
        "documentation": {}
    },
    {
        "label": "ForumLike",
        "importPath": "apps.community_forum.models",
        "description": "apps.community_forum.models",
        "isExtraImport": true,
        "detail": "apps.community_forum.models",
        "documentation": {}
    },
    {
        "label": "ForumPost",
        "importPath": "apps.community_forum.models",
        "description": "apps.community_forum.models",
        "isExtraImport": true,
        "detail": "apps.community_forum.models",
        "documentation": {}
    },
    {
        "label": "ForumThread",
        "importPath": "apps.community_forum.models",
        "description": "apps.community_forum.models",
        "isExtraImport": true,
        "detail": "apps.community_forum.models",
        "documentation": {}
    },
    {
        "label": "ForumComment",
        "importPath": "apps.community_forum.models",
        "description": "apps.community_forum.models",
        "isExtraImport": true,
        "detail": "apps.community_forum.models",
        "documentation": {}
    },
    {
        "label": "ForumPost",
        "importPath": "apps.community_forum.models",
        "description": "apps.community_forum.models",
        "isExtraImport": true,
        "detail": "apps.community_forum.models",
        "documentation": {}
    },
    {
        "label": "ForumCategory",
        "importPath": "apps.community_forum.models",
        "description": "apps.community_forum.models",
        "isExtraImport": true,
        "detail": "apps.community_forum.models",
        "documentation": {}
    },
    {
        "label": "ForumPost",
        "importPath": "apps.community_forum.models",
        "description": "apps.community_forum.models",
        "isExtraImport": true,
        "detail": "apps.community_forum.models",
        "documentation": {}
    },
    {
        "label": "ForumComment",
        "importPath": "apps.community_forum.models",
        "description": "apps.community_forum.models",
        "isExtraImport": true,
        "detail": "apps.community_forum.models",
        "documentation": {}
    },
    {
        "label": "ForumComment",
        "importPath": "apps.community_forum.models",
        "description": "apps.community_forum.models",
        "isExtraImport": true,
        "detail": "apps.community_forum.models",
        "documentation": {}
    },
    {
        "label": "ForumLike",
        "importPath": "apps.community_forum.models",
        "description": "apps.community_forum.models",
        "isExtraImport": true,
        "detail": "apps.community_forum.models",
        "documentation": {}
    },
    {
        "label": "ForumThread",
        "importPath": "apps.community_forum.models",
        "description": "apps.community_forum.models",
        "isExtraImport": true,
        "detail": "apps.community_forum.models",
        "documentation": {}
    },
    {
        "label": "ForumCategory",
        "importPath": "apps.community_forum.models",
        "description": "apps.community_forum.models",
        "isExtraImport": true,
        "detail": "apps.community_forum.models",
        "documentation": {}
    },
    {
        "label": "ForumThread",
        "importPath": "apps.community_forum.models",
        "description": "apps.community_forum.models",
        "isExtraImport": true,
        "detail": "apps.community_forum.models",
        "documentation": {}
    },
    {
        "label": "ForumPost",
        "importPath": "apps.community_forum.models",
        "description": "apps.community_forum.models",
        "isExtraImport": true,
        "detail": "apps.community_forum.models",
        "documentation": {}
    },
    {
        "label": "ForumCategory",
        "importPath": "apps.community_forum.models",
        "description": "apps.community_forum.models",
        "isExtraImport": true,
        "detail": "apps.community_forum.models",
        "documentation": {}
    },
    {
        "label": "ForumComment",
        "importPath": "apps.community_forum.models",
        "description": "apps.community_forum.models",
        "isExtraImport": true,
        "detail": "apps.community_forum.models",
        "documentation": {}
    },
    {
        "label": "ForumLike",
        "importPath": "apps.community_forum.models",
        "description": "apps.community_forum.models",
        "isExtraImport": true,
        "detail": "apps.community_forum.models",
        "documentation": {}
    },
    {
        "label": "ForumCategory",
        "importPath": "apps.community_forum.models",
        "description": "apps.community_forum.models",
        "isExtraImport": true,
        "detail": "apps.community_forum.models",
        "documentation": {}
    },
    {
        "label": "ForumThread",
        "importPath": "apps.community_forum.models",
        "description": "apps.community_forum.models",
        "isExtraImport": true,
        "detail": "apps.community_forum.models",
        "documentation": {}
    },
    {
        "label": "ForumCategory",
        "importPath": "apps.community_forum.models",
        "description": "apps.community_forum.models",
        "isExtraImport": true,
        "detail": "apps.community_forum.models",
        "documentation": {}
    },
    {
        "label": "ForumThread",
        "importPath": "apps.community_forum.models",
        "description": "apps.community_forum.models",
        "isExtraImport": true,
        "detail": "apps.community_forum.models",
        "documentation": {}
    },
    {
        "label": "FORUM_CATEGORY_ADMIN_LIST",
        "importPath": "apps.community_forum.utils",
        "description": "apps.community_forum.utils",
        "isExtraImport": true,
        "detail": "apps.community_forum.utils",
        "documentation": {}
    },
    {
        "label": "FORUM_CATEGORY_ADMIN_SEARCH",
        "importPath": "apps.community_forum.utils",
        "description": "apps.community_forum.utils",
        "isExtraImport": true,
        "detail": "apps.community_forum.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.community_forum.utils",
        "description": "apps.community_forum.utils",
        "isExtraImport": true,
        "detail": "apps.community_forum.utils",
        "documentation": {}
    },
    {
        "label": "FORUM_COMMENT_ADMIN_LIST",
        "importPath": "apps.community_forum.utils",
        "description": "apps.community_forum.utils",
        "isExtraImport": true,
        "detail": "apps.community_forum.utils",
        "documentation": {}
    },
    {
        "label": "FORUM_COMMENT_ADMIN_SEARCH",
        "importPath": "apps.community_forum.utils",
        "description": "apps.community_forum.utils",
        "isExtraImport": true,
        "detail": "apps.community_forum.utils",
        "documentation": {}
    },
    {
        "label": "FORUM_COMMENT_ADMIN_FILTER",
        "importPath": "apps.community_forum.utils",
        "description": "apps.community_forum.utils",
        "isExtraImport": true,
        "detail": "apps.community_forum.utils",
        "documentation": {}
    },
    {
        "label": "FORUM_LIKE_ADMIN_LIST",
        "importPath": "apps.community_forum.utils",
        "description": "apps.community_forum.utils",
        "isExtraImport": true,
        "detail": "apps.community_forum.utils",
        "documentation": {}
    },
    {
        "label": "FORUM_LIKE_ADMIN_SEARCH",
        "importPath": "apps.community_forum.utils",
        "description": "apps.community_forum.utils",
        "isExtraImport": true,
        "detail": "apps.community_forum.utils",
        "documentation": {}
    },
    {
        "label": "FORUM_LIKE_ADMIN_FILTER",
        "importPath": "apps.community_forum.utils",
        "description": "apps.community_forum.utils",
        "isExtraImport": true,
        "detail": "apps.community_forum.utils",
        "documentation": {}
    },
    {
        "label": "FORUM_POST_ADMIN_LIST",
        "importPath": "apps.community_forum.utils",
        "description": "apps.community_forum.utils",
        "isExtraImport": true,
        "detail": "apps.community_forum.utils",
        "documentation": {}
    },
    {
        "label": "FORUM_POST_ADMIN_SEARCH",
        "importPath": "apps.community_forum.utils",
        "description": "apps.community_forum.utils",
        "isExtraImport": true,
        "detail": "apps.community_forum.utils",
        "documentation": {}
    },
    {
        "label": "FORUM_POST_ADMIN_FILTER",
        "importPath": "apps.community_forum.utils",
        "description": "apps.community_forum.utils",
        "isExtraImport": true,
        "detail": "apps.community_forum.utils",
        "documentation": {}
    },
    {
        "label": "FORUM_THREAD_ADMIN_LIST",
        "importPath": "apps.community_forum.utils",
        "description": "apps.community_forum.utils",
        "isExtraImport": true,
        "detail": "apps.community_forum.utils",
        "documentation": {}
    },
    {
        "label": "FORUM_THREAD_ADMIN_SEARCH",
        "importPath": "apps.community_forum.utils",
        "description": "apps.community_forum.utils",
        "isExtraImport": true,
        "detail": "apps.community_forum.utils",
        "documentation": {}
    },
    {
        "label": "FORUM_THREAD_ADMIN_FILTER",
        "importPath": "apps.community_forum.utils",
        "description": "apps.community_forum.utils",
        "isExtraImport": true,
        "detail": "apps.community_forum.utils",
        "documentation": {}
    },
    {
        "label": "CONST_HOURS",
        "importPath": "apps.community_forum.utils",
        "description": "apps.community_forum.utils",
        "isExtraImport": true,
        "detail": "apps.community_forum.utils",
        "documentation": {}
    },
    {
        "label": "CONST_MINUTES",
        "importPath": "apps.community_forum.utils",
        "description": "apps.community_forum.utils",
        "isExtraImport": true,
        "detail": "apps.community_forum.utils",
        "documentation": {}
    },
    {
        "label": "django",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django",
        "description": "django",
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "template",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "template",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "template",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "template",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "template",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "template",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "template",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "template",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "template",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "template",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "ForumRewardActionsNames",
        "importPath": "auth.utils",
        "description": "auth.utils",
        "isExtraImport": true,
        "detail": "auth.utils",
        "documentation": {}
    },
    {
        "label": "ForumRewardActionsNames",
        "importPath": "auth.utils",
        "description": "auth.utils",
        "isExtraImport": true,
        "detail": "auth.utils",
        "documentation": {}
    },
    {
        "label": "ForumRewardActionsNames",
        "importPath": "auth.utils",
        "description": "auth.utils",
        "isExtraImport": true,
        "detail": "auth.utils",
        "documentation": {}
    },
    {
        "label": "ForumRewardActionsNames",
        "importPath": "auth.utils",
        "description": "auth.utils",
        "isExtraImport": true,
        "detail": "auth.utils",
        "documentation": {}
    },
    {
        "label": "is_valid_password",
        "importPath": "auth.utils",
        "description": "auth.utils",
        "isExtraImport": true,
        "detail": "auth.utils",
        "documentation": {}
    },
    {
        "label": "send_verification_email",
        "importPath": "auth.utils",
        "description": "auth.utils",
        "isExtraImport": true,
        "detail": "auth.utils",
        "documentation": {}
    },
    {
        "label": "send_invitation_email",
        "importPath": "auth.utils",
        "description": "auth.utils",
        "isExtraImport": true,
        "detail": "auth.utils",
        "documentation": {}
    },
    {
        "label": "send_password_reset_email",
        "importPath": "auth.utils",
        "description": "auth.utils",
        "isExtraImport": true,
        "detail": "auth.utils",
        "documentation": {}
    },
    {
        "label": "MEMBER_ADMIN_LIST",
        "importPath": "auth.utils",
        "description": "auth.utils",
        "isExtraImport": true,
        "detail": "auth.utils",
        "documentation": {}
    },
    {
        "label": "PROMO_CODE_ADMIN_LIST",
        "importPath": "auth.utils",
        "description": "auth.utils",
        "isExtraImport": true,
        "detail": "auth.utils",
        "documentation": {}
    },
    {
        "label": "CREDIT_CARD_ADMIN_LIST",
        "importPath": "auth.utils",
        "description": "auth.utils",
        "isExtraImport": true,
        "detail": "auth.utils",
        "documentation": {}
    },
    {
        "label": "send_password_reset_email",
        "importPath": "auth.utils",
        "description": "auth.utils",
        "isExtraImport": true,
        "detail": "auth.utils",
        "documentation": {}
    },
    {
        "label": "USER_FORUM_ROLES",
        "importPath": "auth.utils",
        "description": "auth.utils",
        "isExtraImport": true,
        "detail": "auth.utils",
        "documentation": {}
    },
    {
        "label": "USER_FORUM_RANKS",
        "importPath": "auth.utils",
        "description": "auth.utils",
        "isExtraImport": true,
        "detail": "auth.utils",
        "documentation": {}
    },
    {
        "label": "POINT_REWARDS",
        "importPath": "auth.utils",
        "description": "auth.utils",
        "isExtraImport": true,
        "detail": "auth.utils",
        "documentation": {}
    },
    {
        "label": "UNIT_REWARD_FOR_POINTS",
        "importPath": "auth.utils",
        "description": "auth.utils",
        "isExtraImport": true,
        "detail": "auth.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "auth.utils",
        "description": "auth.utils",
        "isExtraImport": true,
        "detail": "auth.utils",
        "documentation": {}
    },
    {
        "label": "REFERRAL_DEFAULT_BONUS_PERCENTAGE",
        "importPath": "auth.utils",
        "description": "auth.utils",
        "isExtraImport": true,
        "detail": "auth.utils",
        "documentation": {}
    },
    {
        "label": "is_valid_password",
        "importPath": "auth.utils",
        "description": "auth.utils",
        "isExtraImport": true,
        "detail": "auth.utils",
        "documentation": {}
    },
    {
        "label": "send_verification_email",
        "importPath": "auth.utils",
        "description": "auth.utils",
        "isExtraImport": true,
        "detail": "auth.utils",
        "documentation": {}
    },
    {
        "label": "is_valid_password",
        "importPath": "auth.utils",
        "description": "auth.utils",
        "isExtraImport": true,
        "detail": "auth.utils",
        "documentation": {}
    },
    {
        "label": "send_verification_email",
        "importPath": "auth.utils",
        "description": "auth.utils",
        "isExtraImport": true,
        "detail": "auth.utils",
        "documentation": {}
    },
    {
        "label": "HttpResponseRedirect",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponsePermanentRedirect",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "ForumPostForm",
        "importPath": "apps.community_forum.forms",
        "description": "apps.community_forum.forms",
        "isExtraImport": true,
        "detail": "apps.community_forum.forms",
        "documentation": {}
    },
    {
        "label": "ForumCommentForm",
        "importPath": "apps.community_forum.forms",
        "description": "apps.community_forum.forms",
        "isExtraImport": true,
        "detail": "apps.community_forum.forms",
        "documentation": {}
    },
    {
        "label": "InternalServiceCosts",
        "importPath": "apps.core.internal_cost_manager.costs_map",
        "description": "apps.core.internal_cost_manager.costs_map",
        "isExtraImport": true,
        "detail": "apps.core.internal_cost_manager.costs_map",
        "documentation": {}
    },
    {
        "label": "InternalServiceCosts",
        "importPath": "apps.core.internal_cost_manager.costs_map",
        "description": "apps.core.internal_cost_manager.costs_map",
        "isExtraImport": true,
        "detail": "apps.core.internal_cost_manager.costs_map",
        "documentation": {}
    },
    {
        "label": "InternalServiceCosts",
        "importPath": "apps.core.internal_cost_manager.costs_map",
        "description": "apps.core.internal_cost_manager.costs_map",
        "isExtraImport": true,
        "detail": "apps.core.internal_cost_manager.costs_map",
        "documentation": {}
    },
    {
        "label": "InternalServiceCosts",
        "importPath": "apps.core.internal_cost_manager.costs_map",
        "description": "apps.core.internal_cost_manager.costs_map",
        "isExtraImport": true,
        "detail": "apps.core.internal_cost_manager.costs_map",
        "documentation": {}
    },
    {
        "label": "InternalServiceCosts",
        "importPath": "apps.core.internal_cost_manager.costs_map",
        "description": "apps.core.internal_cost_manager.costs_map",
        "isExtraImport": true,
        "detail": "apps.core.internal_cost_manager.costs_map",
        "documentation": {}
    },
    {
        "label": "InternalServiceCosts",
        "importPath": "apps.core.internal_cost_manager.costs_map",
        "description": "apps.core.internal_cost_manager.costs_map",
        "isExtraImport": true,
        "detail": "apps.core.internal_cost_manager.costs_map",
        "documentation": {}
    },
    {
        "label": "InternalServiceCosts",
        "importPath": "apps.core.internal_cost_manager.costs_map",
        "description": "apps.core.internal_cost_manager.costs_map",
        "isExtraImport": true,
        "detail": "apps.core.internal_cost_manager.costs_map",
        "documentation": {}
    },
    {
        "label": "InternalServiceCosts",
        "importPath": "apps.core.internal_cost_manager.costs_map",
        "description": "apps.core.internal_cost_manager.costs_map",
        "isExtraImport": true,
        "detail": "apps.core.internal_cost_manager.costs_map",
        "documentation": {}
    },
    {
        "label": "InternalServiceCosts",
        "importPath": "apps.core.internal_cost_manager.costs_map",
        "description": "apps.core.internal_cost_manager.costs_map",
        "isExtraImport": true,
        "detail": "apps.core.internal_cost_manager.costs_map",
        "documentation": {}
    },
    {
        "label": "InternalServiceCosts",
        "importPath": "apps.core.internal_cost_manager.costs_map",
        "description": "apps.core.internal_cost_manager.costs_map",
        "isExtraImport": true,
        "detail": "apps.core.internal_cost_manager.costs_map",
        "documentation": {}
    },
    {
        "label": "InternalServiceCosts",
        "importPath": "apps.core.internal_cost_manager.costs_map",
        "description": "apps.core.internal_cost_manager.costs_map",
        "isExtraImport": true,
        "detail": "apps.core.internal_cost_manager.costs_map",
        "documentation": {}
    },
    {
        "label": "InternalServiceCosts",
        "importPath": "apps.core.internal_cost_manager.costs_map",
        "description": "apps.core.internal_cost_manager.costs_map",
        "isExtraImport": true,
        "detail": "apps.core.internal_cost_manager.costs_map",
        "documentation": {}
    },
    {
        "label": "InternalServiceCosts",
        "importPath": "apps.core.internal_cost_manager.costs_map",
        "description": "apps.core.internal_cost_manager.costs_map",
        "isExtraImport": true,
        "detail": "apps.core.internal_cost_manager.costs_map",
        "documentation": {}
    },
    {
        "label": "InternalServiceCosts",
        "importPath": "apps.core.internal_cost_manager.costs_map",
        "description": "apps.core.internal_cost_manager.costs_map",
        "isExtraImport": true,
        "detail": "apps.core.internal_cost_manager.costs_map",
        "documentation": {}
    },
    {
        "label": "InternalServiceCosts",
        "importPath": "apps.core.internal_cost_manager.costs_map",
        "description": "apps.core.internal_cost_manager.costs_map",
        "isExtraImport": true,
        "detail": "apps.core.internal_cost_manager.costs_map",
        "documentation": {}
    },
    {
        "label": "InternalServiceCosts",
        "importPath": "apps.core.internal_cost_manager.costs_map",
        "description": "apps.core.internal_cost_manager.costs_map",
        "isExtraImport": true,
        "detail": "apps.core.internal_cost_manager.costs_map",
        "documentation": {}
    },
    {
        "label": "InternalServiceCosts",
        "importPath": "apps.core.internal_cost_manager.costs_map",
        "description": "apps.core.internal_cost_manager.costs_map",
        "isExtraImport": true,
        "detail": "apps.core.internal_cost_manager.costs_map",
        "documentation": {}
    },
    {
        "label": "InternalServiceCosts",
        "importPath": "apps.core.internal_cost_manager.costs_map",
        "description": "apps.core.internal_cost_manager.costs_map",
        "isExtraImport": true,
        "detail": "apps.core.internal_cost_manager.costs_map",
        "documentation": {}
    },
    {
        "label": "InternalServiceCosts",
        "importPath": "apps.core.internal_cost_manager.costs_map",
        "description": "apps.core.internal_cost_manager.costs_map",
        "isExtraImport": true,
        "detail": "apps.core.internal_cost_manager.costs_map",
        "documentation": {}
    },
    {
        "label": "InternalServiceCosts",
        "importPath": "apps.core.internal_cost_manager.costs_map",
        "description": "apps.core.internal_cost_manager.costs_map",
        "isExtraImport": true,
        "detail": "apps.core.internal_cost_manager.costs_map",
        "documentation": {}
    },
    {
        "label": "InternalServiceCosts",
        "importPath": "apps.core.internal_cost_manager.costs_map",
        "description": "apps.core.internal_cost_manager.costs_map",
        "isExtraImport": true,
        "detail": "apps.core.internal_cost_manager.costs_map",
        "documentation": {}
    },
    {
        "label": "TOOL_NAME_TO_COST_MAP",
        "importPath": "apps.core.internal_cost_manager.costs_map",
        "description": "apps.core.internal_cost_manager.costs_map",
        "isExtraImport": true,
        "detail": "apps.core.internal_cost_manager.costs_map",
        "documentation": {}
    },
    {
        "label": "InternalServiceCosts",
        "importPath": "apps.core.internal_cost_manager.costs_map",
        "description": "apps.core.internal_cost_manager.costs_map",
        "isExtraImport": true,
        "detail": "apps.core.internal_cost_manager.costs_map",
        "documentation": {}
    },
    {
        "label": "InternalServiceCosts",
        "importPath": "apps.core.internal_cost_manager.costs_map",
        "description": "apps.core.internal_cost_manager.costs_map",
        "isExtraImport": true,
        "detail": "apps.core.internal_cost_manager.costs_map",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "AUTO_TOP_UP_ADMIN_LIST",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "INVOICE_ADMIN_LIST",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "process_and_calculate_number_of_billable_tokens",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "calculate_total_llm_model_costs",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "calculate_service_costs_of_platform",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "BALANCE_SNAPSHOT_ADMIN_LIST",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "INVOICE_TYPES",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "ACCEPTED_METHODS_OF_PAYMENT",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "barcode_generator",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "invoice_paper_generator",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "TOKENIZATION_ENCODING_ENGINES",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLM_TRANSACTION_ROLES_FOR_TYPE",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "SOURCES_OF_LLM_TRANSACTION",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "InvoiceTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "AcceptedMethodsOfPaymentNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "INTERNAL_TIME_FILTER_TYPES",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "sum_costs",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "TXS_PAGINATION_ITEMS_PER_PAGE",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "LLMCostsPerMillionTokens",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "INTERNAL_PROFIT_MARGIN_FOR_LLM",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "VALUE_ADDED_TAX_PERCENTAGE",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "InvoiceTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "AcceptedMethodsOfPaymentNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "InvoiceTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "AcceptedMethodsOfPaymentNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "InvoiceTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "AcceptedMethodsOfPaymentNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "InvoiceTypesNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "AcceptedMethodsOfPaymentNames",
        "importPath": "apps.llm_transaction.utils",
        "description": "apps.llm_transaction.utils",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.utils",
        "documentation": {}
    },
    {
        "label": "OpenAI",
        "importPath": "openai",
        "description": "openai",
        "isExtraImport": true,
        "detail": "openai",
        "documentation": {}
    },
    {
        "label": "OpenAI",
        "importPath": "openai",
        "description": "openai",
        "isExtraImport": true,
        "detail": "openai",
        "documentation": {}
    },
    {
        "label": "OpenAI",
        "importPath": "openai",
        "description": "openai",
        "isExtraImport": true,
        "detail": "openai",
        "documentation": {}
    },
    {
        "label": "OpenAI",
        "importPath": "openai",
        "description": "openai",
        "isExtraImport": true,
        "detail": "openai",
        "documentation": {}
    },
    {
        "label": "OpenAI",
        "importPath": "openai",
        "description": "openai",
        "isExtraImport": true,
        "detail": "openai",
        "documentation": {}
    },
    {
        "label": "OpenAI",
        "importPath": "openai",
        "description": "openai",
        "isExtraImport": true,
        "detail": "openai",
        "documentation": {}
    },
    {
        "label": "OpenAI",
        "importPath": "openai",
        "description": "openai",
        "isExtraImport": true,
        "detail": "openai",
        "documentation": {}
    },
    {
        "label": "OpenAI",
        "importPath": "openai",
        "description": "openai",
        "isExtraImport": true,
        "detail": "openai",
        "documentation": {}
    },
    {
        "label": "OpenAI",
        "importPath": "openai",
        "description": "openai",
        "isExtraImport": true,
        "detail": "openai",
        "documentation": {}
    },
    {
        "label": "OpenAI",
        "importPath": "openai",
        "description": "openai",
        "isExtraImport": true,
        "detail": "openai",
        "documentation": {}
    },
    {
        "label": "build_from_scratch_brainstorms_system_prompt",
        "importPath": "apps.core.brainstorms.utils",
        "description": "apps.core.brainstorms.utils",
        "isExtraImport": true,
        "detail": "apps.core.brainstorms.utils",
        "documentation": {}
    },
    {
        "label": "find_json_presence",
        "importPath": "apps.core.brainstorms.utils",
        "description": "apps.core.brainstorms.utils",
        "isExtraImport": true,
        "detail": "apps.core.brainstorms.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.brainstorms.utils",
        "description": "apps.core.brainstorms.utils",
        "isExtraImport": true,
        "detail": "apps.core.brainstorms.utils",
        "documentation": {}
    },
    {
        "label": "GPT_DEFAULT_ENCODING_ENGINE",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "CONCRETE_LIMIT_SINGLE_FILE_INTERPRETATION",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "ChatRoles",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "OpenAITTSVoiceNames",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "generate_random_audio_filename",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "TTS_MODEL_NAME",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "CONCRETE_LIMIT_SINGLE_FILE_INTERPRETATION",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "ChatRoles",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "CONCRETE_LIMIT_ML_MODEL_PREDICTIONS",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "ChatRoles",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "GPT_DEFAULT_ENCODING_ENGINE",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "CONCRETE_LIMIT_SINGLE_FILE_INTERPRETATION",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "ChatRoles",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "DEFAULT_IMAGE_GENERATION_MODEL",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "DefaultImageResolutionChoices",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "DefaultImageResolutionChoicesNames",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "DefaultImageQualityChoicesNames",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "ChatRoles",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "LLM_CORE_PROVIDERS",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "find_tool_call_from_json",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "ChatRoles",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "find_tool_call_from_json",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "ChatRoles",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "DEFAULT_ERROR_MESSAGE",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "DEFAULT_STATISTICS_ASSISTANT_NAME_PLACEHOLDER",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "find_tool_call_from_json",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "ChatRoles",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "GPT_DEFAULT_ENCODING_ENGINE",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "ChatRoles",
        "importPath": "apps.core.generative_ai.utils",
        "description": "apps.core.generative_ai.utils",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.utils",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "OrganizationBalanceSnapshot",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "AutoBalanceTopUpModel",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "TransactionInvoice",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "OrganizationBalanceSnapshot",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "AutoBalanceTopUpModel",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "TransactionInvoice",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "OrganizationBalanceSnapshot",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "AutoBalanceTopUpModel",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "AutoBalanceTopUpModel",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "TransactionInvoice",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "TransactionInvoice",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "TransactionInvoice",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "TransactionInvoice",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "TransactionInvoice",
        "importPath": "apps.llm_transaction.models",
        "description": "apps.llm_transaction.models",
        "isExtraImport": true,
        "detail": "apps.llm_transaction.models",
        "documentation": {}
    },
    {
        "label": "By",
        "importPath": "selenium.webdriver.common.by",
        "description": "selenium.webdriver.common.by",
        "isExtraImport": true,
        "detail": "selenium.webdriver.common.by",
        "documentation": {}
    },
    {
        "label": "By",
        "importPath": "selenium.webdriver.common.by",
        "description": "selenium.webdriver.common.by",
        "isExtraImport": true,
        "detail": "selenium.webdriver.common.by",
        "documentation": {}
    },
    {
        "label": "base64",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "base64",
        "description": "base64",
        "detail": "base64",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "uuid4",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "uuid4",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "uuid4",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "uuid4",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "uuid4",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "uuid4",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "uuid4",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "uuid4",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "uuid4",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "ContentFile",
        "importPath": "django.core.files.base",
        "description": "django.core.files.base",
        "isExtraImport": true,
        "detail": "django.core.files.base",
        "documentation": {}
    },
    {
        "label": "ContentFile",
        "importPath": "django.core.files.base",
        "description": "django.core.files.base",
        "isExtraImport": true,
        "detail": "django.core.files.base",
        "documentation": {}
    },
    {
        "label": "webdriver",
        "importPath": "selenium",
        "description": "selenium",
        "isExtraImport": true,
        "detail": "selenium",
        "documentation": {}
    },
    {
        "label": "Cleaner",
        "importPath": "lxml.html.clean",
        "description": "lxml.html.clean",
        "isExtraImport": true,
        "detail": "lxml.html.clean",
        "documentation": {}
    },
    {
        "label": "IMPLICIT_WAIT_SECONDS",
        "importPath": "apps.core.browsers.utils",
        "description": "apps.core.browsers.utils",
        "isExtraImport": true,
        "detail": "apps.core.browsers.utils",
        "documentation": {}
    },
    {
        "label": "SearchEnginesNames",
        "importPath": "apps.core.browsers.utils",
        "description": "apps.core.browsers.utils",
        "isExtraImport": true,
        "detail": "apps.core.browsers.utils",
        "documentation": {}
    },
    {
        "label": "BrowserURLs",
        "importPath": "apps.core.browsers.utils",
        "description": "apps.core.browsers.utils",
        "isExtraImport": true,
        "detail": "apps.core.browsers.utils",
        "documentation": {}
    },
    {
        "label": "FindByTypes",
        "importPath": "apps.core.browsers.utils",
        "description": "apps.core.browsers.utils",
        "isExtraImport": true,
        "detail": "apps.core.browsers.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.browsers.utils",
        "description": "apps.core.browsers.utils",
        "isExtraImport": true,
        "detail": "apps.core.browsers.utils",
        "documentation": {}
    },
    {
        "label": "BrowserActionsNames",
        "importPath": "apps.core.browsers.utils",
        "description": "apps.core.browsers.utils",
        "isExtraImport": true,
        "detail": "apps.core.browsers.utils",
        "documentation": {}
    },
    {
        "label": "BrowsingReadingAbilitiesNames",
        "importPath": "apps.datasource_browsers.utils",
        "description": "apps.datasource_browsers.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_browsers.utils",
        "documentation": {}
    },
    {
        "label": "BROWSER_ADMIN_LIST",
        "importPath": "apps.datasource_browsers.utils",
        "description": "apps.datasource_browsers.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_browsers.utils",
        "documentation": {}
    },
    {
        "label": "BROWSER_ADMIN_SEARCH",
        "importPath": "apps.datasource_browsers.utils",
        "description": "apps.datasource_browsers.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_browsers.utils",
        "documentation": {}
    },
    {
        "label": "BROWSER_ADMIN_FILTER",
        "importPath": "apps.datasource_browsers.utils",
        "description": "apps.datasource_browsers.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_browsers.utils",
        "documentation": {}
    },
    {
        "label": "BROWSING_LOG_ADMIN_LIST",
        "importPath": "apps.datasource_browsers.utils",
        "description": "apps.datasource_browsers.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_browsers.utils",
        "documentation": {}
    },
    {
        "label": "BROWSING_LOG_ADMIN_SEARCH",
        "importPath": "apps.datasource_browsers.utils",
        "description": "apps.datasource_browsers.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_browsers.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.datasource_browsers.utils",
        "description": "apps.datasource_browsers.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_browsers.utils",
        "documentation": {}
    },
    {
        "label": "BROWSER_TYPES",
        "importPath": "apps.datasource_browsers.utils",
        "description": "apps.datasource_browsers.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_browsers.utils",
        "documentation": {}
    },
    {
        "label": "BROWSER_TYPES",
        "importPath": "apps.datasource_browsers.utils",
        "description": "apps.datasource_browsers.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_browsers.utils",
        "documentation": {}
    },
    {
        "label": "BROWSER_TYPES",
        "importPath": "apps.datasource_browsers.utils",
        "description": "apps.datasource_browsers.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_browsers.utils",
        "documentation": {}
    },
    {
        "label": "filetype",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "filetype",
        "description": "filetype",
        "detail": "filetype",
        "documentation": {}
    },
    {
        "label": "filetype",
        "importPath": "filetype",
        "description": "filetype",
        "isExtraImport": true,
        "detail": "filetype",
        "documentation": {}
    },
    {
        "label": "filetype",
        "importPath": "filetype",
        "description": "filetype",
        "isExtraImport": true,
        "detail": "filetype",
        "documentation": {}
    },
    {
        "label": "BIN_FILE_FORMAT",
        "importPath": "apps.core.code_analyst.utils",
        "description": "apps.core.code_analyst.utils",
        "isExtraImport": true,
        "detail": "apps.core.code_analyst.utils",
        "documentation": {}
    },
    {
        "label": "save_files_and_return_uris",
        "importPath": "apps.core.code_analyst.utils",
        "description": "apps.core.code_analyst.utils",
        "isExtraImport": true,
        "detail": "apps.core.code_analyst.utils",
        "documentation": {}
    },
    {
        "label": "save_images_and_return_uris",
        "importPath": "apps.core.code_analyst.utils",
        "description": "apps.core.code_analyst.utils",
        "isExtraImport": true,
        "detail": "apps.core.code_analyst.utils",
        "documentation": {}
    },
    {
        "label": "BIN_FILE_FORMAT",
        "importPath": "apps.core.code_analyst.utils",
        "description": "apps.core.code_analyst.utils",
        "isExtraImport": true,
        "detail": "apps.core.code_analyst.utils",
        "documentation": {}
    },
    {
        "label": "GENERATED_FILES_ROOT_MEDIA_PATH",
        "importPath": "apps.core.media_managers.utils",
        "description": "apps.core.media_managers.utils",
        "isExtraImport": true,
        "detail": "apps.core.media_managers.utils",
        "documentation": {}
    },
    {
        "label": "GENERATED_IMAGES_ROOT_MEDIA_PATH",
        "importPath": "apps.core.media_managers.utils",
        "description": "apps.core.media_managers.utils",
        "isExtraImport": true,
        "detail": "apps.core.media_managers.utils",
        "documentation": {}
    },
    {
        "label": "GENERATED_FILES_ROOT_MEDIA_PATH",
        "importPath": "apps.core.media_managers.utils",
        "description": "apps.core.media_managers.utils",
        "isExtraImport": true,
        "detail": "apps.core.media_managers.utils",
        "documentation": {}
    },
    {
        "label": "FILE_EXTENSION_BIN",
        "importPath": "apps.core.media_managers.utils",
        "description": "apps.core.media_managers.utils",
        "isExtraImport": true,
        "detail": "apps.core.media_managers.utils",
        "documentation": {}
    },
    {
        "label": "GENERATED_FILES_ROOT_MEDIA_PATH",
        "importPath": "apps.core.media_managers.utils",
        "description": "apps.core.media_managers.utils",
        "isExtraImport": true,
        "detail": "apps.core.media_managers.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.media_managers.utils",
        "description": "apps.core.media_managers.utils",
        "isExtraImport": true,
        "detail": "apps.core.media_managers.utils",
        "documentation": {}
    },
    {
        "label": "GENERATED_IMAGES_ROOT_MEDIA_PATH",
        "importPath": "apps.core.media_managers.utils",
        "description": "apps.core.media_managers.utils",
        "isExtraImport": true,
        "detail": "apps.core.media_managers.utils",
        "documentation": {}
    },
    {
        "label": "GENERATED_FILES_ROOT_MEDIA_PATH",
        "importPath": "apps.core.media_managers.utils",
        "description": "apps.core.media_managers.utils",
        "isExtraImport": true,
        "detail": "apps.core.media_managers.utils",
        "documentation": {}
    },
    {
        "label": "GENERATED_VIDEOS_ROOT_MEDIA_PATH",
        "importPath": "apps.core.media_managers.utils",
        "description": "apps.core.media_managers.utils",
        "isExtraImport": true,
        "detail": "apps.core.media_managers.utils",
        "documentation": {}
    },
    {
        "label": "GENERATED_IMAGES_ROOT_MEDIA_PATH",
        "importPath": "apps.core.media_managers.utils",
        "description": "apps.core.media_managers.utils",
        "isExtraImport": true,
        "detail": "apps.core.media_managers.utils",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "AWS_STORAGE_BUCKET_NAME",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "COSTS_MAP",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "WEAVIATE_CLUSTER_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "WEAVIATE_API_KEY",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "WEAVIATE_SINGLE_TIME_MEMORY_RETRIEVAL_LIMIT",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "EXPORT_API_BASE_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "BASE_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "EXPORT_API_BASE_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "BASE_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MAX_ASSISTANT_EXPORTS_ORGANIZATION",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "EXPORT_API_BASE_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "EXPORT_LEANMOD_API_BASE_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "BASE_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "EXPORT_LEANMOD_API_BASE_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "BASE_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MAX_LEANMODS_EXPORTS_ORGANIZATION",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "EXPORT_LEANMOD_API_BASE_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "EXPORT_ORCHESTRATION_API_BASE_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "BASE_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "EXPORT_ORCHESTRATION_API_BASE_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "BASE_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MAX_ORCHESTRATIONS_EXPORTS_ORGANIZATION",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MAX_ORCHESTRATIONS_EXPORTS_ORGANIZATION",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "EXPORT_ORCHESTRATION_API_BASE_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "BASE_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "SUFFIX_ANY",
        "importPath": "config.settings",
        "description": "config.settings",
        "isExtraImport": true,
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "weaviate.classes",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "weaviate.classes",
        "description": "weaviate.classes",
        "detail": "weaviate.classes",
        "documentation": {}
    },
    {
        "label": "REPOSITORY_WEAVIATE_FIELDS_CONFIG",
        "importPath": "apps.core.codebase.utils",
        "description": "apps.core.codebase.utils",
        "isExtraImport": true,
        "detail": "apps.core.codebase.utils",
        "documentation": {}
    },
    {
        "label": "REPOSITORY_CHUNK_WEAVIATE_FIELDS_CONFIG",
        "importPath": "apps.core.codebase.utils",
        "description": "apps.core.codebase.utils",
        "isExtraImport": true,
        "detail": "apps.core.codebase.utils",
        "documentation": {}
    },
    {
        "label": "DEFAULT_GENERATIVE_SEARCH_MODEL",
        "importPath": "apps.core.codebase.utils",
        "description": "apps.core.codebase.utils",
        "isExtraImport": true,
        "detail": "apps.core.codebase.utils",
        "documentation": {}
    },
    {
        "label": "KNOWLEDGE_BASE_PROVIDERS",
        "importPath": "apps.core.codebase.utils",
        "description": "apps.core.codebase.utils",
        "isExtraImport": true,
        "detail": "apps.core.codebase.utils",
        "documentation": {}
    },
    {
        "label": "WEAVIATE_INITIALIZATION_TIMEOUT",
        "importPath": "apps.core.codebase.utils",
        "description": "apps.core.codebase.utils",
        "isExtraImport": true,
        "detail": "apps.core.codebase.utils",
        "documentation": {}
    },
    {
        "label": "WEAVIATE_QUERY_TIMEOUT",
        "importPath": "apps.core.codebase.utils",
        "description": "apps.core.codebase.utils",
        "isExtraImport": true,
        "detail": "apps.core.codebase.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.codebase.utils",
        "description": "apps.core.codebase.utils",
        "isExtraImport": true,
        "detail": "apps.core.codebase.utils",
        "documentation": {}
    },
    {
        "label": "RepositoryUploadStatusNames",
        "importPath": "apps.datasource_codebase.utils",
        "description": "apps.datasource_codebase.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.utils",
        "documentation": {}
    },
    {
        "label": "RepositoryUploadStatusNames",
        "importPath": "apps.datasource_codebase.utils",
        "description": "apps.datasource_codebase.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.utils",
        "documentation": {}
    },
    {
        "label": "CODEBASE_REPOSITORY_ADMIN_LIST",
        "importPath": "apps.datasource_codebase.utils",
        "description": "apps.datasource_codebase.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.utils",
        "documentation": {}
    },
    {
        "label": "CODEBASE_REPOSITORY_ADMIN_FILTER",
        "importPath": "apps.datasource_codebase.utils",
        "description": "apps.datasource_codebase.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.datasource_codebase.utils",
        "description": "apps.datasource_codebase.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.utils",
        "documentation": {}
    },
    {
        "label": "CODE_REPOSITORY_CHUNK_ADMIN_LIST",
        "importPath": "apps.datasource_codebase.utils",
        "description": "apps.datasource_codebase.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.utils",
        "documentation": {}
    },
    {
        "label": "CODE_REPOSITORY_CHUNK_ADMIN_FILTER",
        "importPath": "apps.datasource_codebase.utils",
        "description": "apps.datasource_codebase.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.datasource_codebase.utils",
        "description": "apps.datasource_codebase.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.utils",
        "documentation": {}
    },
    {
        "label": "CODE_REPOSITORY_LOG_ADMIN_LIST",
        "importPath": "apps.datasource_codebase.utils",
        "description": "apps.datasource_codebase.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.utils",
        "documentation": {}
    },
    {
        "label": "CODE_REPOSITORY_LOG_ADMIN_FILTER",
        "importPath": "apps.datasource_codebase.utils",
        "description": "apps.datasource_codebase.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.datasource_codebase.utils",
        "description": "apps.datasource_codebase.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.utils",
        "documentation": {}
    },
    {
        "label": "build_weaviate_class_name_with_random",
        "importPath": "apps.datasource_codebase.utils",
        "description": "apps.datasource_codebase.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.utils",
        "documentation": {}
    },
    {
        "label": "CODE_REPOSITORY_STORAGE_ADMIN_LIST",
        "importPath": "apps.datasource_codebase.utils",
        "description": "apps.datasource_codebase.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.datasource_codebase.utils",
        "description": "apps.datasource_codebase.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.utils",
        "documentation": {}
    },
    {
        "label": "KNOWLEDGE_BASE_SYSTEMS",
        "importPath": "apps.datasource_codebase.utils",
        "description": "apps.datasource_codebase.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.utils",
        "documentation": {}
    },
    {
        "label": "VECTORIZERS",
        "importPath": "apps.datasource_codebase.utils",
        "description": "apps.datasource_codebase.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.utils",
        "documentation": {}
    },
    {
        "label": "build_weaviate_class_name_with_random",
        "importPath": "apps.datasource_codebase.utils",
        "description": "apps.datasource_codebase.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.utils",
        "documentation": {}
    },
    {
        "label": "RepositoryUploadStatusNames",
        "importPath": "apps.datasource_codebase.utils",
        "description": "apps.datasource_codebase.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.utils",
        "documentation": {}
    },
    {
        "label": "KNOWLEDGE_BASE_SYSTEMS",
        "importPath": "apps.datasource_codebase.utils",
        "description": "apps.datasource_codebase.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.utils",
        "documentation": {}
    },
    {
        "label": "VECTORIZERS",
        "importPath": "apps.datasource_codebase.utils",
        "description": "apps.datasource_codebase.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.utils",
        "documentation": {}
    },
    {
        "label": "KNOWLEDGE_BASE_SYSTEMS",
        "importPath": "apps.datasource_codebase.utils",
        "description": "apps.datasource_codebase.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.utils",
        "documentation": {}
    },
    {
        "label": "VECTORIZERS",
        "importPath": "apps.datasource_codebase.utils",
        "description": "apps.datasource_codebase.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.utils",
        "documentation": {}
    },
    {
        "label": "RepositoryUploadStatusNames",
        "importPath": "apps.datasource_codebase.utils",
        "description": "apps.datasource_codebase.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.utils",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "Filter",
        "importPath": "weaviate.classes.query",
        "description": "weaviate.classes.query",
        "isExtraImport": true,
        "detail": "weaviate.classes.query",
        "documentation": {}
    },
    {
        "label": "Filter",
        "importPath": "weaviate.classes.query",
        "description": "weaviate.classes.query",
        "isExtraImport": true,
        "detail": "weaviate.classes.query",
        "documentation": {}
    },
    {
        "label": "WeaviateExecutor",
        "importPath": "apps.core.codebase.codebase_executor",
        "description": "apps.core.codebase.codebase_executor",
        "isExtraImport": true,
        "detail": "apps.core.codebase.codebase_executor",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "weaviate",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "weaviate",
        "description": "weaviate",
        "detail": "weaviate",
        "documentation": {}
    },
    {
        "label": "AdditionalConfig",
        "importPath": "weaviate.config",
        "description": "weaviate.config",
        "isExtraImport": true,
        "detail": "weaviate.config",
        "documentation": {}
    },
    {
        "label": "Timeout",
        "importPath": "weaviate.config",
        "description": "weaviate.config",
        "isExtraImport": true,
        "detail": "weaviate.config",
        "documentation": {}
    },
    {
        "label": "AdditionalConfig",
        "importPath": "weaviate.config",
        "description": "weaviate.config",
        "isExtraImport": true,
        "detail": "weaviate.config",
        "documentation": {}
    },
    {
        "label": "Timeout",
        "importPath": "weaviate.config",
        "description": "weaviate.config",
        "isExtraImport": true,
        "detail": "weaviate.config",
        "documentation": {}
    },
    {
        "label": "AdditionalConfig",
        "importPath": "weaviate.config",
        "description": "weaviate.config",
        "isExtraImport": true,
        "detail": "weaviate.config",
        "documentation": {}
    },
    {
        "label": "Timeout",
        "importPath": "weaviate.config",
        "description": "weaviate.config",
        "isExtraImport": true,
        "detail": "weaviate.config",
        "documentation": {}
    },
    {
        "label": "create_classes_helper",
        "importPath": "apps.core.codebase.handler_methods.creation_handler",
        "description": "apps.core.codebase.handler_methods.creation_handler",
        "isExtraImport": true,
        "detail": "apps.core.codebase.handler_methods.creation_handler",
        "documentation": {}
    },
    {
        "label": "delete_weaviate_class_helper",
        "importPath": "apps.core.codebase.handler_methods.removal_handler",
        "description": "apps.core.codebase.handler_methods.removal_handler",
        "isExtraImport": true,
        "detail": "apps.core.codebase.handler_methods.removal_handler",
        "documentation": {}
    },
    {
        "label": "delete_repository_helper",
        "importPath": "apps.core.codebase.handler_methods.removal_handler_repo",
        "description": "apps.core.codebase.handler_methods.removal_handler_repo",
        "isExtraImport": true,
        "detail": "apps.core.codebase.handler_methods.removal_handler_repo",
        "documentation": {}
    },
    {
        "label": "embed_repository_chunks",
        "importPath": "apps.datasource_codebase.tasks",
        "description": "apps.datasource_codebase.tasks",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.tasks",
        "documentation": {}
    },
    {
        "label": "embed_repository_data",
        "importPath": "apps.datasource_codebase.tasks",
        "description": "apps.datasource_codebase.tasks",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.tasks",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.datasource_codebase.tasks",
        "description": "apps.datasource_codebase.tasks",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.tasks",
        "documentation": {}
    },
    {
        "label": "add_repository_upload_log",
        "importPath": "apps.datasource_codebase.tasks",
        "description": "apps.datasource_codebase.tasks",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.tasks",
        "documentation": {}
    },
    {
        "label": "get_error_on_context_memory_handling_log",
        "importPath": "apps.core.context_memory_manager.utils",
        "description": "apps.core.context_memory_manager.utils",
        "isExtraImport": true,
        "detail": "apps.core.context_memory_manager.utils",
        "documentation": {}
    },
    {
        "label": "get_structured_memory_contents",
        "importPath": "apps.core.context_memory_manager.utils",
        "description": "apps.core.context_memory_manager.utils",
        "isExtraImport": true,
        "detail": "apps.core.context_memory_manager.utils",
        "documentation": {}
    },
    {
        "label": "IntraContextMemoryExecutor",
        "importPath": "apps.core.vector_operations.intra_context_memory.memory_executor",
        "description": "apps.core.vector_operations.intra_context_memory.memory_executor",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.intra_context_memory.memory_executor",
        "documentation": {}
    },
    {
        "label": "IntraContextMemoryExecutor",
        "importPath": "apps.core.vector_operations.intra_context_memory.memory_executor",
        "description": "apps.core.vector_operations.intra_context_memory.memory_executor",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.intra_context_memory.memory_executor",
        "documentation": {}
    },
    {
        "label": "IntraContextMemoryExecutor",
        "importPath": "apps.core.vector_operations.intra_context_memory.memory_executor",
        "description": "apps.core.vector_operations.intra_context_memory.memory_executor",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.intra_context_memory.memory_executor",
        "documentation": {}
    },
    {
        "label": "IntraContextMemoryExecutor",
        "importPath": "apps.core.vector_operations.intra_context_memory.memory_executor",
        "description": "apps.core.vector_operations.intra_context_memory.memory_executor",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.intra_context_memory.memory_executor",
        "documentation": {}
    },
    {
        "label": "IntraContextMemoryExecutor",
        "importPath": "apps.core.vector_operations.intra_context_memory.memory_executor",
        "description": "apps.core.vector_operations.intra_context_memory.memory_executor",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.intra_context_memory.memory_executor",
        "documentation": {}
    },
    {
        "label": "IntraContextMemoryExecutor",
        "importPath": "apps.core.vector_operations.intra_context_memory.memory_executor",
        "description": "apps.core.vector_operations.intra_context_memory.memory_executor",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.intra_context_memory.memory_executor",
        "documentation": {}
    },
    {
        "label": "IntraContextMemoryExecutor",
        "importPath": "apps.core.vector_operations.intra_context_memory.memory_executor",
        "description": "apps.core.vector_operations.intra_context_memory.memory_executor",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.intra_context_memory.memory_executor",
        "documentation": {}
    },
    {
        "label": "IntraContextMemoryExecutor",
        "importPath": "apps.core.vector_operations.intra_context_memory.memory_executor",
        "description": "apps.core.vector_operations.intra_context_memory.memory_executor",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.intra_context_memory.memory_executor",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.chat_history_memory.build_chat_history_memory_instruction",
        "description": "apps.core.system_prompts.chat_history_memory.build_chat_history_memory_instruction",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.chat_history_memory.build_chat_history_memory_instruction",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "django.core",
        "description": "django.core",
        "isExtraImport": true,
        "detail": "django.core",
        "documentation": {}
    },
    {
        "label": "CustomAPI",
        "importPath": "apps.mm_apis.models",
        "description": "apps.mm_apis.models",
        "isExtraImport": true,
        "detail": "apps.mm_apis.models",
        "documentation": {}
    },
    {
        "label": "CustomAPIReference",
        "importPath": "apps.mm_apis.models",
        "description": "apps.mm_apis.models",
        "isExtraImport": true,
        "detail": "apps.mm_apis.models",
        "documentation": {}
    },
    {
        "label": "CustomAPI",
        "importPath": "apps.mm_apis.models",
        "description": "apps.mm_apis.models",
        "isExtraImport": true,
        "detail": "apps.mm_apis.models",
        "documentation": {}
    },
    {
        "label": "CustomAPIReference",
        "importPath": "apps.mm_apis.models",
        "description": "apps.mm_apis.models",
        "isExtraImport": true,
        "detail": "apps.mm_apis.models",
        "documentation": {}
    },
    {
        "label": "CustomAPIReference",
        "importPath": "apps.mm_apis.models",
        "description": "apps.mm_apis.models",
        "isExtraImport": true,
        "detail": "apps.mm_apis.models",
        "documentation": {}
    },
    {
        "label": "CustomAPI",
        "importPath": "apps.mm_apis.models",
        "description": "apps.mm_apis.models",
        "isExtraImport": true,
        "detail": "apps.mm_apis.models",
        "documentation": {}
    },
    {
        "label": "CustomAPIReference",
        "importPath": "apps.mm_apis.models",
        "description": "apps.mm_apis.models",
        "isExtraImport": true,
        "detail": "apps.mm_apis.models",
        "documentation": {}
    },
    {
        "label": "CustomAPI",
        "importPath": "apps.mm_apis.models",
        "description": "apps.mm_apis.models",
        "isExtraImport": true,
        "detail": "apps.mm_apis.models",
        "documentation": {}
    },
    {
        "label": "CustomAPI",
        "importPath": "apps.mm_apis.models",
        "description": "apps.mm_apis.models",
        "isExtraImport": true,
        "detail": "apps.mm_apis.models",
        "documentation": {}
    },
    {
        "label": "CustomAPI",
        "importPath": "apps.mm_apis.models",
        "description": "apps.mm_apis.models",
        "isExtraImport": true,
        "detail": "apps.mm_apis.models",
        "documentation": {}
    },
    {
        "label": "CustomAPIReference",
        "importPath": "apps.mm_apis.models",
        "description": "apps.mm_apis.models",
        "isExtraImport": true,
        "detail": "apps.mm_apis.models",
        "documentation": {}
    },
    {
        "label": "CustomAPI",
        "importPath": "apps.mm_apis.models",
        "description": "apps.mm_apis.models",
        "isExtraImport": true,
        "detail": "apps.mm_apis.models",
        "documentation": {}
    },
    {
        "label": "CustomAPI",
        "importPath": "apps.mm_apis.models",
        "description": "apps.mm_apis.models",
        "isExtraImport": true,
        "detail": "apps.mm_apis.models",
        "documentation": {}
    },
    {
        "label": "CustomAPI",
        "importPath": "apps.mm_apis.models",
        "description": "apps.mm_apis.models",
        "isExtraImport": true,
        "detail": "apps.mm_apis.models",
        "documentation": {}
    },
    {
        "label": "CustomAPIReference",
        "importPath": "apps.mm_apis.models",
        "description": "apps.mm_apis.models",
        "isExtraImport": true,
        "detail": "apps.mm_apis.models",
        "documentation": {}
    },
    {
        "label": "CustomAPI",
        "importPath": "apps.mm_apis.models",
        "description": "apps.mm_apis.models",
        "isExtraImport": true,
        "detail": "apps.mm_apis.models",
        "documentation": {}
    },
    {
        "label": "CustomFunction",
        "importPath": "apps.mm_functions.models",
        "description": "apps.mm_functions.models",
        "isExtraImport": true,
        "detail": "apps.mm_functions.models",
        "documentation": {}
    },
    {
        "label": "CustomFunctionReference",
        "importPath": "apps.mm_functions.models",
        "description": "apps.mm_functions.models",
        "isExtraImport": true,
        "detail": "apps.mm_functions.models",
        "documentation": {}
    },
    {
        "label": "CustomFunction",
        "importPath": "apps.mm_functions.models",
        "description": "apps.mm_functions.models",
        "isExtraImport": true,
        "detail": "apps.mm_functions.models",
        "documentation": {}
    },
    {
        "label": "CustomFunctionReference",
        "importPath": "apps.mm_functions.models",
        "description": "apps.mm_functions.models",
        "isExtraImport": true,
        "detail": "apps.mm_functions.models",
        "documentation": {}
    },
    {
        "label": "CustomFunctionReference",
        "importPath": "apps.mm_functions.models",
        "description": "apps.mm_functions.models",
        "isExtraImport": true,
        "detail": "apps.mm_functions.models",
        "documentation": {}
    },
    {
        "label": "CustomFunction",
        "importPath": "apps.mm_functions.models",
        "description": "apps.mm_functions.models",
        "isExtraImport": true,
        "detail": "apps.mm_functions.models",
        "documentation": {}
    },
    {
        "label": "CustomFunctionReference",
        "importPath": "apps.mm_functions.models",
        "description": "apps.mm_functions.models",
        "isExtraImport": true,
        "detail": "apps.mm_functions.models",
        "documentation": {}
    },
    {
        "label": "CustomFunction",
        "importPath": "apps.mm_functions.models",
        "description": "apps.mm_functions.models",
        "isExtraImport": true,
        "detail": "apps.mm_functions.models",
        "documentation": {}
    },
    {
        "label": "CustomFunctionReference",
        "importPath": "apps.mm_functions.models",
        "description": "apps.mm_functions.models",
        "isExtraImport": true,
        "detail": "apps.mm_functions.models",
        "documentation": {}
    },
    {
        "label": "CustomFunction",
        "importPath": "apps.mm_functions.models",
        "description": "apps.mm_functions.models",
        "isExtraImport": true,
        "detail": "apps.mm_functions.models",
        "documentation": {}
    },
    {
        "label": "CustomFunction",
        "importPath": "apps.mm_functions.models",
        "description": "apps.mm_functions.models",
        "isExtraImport": true,
        "detail": "apps.mm_functions.models",
        "documentation": {}
    },
    {
        "label": "CustomFunction",
        "importPath": "apps.mm_functions.models",
        "description": "apps.mm_functions.models",
        "isExtraImport": true,
        "detail": "apps.mm_functions.models",
        "documentation": {}
    },
    {
        "label": "CustomFunctionReference",
        "importPath": "apps.mm_functions.models",
        "description": "apps.mm_functions.models",
        "isExtraImport": true,
        "detail": "apps.mm_functions.models",
        "documentation": {}
    },
    {
        "label": "CustomFunction",
        "importPath": "apps.mm_functions.models",
        "description": "apps.mm_functions.models",
        "isExtraImport": true,
        "detail": "apps.mm_functions.models",
        "documentation": {}
    },
    {
        "label": "CustomFunction",
        "importPath": "apps.mm_functions.models",
        "description": "apps.mm_functions.models",
        "isExtraImport": true,
        "detail": "apps.mm_functions.models",
        "documentation": {}
    },
    {
        "label": "CustomFunction",
        "importPath": "apps.mm_functions.models",
        "description": "apps.mm_functions.models",
        "isExtraImport": true,
        "detail": "apps.mm_functions.models",
        "documentation": {}
    },
    {
        "label": "CustomFunctionReference",
        "importPath": "apps.mm_functions.models",
        "description": "apps.mm_functions.models",
        "isExtraImport": true,
        "detail": "apps.mm_functions.models",
        "documentation": {}
    },
    {
        "label": "CustomFunction",
        "importPath": "apps.mm_functions.models",
        "description": "apps.mm_functions.models",
        "isExtraImport": true,
        "detail": "apps.mm_functions.models",
        "documentation": {}
    },
    {
        "label": "CustomScript",
        "importPath": "apps.mm_scripts.models",
        "description": "apps.mm_scripts.models",
        "isExtraImport": true,
        "detail": "apps.mm_scripts.models",
        "documentation": {}
    },
    {
        "label": "CustomScriptReference",
        "importPath": "apps.mm_scripts.models",
        "description": "apps.mm_scripts.models",
        "isExtraImport": true,
        "detail": "apps.mm_scripts.models",
        "documentation": {}
    },
    {
        "label": "CustomScript",
        "importPath": "apps.mm_scripts.models",
        "description": "apps.mm_scripts.models",
        "isExtraImport": true,
        "detail": "apps.mm_scripts.models",
        "documentation": {}
    },
    {
        "label": "CustomScriptReference",
        "importPath": "apps.mm_scripts.models",
        "description": "apps.mm_scripts.models",
        "isExtraImport": true,
        "detail": "apps.mm_scripts.models",
        "documentation": {}
    },
    {
        "label": "CustomScriptReference",
        "importPath": "apps.mm_scripts.models",
        "description": "apps.mm_scripts.models",
        "isExtraImport": true,
        "detail": "apps.mm_scripts.models",
        "documentation": {}
    },
    {
        "label": "CustomScript",
        "importPath": "apps.mm_scripts.models",
        "description": "apps.mm_scripts.models",
        "isExtraImport": true,
        "detail": "apps.mm_scripts.models",
        "documentation": {}
    },
    {
        "label": "CustomScriptReference",
        "importPath": "apps.mm_scripts.models",
        "description": "apps.mm_scripts.models",
        "isExtraImport": true,
        "detail": "apps.mm_scripts.models",
        "documentation": {}
    },
    {
        "label": "CustomScript",
        "importPath": "apps.mm_scripts.models",
        "description": "apps.mm_scripts.models",
        "isExtraImport": true,
        "detail": "apps.mm_scripts.models",
        "documentation": {}
    },
    {
        "label": "CustomScript",
        "importPath": "apps.mm_scripts.models",
        "description": "apps.mm_scripts.models",
        "isExtraImport": true,
        "detail": "apps.mm_scripts.models",
        "documentation": {}
    },
    {
        "label": "CustomScript",
        "importPath": "apps.mm_scripts.models",
        "description": "apps.mm_scripts.models",
        "isExtraImport": true,
        "detail": "apps.mm_scripts.models",
        "documentation": {}
    },
    {
        "label": "CustomScriptReference",
        "importPath": "apps.mm_scripts.models",
        "description": "apps.mm_scripts.models",
        "isExtraImport": true,
        "detail": "apps.mm_scripts.models",
        "documentation": {}
    },
    {
        "label": "CustomScript",
        "importPath": "apps.mm_scripts.models",
        "description": "apps.mm_scripts.models",
        "isExtraImport": true,
        "detail": "apps.mm_scripts.models",
        "documentation": {}
    },
    {
        "label": "CustomScript",
        "importPath": "apps.mm_scripts.models",
        "description": "apps.mm_scripts.models",
        "isExtraImport": true,
        "detail": "apps.mm_scripts.models",
        "documentation": {}
    },
    {
        "label": "CustomScript",
        "importPath": "apps.mm_scripts.models",
        "description": "apps.mm_scripts.models",
        "isExtraImport": true,
        "detail": "apps.mm_scripts.models",
        "documentation": {}
    },
    {
        "label": "CustomScriptReference",
        "importPath": "apps.mm_scripts.models",
        "description": "apps.mm_scripts.models",
        "isExtraImport": true,
        "detail": "apps.mm_scripts.models",
        "documentation": {}
    },
    {
        "label": "CustomScript",
        "importPath": "apps.mm_scripts.models",
        "description": "apps.mm_scripts.models",
        "isExtraImport": true,
        "detail": "apps.mm_scripts.models",
        "documentation": {}
    },
    {
        "label": "DEFAULT_MODEL",
        "importPath": "apps.core.data_security.ner.utils",
        "description": "apps.core.data_security.ner.utils",
        "isExtraImport": true,
        "detail": "apps.core.data_security.ner.utils",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_TO_MODEL_MAPPING",
        "importPath": "apps.core.data_security.ner.utils",
        "description": "apps.core.data_security.ner.utils",
        "isExtraImport": true,
        "detail": "apps.core.data_security.ner.utils",
        "documentation": {}
    },
    {
        "label": "spacy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "spacy",
        "description": "spacy",
        "detail": "spacy",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.expert_networks.prompts.build_expert_network_to_assistant_instructions_prompt",
        "description": "apps.core.expert_networks.prompts.build_expert_network_to_assistant_instructions_prompt",
        "isExtraImport": true,
        "detail": "apps.core.expert_networks.prompts.build_expert_network_to_assistant_instructions_prompt",
        "documentation": {}
    },
    {
        "label": "DEFAULT_EXPERT_ASSISTANT_ERROR_MESSAGE",
        "importPath": "apps.core.expert_networks.prompts.error_messages",
        "description": "apps.core.expert_networks.prompts.error_messages",
        "isExtraImport": true,
        "detail": "apps.core.expert_networks.prompts.error_messages",
        "documentation": {}
    },
    {
        "label": "ExpertNetwork",
        "importPath": "apps.leanmod.models",
        "description": "apps.leanmod.models",
        "isExtraImport": true,
        "detail": "apps.leanmod.models",
        "documentation": {}
    },
    {
        "label": "ExpertNetworkAssistantReference",
        "importPath": "apps.leanmod.models",
        "description": "apps.leanmod.models",
        "isExtraImport": true,
        "detail": "apps.leanmod.models",
        "documentation": {}
    },
    {
        "label": "LeanAssistant",
        "importPath": "apps.leanmod.models",
        "description": "apps.leanmod.models",
        "isExtraImport": true,
        "detail": "apps.leanmod.models",
        "documentation": {}
    },
    {
        "label": "LeanAssistant",
        "importPath": "apps.leanmod.models",
        "description": "apps.leanmod.models",
        "isExtraImport": true,
        "detail": "apps.leanmod.models",
        "documentation": {}
    },
    {
        "label": "ExpertNetwork",
        "importPath": "apps.leanmod.models",
        "description": "apps.leanmod.models",
        "isExtraImport": true,
        "detail": "apps.leanmod.models",
        "documentation": {}
    },
    {
        "label": "ExpertNetworkAssistantReference",
        "importPath": "apps.leanmod.models",
        "description": "apps.leanmod.models",
        "isExtraImport": true,
        "detail": "apps.leanmod.models",
        "documentation": {}
    },
    {
        "label": "LeanAssistant",
        "importPath": "apps.leanmod.models",
        "description": "apps.leanmod.models",
        "isExtraImport": true,
        "detail": "apps.leanmod.models",
        "documentation": {}
    },
    {
        "label": "LeanAssistant",
        "importPath": "apps.leanmod.models",
        "description": "apps.leanmod.models",
        "isExtraImport": true,
        "detail": "apps.leanmod.models",
        "documentation": {}
    },
    {
        "label": "ExpertNetworkAssistantReference",
        "importPath": "apps.leanmod.models",
        "description": "apps.leanmod.models",
        "isExtraImport": true,
        "detail": "apps.leanmod.models",
        "documentation": {}
    },
    {
        "label": "LeanAssistant",
        "importPath": "apps.leanmod.models",
        "description": "apps.leanmod.models",
        "isExtraImport": true,
        "detail": "apps.leanmod.models",
        "documentation": {}
    },
    {
        "label": "LeanAssistant",
        "importPath": "apps.leanmod.models",
        "description": "apps.leanmod.models",
        "isExtraImport": true,
        "detail": "apps.leanmod.models",
        "documentation": {}
    },
    {
        "label": "LeanAssistant",
        "importPath": "apps.leanmod.models",
        "description": "apps.leanmod.models",
        "isExtraImport": true,
        "detail": "apps.leanmod.models",
        "documentation": {}
    },
    {
        "label": "ExpertNetwork",
        "importPath": "apps.leanmod.models",
        "description": "apps.leanmod.models",
        "isExtraImport": true,
        "detail": "apps.leanmod.models",
        "documentation": {}
    },
    {
        "label": "ExpertNetworkAssistantReference",
        "importPath": "apps.leanmod.models",
        "description": "apps.leanmod.models",
        "isExtraImport": true,
        "detail": "apps.leanmod.models",
        "documentation": {}
    },
    {
        "label": "LeanAssistant",
        "importPath": "apps.leanmod.models",
        "description": "apps.leanmod.models",
        "isExtraImport": true,
        "detail": "apps.leanmod.models",
        "documentation": {}
    },
    {
        "label": "ExpertNetwork",
        "importPath": "apps.leanmod.models",
        "description": "apps.leanmod.models",
        "isExtraImport": true,
        "detail": "apps.leanmod.models",
        "documentation": {}
    },
    {
        "label": "ExpertNetworkAssistantReference",
        "importPath": "apps.leanmod.models",
        "description": "apps.leanmod.models",
        "isExtraImport": true,
        "detail": "apps.leanmod.models",
        "documentation": {}
    },
    {
        "label": "ExpertNetwork",
        "importPath": "apps.leanmod.models",
        "description": "apps.leanmod.models",
        "isExtraImport": true,
        "detail": "apps.leanmod.models",
        "documentation": {}
    },
    {
        "label": "ExpertNetwork",
        "importPath": "apps.leanmod.models",
        "description": "apps.leanmod.models",
        "isExtraImport": true,
        "detail": "apps.leanmod.models",
        "documentation": {}
    },
    {
        "label": "ExpertNetwork",
        "importPath": "apps.leanmod.models",
        "description": "apps.leanmod.models",
        "isExtraImport": true,
        "detail": "apps.leanmod.models",
        "documentation": {}
    },
    {
        "label": "ExpertNetworkAssistantReference",
        "importPath": "apps.leanmod.models",
        "description": "apps.leanmod.models",
        "isExtraImport": true,
        "detail": "apps.leanmod.models",
        "documentation": {}
    },
    {
        "label": "ExpertNetwork",
        "importPath": "apps.leanmod.models",
        "description": "apps.leanmod.models",
        "isExtraImport": true,
        "detail": "apps.leanmod.models",
        "documentation": {}
    },
    {
        "label": "LeanAssistant",
        "importPath": "apps.leanmod.models",
        "description": "apps.leanmod.models",
        "isExtraImport": true,
        "detail": "apps.leanmod.models",
        "documentation": {}
    },
    {
        "label": "LeanAssistant",
        "importPath": "apps.leanmod.models",
        "description": "apps.leanmod.models",
        "isExtraImport": true,
        "detail": "apps.leanmod.models",
        "documentation": {}
    },
    {
        "label": "LeanAssistant",
        "importPath": "apps.leanmod.models",
        "description": "apps.leanmod.models",
        "isExtraImport": true,
        "detail": "apps.leanmod.models",
        "documentation": {}
    },
    {
        "label": "ExpertNetwork",
        "importPath": "apps.leanmod.models",
        "description": "apps.leanmod.models",
        "isExtraImport": true,
        "detail": "apps.leanmod.models",
        "documentation": {}
    },
    {
        "label": "LeanAssistant",
        "importPath": "apps.leanmod.models",
        "description": "apps.leanmod.models",
        "isExtraImport": true,
        "detail": "apps.leanmod.models",
        "documentation": {}
    },
    {
        "label": "LeanAssistant",
        "importPath": "apps.leanmod.models",
        "description": "apps.leanmod.models",
        "isExtraImport": true,
        "detail": "apps.leanmod.models",
        "documentation": {}
    },
    {
        "label": "ExpertNetwork",
        "importPath": "apps.leanmod.models",
        "description": "apps.leanmod.models",
        "isExtraImport": true,
        "detail": "apps.leanmod.models",
        "documentation": {}
    },
    {
        "label": "LeanAssistant",
        "importPath": "apps.leanmod.models",
        "description": "apps.leanmod.models",
        "isExtraImport": true,
        "detail": "apps.leanmod.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChatMessage",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalLeanChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChatMessage",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalLeanChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalLeanChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "ChatCreationLog",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "ChatMessageCreationLog",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChatMessage",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalLeanChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalLeanChatMessage",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChatMessage",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChatMessage",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChatMessage",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "ChatCreationLog",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "ChatMessageCreationLog",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalLeanChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalLeanChatMessage",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "ChatCreationLog",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChatMessage",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "ChatMessageCreationLog",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalLeanChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "ChatCreationLog",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalLeanChatMessage",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "ChatMessageCreationLog",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChatMessage",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChatMessage",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalLeanChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalLeanChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalLeanChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalLeanChatMessage",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalLeanChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalLeanChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalLeanChatMessage",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalLeanChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChatMessage",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "MultimodalLeanChat",
        "importPath": "apps.multimodal_chat.models",
        "description": "apps.multimodal_chat.models",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.models",
        "documentation": {}
    },
    {
        "label": "SourcesForMultimodalChatsNames",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "calculate_billable_cost_from_raw",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "transmit_websocket_log",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "BIMOD_NO_TAG_PLACEHOLDER",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "calculate_billable_cost_from_raw",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "transmit_websocket_log",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "BIMOD_NO_TAG_PLACEHOLDER",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "BIMOD_STREAMING_END_TAG",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "BIMOD_PROCESS_END",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "BIMOD_NO_TAG_PLACEHOLDER",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "BIMOD_NO_TAG_PLACEHOLDER",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "BIMOD_STREAMING_END_TAG",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "BIMOD_PROCESS_END",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "generate_chat_name",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "SourcesForMultimodalChatsNames",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "generate_chat_name",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "SourcesForMultimodalChatsNames",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "SourcesForMultimodalChatsNames",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "SourcesForMultimodalChatsNames",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "MULTIMODAL_CHAT_ADMIN_LIST",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "MULTIMODAL_CHAT_ADMIN_FILTER",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "MULTIMODAL_MESSAGE_ADMIN_LIST",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "MULTIMODAL_MESSAGE_ADMIN_FILTER",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "CHAT_CREATION_LOG_ADMIN_LIST",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "CHAT_CREATION_LOG_ADMIN_FILTER",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "CHAT_MESSAGE_CREATION_LOG_ADMIN_LIST",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "CHAT_MESSAGE_CREATION_LOG_ADMIN_FILTER",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "LEAN_CHAT_ADMIN_LIST",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "LEAN_CHAT_ADMIN_FILTER",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "LEAN_CHAT_ADMIN_SEARCH",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "MULTIMODAL_LEAN_CHAT_MESSAGE_ADMIN_LIST",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "SOURCES_FOR_MULTIMODAL_CHATS",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "CHAT_MESSAGE_ROLE_SENDER_TYPES",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "SOURCES_FOR_MULTIMODAL_CHATS",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "CHAT_MESSAGE_ROLE_SENDER_TYPES",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "BIMOD_STREAMING_END_TAG",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "BIMOD_PROCESS_END",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "BIMOD_NO_TAG_PLACEHOLDER",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "SourcesForMultimodalChatsNames",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "generate_chat_name",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "ChatPostActionSpecifiers",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "SourcesForMultimodalChatsNames",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "SourcesForMultimodalChatsNames",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "SourcesForMultimodalChatsNames",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "SourcesForMultimodalChatsNames",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "generate_chat_name",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "ChatPostActionSpecifiers",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "SourcesForMultimodalChatsNames",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "BIMOD_STREAMING_END_TAG",
        "importPath": "apps.multimodal_chat.utils",
        "description": "apps.multimodal_chat.utils",
        "isExtraImport": true,
        "detail": "apps.multimodal_chat.utils",
        "documentation": {}
    },
    {
        "label": "paramiko",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "paramiko",
        "description": "paramiko",
        "detail": "paramiko",
        "documentation": {}
    },
    {
        "label": "SSHClient",
        "importPath": "paramiko",
        "description": "paramiko",
        "isExtraImport": true,
        "detail": "paramiko",
        "documentation": {}
    },
    {
        "label": "DEFAULT_BANNER_TIMEOUT",
        "importPath": "apps.core.file_systems.utils",
        "description": "apps.core.file_systems.utils",
        "isExtraImport": true,
        "detail": "apps.core.file_systems.utils",
        "documentation": {}
    },
    {
        "label": "INTERNAL_COMMAND_SETS",
        "importPath": "apps.core.file_systems.internal_command_sets",
        "description": "apps.core.file_systems.internal_command_sets",
        "isExtraImport": true,
        "detail": "apps.core.file_systems.internal_command_sets",
        "documentation": {}
    },
    {
        "label": "LIST_DIRECTORY_RECURSIVE",
        "importPath": "apps.core.file_systems.internal_command_sets",
        "description": "apps.core.file_systems.internal_command_sets",
        "isExtraImport": true,
        "detail": "apps.core.file_systems.internal_command_sets",
        "documentation": {}
    },
    {
        "label": "mm_api_execution_task",
        "importPath": "apps.mm_apis.tasks",
        "description": "apps.mm_apis.tasks",
        "isExtraImport": true,
        "detail": "apps.mm_apis.tasks",
        "documentation": {}
    },
    {
        "label": "mm_function_execution_task",
        "importPath": "apps.mm_functions.tasks",
        "description": "apps.mm_functions.tasks",
        "isExtraImport": true,
        "detail": "apps.mm_functions.tasks",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "TextContentBlock",
        "importPath": "openai.types.beta.threads",
        "description": "openai.types.beta.threads",
        "isExtraImport": true,
        "detail": "openai.types.beta.threads",
        "documentation": {}
    },
    {
        "label": "ImageFileContentBlock",
        "importPath": "openai.types.beta.threads",
        "description": "openai.types.beta.threads",
        "isExtraImport": true,
        "detail": "openai.types.beta.threads",
        "documentation": {}
    },
    {
        "label": "TextContentBlock",
        "importPath": "openai.types.beta.threads",
        "description": "openai.types.beta.threads",
        "isExtraImport": true,
        "detail": "openai.types.beta.threads",
        "documentation": {}
    },
    {
        "label": "ImageFileContentBlock",
        "importPath": "openai.types.beta.threads",
        "description": "openai.types.beta.threads",
        "isExtraImport": true,
        "detail": "openai.types.beta.threads",
        "documentation": {}
    },
    {
        "label": "TextContentBlock",
        "importPath": "openai.types.beta.threads",
        "description": "openai.types.beta.threads",
        "isExtraImport": true,
        "detail": "openai.types.beta.threads",
        "documentation": {}
    },
    {
        "label": "ImageFileContentBlock",
        "importPath": "openai.types.beta.threads",
        "description": "openai.types.beta.threads",
        "isExtraImport": true,
        "detail": "openai.types.beta.threads",
        "documentation": {}
    },
    {
        "label": "GENERIC_AFFIRMATION_PROMPT",
        "importPath": "apps.core.generative_ai.auxiliary_methods.affirmations.affirmation_instructions",
        "description": "apps.core.generative_ai.auxiliary_methods.affirmations.affirmation_instructions",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.affirmations.affirmation_instructions",
        "documentation": {}
    },
    {
        "label": "GENERIC_AFFIRMATION_PROMPT",
        "importPath": "apps.core.generative_ai.auxiliary_methods.affirmations.affirmation_instructions",
        "description": "apps.core.generative_ai.auxiliary_methods.affirmations.affirmation_instructions",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.affirmations.affirmation_instructions",
        "documentation": {}
    },
    {
        "label": "GENERIC_AFFIRMATION_PROMPT",
        "importPath": "apps.core.generative_ai.auxiliary_methods.affirmations.affirmation_instructions",
        "description": "apps.core.generative_ai.auxiliary_methods.affirmations.affirmation_instructions",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.affirmations.affirmation_instructions",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.generative_ai.auxiliary_methods.affirmations.affirmation_instructions",
        "description": "apps.core.generative_ai.auxiliary_methods.affirmations.affirmation_instructions",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.affirmations.affirmation_instructions",
        "documentation": {}
    },
    {
        "label": "GENERIC_AFFIRMATION_PROMPT",
        "importPath": "apps.core.generative_ai.auxiliary_methods.affirmations.affirmation_instructions",
        "description": "apps.core.generative_ai.auxiliary_methods.affirmations.affirmation_instructions",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.affirmations.affirmation_instructions",
        "documentation": {}
    },
    {
        "label": "ANALYST_PREPARATION_ERROR_LOG",
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "get_audio_reading_error_log",
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "ML_MODEL_NOT_FOUND_ERROR_LOG",
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "get_image_generation_error_log",
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "get_no_reasoning_capability_error_log",
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "get_technical_error_log",
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "get_statistics_analysis_error_log",
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "get_json_decode_error_log",
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "EMPTY_OBJECT_PATH_LOG",
        "importPath": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "documentation": {}
    },
    {
        "label": "AgentRunConditions",
        "importPath": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "documentation": {}
    },
    {
        "label": "EMPTY_OBJECT_PATH_LOG",
        "importPath": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "documentation": {}
    },
    {
        "label": "AgentRunConditions",
        "importPath": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "documentation": {}
    },
    {
        "label": "EMPTY_OBJECT_PATH_LOG",
        "importPath": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "documentation": {}
    },
    {
        "label": "AgentRunConditions",
        "importPath": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "documentation": {}
    },
    {
        "label": "EMPTY_OBJECT_PATH_LOG",
        "importPath": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "documentation": {}
    },
    {
        "label": "BALANCE_OVERFLOW_LOG",
        "importPath": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "documentation": {}
    },
    {
        "label": "BALANCE_OVERFLOW_LOG",
        "importPath": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "documentation": {}
    },
    {
        "label": "get_number_of_files_too_high_log",
        "importPath": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "documentation": {}
    },
    {
        "label": "get_number_of_codes_too_high_log",
        "importPath": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "documentation": {}
    },
    {
        "label": "get_number_of_files_too_high_log",
        "importPath": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "documentation": {}
    },
    {
        "label": "HELPER_SYSTEM_INSTRUCTIONS",
        "importPath": "apps.core.generative_ai.auxiliary_methods.tool_helpers.tool_helper_instructions",
        "description": "apps.core.generative_ai.auxiliary_methods.tool_helpers.tool_helper_instructions",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.tool_helpers.tool_helper_instructions",
        "documentation": {}
    },
    {
        "label": "HELPER_SYSTEM_INSTRUCTIONS",
        "importPath": "apps.core.generative_ai.auxiliary_methods.tool_helpers.tool_helper_instructions",
        "description": "apps.core.generative_ai.auxiliary_methods.tool_helpers.tool_helper_instructions",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.tool_helpers.tool_helper_instructions",
        "documentation": {}
    },
    {
        "label": "HELPER_SYSTEM_INSTRUCTIONS",
        "importPath": "apps.core.generative_ai.auxiliary_methods.tool_helpers.tool_helper_instructions",
        "description": "apps.core.generative_ai.auxiliary_methods.tool_helpers.tool_helper_instructions",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.tool_helpers.tool_helper_instructions",
        "documentation": {}
    },
    {
        "label": "HELPER_SYSTEM_INSTRUCTIONS",
        "importPath": "apps.core.generative_ai.auxiliary_methods.tool_helpers.tool_helper_instructions",
        "description": "apps.core.generative_ai.auxiliary_methods.tool_helpers.tool_helper_instructions",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.tool_helpers.tool_helper_instructions",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.generative_ai.auxiliary_methods.tool_helpers.tool_helper_instructions",
        "description": "apps.core.generative_ai.auxiliary_methods.tool_helpers.tool_helper_instructions",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.tool_helpers.tool_helper_instructions",
        "documentation": {}
    },
    {
        "label": "io",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "io",
        "description": "io",
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "BytesIO",
        "importPath": "io",
        "description": "io",
        "isExtraImport": true,
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "BytesIO",
        "importPath": "io",
        "description": "io",
        "isExtraImport": true,
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "BytesIO",
        "importPath": "io",
        "description": "io",
        "isExtraImport": true,
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "mimetypes",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "mimetypes",
        "description": "mimetypes",
        "detail": "mimetypes",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "OpenAIGPTClientManager",
        "importPath": "apps.core.generative_ai.gpt_openai_manager",
        "description": "apps.core.generative_ai.gpt_openai_manager",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.gpt_openai_manager",
        "documentation": {}
    },
    {
        "label": "OpenAIGPTClientManager",
        "importPath": "apps.core.generative_ai.gpt_openai_manager",
        "description": "apps.core.generative_ai.gpt_openai_manager",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.gpt_openai_manager",
        "documentation": {}
    },
    {
        "label": "OpenAIGPTClientManager",
        "importPath": "apps.core.generative_ai.gpt_openai_manager",
        "description": "apps.core.generative_ai.gpt_openai_manager",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.gpt_openai_manager",
        "documentation": {}
    },
    {
        "label": "OpenAIGPTClientManager",
        "importPath": "apps.core.generative_ai.gpt_openai_manager",
        "description": "apps.core.generative_ai.gpt_openai_manager",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.gpt_openai_manager",
        "documentation": {}
    },
    {
        "label": "build_reasoning_system_prompt",
        "importPath": "apps.core.system_prompts.reasoning.reasoning_prompt",
        "description": "apps.core.system_prompts.reasoning.reasoning_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.reasoning.reasoning_prompt",
        "documentation": {}
    },
    {
        "label": "apps.core",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "apps.core",
        "description": "apps.core",
        "detail": "apps.core",
        "documentation": {}
    },
    {
        "label": "OpenAIGPTLeanClientManager",
        "importPath": "apps.core.generative_ai.gpt_openai_manager_lean",
        "description": "apps.core.generative_ai.gpt_openai_manager_lean",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.gpt_openai_manager_lean",
        "documentation": {}
    },
    {
        "label": "provide_analysis",
        "importPath": "apps.core.generative_ai.statistical_analysis_manager",
        "description": "apps.core.generative_ai.statistical_analysis_manager",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.statistical_analysis_manager",
        "documentation": {}
    },
    {
        "label": "apps.core.generative_ai.utils.constant_utils",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "NERExecutor",
        "importPath": "apps.core.data_security.ner.ner_executor",
        "description": "apps.core.data_security.ner.ner_executor",
        "isExtraImport": true,
        "detail": "apps.core.data_security.ner.ner_executor",
        "documentation": {}
    },
    {
        "label": "NERExecutor",
        "importPath": "apps.core.data_security.ner.ner_executor",
        "description": "apps.core.data_security.ner.ner_executor",
        "isExtraImport": true,
        "detail": "apps.core.data_security.ner.ner_executor",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.generative_ai.auxiliary_methods.json_operations.json_operation_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.json_operations.json_operation_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.json_operations.json_operation_prompts",
        "documentation": {}
    },
    {
        "label": "embed_tool_call_in_prompt",
        "importPath": "apps.core.generative_ai.auxiliary_methods.json_operations.json_operation_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.json_operations.json_operation_prompts",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_methods.json_operations.json_operation_prompts",
        "documentation": {}
    },
    {
        "label": "HistoryBuilder",
        "importPath": "apps.core.system_prompts.chat_history_factory_builder",
        "description": "apps.core.system_prompts.chat_history_factory_builder",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.chat_history_factory_builder",
        "documentation": {}
    },
    {
        "label": "HistoryBuilder",
        "importPath": "apps.core.system_prompts.chat_history_factory_builder",
        "description": "apps.core.system_prompts.chat_history_factory_builder",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.chat_history_factory_builder",
        "documentation": {}
    },
    {
        "label": "HistoryBuilder",
        "importPath": "apps.core.system_prompts.chat_history_factory_builder",
        "description": "apps.core.system_prompts.chat_history_factory_builder",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.chat_history_factory_builder",
        "documentation": {}
    },
    {
        "label": "SystemPromptFactoryBuilder",
        "importPath": "apps.core.system_prompts.system_prompt_factory_builder",
        "description": "apps.core.system_prompts.system_prompt_factory_builder",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.system_prompt_factory_builder",
        "documentation": {}
    },
    {
        "label": "SystemPromptFactoryBuilder",
        "importPath": "apps.core.system_prompts.system_prompt_factory_builder",
        "description": "apps.core.system_prompts.system_prompt_factory_builder",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.system_prompt_factory_builder",
        "documentation": {}
    },
    {
        "label": "SystemPromptFactoryBuilder",
        "importPath": "apps.core.system_prompts.system_prompt_factory_builder",
        "description": "apps.core.system_prompts.system_prompt_factory_builder",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.system_prompt_factory_builder",
        "documentation": {}
    },
    {
        "label": "ToolCallManager",
        "importPath": "apps.core.tool_calls.tool_call_manager",
        "description": "apps.core.tool_calls.tool_call_manager",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.tool_call_manager",
        "documentation": {}
    },
    {
        "label": "ToolCallManager",
        "importPath": "apps.core.tool_calls.tool_call_manager",
        "description": "apps.core.tool_calls.tool_call_manager",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.tool_call_manager",
        "documentation": {}
    },
    {
        "label": "build_dashboard_statistics_prompt",
        "importPath": "apps.core.system_prompts.dashboard_analysis.dashboard_statistics_prompt",
        "description": "apps.core.system_prompts.dashboard_analysis.dashboard_statistics_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.dashboard_analysis.dashboard_statistics_prompt",
        "documentation": {}
    },
    {
        "label": "Harmoniq",
        "importPath": "apps.harmoniq.models",
        "description": "apps.harmoniq.models",
        "isExtraImport": true,
        "detail": "apps.harmoniq.models",
        "documentation": {}
    },
    {
        "label": "Harmoniq",
        "importPath": "apps.harmoniq.models",
        "description": "apps.harmoniq.models",
        "isExtraImport": true,
        "detail": "apps.harmoniq.models",
        "documentation": {}
    },
    {
        "label": "Harmoniq",
        "importPath": "apps.harmoniq.models",
        "description": "apps.harmoniq.models",
        "isExtraImport": true,
        "detail": "apps.harmoniq.models",
        "documentation": {}
    },
    {
        "label": "Harmoniq",
        "importPath": "apps.harmoniq.models",
        "description": "apps.harmoniq.models",
        "isExtraImport": true,
        "detail": "apps.harmoniq.models",
        "documentation": {}
    },
    {
        "label": "Harmoniq",
        "importPath": "apps.harmoniq.models",
        "description": "apps.harmoniq.models",
        "isExtraImport": true,
        "detail": "apps.harmoniq.models",
        "documentation": {}
    },
    {
        "label": "Harmoniq",
        "importPath": "apps.harmoniq.models",
        "description": "apps.harmoniq.models",
        "isExtraImport": true,
        "detail": "apps.harmoniq.models",
        "documentation": {}
    },
    {
        "label": "Harmoniq",
        "importPath": "apps.harmoniq.models",
        "description": "apps.harmoniq.models",
        "isExtraImport": true,
        "detail": "apps.harmoniq.models",
        "documentation": {}
    },
    {
        "label": "Harmoniq",
        "importPath": "apps.harmoniq.models",
        "description": "apps.harmoniq.models",
        "isExtraImport": true,
        "detail": "apps.harmoniq.models",
        "documentation": {}
    },
    {
        "label": "asyncio",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "asyncio",
        "description": "asyncio",
        "detail": "asyncio",
        "documentation": {}
    },
    {
        "label": "wave",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "wave",
        "description": "wave",
        "detail": "wave",
        "documentation": {}
    },
    {
        "label": "async_to_sync",
        "importPath": "asgiref.sync",
        "description": "asgiref.sync",
        "isExtraImport": true,
        "detail": "asgiref.sync",
        "documentation": {}
    },
    {
        "label": "async_to_sync",
        "importPath": "asgiref.sync",
        "description": "asgiref.sync",
        "isExtraImport": true,
        "detail": "asgiref.sync",
        "documentation": {}
    },
    {
        "label": "async_to_sync",
        "importPath": "asgiref.sync",
        "description": "asgiref.sync",
        "isExtraImport": true,
        "detail": "asgiref.sync",
        "documentation": {}
    },
    {
        "label": "DEFAULT_HARMONIQ_MODEL",
        "importPath": "apps.core.harmoniq.utils",
        "description": "apps.core.harmoniq.utils",
        "isExtraImport": true,
        "detail": "apps.core.harmoniq.utils",
        "documentation": {}
    },
    {
        "label": "DEFAULT_HARMONIQ_VOICE",
        "importPath": "apps.core.harmoniq.utils",
        "description": "apps.core.harmoniq.utils",
        "isExtraImport": true,
        "detail": "apps.core.harmoniq.utils",
        "documentation": {}
    },
    {
        "label": "DEFAULT_PCM_SAMPLING_RATE",
        "importPath": "apps.core.harmoniq.utils",
        "description": "apps.core.harmoniq.utils",
        "isExtraImport": true,
        "detail": "apps.core.harmoniq.utils",
        "documentation": {}
    },
    {
        "label": "DEFAULT_PCM_BITS_PER_SAMPLE",
        "importPath": "apps.core.harmoniq.utils",
        "description": "apps.core.harmoniq.utils",
        "isExtraImport": true,
        "detail": "apps.core.harmoniq.utils",
        "documentation": {}
    },
    {
        "label": "DEFAULT_PCM_NUMBER_OF_CHANNELS",
        "importPath": "apps.core.harmoniq.utils",
        "description": "apps.core.harmoniq.utils",
        "isExtraImport": true,
        "detail": "apps.core.harmoniq.utils",
        "documentation": {}
    },
    {
        "label": "get_tool_usage_instructions_prompt",
        "importPath": "apps.core.harmoniq.utils",
        "description": "apps.core.harmoniq.utils",
        "isExtraImport": true,
        "detail": "apps.core.harmoniq.utils",
        "documentation": {}
    },
    {
        "label": "get_available_tools_prompt",
        "importPath": "apps.core.harmoniq.utils",
        "description": "apps.core.harmoniq.utils",
        "isExtraImport": true,
        "detail": "apps.core.harmoniq.utils",
        "documentation": {}
    },
    {
        "label": "websockets",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "websockets",
        "description": "websockets",
        "detail": "websockets",
        "documentation": {}
    },
    {
        "label": "HARMONIQ_DEITIES_INSTRUCTIONS_MAP",
        "importPath": "apps.harmoniq.utils",
        "description": "apps.harmoniq.utils",
        "isExtraImport": true,
        "detail": "apps.harmoniq.utils",
        "documentation": {}
    },
    {
        "label": "HARMONIQ_AGENT_ADMIN_LIST",
        "importPath": "apps.harmoniq.utils",
        "description": "apps.harmoniq.utils",
        "isExtraImport": true,
        "detail": "apps.harmoniq.utils",
        "documentation": {}
    },
    {
        "label": "HARMONIQ_AGENT_ADMIN_SEARCH",
        "importPath": "apps.harmoniq.utils",
        "description": "apps.harmoniq.utils",
        "isExtraImport": true,
        "detail": "apps.harmoniq.utils",
        "documentation": {}
    },
    {
        "label": "HARMONIQ_AGENT_ADMIN_FILTER",
        "importPath": "apps.harmoniq.utils",
        "description": "apps.harmoniq.utils",
        "isExtraImport": true,
        "detail": "apps.harmoniq.utils",
        "documentation": {}
    },
    {
        "label": "HARMONIQ_DEITIES",
        "importPath": "apps.harmoniq.utils",
        "description": "apps.harmoniq.utils",
        "isExtraImport": true,
        "detail": "apps.harmoniq.utils",
        "documentation": {}
    },
    {
        "label": "HARMONIQ_DEITIES",
        "importPath": "apps.harmoniq.utils",
        "description": "apps.harmoniq.utils",
        "isExtraImport": true,
        "detail": "apps.harmoniq.utils",
        "documentation": {}
    },
    {
        "label": "get_url_could_not_resolved_error_message",
        "importPath": "apps.core.http_client.utils",
        "description": "apps.core.http_client.utils",
        "isExtraImport": true,
        "detail": "apps.core.http_client.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.http_client.utils",
        "description": "apps.core.http_client.utils",
        "isExtraImport": true,
        "detail": "apps.core.http_client.utils",
        "documentation": {}
    },
    {
        "label": "DataSourceMediaStorageConnection",
        "importPath": "apps.datasource_media_storages.models",
        "description": "apps.datasource_media_storages.models",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMediaStorageItem",
        "importPath": "apps.datasource_media_storages.models",
        "description": "apps.datasource_media_storages.models",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMediaStorageConnection",
        "importPath": "apps.datasource_media_storages.models",
        "description": "apps.datasource_media_storages.models",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMediaStorageItem",
        "importPath": "apps.datasource_media_storages.models",
        "description": "apps.datasource_media_storages.models",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMediaStorageConnection",
        "importPath": "apps.datasource_media_storages.models",
        "description": "apps.datasource_media_storages.models",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMediaStorageConnection",
        "importPath": "apps.datasource_media_storages.models",
        "description": "apps.datasource_media_storages.models",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMediaStorageItem",
        "importPath": "apps.datasource_media_storages.models",
        "description": "apps.datasource_media_storages.models",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMediaStorageConnection",
        "importPath": "apps.datasource_media_storages.models",
        "description": "apps.datasource_media_storages.models",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMediaStorageItem",
        "importPath": "apps.datasource_media_storages.models",
        "description": "apps.datasource_media_storages.models",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMediaStorageConnection",
        "importPath": "apps.datasource_media_storages.models",
        "description": "apps.datasource_media_storages.models",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMediaStorageItem",
        "importPath": "apps.datasource_media_storages.models",
        "description": "apps.datasource_media_storages.models",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMediaStorageItem",
        "importPath": "apps.datasource_media_storages.models",
        "description": "apps.datasource_media_storages.models",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMediaStorageItem",
        "importPath": "apps.datasource_media_storages.models",
        "description": "apps.datasource_media_storages.models",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMediaStorageItem",
        "importPath": "apps.datasource_media_storages.models",
        "description": "apps.datasource_media_storages.models",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMediaStorageConnection",
        "importPath": "apps.datasource_media_storages.models",
        "description": "apps.datasource_media_storages.models",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMediaStorageItem",
        "importPath": "apps.datasource_media_storages.models",
        "description": "apps.datasource_media_storages.models",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMediaStorageConnection",
        "importPath": "apps.datasource_media_storages.models",
        "description": "apps.datasource_media_storages.models",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMediaStorageConnection",
        "importPath": "apps.datasource_media_storages.models",
        "description": "apps.datasource_media_storages.models",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMediaStorageConnection",
        "importPath": "apps.datasource_media_storages.models",
        "description": "apps.datasource_media_storages.models",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMediaStorageConnection",
        "importPath": "apps.datasource_media_storages.models",
        "description": "apps.datasource_media_storages.models",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMediaStorageItem",
        "importPath": "apps.datasource_media_storages.models",
        "description": "apps.datasource_media_storages.models",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMediaStorageConnection",
        "importPath": "apps.datasource_media_storages.models",
        "description": "apps.datasource_media_storages.models",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.models",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "GENERATED_FILES_ROOT_PATH",
        "importPath": "apps.core.ml_models.utils",
        "description": "apps.core.ml_models.utils",
        "isExtraImport": true,
        "detail": "apps.core.ml_models.utils",
        "documentation": {}
    },
    {
        "label": "GENERATED_IMAGES_ROOT_PATH",
        "importPath": "apps.core.ml_models.utils",
        "description": "apps.core.ml_models.utils",
        "isExtraImport": true,
        "detail": "apps.core.ml_models.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.ml_models.utils",
        "description": "apps.core.ml_models.utils",
        "isExtraImport": true,
        "detail": "apps.core.ml_models.utils",
        "documentation": {}
    },
    {
        "label": "DataSourceMLModelItem",
        "importPath": "apps.datasource_ml_models.models",
        "description": "apps.datasource_ml_models.models",
        "isExtraImport": true,
        "detail": "apps.datasource_ml_models.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMLModelConnection",
        "importPath": "apps.datasource_ml_models.models",
        "description": "apps.datasource_ml_models.models",
        "isExtraImport": true,
        "detail": "apps.datasource_ml_models.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMLModelItem",
        "importPath": "apps.datasource_ml_models.models",
        "description": "apps.datasource_ml_models.models",
        "isExtraImport": true,
        "detail": "apps.datasource_ml_models.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMLModelConnection",
        "importPath": "apps.datasource_ml_models.models",
        "description": "apps.datasource_ml_models.models",
        "isExtraImport": true,
        "detail": "apps.datasource_ml_models.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMLModelConnection",
        "importPath": "apps.datasource_ml_models.models",
        "description": "apps.datasource_ml_models.models",
        "isExtraImport": true,
        "detail": "apps.datasource_ml_models.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMLModelItem",
        "importPath": "apps.datasource_ml_models.models",
        "description": "apps.datasource_ml_models.models",
        "isExtraImport": true,
        "detail": "apps.datasource_ml_models.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMLModelConnection",
        "importPath": "apps.datasource_ml_models.models",
        "description": "apps.datasource_ml_models.models",
        "isExtraImport": true,
        "detail": "apps.datasource_ml_models.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMLModelItem",
        "importPath": "apps.datasource_ml_models.models",
        "description": "apps.datasource_ml_models.models",
        "isExtraImport": true,
        "detail": "apps.datasource_ml_models.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMLModelConnection",
        "importPath": "apps.datasource_ml_models.models",
        "description": "apps.datasource_ml_models.models",
        "isExtraImport": true,
        "detail": "apps.datasource_ml_models.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMLModelConnection",
        "importPath": "apps.datasource_ml_models.models",
        "description": "apps.datasource_ml_models.models",
        "isExtraImport": true,
        "detail": "apps.datasource_ml_models.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMLModelConnection",
        "importPath": "apps.datasource_ml_models.models",
        "description": "apps.datasource_ml_models.models",
        "isExtraImport": true,
        "detail": "apps.datasource_ml_models.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMLModelItem",
        "importPath": "apps.datasource_ml_models.models",
        "description": "apps.datasource_ml_models.models",
        "isExtraImport": true,
        "detail": "apps.datasource_ml_models.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMLModelConnection",
        "importPath": "apps.datasource_ml_models.models",
        "description": "apps.datasource_ml_models.models",
        "isExtraImport": true,
        "detail": "apps.datasource_ml_models.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMLModelConnection",
        "importPath": "apps.datasource_ml_models.models",
        "description": "apps.datasource_ml_models.models",
        "isExtraImport": true,
        "detail": "apps.datasource_ml_models.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMLModelConnection",
        "importPath": "apps.datasource_ml_models.models",
        "description": "apps.datasource_ml_models.models",
        "isExtraImport": true,
        "detail": "apps.datasource_ml_models.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMLModelItem",
        "importPath": "apps.datasource_ml_models.models",
        "description": "apps.datasource_ml_models.models",
        "isExtraImport": true,
        "detail": "apps.datasource_ml_models.models",
        "documentation": {}
    },
    {
        "label": "DataSourceMLModelConnection",
        "importPath": "apps.datasource_ml_models.models",
        "description": "apps.datasource_ml_models.models",
        "isExtraImport": true,
        "detail": "apps.datasource_ml_models.models",
        "documentation": {}
    },
    {
        "label": "ToolCallDescriptorNames",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "ToolCallDescriptorNames",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "ToolCallDescriptorNames",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "ToolCallDescriptorNames",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "ToolCallDescriptorNames",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "ToolCallDescriptorNames",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "ToolCallDescriptorNames",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "ToolCallDescriptorNames",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "ToolCallDescriptorNames",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "ToolCallDescriptorNames",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "ToolCallDescriptorNames",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "ToolCallDescriptorNames",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "ToolCallDescriptorNames",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "ToolCallDescriptorNames",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "ToolCallDescriptorNames",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "ToolCallDescriptorNames",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "ToolCallDescriptorNames",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "ToolCallDescriptorNames",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "ToolCallDescriptorNames",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "ToolCallDescriptorNames",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "ToolCallDescriptorNames",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "ToolCallDescriptorNames",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "VISUALIZATION_TOOL_ERROR_LOG",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "VISUALIZATION_TOOL_STANDARD_ERROR_LOG",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "VISUALIZATION_TOOL_ERROR_LOG",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "VISUALIZATION_TOOL_STANDARD_ERROR_LOG",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "VISUALIZATION_TOOL_ERROR_LOG",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "VISUALIZATION_TOOL_STANDARD_ERROR_LOG",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "AnalysisToolCallExecutionTypesNames",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "ToolCallDescriptorNames",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "get_no_connection_vector_store_error_message",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "AnalysisToolCallExecutionTypesNames",
        "importPath": "apps.core.tool_calls.utils",
        "description": "apps.core.tool_calls.utils",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.utils",
        "documentation": {}
    },
    {
        "label": "Maestro",
        "importPath": "apps.orchestrations.models",
        "description": "apps.orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models",
        "documentation": {}
    },
    {
        "label": "OrchestrationQuery",
        "importPath": "apps.orchestrations.models",
        "description": "apps.orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models",
        "documentation": {}
    },
    {
        "label": "OrchestrationQueryLog",
        "importPath": "apps.orchestrations.models",
        "description": "apps.orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models",
        "documentation": {}
    },
    {
        "label": "OrchestrationQuery",
        "importPath": "apps.orchestrations.models",
        "description": "apps.orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models",
        "documentation": {}
    },
    {
        "label": "Maestro",
        "importPath": "apps.orchestrations.models",
        "description": "apps.orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models",
        "documentation": {}
    },
    {
        "label": "OrchestrationQuery",
        "importPath": "apps.orchestrations.models",
        "description": "apps.orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models",
        "documentation": {}
    },
    {
        "label": "Maestro",
        "importPath": "apps.orchestrations.models",
        "description": "apps.orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models",
        "documentation": {}
    },
    {
        "label": "OrchestrationQuery",
        "importPath": "apps.orchestrations.models",
        "description": "apps.orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models",
        "documentation": {}
    },
    {
        "label": "OrchestrationQuery",
        "importPath": "apps.orchestrations.models",
        "description": "apps.orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models",
        "documentation": {}
    },
    {
        "label": "OrchestrationQueryLog",
        "importPath": "apps.orchestrations.models",
        "description": "apps.orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models",
        "documentation": {}
    },
    {
        "label": "Maestro",
        "importPath": "apps.orchestrations.models",
        "description": "apps.orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models",
        "documentation": {}
    },
    {
        "label": "OrchestrationQuery",
        "importPath": "apps.orchestrations.models",
        "description": "apps.orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models",
        "documentation": {}
    },
    {
        "label": "Maestro",
        "importPath": "apps.orchestrations.models",
        "description": "apps.orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models",
        "documentation": {}
    },
    {
        "label": "OrchestrationQuery",
        "importPath": "apps.orchestrations.models",
        "description": "apps.orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models",
        "documentation": {}
    },
    {
        "label": "OrchestrationQueryLog",
        "importPath": "apps.orchestrations.models",
        "description": "apps.orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models",
        "documentation": {}
    },
    {
        "label": "Maestro",
        "importPath": "apps.orchestrations.models",
        "description": "apps.orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models",
        "documentation": {}
    },
    {
        "label": "Maestro",
        "importPath": "apps.orchestrations.models",
        "description": "apps.orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models",
        "documentation": {}
    },
    {
        "label": "Maestro",
        "importPath": "apps.orchestrations.models",
        "description": "apps.orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models",
        "documentation": {}
    },
    {
        "label": "OrchestrationQuery",
        "importPath": "apps.orchestrations.models",
        "description": "apps.orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models",
        "documentation": {}
    },
    {
        "label": "OrchestrationQueryLog",
        "importPath": "apps.orchestrations.models",
        "description": "apps.orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models",
        "documentation": {}
    },
    {
        "label": "Maestro",
        "importPath": "apps.orchestrations.models",
        "description": "apps.orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models",
        "documentation": {}
    },
    {
        "label": "Maestro",
        "importPath": "apps.orchestrations.models",
        "description": "apps.orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models",
        "documentation": {}
    },
    {
        "label": "Maestro",
        "importPath": "apps.orchestrations.models",
        "description": "apps.orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models",
        "documentation": {}
    },
    {
        "label": "Maestro",
        "importPath": "apps.orchestrations.models",
        "description": "apps.orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models",
        "documentation": {}
    },
    {
        "label": "Maestro",
        "importPath": "apps.orchestrations.models",
        "description": "apps.orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models",
        "documentation": {}
    },
    {
        "label": "Maestro",
        "importPath": "apps.orchestrations.models",
        "description": "apps.orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models",
        "documentation": {}
    },
    {
        "label": "OrchestrationQuery",
        "importPath": "apps.orchestrations.models",
        "description": "apps.orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models",
        "documentation": {}
    },
    {
        "label": "OrchestrationQueryLog",
        "importPath": "apps.orchestrations.models",
        "description": "apps.orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models",
        "documentation": {}
    },
    {
        "label": "OrchestrationQueryLog",
        "importPath": "apps.orchestrations.models",
        "description": "apps.orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models",
        "documentation": {}
    },
    {
        "label": "Maestro",
        "importPath": "apps.orchestrations.models",
        "description": "apps.orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models",
        "documentation": {}
    },
    {
        "label": "SQLDatabaseConnection",
        "importPath": "apps.datasource_sql.models",
        "description": "apps.datasource_sql.models",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.models",
        "documentation": {}
    },
    {
        "label": "CustomSQLQuery",
        "importPath": "apps.datasource_sql.models",
        "description": "apps.datasource_sql.models",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.models",
        "documentation": {}
    },
    {
        "label": "SQLDatabaseConnection",
        "importPath": "apps.datasource_sql.models",
        "description": "apps.datasource_sql.models",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.models",
        "documentation": {}
    },
    {
        "label": "SQLDatabaseConnection",
        "importPath": "apps.datasource_sql.models",
        "description": "apps.datasource_sql.models",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.models",
        "documentation": {}
    },
    {
        "label": "SQLDatabaseConnection",
        "importPath": "apps.datasource_sql.models",
        "description": "apps.datasource_sql.models",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.models",
        "documentation": {}
    },
    {
        "label": "SQLDatabaseConnection",
        "importPath": "apps.datasource_sql.models",
        "description": "apps.datasource_sql.models",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.models",
        "documentation": {}
    },
    {
        "label": "SQLDatabaseConnection",
        "importPath": "apps.datasource_sql.models",
        "description": "apps.datasource_sql.models",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.models",
        "documentation": {}
    },
    {
        "label": "SQLDatabaseConnection",
        "importPath": "apps.datasource_sql.models",
        "description": "apps.datasource_sql.models",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.models",
        "documentation": {}
    },
    {
        "label": "SQLDatabaseConnection",
        "importPath": "apps.datasource_sql.models",
        "description": "apps.datasource_sql.models",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.models",
        "documentation": {}
    },
    {
        "label": "SQLDatabaseConnection",
        "importPath": "apps.datasource_sql.models",
        "description": "apps.datasource_sql.models",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.models",
        "documentation": {}
    },
    {
        "label": "CustomSQLQuery",
        "importPath": "apps.datasource_sql.models",
        "description": "apps.datasource_sql.models",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.models",
        "documentation": {}
    },
    {
        "label": "SQLDatabaseConnection",
        "importPath": "apps.datasource_sql.models",
        "description": "apps.datasource_sql.models",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.models",
        "documentation": {}
    },
    {
        "label": "CustomSQLQuery",
        "importPath": "apps.datasource_sql.models",
        "description": "apps.datasource_sql.models",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.models",
        "documentation": {}
    },
    {
        "label": "SQLDatabaseConnection",
        "importPath": "apps.datasource_sql.models",
        "description": "apps.datasource_sql.models",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.models",
        "documentation": {}
    },
    {
        "label": "SQLDatabaseConnection",
        "importPath": "apps.datasource_sql.models",
        "description": "apps.datasource_sql.models",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.models",
        "documentation": {}
    },
    {
        "label": "SQLDatabaseConnection",
        "importPath": "apps.datasource_sql.models",
        "description": "apps.datasource_sql.models",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.models",
        "documentation": {}
    },
    {
        "label": "SQLDatabaseConnection",
        "importPath": "apps.datasource_sql.models",
        "description": "apps.datasource_sql.models",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.models",
        "documentation": {}
    },
    {
        "label": "CustomSQLQuery",
        "importPath": "apps.datasource_sql.models",
        "description": "apps.datasource_sql.models",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.models",
        "documentation": {}
    },
    {
        "label": "CustomSQLQuery",
        "importPath": "apps.datasource_sql.models",
        "description": "apps.datasource_sql.models",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.models",
        "documentation": {}
    },
    {
        "label": "CustomSQLQuery",
        "importPath": "apps.datasource_sql.models",
        "description": "apps.datasource_sql.models",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.models",
        "documentation": {}
    },
    {
        "label": "SQLDatabaseConnection",
        "importPath": "apps.datasource_sql.models",
        "description": "apps.datasource_sql.models",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.models",
        "documentation": {}
    },
    {
        "label": "CustomSQLQuery",
        "importPath": "apps.datasource_sql.models",
        "description": "apps.datasource_sql.models",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.models",
        "documentation": {}
    },
    {
        "label": "SQLDatabaseConnection",
        "importPath": "apps.datasource_sql.models",
        "description": "apps.datasource_sql.models",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.models",
        "documentation": {}
    },
    {
        "label": "DocumentKnowledgeBaseConnection",
        "importPath": "apps.datasource_knowledge_base.models",
        "description": "apps.datasource_knowledge_base.models",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.models",
        "documentation": {}
    },
    {
        "label": "DocumentKnowledgeBaseConnection",
        "importPath": "apps.datasource_knowledge_base.models",
        "description": "apps.datasource_knowledge_base.models",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.models",
        "documentation": {}
    },
    {
        "label": "ContextHistoryKnowledgeBaseConnection",
        "importPath": "apps.datasource_knowledge_base.models",
        "description": "apps.datasource_knowledge_base.models",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.models",
        "documentation": {}
    },
    {
        "label": "DocumentKnowledgeBaseConnection",
        "importPath": "apps.datasource_knowledge_base.models",
        "description": "apps.datasource_knowledge_base.models",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.models",
        "documentation": {}
    },
    {
        "label": "DocumentKnowledgeBaseConnection",
        "importPath": "apps.datasource_knowledge_base.models",
        "description": "apps.datasource_knowledge_base.models",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.models",
        "documentation": {}
    },
    {
        "label": "ContextHistoryKnowledgeBaseConnection",
        "importPath": "apps.datasource_knowledge_base.models",
        "description": "apps.datasource_knowledge_base.models",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.models",
        "documentation": {}
    },
    {
        "label": "ContextHistoryKnowledgeBaseConnection",
        "importPath": "apps.datasource_knowledge_base.models",
        "description": "apps.datasource_knowledge_base.models",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.models",
        "documentation": {}
    },
    {
        "label": "ContextHistoryMemory",
        "importPath": "apps.datasource_knowledge_base.models",
        "description": "apps.datasource_knowledge_base.models",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.models",
        "documentation": {}
    },
    {
        "label": "ContextHistoryMemoryChunk",
        "importPath": "apps.datasource_knowledge_base.models",
        "description": "apps.datasource_knowledge_base.models",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.models",
        "documentation": {}
    },
    {
        "label": "KnowledgeBaseDocument",
        "importPath": "apps.datasource_knowledge_base.models",
        "description": "apps.datasource_knowledge_base.models",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.models",
        "documentation": {}
    },
    {
        "label": "KnowledgeBaseDocumentChunk",
        "importPath": "apps.datasource_knowledge_base.models",
        "description": "apps.datasource_knowledge_base.models",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.models",
        "documentation": {}
    },
    {
        "label": "DocumentProcessingLog",
        "importPath": "apps.datasource_knowledge_base.models",
        "description": "apps.datasource_knowledge_base.models",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.models",
        "documentation": {}
    },
    {
        "label": "DocumentKnowledgeBaseConnection",
        "importPath": "apps.datasource_knowledge_base.models",
        "description": "apps.datasource_knowledge_base.models",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.models",
        "documentation": {}
    },
    {
        "label": "DocumentKnowledgeBaseConnection",
        "importPath": "apps.datasource_knowledge_base.models",
        "description": "apps.datasource_knowledge_base.models",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.models",
        "documentation": {}
    },
    {
        "label": "DocumentKnowledgeBaseConnection",
        "importPath": "apps.datasource_knowledge_base.models",
        "description": "apps.datasource_knowledge_base.models",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.models",
        "documentation": {}
    },
    {
        "label": "KnowledgeBaseDocument",
        "importPath": "apps.datasource_knowledge_base.models",
        "description": "apps.datasource_knowledge_base.models",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.models",
        "documentation": {}
    },
    {
        "label": "DocumentKnowledgeBaseConnection",
        "importPath": "apps.datasource_knowledge_base.models",
        "description": "apps.datasource_knowledge_base.models",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.models",
        "documentation": {}
    },
    {
        "label": "KnowledgeBaseDocument",
        "importPath": "apps.datasource_knowledge_base.models",
        "description": "apps.datasource_knowledge_base.models",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.models",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.datasource_knowledge_base.models",
        "description": "apps.datasource_knowledge_base.models",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.models",
        "documentation": {}
    },
    {
        "label": "DocumentKnowledgeBaseConnection",
        "importPath": "apps.datasource_knowledge_base.models",
        "description": "apps.datasource_knowledge_base.models",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.models",
        "documentation": {}
    },
    {
        "label": "DocumentKnowledgeBaseConnection",
        "importPath": "apps.datasource_knowledge_base.models",
        "description": "apps.datasource_knowledge_base.models",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.models",
        "documentation": {}
    },
    {
        "label": "DocumentKnowledgeBaseConnection",
        "importPath": "apps.datasource_knowledge_base.models",
        "description": "apps.datasource_knowledge_base.models",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.models",
        "documentation": {}
    },
    {
        "label": "ContextHistoryKnowledgeBaseConnection",
        "importPath": "apps.datasource_knowledge_base.models",
        "description": "apps.datasource_knowledge_base.models",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.models",
        "documentation": {}
    },
    {
        "label": "KnowledgeBaseDocument",
        "importPath": "apps.datasource_knowledge_base.models",
        "description": "apps.datasource_knowledge_base.models",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.models",
        "documentation": {}
    },
    {
        "label": "DocumentKnowledgeBaseConnection",
        "importPath": "apps.datasource_knowledge_base.models",
        "description": "apps.datasource_knowledge_base.models",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.models",
        "documentation": {}
    },
    {
        "label": "DataSourceFileSystem",
        "importPath": "apps.datasource_file_systems.models",
        "description": "apps.datasource_file_systems.models",
        "isExtraImport": true,
        "detail": "apps.datasource_file_systems.models",
        "documentation": {}
    },
    {
        "label": "DataSourceFileSystem",
        "importPath": "apps.datasource_file_systems.models",
        "description": "apps.datasource_file_systems.models",
        "isExtraImport": true,
        "detail": "apps.datasource_file_systems.models",
        "documentation": {}
    },
    {
        "label": "DataSourceFileSystem",
        "importPath": "apps.datasource_file_systems.models",
        "description": "apps.datasource_file_systems.models",
        "isExtraImport": true,
        "detail": "apps.datasource_file_systems.models",
        "documentation": {}
    },
    {
        "label": "DataSourceFileSystem",
        "importPath": "apps.datasource_file_systems.models",
        "description": "apps.datasource_file_systems.models",
        "isExtraImport": true,
        "detail": "apps.datasource_file_systems.models",
        "documentation": {}
    },
    {
        "label": "DataSourceFileSystem",
        "importPath": "apps.datasource_file_systems.models",
        "description": "apps.datasource_file_systems.models",
        "isExtraImport": true,
        "detail": "apps.datasource_file_systems.models",
        "documentation": {}
    },
    {
        "label": "DataSourceFileSystem",
        "importPath": "apps.datasource_file_systems.models",
        "description": "apps.datasource_file_systems.models",
        "isExtraImport": true,
        "detail": "apps.datasource_file_systems.models",
        "documentation": {}
    },
    {
        "label": "DataSourceFileSystem",
        "importPath": "apps.datasource_file_systems.models",
        "description": "apps.datasource_file_systems.models",
        "isExtraImport": true,
        "detail": "apps.datasource_file_systems.models",
        "documentation": {}
    },
    {
        "label": "DataSourceFileSystem",
        "importPath": "apps.datasource_file_systems.models",
        "description": "apps.datasource_file_systems.models",
        "isExtraImport": true,
        "detail": "apps.datasource_file_systems.models",
        "documentation": {}
    },
    {
        "label": "DataSourceFileSystem",
        "importPath": "apps.datasource_file_systems.models",
        "description": "apps.datasource_file_systems.models",
        "isExtraImport": true,
        "detail": "apps.datasource_file_systems.models",
        "documentation": {}
    },
    {
        "label": "DataSourceBrowserConnection",
        "importPath": "apps.datasource_browsers.models",
        "description": "apps.datasource_browsers.models",
        "isExtraImport": true,
        "detail": "apps.datasource_browsers.models",
        "documentation": {}
    },
    {
        "label": "DataSourceBrowserConnection",
        "importPath": "apps.datasource_browsers.models",
        "description": "apps.datasource_browsers.models",
        "isExtraImport": true,
        "detail": "apps.datasource_browsers.models",
        "documentation": {}
    },
    {
        "label": "DataSourceBrowserConnection",
        "importPath": "apps.datasource_browsers.models",
        "description": "apps.datasource_browsers.models",
        "isExtraImport": true,
        "detail": "apps.datasource_browsers.models",
        "documentation": {}
    },
    {
        "label": "DataSourceBrowserBrowsingLog",
        "importPath": "apps.datasource_browsers.models",
        "description": "apps.datasource_browsers.models",
        "isExtraImport": true,
        "detail": "apps.datasource_browsers.models",
        "documentation": {}
    },
    {
        "label": "DataSourceBrowserConnection",
        "importPath": "apps.datasource_browsers.models",
        "description": "apps.datasource_browsers.models",
        "isExtraImport": true,
        "detail": "apps.datasource_browsers.models",
        "documentation": {}
    },
    {
        "label": "DataSourceBrowserConnection",
        "importPath": "apps.datasource_browsers.models",
        "description": "apps.datasource_browsers.models",
        "isExtraImport": true,
        "detail": "apps.datasource_browsers.models",
        "documentation": {}
    },
    {
        "label": "DataSourceBrowserConnection",
        "importPath": "apps.datasource_browsers.models",
        "description": "apps.datasource_browsers.models",
        "isExtraImport": true,
        "detail": "apps.datasource_browsers.models",
        "documentation": {}
    },
    {
        "label": "DataSourceBrowserConnection",
        "importPath": "apps.datasource_browsers.models",
        "description": "apps.datasource_browsers.models",
        "isExtraImport": true,
        "detail": "apps.datasource_browsers.models",
        "documentation": {}
    },
    {
        "label": "DataSourceBrowserBrowsingLog",
        "importPath": "apps.datasource_browsers.models",
        "description": "apps.datasource_browsers.models",
        "isExtraImport": true,
        "detail": "apps.datasource_browsers.models",
        "documentation": {}
    },
    {
        "label": "DataSourceBrowserBrowsingLog",
        "importPath": "apps.datasource_browsers.models",
        "description": "apps.datasource_browsers.models",
        "isExtraImport": true,
        "detail": "apps.datasource_browsers.models",
        "documentation": {}
    },
    {
        "label": "DataSourceBrowserConnection",
        "importPath": "apps.datasource_browsers.models",
        "description": "apps.datasource_browsers.models",
        "isExtraImport": true,
        "detail": "apps.datasource_browsers.models",
        "documentation": {}
    },
    {
        "label": "DataSourceBrowserConnection",
        "importPath": "apps.datasource_browsers.models",
        "description": "apps.datasource_browsers.models",
        "isExtraImport": true,
        "detail": "apps.datasource_browsers.models",
        "documentation": {}
    },
    {
        "label": "OrchestrationQueryLogTypesNames",
        "importPath": "apps.orchestrations.utils",
        "description": "apps.orchestrations.utils",
        "isExtraImport": true,
        "detail": "apps.orchestrations.utils",
        "documentation": {}
    },
    {
        "label": "OrchestrationQueryLogTypesNames",
        "importPath": "apps.orchestrations.utils",
        "description": "apps.orchestrations.utils",
        "isExtraImport": true,
        "detail": "apps.orchestrations.utils",
        "documentation": {}
    },
    {
        "label": "OrchestrationQueryLogTypesNames",
        "importPath": "apps.orchestrations.utils",
        "description": "apps.orchestrations.utils",
        "isExtraImport": true,
        "detail": "apps.orchestrations.utils",
        "documentation": {}
    },
    {
        "label": "MAESTRO_ADMIN_LIST",
        "importPath": "apps.orchestrations.utils",
        "description": "apps.orchestrations.utils",
        "isExtraImport": true,
        "detail": "apps.orchestrations.utils",
        "documentation": {}
    },
    {
        "label": "MAESTRO_ADMIN_SEARCH",
        "importPath": "apps.orchestrations.utils",
        "description": "apps.orchestrations.utils",
        "isExtraImport": true,
        "detail": "apps.orchestrations.utils",
        "documentation": {}
    },
    {
        "label": "MAESTRO_QUERY_ADMIN_LIST",
        "importPath": "apps.orchestrations.utils",
        "description": "apps.orchestrations.utils",
        "isExtraImport": true,
        "detail": "apps.orchestrations.utils",
        "documentation": {}
    },
    {
        "label": "MAESTRO_QUERY_ADMIN_SEARCH",
        "importPath": "apps.orchestrations.utils",
        "description": "apps.orchestrations.utils",
        "isExtraImport": true,
        "detail": "apps.orchestrations.utils",
        "documentation": {}
    },
    {
        "label": "MAESTRO_QUERY_ADMIN_FILTER",
        "importPath": "apps.orchestrations.utils",
        "description": "apps.orchestrations.utils",
        "isExtraImport": true,
        "detail": "apps.orchestrations.utils",
        "documentation": {}
    },
    {
        "label": "MAESTRO_QUERY_LOG_ADMIN_LIST",
        "importPath": "apps.orchestrations.utils",
        "description": "apps.orchestrations.utils",
        "isExtraImport": true,
        "detail": "apps.orchestrations.utils",
        "documentation": {}
    },
    {
        "label": "MAESTRO_QUERY_LOG_ADMIN_SEARCH",
        "importPath": "apps.orchestrations.utils",
        "description": "apps.orchestrations.utils",
        "isExtraImport": true,
        "detail": "apps.orchestrations.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.orchestrations.utils",
        "description": "apps.orchestrations.utils",
        "isExtraImport": true,
        "detail": "apps.orchestrations.utils",
        "documentation": {}
    },
    {
        "label": "ORCHESTRATION_RESPONSE_LANGUAGES",
        "importPath": "apps.orchestrations.utils",
        "description": "apps.orchestrations.utils",
        "isExtraImport": true,
        "detail": "apps.orchestrations.utils",
        "documentation": {}
    },
    {
        "label": "ORCHESTRATION_QUERY_LOG_TYPES",
        "importPath": "apps.orchestrations.utils",
        "description": "apps.orchestrations.utils",
        "isExtraImport": true,
        "detail": "apps.orchestrations.utils",
        "documentation": {}
    },
    {
        "label": "OrchestrationQueryLogTypesNames",
        "importPath": "apps.orchestrations.utils",
        "description": "apps.orchestrations.utils",
        "isExtraImport": true,
        "detail": "apps.orchestrations.utils",
        "documentation": {}
    },
    {
        "label": "OrchestrationQueryLogTypesNames",
        "importPath": "apps.orchestrations.utils",
        "description": "apps.orchestrations.utils",
        "isExtraImport": true,
        "detail": "apps.orchestrations.utils",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "Group",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "Group",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.orchestration.prompts.orchestration.build_assistant_calls_meta_tool_prompt",
        "description": "apps.core.orchestration.prompts.orchestration.build_assistant_calls_meta_tool_prompt",
        "isExtraImport": true,
        "detail": "apps.core.orchestration.prompts.orchestration.build_assistant_calls_meta_tool_prompt",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.orchestration.prompts.orchestration.build_main_orchestration_prompt",
        "description": "apps.core.orchestration.prompts.orchestration.build_main_orchestration_prompt",
        "isExtraImport": true,
        "detail": "apps.core.orchestration.prompts.orchestration.build_main_orchestration_prompt",
        "documentation": {}
    },
    {
        "label": "build_target_audience_prompt",
        "importPath": "apps.core.system_prompts.agent_configuration.target_audience_prompt_manager",
        "description": "apps.core.system_prompts.agent_configuration.target_audience_prompt_manager",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.agent_configuration.target_audience_prompt_manager",
        "documentation": {}
    },
    {
        "label": "build_target_audience_prompt",
        "importPath": "apps.core.system_prompts.agent_configuration.target_audience_prompt_manager",
        "description": "apps.core.system_prompts.agent_configuration.target_audience_prompt_manager",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.agent_configuration.target_audience_prompt_manager",
        "documentation": {}
    },
    {
        "label": "build_communication_language_prompt",
        "importPath": "apps.core.system_prompts.agent_configuration.communication_language_prompt_manager",
        "description": "apps.core.system_prompts.agent_configuration.communication_language_prompt_manager",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.agent_configuration.communication_language_prompt_manager",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.agent_configuration.communication_language_prompt_manager",
        "description": "apps.core.system_prompts.agent_configuration.communication_language_prompt_manager",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.agent_configuration.communication_language_prompt_manager",
        "documentation": {}
    },
    {
        "label": "build_templated_response_prompt",
        "importPath": "apps.core.system_prompts.agent_configuration.templated_response_prompt_manager",
        "description": "apps.core.system_prompts.agent_configuration.templated_response_prompt_manager",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.agent_configuration.templated_response_prompt_manager",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.agent_configuration.templated_response_prompt_manager",
        "description": "apps.core.system_prompts.agent_configuration.templated_response_prompt_manager",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.agent_configuration.templated_response_prompt_manager",
        "documentation": {}
    },
    {
        "label": "build_agent_personality_prompt",
        "importPath": "apps.core.system_prompts.agent_configuration.agent_personality_prompt_manager",
        "description": "apps.core.system_prompts.agent_configuration.agent_personality_prompt_manager",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.agent_configuration.agent_personality_prompt_manager",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.agent_configuration.agent_personality_prompt_manager",
        "description": "apps.core.system_prompts.agent_configuration.agent_personality_prompt_manager",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.agent_configuration.agent_personality_prompt_manager",
        "documentation": {}
    },
    {
        "label": "build_user_tenant_prompt",
        "importPath": "apps.core.system_prompts.agent_configuration.communication_user_tenant_prompt_manager",
        "description": "apps.core.system_prompts.agent_configuration.communication_user_tenant_prompt_manager",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.agent_configuration.communication_user_tenant_prompt_manager",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.agent_configuration.communication_user_tenant_prompt_manager",
        "description": "apps.core.system_prompts.agent_configuration.communication_user_tenant_prompt_manager",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.agent_configuration.communication_user_tenant_prompt_manager",
        "documentation": {}
    },
    {
        "label": "get_channel_layer",
        "importPath": "channels.layers",
        "description": "channels.layers",
        "isExtraImport": true,
        "detail": "channels.layers",
        "documentation": {}
    },
    {
        "label": "get_channel_layer",
        "importPath": "channels.layers",
        "description": "channels.layers",
        "isExtraImport": true,
        "detail": "channels.layers",
        "documentation": {}
    },
    {
        "label": "OrchestrationToolManager",
        "importPath": "apps.core.orchestration.orchestration_tool_manager",
        "description": "apps.core.orchestration.orchestration_tool_manager",
        "isExtraImport": true,
        "detail": "apps.core.orchestration.orchestration_tool_manager",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.orchestration.prompts.calls.build_maestro_to_assistant_instructions",
        "description": "apps.core.orchestration.prompts.calls.build_maestro_to_assistant_instructions",
        "isExtraImport": true,
        "detail": "apps.core.orchestration.prompts.calls.build_maestro_to_assistant_instructions",
        "documentation": {}
    },
    {
        "label": "OrchestrationHistoryBuilder",
        "importPath": "apps.core.orchestration.prompts.orchestration_history_builder",
        "description": "apps.core.orchestration.prompts.orchestration_history_builder",
        "isExtraImport": true,
        "detail": "apps.core.orchestration.prompts.orchestration_history_builder",
        "documentation": {}
    },
    {
        "label": "OrchestrationPromptBuilder",
        "importPath": "apps.core.orchestration.prompts.orchestration_prompt_builder",
        "description": "apps.core.orchestration.prompts.orchestration_prompt_builder",
        "isExtraImport": true,
        "detail": "apps.core.orchestration.prompts.orchestration_prompt_builder",
        "documentation": {}
    },
    {
        "label": "send_orchestration_message",
        "importPath": "apps.core.orchestration.utils",
        "description": "apps.core.orchestration.utils",
        "isExtraImport": true,
        "detail": "apps.core.orchestration.utils",
        "documentation": {}
    },
    {
        "label": "embed_orchestration_tool_call_in_prompt",
        "importPath": "apps.core.orchestration.utils",
        "description": "apps.core.orchestration.utils",
        "isExtraImport": true,
        "detail": "apps.core.orchestration.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.orchestration.utils",
        "description": "apps.core.orchestration.utils",
        "isExtraImport": true,
        "detail": "apps.core.orchestration.utils",
        "documentation": {}
    },
    {
        "label": "get_orchestration_json_decode_error_log",
        "importPath": "apps.core.orchestration.utils",
        "description": "apps.core.orchestration.utils",
        "isExtraImport": true,
        "detail": "apps.core.orchestration.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.orchestration.utils",
        "description": "apps.core.orchestration.utils",
        "isExtraImport": true,
        "detail": "apps.core.orchestration.utils",
        "documentation": {}
    },
    {
        "label": "run_worker_tool",
        "importPath": "apps.core.orchestration.runners.worker_tool_runner",
        "description": "apps.core.orchestration.runners.worker_tool_runner",
        "isExtraImport": true,
        "detail": "apps.core.orchestration.runners.worker_tool_runner",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.orchestration.validators.validate_orchestration_assistant_call",
        "description": "apps.core.orchestration.validators.validate_orchestration_assistant_call",
        "isExtraImport": true,
        "detail": "apps.core.orchestration.validators.validate_orchestration_assistant_call",
        "documentation": {}
    },
    {
        "label": "mysql",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "mysql",
        "description": "mysql",
        "detail": "mysql",
        "documentation": {}
    },
    {
        "label": "mysql.connector",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "mysql.connector",
        "description": "mysql.connector",
        "detail": "mysql.connector",
        "documentation": {}
    },
    {
        "label": "cursor_cext",
        "importPath": "mysql.connector",
        "description": "mysql.connector",
        "isExtraImport": true,
        "detail": "mysql.connector",
        "documentation": {}
    },
    {
        "label": "before_execute_sql_query",
        "importPath": "apps.core.sql.utils",
        "description": "apps.core.sql.utils",
        "isExtraImport": true,
        "detail": "apps.core.sql.utils",
        "documentation": {}
    },
    {
        "label": "can_write_to_database",
        "importPath": "apps.core.sql.utils",
        "description": "apps.core.sql.utils",
        "isExtraImport": true,
        "detail": "apps.core.sql.utils",
        "documentation": {}
    },
    {
        "label": "before_execute_sql_query",
        "importPath": "apps.core.sql.utils",
        "description": "apps.core.sql.utils",
        "isExtraImport": true,
        "detail": "apps.core.sql.utils",
        "documentation": {}
    },
    {
        "label": "can_write_to_database",
        "importPath": "apps.core.sql.utils",
        "description": "apps.core.sql.utils",
        "isExtraImport": true,
        "detail": "apps.core.sql.utils",
        "documentation": {}
    },
    {
        "label": "psycopg2",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "psycopg2",
        "description": "psycopg2",
        "detail": "psycopg2",
        "documentation": {}
    },
    {
        "label": "RealDictCursor",
        "importPath": "psycopg2.extras",
        "description": "psycopg2.extras",
        "isExtraImport": true,
        "detail": "psycopg2.extras",
        "documentation": {}
    },
    {
        "label": "DBMSChoicesNames",
        "importPath": "apps.datasource_sql.utils",
        "description": "apps.datasource_sql.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.utils",
        "documentation": {}
    },
    {
        "label": "DBMSChoicesNames",
        "importPath": "apps.datasource_sql.utils",
        "description": "apps.datasource_sql.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.utils",
        "documentation": {}
    },
    {
        "label": "POSTGRESQL_SCHEMA_RETRIEVAL_QUERY",
        "importPath": "apps.datasource_sql.utils",
        "description": "apps.datasource_sql.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.datasource_sql.utils",
        "description": "apps.datasource_sql.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.utils",
        "documentation": {}
    },
    {
        "label": "SQL_QUERY_ADMIN_LIST",
        "importPath": "apps.datasource_sql.utils",
        "description": "apps.datasource_sql.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.utils",
        "documentation": {}
    },
    {
        "label": "SQL_QUERY_ADMIN_FILTER",
        "importPath": "apps.datasource_sql.utils",
        "description": "apps.datasource_sql.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.utils",
        "documentation": {}
    },
    {
        "label": "SQL_QUERY_ADMIN_SEARCH",
        "importPath": "apps.datasource_sql.utils",
        "description": "apps.datasource_sql.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.utils",
        "documentation": {}
    },
    {
        "label": "DBMS_CHOICES",
        "importPath": "apps.datasource_sql.utils",
        "description": "apps.datasource_sql.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.utils",
        "documentation": {}
    },
    {
        "label": "DBMSChoicesNames",
        "importPath": "apps.datasource_sql.utils",
        "description": "apps.datasource_sql.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.utils",
        "documentation": {}
    },
    {
        "label": "POSTGRESQL_SCHEMA_RETRIEVAL_QUERY",
        "importPath": "apps.datasource_sql.utils",
        "description": "apps.datasource_sql.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.datasource_sql.utils",
        "description": "apps.datasource_sql.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.utils",
        "documentation": {}
    },
    {
        "label": "DBMS_CHOICES",
        "importPath": "apps.datasource_sql.utils",
        "description": "apps.datasource_sql.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.utils",
        "documentation": {}
    },
    {
        "label": "DBMS_CHOICES",
        "importPath": "apps.datasource_sql.utils",
        "description": "apps.datasource_sql.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.utils",
        "documentation": {}
    },
    {
        "label": "PostgresSQLExecutor",
        "importPath": "apps.core.sql.sql_executor",
        "description": "apps.core.sql.sql_executor",
        "isExtraImport": true,
        "detail": "apps.core.sql.sql_executor",
        "documentation": {}
    },
    {
        "label": "MySQLExecutor",
        "importPath": "apps.core.sql.sql_executor",
        "description": "apps.core.sql.sql_executor",
        "isExtraImport": true,
        "detail": "apps.core.sql.sql_executor",
        "documentation": {}
    },
    {
        "label": "CodeRepositoryStorageConnection",
        "importPath": "apps.datasource_codebase.models",
        "description": "apps.datasource_codebase.models",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.models",
        "documentation": {}
    },
    {
        "label": "CodeRepositoryStorageConnection",
        "importPath": "apps.datasource_codebase.models",
        "description": "apps.datasource_codebase.models",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.models",
        "documentation": {}
    },
    {
        "label": "CodeRepositoryStorageConnection",
        "importPath": "apps.datasource_codebase.models",
        "description": "apps.datasource_codebase.models",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.models",
        "documentation": {}
    },
    {
        "label": "CodeBaseRepository",
        "importPath": "apps.datasource_codebase.models",
        "description": "apps.datasource_codebase.models",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.models",
        "documentation": {}
    },
    {
        "label": "CodeBaseRepositoryChunk",
        "importPath": "apps.datasource_codebase.models",
        "description": "apps.datasource_codebase.models",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.models",
        "documentation": {}
    },
    {
        "label": "RepositoryProcessingLog",
        "importPath": "apps.datasource_codebase.models",
        "description": "apps.datasource_codebase.models",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.models",
        "documentation": {}
    },
    {
        "label": "CodeRepositoryStorageConnection",
        "importPath": "apps.datasource_codebase.models",
        "description": "apps.datasource_codebase.models",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.models",
        "documentation": {}
    },
    {
        "label": "CodeRepositoryStorageConnection",
        "importPath": "apps.datasource_codebase.models",
        "description": "apps.datasource_codebase.models",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.models",
        "documentation": {}
    },
    {
        "label": "CodeRepositoryStorageConnection",
        "importPath": "apps.datasource_codebase.models",
        "description": "apps.datasource_codebase.models",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.models",
        "documentation": {}
    },
    {
        "label": "CodeRepositoryStorageConnection",
        "importPath": "apps.datasource_codebase.models",
        "description": "apps.datasource_codebase.models",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.models",
        "documentation": {}
    },
    {
        "label": "CodeRepositoryStorageConnection",
        "importPath": "apps.datasource_codebase.models",
        "description": "apps.datasource_codebase.models",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.models",
        "documentation": {}
    },
    {
        "label": "CodeRepositoryStorageConnection",
        "importPath": "apps.datasource_codebase.models",
        "description": "apps.datasource_codebase.models",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.models",
        "documentation": {}
    },
    {
        "label": "CodeBaseRepository",
        "importPath": "apps.datasource_codebase.models",
        "description": "apps.datasource_codebase.models",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.models",
        "documentation": {}
    },
    {
        "label": "CodeRepositoryStorageConnection",
        "importPath": "apps.datasource_codebase.models",
        "description": "apps.datasource_codebase.models",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.models",
        "documentation": {}
    },
    {
        "label": "CodeBaseRepository",
        "importPath": "apps.datasource_codebase.models",
        "description": "apps.datasource_codebase.models",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.models",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.datasource_codebase.models",
        "description": "apps.datasource_codebase.models",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.models",
        "documentation": {}
    },
    {
        "label": "CodeBaseRepository",
        "importPath": "apps.datasource_codebase.models",
        "description": "apps.datasource_codebase.models",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.models",
        "documentation": {}
    },
    {
        "label": "CodeRepositoryStorageConnection",
        "importPath": "apps.datasource_codebase.models",
        "description": "apps.datasource_codebase.models",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.models",
        "documentation": {}
    },
    {
        "label": "VideoGeneratorConnection",
        "importPath": "apps.video_generations.models",
        "description": "apps.video_generations.models",
        "isExtraImport": true,
        "detail": "apps.video_generations.models",
        "documentation": {}
    },
    {
        "label": "GeneratedVideo",
        "importPath": "apps.video_generations.models",
        "description": "apps.video_generations.models",
        "isExtraImport": true,
        "detail": "apps.video_generations.models",
        "documentation": {}
    },
    {
        "label": "VideoGeneratorConnection",
        "importPath": "apps.video_generations.models",
        "description": "apps.video_generations.models",
        "isExtraImport": true,
        "detail": "apps.video_generations.models",
        "documentation": {}
    },
    {
        "label": "VideoGeneratorConnection",
        "importPath": "apps.video_generations.models",
        "description": "apps.video_generations.models",
        "isExtraImport": true,
        "detail": "apps.video_generations.models",
        "documentation": {}
    },
    {
        "label": "VideoGeneratorConnection",
        "importPath": "apps.video_generations.models",
        "description": "apps.video_generations.models",
        "isExtraImport": true,
        "detail": "apps.video_generations.models",
        "documentation": {}
    },
    {
        "label": "GeneratedVideo",
        "importPath": "apps.video_generations.models",
        "description": "apps.video_generations.models",
        "isExtraImport": true,
        "detail": "apps.video_generations.models",
        "documentation": {}
    },
    {
        "label": "GeneratedVideo",
        "importPath": "apps.video_generations.models",
        "description": "apps.video_generations.models",
        "isExtraImport": true,
        "detail": "apps.video_generations.models",
        "documentation": {}
    },
    {
        "label": "VideoGeneratorConnection",
        "importPath": "apps.video_generations.models",
        "description": "apps.video_generations.models",
        "isExtraImport": true,
        "detail": "apps.video_generations.models",
        "documentation": {}
    },
    {
        "label": "VideoGeneratorConnection",
        "importPath": "apps.video_generations.models",
        "description": "apps.video_generations.models",
        "isExtraImport": true,
        "detail": "apps.video_generations.models",
        "documentation": {}
    },
    {
        "label": "VideoGeneratorConnection",
        "importPath": "apps.video_generations.models",
        "description": "apps.video_generations.models",
        "isExtraImport": true,
        "detail": "apps.video_generations.models",
        "documentation": {}
    },
    {
        "label": "VideoGeneratorConnection",
        "importPath": "apps.video_generations.models",
        "description": "apps.video_generations.models",
        "isExtraImport": true,
        "detail": "apps.video_generations.models",
        "documentation": {}
    },
    {
        "label": "VideoGeneratorConnection",
        "importPath": "apps.video_generations.models",
        "description": "apps.video_generations.models",
        "isExtraImport": true,
        "detail": "apps.video_generations.models",
        "documentation": {}
    },
    {
        "label": "VideoGenerationActionTypes",
        "importPath": "apps.core.video_generation.utils",
        "description": "apps.core.video_generation.utils",
        "isExtraImport": true,
        "detail": "apps.core.video_generation.utils",
        "documentation": {}
    },
    {
        "label": "VideoGeneratorFrameTypes",
        "importPath": "apps.core.video_generation.utils",
        "description": "apps.core.video_generation.utils",
        "isExtraImport": true,
        "detail": "apps.core.video_generation.utils",
        "documentation": {}
    },
    {
        "label": "VideoGenerationActionTypes",
        "importPath": "apps.core.video_generation.utils",
        "description": "apps.core.video_generation.utils",
        "isExtraImport": true,
        "detail": "apps.core.video_generation.utils",
        "documentation": {}
    },
    {
        "label": "VideoGenerationActionTypes",
        "importPath": "apps.core.video_generation.utils",
        "description": "apps.core.video_generation.utils",
        "isExtraImport": true,
        "detail": "apps.core.video_generation.utils",
        "documentation": {}
    },
    {
        "label": "VideoGeneratorFrameTypes",
        "importPath": "apps.core.video_generation.utils",
        "description": "apps.core.video_generation.utils",
        "isExtraImport": true,
        "detail": "apps.core.video_generation.utils",
        "documentation": {}
    },
    {
        "label": "LumaAIGenerationStates",
        "importPath": "apps.core.video_generation.utils",
        "description": "apps.core.video_generation.utils",
        "isExtraImport": true,
        "detail": "apps.core.video_generation.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.video_generation.utils",
        "description": "apps.core.video_generation.utils",
        "isExtraImport": true,
        "detail": "apps.core.video_generation.utils",
        "documentation": {}
    },
    {
        "label": "VideoGeneratorProviderTypesNames",
        "importPath": "apps.core.video_generation.utils",
        "description": "apps.core.video_generation.utils",
        "isExtraImport": true,
        "detail": "apps.core.video_generation.utils",
        "documentation": {}
    },
    {
        "label": "VIDEO_GENERATOR_PROVIDER_TYPES",
        "importPath": "apps.core.video_generation.utils",
        "description": "apps.core.video_generation.utils",
        "isExtraImport": true,
        "detail": "apps.core.video_generation.utils",
        "documentation": {}
    },
    {
        "label": "VIDEO_GENERATOR_PROVIDER_TYPES",
        "importPath": "apps.core.video_generation.utils",
        "description": "apps.core.video_generation.utils",
        "isExtraImport": true,
        "detail": "apps.core.video_generation.utils",
        "documentation": {}
    },
    {
        "label": "VIDEO_GENERATOR_PROVIDER_TYPES",
        "importPath": "apps.core.video_generation.utils",
        "description": "apps.core.video_generation.utils",
        "isExtraImport": true,
        "detail": "apps.core.video_generation.utils",
        "documentation": {}
    },
    {
        "label": "ContextMemoryManager",
        "importPath": "apps.core.context_memory_manager.context_memory_manager",
        "description": "apps.core.context_memory_manager.context_memory_manager",
        "isExtraImport": true,
        "detail": "apps.core.context_memory_manager.context_memory_manager",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.agent_configuration.intra_context_memory_prompt_manager",
        "description": "apps.core.system_prompts.agent_configuration.intra_context_memory_prompt_manager",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.agent_configuration.intra_context_memory_prompt_manager",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.agent_configuration.technical_dictionary_prompt_manager",
        "description": "apps.core.system_prompts.agent_configuration.technical_dictionary_prompt_manager",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.agent_configuration.technical_dictionary_prompt_manager",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.agent_configuration.system_internal_instructions_prompt_manager",
        "description": "apps.core.system_prompts.agent_configuration.system_internal_instructions_prompt_manager",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.agent_configuration.system_internal_instructions_prompt_manager",
        "documentation": {}
    },
    {
        "label": "build_standard_memory_prompt",
        "importPath": "apps.core.system_prompts.agent_configuration.standard_memory_prompt_manager",
        "description": "apps.core.system_prompts.agent_configuration.standard_memory_prompt_manager",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.agent_configuration.standard_memory_prompt_manager",
        "documentation": {}
    },
    {
        "label": "build_agent_nickname_prompt",
        "importPath": "apps.core.system_prompts.agent_configuration.agent_nickname_prompt_manager",
        "description": "apps.core.system_prompts.agent_configuration.agent_nickname_prompt_manager",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.agent_configuration.agent_nickname_prompt_manager",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.agent_configuration.spatial_awareness_prompt_manager",
        "description": "apps.core.system_prompts.agent_configuration.spatial_awareness_prompt_manager",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.agent_configuration.spatial_awareness_prompt_manager",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.agent_configuration.internal_principles_prompt_manager",
        "description": "apps.core.system_prompts.agent_configuration.internal_principles_prompt_manager",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.agent_configuration.internal_principles_prompt_manager",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.information_feeds.browser.build_browser_data_source_prompt",
        "description": "apps.core.system_prompts.information_feeds.browser.build_browser_data_source_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.information_feeds.browser.build_browser_data_source_prompt",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.information_feeds.code_base.build_code_base_data_source_prompt",
        "description": "apps.core.system_prompts.information_feeds.code_base.build_code_base_data_source_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.information_feeds.code_base.build_code_base_data_source_prompt",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.information_feeds.media_manager.build_media_manager_data_source_prompt",
        "description": "apps.core.system_prompts.information_feeds.media_manager.build_media_manager_data_source_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.information_feeds.media_manager.build_media_manager_data_source_prompt",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.information_feeds.ml_manager.build_ml_models_data_source_prompt",
        "description": "apps.core.system_prompts.information_feeds.ml_manager.build_ml_models_data_source_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.information_feeds.ml_manager.build_ml_models_data_source_prompt",
        "documentation": {}
    },
    {
        "label": "build_sql_data_source_prompt",
        "importPath": "apps.core.system_prompts.information_feeds.sql.build_sql_data_source_prompt",
        "description": "apps.core.system_prompts.information_feeds.sql.build_sql_data_source_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.information_feeds.sql.build_sql_data_source_prompt",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.information_feeds.sql.build_sql_data_source_prompt",
        "description": "apps.core.system_prompts.information_feeds.sql.build_sql_data_source_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.information_feeds.sql.build_sql_data_source_prompt",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.information_feeds.ssh_file_system.build_file_system_data_source_prompt",
        "description": "apps.core.system_prompts.information_feeds.ssh_file_system.build_file_system_data_source_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.information_feeds.ssh_file_system.build_file_system_data_source_prompt",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.information_feeds.vector_store.build_vector_store_data_source_prompt",
        "description": "apps.core.system_prompts.information_feeds.vector_store.build_vector_store_data_source_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.information_feeds.vector_store.build_vector_store_data_source_prompt",
        "documentation": {}
    },
    {
        "label": "build_structured_primary_guidelines_leanmod",
        "importPath": "apps.core.system_prompts.leanmod.leanmod_guidelines_prompt",
        "description": "apps.core.system_prompts.leanmod.leanmod_guidelines_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.leanmod.leanmod_guidelines_prompt",
        "documentation": {}
    },
    {
        "label": "build_structured_instructions_prompt_leanmod",
        "importPath": "apps.core.system_prompts.leanmod.leanmod_instructions_prompt",
        "description": "apps.core.system_prompts.leanmod.leanmod_instructions_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.leanmod.leanmod_instructions_prompt",
        "documentation": {}
    },
    {
        "label": "build_structured_name_prompt_leanmod",
        "importPath": "apps.core.system_prompts.leanmod.leanmod_name_prompt",
        "description": "apps.core.system_prompts.leanmod.leanmod_name_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.leanmod.leanmod_name_prompt",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.leanmod.leanmod_place_and_time_prompt",
        "description": "apps.core.system_prompts.leanmod.leanmod_place_and_time_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.leanmod.leanmod_place_and_time_prompt",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.leanmod.leanmod_user_information_prompt",
        "description": "apps.core.system_prompts.leanmod.leanmod_user_information_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.leanmod.leanmod_user_information_prompt",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.leanmod.multimodality.leanmod_multimodality_expert_network_prompt",
        "description": "apps.core.system_prompts.leanmod.multimodality.leanmod_multimodality_expert_network_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.leanmod.multimodality.leanmod_multimodality_expert_network_prompt",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.leanmod.tools.leanmod_tools_expert_networks_query_prompt",
        "description": "apps.core.system_prompts.leanmod.tools.leanmod_tools_expert_networks_query_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.leanmod.tools.leanmod_tools_expert_networks_query_prompt",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.leanmod.tools.leanmod_tools_instructions_prompt",
        "description": "apps.core.system_prompts.leanmod.tools.leanmod_tools_instructions_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.leanmod.tools.leanmod_tools_instructions_prompt",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.flexible_modalities.restful_api_modality_instructions",
        "description": "apps.core.system_prompts.flexible_modalities.restful_api_modality_instructions",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.flexible_modalities.restful_api_modality_instructions",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.flexible_modalities.py_function_modality_instructions",
        "description": "apps.core.system_prompts.flexible_modalities.py_function_modality_instructions",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.flexible_modalities.py_function_modality_instructions",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.flexible_modalities.bash_script_modality_instructions",
        "description": "apps.core.system_prompts.flexible_modalities.bash_script_modality_instructions",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.flexible_modalities.bash_script_modality_instructions",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.tool_call_prompts.generic_instructions_tool_call",
        "description": "apps.core.system_prompts.tool_call_prompts.generic_instructions_tool_call",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.tool_call_prompts.generic_instructions_tool_call",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_audio_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_audio_tool_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_audio_tool_prompt",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_browsing_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_browsing_tool_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_browsing_tool_prompt",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_codebase_query_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_codebase_query_tool_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_codebase_query_tool_prompt",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_code_analysis_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_code_analysis_tool_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_code_analysis_tool_prompt",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_restful_api_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_restful_api_tool_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_restful_api_tool_prompt",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_code_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_code_tool_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_code_tool_prompt",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_bash_script_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_bash_script_tool_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_bash_script_tool_prompt",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_ssh_file_system_command_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_ssh_file_system_command_tool_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_ssh_file_system_command_tool_prompt",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.generate_image_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.generate_image_tool_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.generate_image_tool_prompt",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.edit_image_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.edit_image_tool_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.edit_image_tool_prompt",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.dream_image_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.dream_image_tool_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.dream_image_tool_prompt",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_vector_store_query_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_vector_store_query_tool_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_vector_store_query_tool_prompt",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.infer_with_machine_learning_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.infer_with_machine_learning_tool_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.infer_with_machine_learning_tool_prompt",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.reasoning_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.reasoning_tool_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.reasoning_tool_prompt",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_sql_query_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_sql_query_tool_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_sql_query_tool_prompt",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_media_manager_query_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_media_manager_query_tool_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_media_manager_query_tool_prompt",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.retrieval_via_http_client_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.retrieval_via_http_client_tool_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.retrieval_via_http_client_tool_prompt",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_query_intra_context_memory_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_query_intra_context_memory_tool_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_query_intra_context_memory_tool_prompt",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.generate_video_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.generate_video_tool_prompt",
        "isExtraImport": true,
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.generate_video_tool_prompt",
        "documentation": {}
    },
    {
        "label": "CodeAnalystExecutionManager",
        "importPath": "apps.core.code_analyst.code_interpreter_executor",
        "description": "apps.core.code_analyst.code_interpreter_executor",
        "isExtraImport": true,
        "detail": "apps.core.code_analyst.code_interpreter_executor",
        "documentation": {}
    },
    {
        "label": "CodeBaseDecoder",
        "importPath": "apps.core.codebase.codebase_decoder",
        "description": "apps.core.codebase.codebase_decoder",
        "isExtraImport": true,
        "detail": "apps.core.codebase.codebase_decoder",
        "documentation": {}
    },
    {
        "label": "CodeBaseDecoder",
        "importPath": "apps.core.codebase.codebase_decoder",
        "description": "apps.core.codebase.codebase_decoder",
        "isExtraImport": true,
        "detail": "apps.core.codebase.codebase_decoder",
        "documentation": {}
    },
    {
        "label": "CodeBaseDecoder",
        "importPath": "apps.core.codebase.codebase_decoder",
        "description": "apps.core.codebase.codebase_decoder",
        "isExtraImport": true,
        "detail": "apps.core.codebase.codebase_decoder",
        "documentation": {}
    },
    {
        "label": "CodeBaseDecoder",
        "importPath": "apps.core.codebase.codebase_decoder",
        "description": "apps.core.codebase.codebase_decoder",
        "isExtraImport": true,
        "detail": "apps.core.codebase.codebase_decoder",
        "documentation": {}
    },
    {
        "label": "CodeBaseDecoder",
        "importPath": "apps.core.codebase.codebase_decoder",
        "description": "apps.core.codebase.codebase_decoder",
        "isExtraImport": true,
        "detail": "apps.core.codebase.codebase_decoder",
        "documentation": {}
    },
    {
        "label": "CodeBaseDecoder",
        "importPath": "apps.core.codebase.codebase_decoder",
        "description": "apps.core.codebase.codebase_decoder",
        "isExtraImport": true,
        "detail": "apps.core.codebase.codebase_decoder",
        "documentation": {}
    },
    {
        "label": "DreamManager",
        "importPath": "apps.core.visual_client.operations",
        "description": "apps.core.visual_client.operations",
        "isExtraImport": true,
        "detail": "apps.core.visual_client.operations",
        "documentation": {}
    },
    {
        "label": "EditManager",
        "importPath": "apps.core.visual_client.operations",
        "description": "apps.core.visual_client.operations",
        "isExtraImport": true,
        "detail": "apps.core.visual_client.operations",
        "documentation": {}
    },
    {
        "label": "GeneratorManager",
        "importPath": "apps.core.visual_client.operations",
        "description": "apps.core.visual_client.operations",
        "isExtraImport": true,
        "detail": "apps.core.visual_client.operations",
        "documentation": {}
    },
    {
        "label": "CustomAPIExecutor",
        "importPath": "apps.core.flexible_modalities.custom_api_executor",
        "description": "apps.core.flexible_modalities.custom_api_executor",
        "isExtraImport": true,
        "detail": "apps.core.flexible_modalities.custom_api_executor",
        "documentation": {}
    },
    {
        "label": "CustomFunctionExecutor",
        "importPath": "apps.core.flexible_modalities.custom_function_executor",
        "description": "apps.core.flexible_modalities.custom_function_executor",
        "isExtraImport": true,
        "detail": "apps.core.flexible_modalities.custom_function_executor",
        "documentation": {}
    },
    {
        "label": "CustomScriptsContentRetriever",
        "importPath": "apps.core.flexible_modalities.custom_script_executor",
        "description": "apps.core.flexible_modalities.custom_script_executor",
        "isExtraImport": true,
        "detail": "apps.core.flexible_modalities.custom_script_executor",
        "documentation": {}
    },
    {
        "label": "FileSystemsExecutor",
        "importPath": "apps.core.file_systems.file_systems_executor",
        "description": "apps.core.file_systems.file_systems_executor",
        "isExtraImport": true,
        "detail": "apps.core.file_systems.file_systems_executor",
        "documentation": {}
    },
    {
        "label": "FileSystemsExecutor",
        "importPath": "apps.core.file_systems.file_systems_executor",
        "description": "apps.core.file_systems.file_systems_executor",
        "isExtraImport": true,
        "detail": "apps.core.file_systems.file_systems_executor",
        "documentation": {}
    },
    {
        "label": "VideoGenerationExecutor",
        "importPath": "apps.core.video_generation.video_generation_executor",
        "description": "apps.core.video_generation.video_generation_executor",
        "isExtraImport": true,
        "detail": "apps.core.video_generation.video_generation_executor",
        "documentation": {}
    },
    {
        "label": "VideoGenerationExecutor",
        "importPath": "apps.core.video_generation.video_generation_executor",
        "description": "apps.core.video_generation.video_generation_executor",
        "isExtraImport": true,
        "detail": "apps.core.video_generation.video_generation_executor",
        "documentation": {}
    },
    {
        "label": "VideoGeneratorDecoder",
        "importPath": "apps.core.video_generation.video_generator_decoder",
        "description": "apps.core.video_generation.video_generator_decoder",
        "isExtraImport": true,
        "detail": "apps.core.video_generation.video_generator_decoder",
        "documentation": {}
    },
    {
        "label": "HTTPClientDownloadExecutor",
        "importPath": "apps.core.http_client.http_client_download_manager",
        "description": "apps.core.http_client.http_client_download_manager",
        "isExtraImport": true,
        "detail": "apps.core.http_client.http_client_download_manager",
        "documentation": {}
    },
    {
        "label": "MLModelExecutor",
        "importPath": "apps.core.ml_models.ml_model_executor",
        "description": "apps.core.ml_models.ml_model_executor",
        "isExtraImport": true,
        "detail": "apps.core.ml_models.ml_model_executor",
        "documentation": {}
    },
    {
        "label": "AudioProcessingExecutor",
        "importPath": "apps.core.audio_processing.audio_processing_executor",
        "description": "apps.core.audio_processing.audio_processing_executor",
        "isExtraImport": true,
        "detail": "apps.core.audio_processing.audio_processing_executor",
        "documentation": {}
    },
    {
        "label": "RunAudioProcessingActionTypesNames",
        "importPath": "apps.core.audio_processing.utils",
        "description": "apps.core.audio_processing.utils",
        "isExtraImport": true,
        "detail": "apps.core.audio_processing.utils",
        "documentation": {}
    },
    {
        "label": "RunAudioProcessingActionTypesNames",
        "importPath": "apps.core.audio_processing.utils",
        "description": "apps.core.audio_processing.utils",
        "isExtraImport": true,
        "detail": "apps.core.audio_processing.utils",
        "documentation": {}
    },
    {
        "label": "ReasoningExecutor",
        "importPath": "apps.core.reasoning.reasoning_executor",
        "description": "apps.core.reasoning.reasoning_executor",
        "isExtraImport": true,
        "detail": "apps.core.reasoning.reasoning_executor",
        "documentation": {}
    },
    {
        "label": "MediaManager",
        "importPath": "apps.core.media_managers.media_manager_execution_handler",
        "description": "apps.core.media_managers.media_manager_execution_handler",
        "isExtraImport": true,
        "detail": "apps.core.media_managers.media_manager_execution_handler",
        "documentation": {}
    },
    {
        "label": "MediaManager",
        "importPath": "apps.core.media_managers.media_manager_execution_handler",
        "description": "apps.core.media_managers.media_manager_execution_handler",
        "isExtraImport": true,
        "detail": "apps.core.media_managers.media_manager_execution_handler",
        "documentation": {}
    },
    {
        "label": "MediaManager",
        "importPath": "apps.core.media_managers.media_manager_execution_handler",
        "description": "apps.core.media_managers.media_manager_execution_handler",
        "isExtraImport": true,
        "detail": "apps.core.media_managers.media_manager_execution_handler",
        "documentation": {}
    },
    {
        "label": "MediaManager",
        "importPath": "apps.core.media_managers.media_manager_execution_handler",
        "description": "apps.core.media_managers.media_manager_execution_handler",
        "isExtraImport": true,
        "detail": "apps.core.media_managers.media_manager_execution_handler",
        "documentation": {}
    },
    {
        "label": "MediaManager",
        "importPath": "apps.core.media_managers.media_manager_execution_handler",
        "description": "apps.core.media_managers.media_manager_execution_handler",
        "isExtraImport": true,
        "detail": "apps.core.media_managers.media_manager_execution_handler",
        "documentation": {}
    },
    {
        "label": "MediaManager",
        "importPath": "apps.core.media_managers.media_manager_execution_handler",
        "description": "apps.core.media_managers.media_manager_execution_handler",
        "isExtraImport": true,
        "detail": "apps.core.media_managers.media_manager_execution_handler",
        "documentation": {}
    },
    {
        "label": "InternalSQLClient",
        "importPath": "apps.core.sql.sql_decoder",
        "description": "apps.core.sql.sql_decoder",
        "isExtraImport": true,
        "detail": "apps.core.sql.sql_decoder",
        "documentation": {}
    },
    {
        "label": "KnowledgeBaseSystemDecoder",
        "importPath": "apps.core.vector_operations.vector_document.vector_store_decoder",
        "description": "apps.core.vector_operations.vector_document.vector_store_decoder",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.vector_document.vector_store_decoder",
        "documentation": {}
    },
    {
        "label": "KnowledgeBaseSystemDecoder",
        "importPath": "apps.core.vector_operations.vector_document.vector_store_decoder",
        "description": "apps.core.vector_operations.vector_document.vector_store_decoder",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.vector_document.vector_store_decoder",
        "documentation": {}
    },
    {
        "label": "KnowledgeBaseSystemDecoder",
        "importPath": "apps.core.vector_operations.vector_document.vector_store_decoder",
        "description": "apps.core.vector_operations.vector_document.vector_store_decoder",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.vector_document.vector_store_decoder",
        "documentation": {}
    },
    {
        "label": "KnowledgeBaseSystemDecoder",
        "importPath": "apps.core.vector_operations.vector_document.vector_store_decoder",
        "description": "apps.core.vector_operations.vector_document.vector_store_decoder",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.vector_document.vector_store_decoder",
        "documentation": {}
    },
    {
        "label": "KnowledgeBaseSystemDecoder",
        "importPath": "apps.core.vector_operations.vector_document.vector_store_decoder",
        "description": "apps.core.vector_operations.vector_document.vector_store_decoder",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.vector_document.vector_store_decoder",
        "documentation": {}
    },
    {
        "label": "KnowledgeBaseSystemDecoder",
        "importPath": "apps.core.vector_operations.vector_document.vector_store_decoder",
        "description": "apps.core.vector_operations.vector_document.vector_store_decoder",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.vector_document.vector_store_decoder",
        "documentation": {}
    },
    {
        "label": "ExpertNetworkExecutor",
        "importPath": "apps.core.expert_networks.expert_network_executor",
        "description": "apps.core.expert_networks.expert_network_executor",
        "isExtraImport": true,
        "detail": "apps.core.expert_networks.expert_network_executor",
        "documentation": {}
    },
    {
        "label": "run_process_reasoning",
        "importPath": "apps.core.tool_calls.core_services.core_service_process_reasoning",
        "description": "apps.core.tool_calls.core_services.core_service_process_reasoning",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.core_services.core_service_process_reasoning",
        "documentation": {}
    },
    {
        "label": "run_generate_video",
        "importPath": "apps.core.tool_calls.core_services.core_service_generate_video",
        "description": "apps.core.tool_calls.core_services.core_service_generate_video",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.core_services.core_service_generate_video",
        "documentation": {}
    },
    {
        "label": "verify_analyze_code_content",
        "importPath": "apps.core.tool_calls.input_verifiers.verify_analyze_code",
        "description": "apps.core.tool_calls.input_verifiers.verify_analyze_code",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.input_verifiers.verify_analyze_code",
        "documentation": {}
    },
    {
        "label": "verify_audio_processing_query",
        "importPath": "apps.core.tool_calls.input_verifiers.verify_audio_processing_query",
        "description": "apps.core.tool_calls.input_verifiers.verify_audio_processing_query",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.input_verifiers.verify_audio_processing_query",
        "documentation": {}
    },
    {
        "label": "verify_browser_query_content",
        "importPath": "apps.core.tool_calls.input_verifiers.verify_browser_query",
        "description": "apps.core.tool_calls.input_verifiers.verify_browser_query",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.input_verifiers.verify_browser_query",
        "documentation": {}
    },
    {
        "label": "verify_dream_image_content",
        "importPath": "apps.core.tool_calls.input_verifiers.verify_dream_image",
        "description": "apps.core.tool_calls.input_verifiers.verify_dream_image",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.input_verifiers.verify_dream_image",
        "documentation": {}
    },
    {
        "label": "verify_edit_image_content",
        "importPath": "apps.core.tool_calls.input_verifiers.verify_edit_image",
        "description": "apps.core.tool_calls.input_verifiers.verify_edit_image",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.input_verifiers.verify_edit_image",
        "documentation": {}
    },
    {
        "label": "verify_generate_image_content",
        "importPath": "apps.core.tool_calls.input_verifiers.verify_generate_image",
        "description": "apps.core.tool_calls.input_verifiers.verify_generate_image",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.input_verifiers.verify_generate_image",
        "documentation": {}
    },
    {
        "label": "verify_generate_video_content",
        "importPath": "apps.core.tool_calls.input_verifiers.verify_generate_video",
        "description": "apps.core.tool_calls.input_verifiers.verify_generate_video",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.input_verifiers.verify_generate_video",
        "documentation": {}
    },
    {
        "label": "verify_http_retrieval_query_content",
        "importPath": "apps.core.tool_calls.input_verifiers.verify_http_retrieval_query",
        "description": "apps.core.tool_calls.input_verifiers.verify_http_retrieval_query",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.input_verifiers.verify_http_retrieval_query",
        "documentation": {}
    },
    {
        "label": "verify_infer_ml_query_content",
        "importPath": "apps.core.tool_calls.input_verifiers.verify_infer_ml_query",
        "description": "apps.core.tool_calls.input_verifiers.verify_infer_ml_query",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.input_verifiers.verify_infer_ml_query",
        "documentation": {}
    },
    {
        "label": "verify_main_call_or_query_content",
        "importPath": "apps.core.tool_calls.input_verifiers.verify_main_query_or_run_call",
        "description": "apps.core.tool_calls.input_verifiers.verify_main_query_or_run_call",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.input_verifiers.verify_main_query_or_run_call",
        "documentation": {}
    },
    {
        "label": "verify_media_manager_query_content",
        "importPath": "apps.core.tool_calls.input_verifiers.verify_media_manager_query",
        "description": "apps.core.tool_calls.input_verifiers.verify_media_manager_query",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.input_verifiers.verify_media_manager_query",
        "documentation": {}
    },
    {
        "label": "verify_process_reasoning_query_content",
        "importPath": "apps.core.tool_calls.input_verifiers.verify_process_reasoning_query",
        "description": "apps.core.tool_calls.input_verifiers.verify_process_reasoning_query",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.input_verifiers.verify_process_reasoning_query",
        "documentation": {}
    },
    {
        "label": "verify_code_base_query_content",
        "importPath": "apps.core.tool_calls.input_verifiers.verify_query_code_base",
        "description": "apps.core.tool_calls.input_verifiers.verify_query_code_base",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.input_verifiers.verify_query_code_base",
        "documentation": {}
    },
    {
        "label": "verify_intra_memory_query_content",
        "importPath": "apps.core.tool_calls.input_verifiers.verify_query_intra_memory",
        "description": "apps.core.tool_calls.input_verifiers.verify_query_intra_memory",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.input_verifiers.verify_query_intra_memory",
        "documentation": {}
    },
    {
        "label": "verify_run_custom_api_content",
        "importPath": "apps.core.tool_calls.input_verifiers.verify_run_custom_api",
        "description": "apps.core.tool_calls.input_verifiers.verify_run_custom_api",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.input_verifiers.verify_run_custom_api",
        "documentation": {}
    },
    {
        "label": "verify_run_custom_function_content",
        "importPath": "apps.core.tool_calls.input_verifiers.verify_run_custom_function",
        "description": "apps.core.tool_calls.input_verifiers.verify_run_custom_function",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.input_verifiers.verify_run_custom_function",
        "documentation": {}
    },
    {
        "label": "verify_run_custom_script_content",
        "importPath": "apps.core.tool_calls.input_verifiers.verify_run_custom_script",
        "description": "apps.core.tool_calls.input_verifiers.verify_run_custom_script",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.input_verifiers.verify_run_custom_script",
        "documentation": {}
    },
    {
        "label": "verify_run_sql_query_content",
        "importPath": "apps.core.tool_calls.input_verifiers.verify_run_sql_query",
        "description": "apps.core.tool_calls.input_verifiers.verify_run_sql_query",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.input_verifiers.verify_run_sql_query",
        "documentation": {}
    },
    {
        "label": "verify_ssh_system_command_content",
        "importPath": "apps.core.tool_calls.input_verifiers.verify_ssh_system_command",
        "description": "apps.core.tool_calls.input_verifiers.verify_ssh_system_command",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.input_verifiers.verify_ssh_system_command",
        "documentation": {}
    },
    {
        "label": "verify_vector_store_query_content",
        "importPath": "apps.core.tool_calls.input_verifiers.verify_vector_store_query",
        "description": "apps.core.tool_calls.input_verifiers.verify_vector_store_query",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.input_verifiers.verify_vector_store_query",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.tool_calls.leanmod.input_verifiers.verify_expert_network_query",
        "description": "apps.core.tool_calls.leanmod.input_verifiers.verify_expert_network_query",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.leanmod.input_verifiers.verify_expert_network_query",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.tool_calls.core_services.core_service_process_audio",
        "description": "apps.core.tool_calls.core_services.core_service_process_audio",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.core_services.core_service_process_audio",
        "documentation": {}
    },
    {
        "label": "run_execute_browsing",
        "importPath": "apps.core.tool_calls.core_services.core_service_execute_browser",
        "description": "apps.core.tool_calls.core_services.core_service_execute_browser",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.core_services.core_service_execute_browser",
        "documentation": {}
    },
    {
        "label": "run_query_code_base",
        "importPath": "apps.core.tool_calls.core_services.core_service_code_base_query",
        "description": "apps.core.tool_calls.core_services.core_service_code_base_query",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.core_services.core_service_code_base_query",
        "documentation": {}
    },
    {
        "label": "run_analyze_code",
        "importPath": "apps.core.tool_calls.core_services.core_service_analyze_code",
        "description": "apps.core.tool_calls.core_services.core_service_analyze_code",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.core_services.core_service_analyze_code",
        "documentation": {}
    },
    {
        "label": "run_execute_custom_api",
        "importPath": "apps.core.tool_calls.core_services.core_service_execute_custom_api",
        "description": "apps.core.tool_calls.core_services.core_service_execute_custom_api",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.core_services.core_service_execute_custom_api",
        "documentation": {}
    },
    {
        "label": "run_execute_custom_code",
        "importPath": "apps.core.tool_calls.core_services.core_service_execute_custom_function",
        "description": "apps.core.tool_calls.core_services.core_service_execute_custom_function",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.core_services.core_service_execute_custom_function",
        "documentation": {}
    },
    {
        "label": "run_execute_custom_script",
        "importPath": "apps.core.tool_calls.core_services.core_service_execute_custom_script",
        "description": "apps.core.tool_calls.core_services.core_service_execute_custom_script",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.core_services.core_service_execute_custom_script",
        "documentation": {}
    },
    {
        "label": "run_execute_ssh_system_commands",
        "importPath": "apps.core.tool_calls.core_services.core_service_execute_ssh_system_command",
        "description": "apps.core.tool_calls.core_services.core_service_execute_ssh_system_command",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.core_services.core_service_execute_ssh_system_command",
        "documentation": {}
    },
    {
        "label": "run_generate_image",
        "importPath": "apps.core.tool_calls.core_services.core_service_generate_image",
        "description": "apps.core.tool_calls.core_services.core_service_generate_image",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.core_services.core_service_generate_image",
        "documentation": {}
    },
    {
        "label": "run_edit_image",
        "importPath": "apps.core.tool_calls.core_services.core_service_edit_image",
        "description": "apps.core.tool_calls.core_services.core_service_edit_image",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.core_services.core_service_edit_image",
        "documentation": {}
    },
    {
        "label": "run_dream_image",
        "importPath": "apps.core.tool_calls.core_services.core_service_dream_image",
        "description": "apps.core.tool_calls.core_services.core_service_dream_image",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.core_services.core_service_dream_image",
        "documentation": {}
    },
    {
        "label": "run_query_vector_store",
        "importPath": "apps.core.tool_calls.core_services.core_service_vector_store_query",
        "description": "apps.core.tool_calls.core_services.core_service_vector_store_query",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.core_services.core_service_vector_store_query",
        "documentation": {}
    },
    {
        "label": "run_query_intra_memory",
        "importPath": "apps.core.tool_calls.core_services.core_service_intra_memory_query",
        "description": "apps.core.tool_calls.core_services.core_service_intra_memory_query",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.core_services.core_service_intra_memory_query",
        "documentation": {}
    },
    {
        "label": "run_predict_with_ml",
        "importPath": "apps.core.tool_calls.core_services.core_service_infer_with_ml",
        "description": "apps.core.tool_calls.core_services.core_service_infer_with_ml",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.core_services.core_service_infer_with_ml",
        "documentation": {}
    },
    {
        "label": "run_sql_query",
        "importPath": "apps.core.tool_calls.core_services.core_service_sql_query",
        "description": "apps.core.tool_calls.core_services.core_service_sql_query",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.core_services.core_service_sql_query",
        "documentation": {}
    },
    {
        "label": "run_http_retrieval",
        "importPath": "apps.core.tool_calls.core_services.core_service_http_retrieval",
        "description": "apps.core.tool_calls.core_services.core_service_http_retrieval",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.core_services.core_service_http_retrieval",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.tool_calls.leanmod.core_services.core_service_query_expert_network",
        "description": "apps.core.tool_calls.leanmod.core_services.core_service_query_expert_network",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.leanmod.core_services.core_service_query_expert_network",
        "documentation": {}
    },
    {
        "label": "UserPermission",
        "importPath": "apps.user_permissions.models",
        "description": "apps.user_permissions.models",
        "isExtraImport": true,
        "detail": "apps.user_permissions.models",
        "documentation": {}
    },
    {
        "label": "UserPermission",
        "importPath": "apps.user_permissions.models",
        "description": "apps.user_permissions.models",
        "isExtraImport": true,
        "detail": "apps.user_permissions.models",
        "documentation": {}
    },
    {
        "label": "UserPermission",
        "importPath": "apps.user_permissions.models",
        "description": "apps.user_permissions.models",
        "isExtraImport": true,
        "detail": "apps.user_permissions.models",
        "documentation": {}
    },
    {
        "label": "UserRole",
        "importPath": "apps.user_permissions.models",
        "description": "apps.user_permissions.models",
        "isExtraImport": true,
        "detail": "apps.user_permissions.models",
        "documentation": {}
    },
    {
        "label": "UserRole",
        "importPath": "apps.user_permissions.models",
        "description": "apps.user_permissions.models",
        "isExtraImport": true,
        "detail": "apps.user_permissions.models",
        "documentation": {}
    },
    {
        "label": "UserRole",
        "importPath": "apps.user_permissions.models",
        "description": "apps.user_permissions.models",
        "isExtraImport": true,
        "detail": "apps.user_permissions.models",
        "documentation": {}
    },
    {
        "label": "UserPermission",
        "importPath": "apps.user_permissions.models",
        "description": "apps.user_permissions.models",
        "isExtraImport": true,
        "detail": "apps.user_permissions.models",
        "documentation": {}
    },
    {
        "label": "UserPermission",
        "importPath": "apps.user_permissions.models",
        "description": "apps.user_permissions.models",
        "isExtraImport": true,
        "detail": "apps.user_permissions.models",
        "documentation": {}
    },
    {
        "label": "UserRole",
        "importPath": "apps.user_permissions.models",
        "description": "apps.user_permissions.models",
        "isExtraImport": true,
        "detail": "apps.user_permissions.models",
        "documentation": {}
    },
    {
        "label": "UserRole",
        "importPath": "apps.user_permissions.models",
        "description": "apps.user_permissions.models",
        "isExtraImport": true,
        "detail": "apps.user_permissions.models",
        "documentation": {}
    },
    {
        "label": "UserRole",
        "importPath": "apps.user_permissions.models",
        "description": "apps.user_permissions.models",
        "isExtraImport": true,
        "detail": "apps.user_permissions.models",
        "documentation": {}
    },
    {
        "label": "UserPermission",
        "importPath": "apps.user_permissions.models",
        "description": "apps.user_permissions.models",
        "isExtraImport": true,
        "detail": "apps.user_permissions.models",
        "documentation": {}
    },
    {
        "label": "UserRole",
        "importPath": "apps.user_permissions.models",
        "description": "apps.user_permissions.models",
        "isExtraImport": true,
        "detail": "apps.user_permissions.models",
        "documentation": {}
    },
    {
        "label": "UserPermission",
        "importPath": "apps.user_permissions.models",
        "description": "apps.user_permissions.models",
        "isExtraImport": true,
        "detail": "apps.user_permissions.models",
        "documentation": {}
    },
    {
        "label": "SupportedDocumentTypesNames",
        "importPath": "apps.core.vector_operations.vector_document.utils",
        "description": "apps.core.vector_operations.vector_document.utils",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.vector_document.utils",
        "documentation": {}
    },
    {
        "label": "VECTOR_STORE_DOCUMENT_WEAVIATE_FIELDS_CONFIG",
        "importPath": "apps.core.vector_operations.vector_document.utils",
        "description": "apps.core.vector_operations.vector_document.utils",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.vector_document.utils",
        "documentation": {}
    },
    {
        "label": "VECTOR_STORE_DOCUMENT_CHUNK_WEAVIATE_FIELDS_CONFIG",
        "importPath": "apps.core.vector_operations.vector_document.utils",
        "description": "apps.core.vector_operations.vector_document.utils",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.vector_document.utils",
        "documentation": {}
    },
    {
        "label": "CONTEXT_MEMORY_OBJECT_WEAVIATE_FIELDS_CONFIG",
        "importPath": "apps.core.vector_operations.vector_document.utils",
        "description": "apps.core.vector_operations.vector_document.utils",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.vector_document.utils",
        "documentation": {}
    },
    {
        "label": "CONTEXT_MEMORY_CHUNKS_WEAVIATE_FIELDS_CONFIG",
        "importPath": "apps.core.vector_operations.vector_document.utils",
        "description": "apps.core.vector_operations.vector_document.utils",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.vector_document.utils",
        "documentation": {}
    },
    {
        "label": "WEAVIATE_INITIALIZATION_TIMEOUT",
        "importPath": "apps.core.vector_operations.vector_document.utils",
        "description": "apps.core.vector_operations.vector_document.utils",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.vector_document.utils",
        "documentation": {}
    },
    {
        "label": "WEAVIATE_QUERY_TIMEOUT",
        "importPath": "apps.core.vector_operations.vector_document.utils",
        "description": "apps.core.vector_operations.vector_document.utils",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.vector_document.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.vector_operations.vector_document.utils",
        "description": "apps.core.vector_operations.vector_document.utils",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.vector_document.utils",
        "documentation": {}
    },
    {
        "label": "load_pdf_content",
        "importPath": "apps.datasource_knowledge_base.tasks",
        "description": "apps.datasource_knowledge_base.tasks",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.tasks",
        "documentation": {}
    },
    {
        "label": "load_html_content",
        "importPath": "apps.datasource_knowledge_base.tasks",
        "description": "apps.datasource_knowledge_base.tasks",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.tasks",
        "documentation": {}
    },
    {
        "label": "load_csv_content",
        "importPath": "apps.datasource_knowledge_base.tasks",
        "description": "apps.datasource_knowledge_base.tasks",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.tasks",
        "documentation": {}
    },
    {
        "label": "load_docx_content",
        "importPath": "apps.datasource_knowledge_base.tasks",
        "description": "apps.datasource_knowledge_base.tasks",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.tasks",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.datasource_knowledge_base.tasks",
        "description": "apps.datasource_knowledge_base.tasks",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.tasks",
        "documentation": {}
    },
    {
        "label": "index_memory_helper",
        "importPath": "apps.datasource_knowledge_base.tasks",
        "description": "apps.datasource_knowledge_base.tasks",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.tasks",
        "documentation": {}
    },
    {
        "label": "embed_memory_data",
        "importPath": "apps.datasource_knowledge_base.tasks",
        "description": "apps.datasource_knowledge_base.tasks",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.tasks",
        "documentation": {}
    },
    {
        "label": "embed_memory_chunks",
        "importPath": "apps.datasource_knowledge_base.tasks",
        "description": "apps.datasource_knowledge_base.tasks",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.tasks",
        "documentation": {}
    },
    {
        "label": "split_document_into_chunks",
        "importPath": "apps.datasource_knowledge_base.tasks",
        "description": "apps.datasource_knowledge_base.tasks",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.tasks",
        "documentation": {}
    },
    {
        "label": "embed_document_data",
        "importPath": "apps.datasource_knowledge_base.tasks",
        "description": "apps.datasource_knowledge_base.tasks",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.tasks",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.datasource_knowledge_base.tasks",
        "description": "apps.datasource_knowledge_base.tasks",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.tasks",
        "documentation": {}
    },
    {
        "label": "add_vector_store_doc_loaded_log",
        "importPath": "apps.datasource_knowledge_base.tasks",
        "description": "apps.datasource_knowledge_base.tasks",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.tasks",
        "documentation": {}
    },
    {
        "label": "create_intra_context_history_classes_helper",
        "importPath": "apps.core.vector_operations.vector_document.handler_methods.creation_handler",
        "description": "apps.core.vector_operations.vector_document.handler_methods.creation_handler",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.vector_document.handler_methods.creation_handler",
        "documentation": {}
    },
    {
        "label": "create_weaviate_classes_handler",
        "importPath": "apps.core.vector_operations.vector_document.handler_methods.creation_handler",
        "description": "apps.core.vector_operations.vector_document.handler_methods.creation_handler",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.vector_document.handler_methods.creation_handler",
        "documentation": {}
    },
    {
        "label": "delete_intra_context_history_class_helper",
        "importPath": "apps.core.vector_operations.vector_document.handler_methods.removal_handler_context_memory",
        "description": "apps.core.vector_operations.vector_document.handler_methods.removal_handler_context_memory",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.vector_document.handler_methods.removal_handler_context_memory",
        "documentation": {}
    },
    {
        "label": "delete_weaviate_class_handler",
        "importPath": "apps.core.vector_operations.vector_document.handler_methods.removal_handler_context_memory",
        "description": "apps.core.vector_operations.vector_document.handler_methods.removal_handler_context_memory",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.vector_document.handler_methods.removal_handler_context_memory",
        "documentation": {}
    },
    {
        "label": "delete_chat_history_document_helper",
        "importPath": "apps.core.vector_operations.vector_document.handler_methods.removal_handler_document",
        "description": "apps.core.vector_operations.vector_document.handler_methods.removal_handler_document",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.vector_document.handler_methods.removal_handler_document",
        "documentation": {}
    },
    {
        "label": "delete_document_helper",
        "importPath": "apps.core.vector_operations.vector_document.handler_methods.removal_handler_document",
        "description": "apps.core.vector_operations.vector_document.handler_methods.removal_handler_document",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.vector_document.handler_methods.removal_handler_document",
        "documentation": {}
    },
    {
        "label": "WEAVIATE_INITIALIZATION_TIMEOUT",
        "importPath": "apps.core.vector_operations.intra_context_memory.utils",
        "description": "apps.core.vector_operations.intra_context_memory.utils",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.intra_context_memory.utils",
        "documentation": {}
    },
    {
        "label": "WEAVIATE_QUERY_TIMEOUT",
        "importPath": "apps.core.vector_operations.intra_context_memory.utils",
        "description": "apps.core.vector_operations.intra_context_memory.utils",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.intra_context_memory.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.core.vector_operations.intra_context_memory.utils",
        "description": "apps.core.vector_operations.intra_context_memory.utils",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.intra_context_memory.utils",
        "documentation": {}
    },
    {
        "label": "DEFAULT_GENERATIVE_SEARCH_MODEL",
        "importPath": "apps.core.vector_operations.intra_context_memory.utils",
        "description": "apps.core.vector_operations.intra_context_memory.utils",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.intra_context_memory.utils",
        "documentation": {}
    },
    {
        "label": "KNOWLEDGE_BASE_PROVIDERS",
        "importPath": "apps.core.vector_operations.intra_context_memory.utils",
        "description": "apps.core.vector_operations.intra_context_memory.utils",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.intra_context_memory.utils",
        "documentation": {}
    },
    {
        "label": "VectorStoreDocProcessingStatusNames",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "VectorStoreDocProcessingStatusNames",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "build_weaviate_intra_memory_class_name",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "INTRA_MEMORY_ADMIN_LIST",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "INTRA_MEMORY_MEMORY_ADMIN_LIST",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "INTRA_MEMORY_MEMORY_ADMIN_FILTER",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "INTRA_MEMORY_MEMORY_CHUNK_ADMIN_LIST",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "DOCUMENT_ADMIN_LIST",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "DOCUMENT_ADMIN_FILTER",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "DOCUMENT_ADMIN_SEARCH",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "DOCUMENT_CHUNK_ADMIN_LIST",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "DOCUMENT_CHUNK_ADMIN_FILTER",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "DOCUMENT_PROCESSING_LOG_ADMIN_LIST",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "build_weaviate_class_name",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "DOCUMENT_VECTOR_STORE_CONNECTION_ADMIN_LIST",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "EMBEDDING_VECTORIZER_MODELS",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "build_weaviate_intra_memory_class_name",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "UPLOAD_FILES_SUPPORTED_FORMATS",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "UPLOAD_FILES_SUPPORTED_FORMATS",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "VECTORSTORE_SYSTEMS",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "EMBEDDING_VECTORIZER_MODELS",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "build_weaviate_class_name",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "INTRA_MEMORY_INITIAL_CHUNK_SIZE",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "INTRA_MEMORY_INITIAL_CHUNK_OVERLAP",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "generate_document_uri",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "VectorStoreDocProcessingStatusNames",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "VECTORSTORE_SYSTEMS",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "EMBEDDING_VECTORIZER_MODELS",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "VECTORSTORE_SYSTEMS",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "EMBEDDING_VECTORIZER_MODELS",
        "importPath": "apps.datasource_knowledge_base.utils",
        "description": "apps.datasource_knowledge_base.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.utils",
        "documentation": {}
    },
    {
        "label": "WeaviateExecutor",
        "importPath": "apps.core.vector_operations.vector_document.vector_store_executor",
        "description": "apps.core.vector_operations.vector_document.vector_store_executor",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.vector_document.vector_store_executor",
        "documentation": {}
    },
    {
        "label": "LumaAI",
        "importPath": "lumaai",
        "description": "lumaai",
        "isExtraImport": true,
        "detail": "lumaai",
        "documentation": {}
    },
    {
        "label": "dream_save_images_and_return_uris",
        "importPath": "apps.core.visual_client.utils",
        "description": "apps.core.visual_client.utils",
        "isExtraImport": true,
        "detail": "apps.core.visual_client.utils",
        "documentation": {}
    },
    {
        "label": "edit_save_images_and_return_uris",
        "importPath": "apps.core.visual_client.utils",
        "description": "apps.core.visual_client.utils",
        "isExtraImport": true,
        "detail": "apps.core.visual_client.utils",
        "documentation": {}
    },
    {
        "label": "generator_save_images_and_return_uris",
        "importPath": "apps.core.visual_client.utils",
        "description": "apps.core.visual_client.utils",
        "isExtraImport": true,
        "detail": "apps.core.visual_client.utils",
        "documentation": {}
    },
    {
        "label": "FILE_FORMAT_BIN",
        "importPath": "apps.core.visual_client.utils",
        "description": "apps.core.visual_client.utils",
        "isExtraImport": true,
        "detail": "apps.core.visual_client.utils",
        "documentation": {}
    },
    {
        "label": "RequestLog",
        "importPath": "apps.export_assistants.models",
        "description": "apps.export_assistants.models",
        "isExtraImport": true,
        "detail": "apps.export_assistants.models",
        "documentation": {}
    },
    {
        "label": "ExportAssistantAPI",
        "importPath": "apps.export_assistants.models",
        "description": "apps.export_assistants.models",
        "isExtraImport": true,
        "detail": "apps.export_assistants.models",
        "documentation": {}
    },
    {
        "label": "ExportAssistantAPI",
        "importPath": "apps.export_assistants.models",
        "description": "apps.export_assistants.models",
        "isExtraImport": true,
        "detail": "apps.export_assistants.models",
        "documentation": {}
    },
    {
        "label": "RequestLog",
        "importPath": "apps.export_assistants.models",
        "description": "apps.export_assistants.models",
        "isExtraImport": true,
        "detail": "apps.export_assistants.models",
        "documentation": {}
    },
    {
        "label": "ExportAssistantAPI",
        "importPath": "apps.export_assistants.models",
        "description": "apps.export_assistants.models",
        "isExtraImport": true,
        "detail": "apps.export_assistants.models",
        "documentation": {}
    },
    {
        "label": "RequestLog",
        "importPath": "apps.export_assistants.models",
        "description": "apps.export_assistants.models",
        "isExtraImport": true,
        "detail": "apps.export_assistants.models",
        "documentation": {}
    },
    {
        "label": "ExportAssistantAPI",
        "importPath": "apps.export_assistants.models",
        "description": "apps.export_assistants.models",
        "isExtraImport": true,
        "detail": "apps.export_assistants.models",
        "documentation": {}
    },
    {
        "label": "RequestLog",
        "importPath": "apps.export_assistants.models",
        "description": "apps.export_assistants.models",
        "isExtraImport": true,
        "detail": "apps.export_assistants.models",
        "documentation": {}
    },
    {
        "label": "ExportAssistantAPI",
        "importPath": "apps.export_assistants.models",
        "description": "apps.export_assistants.models",
        "isExtraImport": true,
        "detail": "apps.export_assistants.models",
        "documentation": {}
    },
    {
        "label": "ExportAssistantAPI",
        "importPath": "apps.export_assistants.models",
        "description": "apps.export_assistants.models",
        "isExtraImport": true,
        "detail": "apps.export_assistants.models",
        "documentation": {}
    },
    {
        "label": "ExportAssistantAPI",
        "importPath": "apps.export_assistants.models",
        "description": "apps.export_assistants.models",
        "isExtraImport": true,
        "detail": "apps.export_assistants.models",
        "documentation": {}
    },
    {
        "label": "ExportAssistantAPI",
        "importPath": "apps.export_assistants.models",
        "description": "apps.export_assistants.models",
        "isExtraImport": true,
        "detail": "apps.export_assistants.models",
        "documentation": {}
    },
    {
        "label": "ExportAssistantAPI",
        "importPath": "apps.export_assistants.models",
        "description": "apps.export_assistants.models",
        "isExtraImport": true,
        "detail": "apps.export_assistants.models",
        "documentation": {}
    },
    {
        "label": "ScheduledJobInstance",
        "importPath": "apps.mm_scheduled_jobs.models",
        "description": "apps.mm_scheduled_jobs.models",
        "isExtraImport": true,
        "detail": "apps.mm_scheduled_jobs.models",
        "documentation": {}
    },
    {
        "label": "ScheduledJob",
        "importPath": "apps.mm_scheduled_jobs.models",
        "description": "apps.mm_scheduled_jobs.models",
        "isExtraImport": true,
        "detail": "apps.mm_scheduled_jobs.models",
        "documentation": {}
    },
    {
        "label": "ScheduledJob",
        "importPath": "apps.mm_scheduled_jobs.models",
        "description": "apps.mm_scheduled_jobs.models",
        "isExtraImport": true,
        "detail": "apps.mm_scheduled_jobs.models",
        "documentation": {}
    },
    {
        "label": "ScheduledJobInstance",
        "importPath": "apps.mm_scheduled_jobs.models",
        "description": "apps.mm_scheduled_jobs.models",
        "isExtraImport": true,
        "detail": "apps.mm_scheduled_jobs.models",
        "documentation": {}
    },
    {
        "label": "ScheduledJob",
        "importPath": "apps.mm_scheduled_jobs.models",
        "description": "apps.mm_scheduled_jobs.models",
        "isExtraImport": true,
        "detail": "apps.mm_scheduled_jobs.models",
        "documentation": {}
    },
    {
        "label": "ScheduledJob",
        "importPath": "apps.mm_scheduled_jobs.models",
        "description": "apps.mm_scheduled_jobs.models",
        "isExtraImport": true,
        "detail": "apps.mm_scheduled_jobs.models",
        "documentation": {}
    },
    {
        "label": "ScheduledJob",
        "importPath": "apps.mm_scheduled_jobs.models",
        "description": "apps.mm_scheduled_jobs.models",
        "isExtraImport": true,
        "detail": "apps.mm_scheduled_jobs.models",
        "documentation": {}
    },
    {
        "label": "ScheduledJob",
        "importPath": "apps.mm_scheduled_jobs.models",
        "description": "apps.mm_scheduled_jobs.models",
        "isExtraImport": true,
        "detail": "apps.mm_scheduled_jobs.models",
        "documentation": {}
    },
    {
        "label": "ScheduledJob",
        "importPath": "apps.mm_scheduled_jobs.models",
        "description": "apps.mm_scheduled_jobs.models",
        "isExtraImport": true,
        "detail": "apps.mm_scheduled_jobs.models",
        "documentation": {}
    },
    {
        "label": "ScheduledJobInstance",
        "importPath": "apps.mm_scheduled_jobs.models",
        "description": "apps.mm_scheduled_jobs.models",
        "isExtraImport": true,
        "detail": "apps.mm_scheduled_jobs.models",
        "documentation": {}
    },
    {
        "label": "ScheduledJob",
        "importPath": "apps.mm_scheduled_jobs.models",
        "description": "apps.mm_scheduled_jobs.models",
        "isExtraImport": true,
        "detail": "apps.mm_scheduled_jobs.models",
        "documentation": {}
    },
    {
        "label": "ScheduledJob",
        "importPath": "apps.mm_scheduled_jobs.models",
        "description": "apps.mm_scheduled_jobs.models",
        "isExtraImport": true,
        "detail": "apps.mm_scheduled_jobs.models",
        "documentation": {}
    },
    {
        "label": "ScheduledJob",
        "importPath": "apps.mm_scheduled_jobs.models",
        "description": "apps.mm_scheduled_jobs.models",
        "isExtraImport": true,
        "detail": "apps.mm_scheduled_jobs.models",
        "documentation": {}
    },
    {
        "label": "TriggeredJobInstance",
        "importPath": "apps.mm_triggered_jobs.models",
        "description": "apps.mm_triggered_jobs.models",
        "isExtraImport": true,
        "detail": "apps.mm_triggered_jobs.models",
        "documentation": {}
    },
    {
        "label": "TriggeredJob",
        "importPath": "apps.mm_triggered_jobs.models",
        "description": "apps.mm_triggered_jobs.models",
        "isExtraImport": true,
        "detail": "apps.mm_triggered_jobs.models",
        "documentation": {}
    },
    {
        "label": "TriggeredJob",
        "importPath": "apps.mm_triggered_jobs.models",
        "description": "apps.mm_triggered_jobs.models",
        "isExtraImport": true,
        "detail": "apps.mm_triggered_jobs.models",
        "documentation": {}
    },
    {
        "label": "TriggeredJobInstance",
        "importPath": "apps.mm_triggered_jobs.models",
        "description": "apps.mm_triggered_jobs.models",
        "isExtraImport": true,
        "detail": "apps.mm_triggered_jobs.models",
        "documentation": {}
    },
    {
        "label": "TriggeredJob",
        "importPath": "apps.mm_triggered_jobs.models",
        "description": "apps.mm_triggered_jobs.models",
        "isExtraImport": true,
        "detail": "apps.mm_triggered_jobs.models",
        "documentation": {}
    },
    {
        "label": "TriggeredJob",
        "importPath": "apps.mm_triggered_jobs.models",
        "description": "apps.mm_triggered_jobs.models",
        "isExtraImport": true,
        "detail": "apps.mm_triggered_jobs.models",
        "documentation": {}
    },
    {
        "label": "TriggeredJob",
        "importPath": "apps.mm_triggered_jobs.models",
        "description": "apps.mm_triggered_jobs.models",
        "isExtraImport": true,
        "detail": "apps.mm_triggered_jobs.models",
        "documentation": {}
    },
    {
        "label": "TriggeredJobInstance",
        "importPath": "apps.mm_triggered_jobs.models",
        "description": "apps.mm_triggered_jobs.models",
        "isExtraImport": true,
        "detail": "apps.mm_triggered_jobs.models",
        "documentation": {}
    },
    {
        "label": "TriggeredJob",
        "importPath": "apps.mm_triggered_jobs.models",
        "description": "apps.mm_triggered_jobs.models",
        "isExtraImport": true,
        "detail": "apps.mm_triggered_jobs.models",
        "documentation": {}
    },
    {
        "label": "TriggeredJob",
        "importPath": "apps.mm_triggered_jobs.models",
        "description": "apps.mm_triggered_jobs.models",
        "isExtraImport": true,
        "detail": "apps.mm_triggered_jobs.models",
        "documentation": {}
    },
    {
        "label": "TriggeredJob",
        "importPath": "apps.mm_triggered_jobs.models",
        "description": "apps.mm_triggered_jobs.models",
        "isExtraImport": true,
        "detail": "apps.mm_triggered_jobs.models",
        "documentation": {}
    },
    {
        "label": "TriggeredJobInstance",
        "importPath": "apps.mm_triggered_jobs.models",
        "description": "apps.mm_triggered_jobs.models",
        "isExtraImport": true,
        "detail": "apps.mm_triggered_jobs.models",
        "documentation": {}
    },
    {
        "label": "TriggeredJob",
        "importPath": "apps.mm_triggered_jobs.models",
        "description": "apps.mm_triggered_jobs.models",
        "isExtraImport": true,
        "detail": "apps.mm_triggered_jobs.models",
        "documentation": {}
    },
    {
        "label": "AuxiliaryAnalyzeCodeManager",
        "importPath": "apps.dashboard.auxiliary_calculators.auxiliary_analyze_code_manager",
        "description": "apps.dashboard.auxiliary_calculators.auxiliary_analyze_code_manager",
        "isExtraImport": true,
        "detail": "apps.dashboard.auxiliary_calculators.auxiliary_analyze_code_manager",
        "documentation": {}
    },
    {
        "label": "AuxiliaryAPICallsManager",
        "importPath": "apps.dashboard.auxiliary_calculators.auxiliary_api_calls_manager",
        "description": "apps.dashboard.auxiliary_calculators.auxiliary_api_calls_manager",
        "isExtraImport": true,
        "detail": "apps.dashboard.auxiliary_calculators.auxiliary_api_calls_manager",
        "documentation": {}
    },
    {
        "label": "AuxiliaryCalculateMLManager",
        "importPath": "apps.dashboard.auxiliary_calculators.auxiliary_calculate_ml_manager",
        "description": "apps.dashboard.auxiliary_calculators.auxiliary_calculate_ml_manager",
        "isExtraImport": true,
        "detail": "apps.dashboard.auxiliary_calculators.auxiliary_calculate_ml_manager",
        "documentation": {}
    },
    {
        "label": "AuxiliaryCostsManager",
        "importPath": "apps.dashboard.auxiliary_calculators.auxiliary_costs_manager",
        "description": "apps.dashboard.auxiliary_calculators.auxiliary_costs_manager",
        "isExtraImport": true,
        "detail": "apps.dashboard.auxiliary_calculators.auxiliary_costs_manager",
        "documentation": {}
    },
    {
        "label": "AuxiliaryFunctionCallsManager",
        "importPath": "apps.dashboard.auxiliary_calculators.auxiliary_function_calls_manager",
        "description": "apps.dashboard.auxiliary_calculators.auxiliary_function_calls_manager",
        "isExtraImport": true,
        "detail": "apps.dashboard.auxiliary_calculators.auxiliary_function_calls_manager",
        "documentation": {}
    },
    {
        "label": "AuxiliaryInformationFeedsManager",
        "importPath": "apps.dashboard.auxiliary_calculators.auxiliary_information_feeds_manager",
        "description": "apps.dashboard.auxiliary_calculators.auxiliary_information_feeds_manager",
        "isExtraImport": true,
        "detail": "apps.dashboard.auxiliary_calculators.auxiliary_information_feeds_manager",
        "documentation": {}
    },
    {
        "label": "AuxiliaryInteractionsManager",
        "importPath": "apps.dashboard.auxiliary_calculators.auxiliary_interactions_manager",
        "description": "apps.dashboard.auxiliary_calculators.auxiliary_interactions_manager",
        "isExtraImport": true,
        "detail": "apps.dashboard.auxiliary_calculators.auxiliary_interactions_manager",
        "documentation": {}
    },
    {
        "label": "AuxiliaryMediaManager",
        "importPath": "apps.dashboard.auxiliary_calculators.auxiliary_media_manager",
        "description": "apps.dashboard.auxiliary_calculators.auxiliary_media_manager",
        "isExtraImport": true,
        "detail": "apps.dashboard.auxiliary_calculators.auxiliary_media_manager",
        "documentation": {}
    },
    {
        "label": "AuxiliaryMemoryManager",
        "importPath": "apps.dashboard.auxiliary_calculators.auxiliary_memory_manager",
        "description": "apps.dashboard.auxiliary_calculators.auxiliary_memory_manager",
        "isExtraImport": true,
        "detail": "apps.dashboard.auxiliary_calculators.auxiliary_memory_manager",
        "documentation": {}
    },
    {
        "label": "AuxiliaryOrganizationUsersManager",
        "importPath": "apps.dashboard.auxiliary_calculators.auxiliary_organization_users_manager",
        "description": "apps.dashboard.auxiliary_calculators.auxiliary_organization_users_manager",
        "isExtraImport": true,
        "detail": "apps.dashboard.auxiliary_calculators.auxiliary_organization_users_manager",
        "documentation": {}
    },
    {
        "label": "AuxiliaryScriptCallsManager",
        "importPath": "apps.dashboard.auxiliary_calculators.auxiliary_script_calls_manager",
        "description": "apps.dashboard.auxiliary_calculators.auxiliary_script_calls_manager",
        "isExtraImport": true,
        "detail": "apps.dashboard.auxiliary_calculators.auxiliary_script_calls_manager",
        "documentation": {}
    },
    {
        "label": "AuxiliaryTasksManager",
        "importPath": "apps.dashboard.auxiliary_calculators.auxiliary_tasks_manager",
        "description": "apps.dashboard.auxiliary_calculators.auxiliary_tasks_manager",
        "isExtraImport": true,
        "detail": "apps.dashboard.auxiliary_calculators.auxiliary_tasks_manager",
        "documentation": {}
    },
    {
        "label": "AuxiliaryTokensManager",
        "importPath": "apps.dashboard.auxiliary_calculators.auxiliary_tokens_manager",
        "description": "apps.dashboard.auxiliary_calculators.auxiliary_tokens_manager",
        "isExtraImport": true,
        "detail": "apps.dashboard.auxiliary_calculators.auxiliary_tokens_manager",
        "documentation": {}
    },
    {
        "label": "AuxiliaryVectorStoreManager",
        "importPath": "apps.dashboard.auxiliary_calculators.auxiliary_vector_store_manager",
        "description": "apps.dashboard.auxiliary_calculators.auxiliary_vector_store_manager",
        "isExtraImport": true,
        "detail": "apps.dashboard.auxiliary_calculators.auxiliary_vector_store_manager",
        "documentation": {}
    },
    {
        "label": "method_decorator",
        "importPath": "django.utils.decorators",
        "description": "django.utils.decorators",
        "isExtraImport": true,
        "detail": "django.utils.decorators",
        "documentation": {}
    },
    {
        "label": "method_decorator",
        "importPath": "django.utils.decorators",
        "description": "django.utils.decorators",
        "isExtraImport": true,
        "detail": "django.utils.decorators",
        "documentation": {}
    },
    {
        "label": "method_decorator",
        "importPath": "django.utils.decorators",
        "description": "django.utils.decorators",
        "isExtraImport": true,
        "detail": "django.utils.decorators",
        "documentation": {}
    },
    {
        "label": "method_decorator",
        "importPath": "django.utils.decorators",
        "description": "django.utils.decorators",
        "isExtraImport": true,
        "detail": "django.utils.decorators",
        "documentation": {}
    },
    {
        "label": "method_decorator",
        "importPath": "django.utils.decorators",
        "description": "django.utils.decorators",
        "isExtraImport": true,
        "detail": "django.utils.decorators",
        "documentation": {}
    },
    {
        "label": "method_decorator",
        "importPath": "django.utils.decorators",
        "description": "django.utils.decorators",
        "isExtraImport": true,
        "detail": "django.utils.decorators",
        "documentation": {}
    },
    {
        "label": "method_decorator",
        "importPath": "django.utils.decorators",
        "description": "django.utils.decorators",
        "isExtraImport": true,
        "detail": "django.utils.decorators",
        "documentation": {}
    },
    {
        "label": "cache_page",
        "importPath": "django.views.decorators.cache",
        "description": "django.views.decorators.cache",
        "isExtraImport": true,
        "detail": "django.views.decorators.cache",
        "documentation": {}
    },
    {
        "label": "cache_page",
        "importPath": "django.views.decorators.cache",
        "description": "django.views.decorators.cache",
        "isExtraImport": true,
        "detail": "django.views.decorators.cache",
        "documentation": {}
    },
    {
        "label": "CONST_MINUTES",
        "importPath": "apps.dashboard.utils",
        "description": "apps.dashboard.utils",
        "isExtraImport": true,
        "detail": "apps.dashboard.utils",
        "documentation": {}
    },
    {
        "label": "TransactionStatisticsManager",
        "importPath": "apps.dashboard.utils",
        "description": "apps.dashboard.utils",
        "isExtraImport": true,
        "detail": "apps.dashboard.utils",
        "documentation": {}
    },
    {
        "label": "build_statistics_for_graph",
        "importPath": "apps.dashboard.utils",
        "description": "apps.dashboard.utils",
        "isExtraImport": true,
        "detail": "apps.dashboard.utils",
        "documentation": {}
    },
    {
        "label": "INITIAL_STATISTICS_N_DAYS_BACK",
        "importPath": "apps.dashboard.utils",
        "description": "apps.dashboard.utils",
        "isExtraImport": true,
        "detail": "apps.dashboard.utils",
        "documentation": {}
    },
    {
        "label": "CONST_MINUTES",
        "importPath": "apps.dashboard.utils",
        "description": "apps.dashboard.utils",
        "isExtraImport": true,
        "detail": "apps.dashboard.utils",
        "documentation": {}
    },
    {
        "label": "build_statistics_for_graph",
        "importPath": "apps.dashboard.utils",
        "description": "apps.dashboard.utils",
        "isExtraImport": true,
        "detail": "apps.dashboard.utils",
        "documentation": {}
    },
    {
        "label": "TransactionStatisticsManager",
        "importPath": "apps.dashboard.utils",
        "description": "apps.dashboard.utils",
        "isExtraImport": true,
        "detail": "apps.dashboard.utils",
        "documentation": {}
    },
    {
        "label": "build_statistics_for_graph",
        "importPath": "apps.dashboard.utils",
        "description": "apps.dashboard.utils",
        "isExtraImport": true,
        "detail": "apps.dashboard.utils",
        "documentation": {}
    },
    {
        "label": "GenerativeAIDecodeController",
        "importPath": "apps.core.generative_ai.generative_ai_decode_manager",
        "description": "apps.core.generative_ai.generative_ai_decode_manager",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.generative_ai_decode_manager",
        "documentation": {}
    },
    {
        "label": "GenerativeAIDecodeController",
        "importPath": "apps.core.generative_ai.generative_ai_decode_manager",
        "description": "apps.core.generative_ai.generative_ai_decode_manager",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.generative_ai_decode_manager",
        "documentation": {}
    },
    {
        "label": "GenerativeAIDecodeController",
        "importPath": "apps.core.generative_ai.generative_ai_decode_manager",
        "description": "apps.core.generative_ai.generative_ai_decode_manager",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.generative_ai_decode_manager",
        "documentation": {}
    },
    {
        "label": "GenerativeAIDecodeController",
        "importPath": "apps.core.generative_ai.generative_ai_decode_manager",
        "description": "apps.core.generative_ai.generative_ai_decode_manager",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.generative_ai_decode_manager",
        "documentation": {}
    },
    {
        "label": "GenerativeAIDecodeController",
        "importPath": "apps.core.generative_ai.generative_ai_decode_manager",
        "description": "apps.core.generative_ai.generative_ai_decode_manager",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.generative_ai_decode_manager",
        "documentation": {}
    },
    {
        "label": "GenerativeAIDecodeController",
        "importPath": "apps.core.generative_ai.generative_ai_decode_manager",
        "description": "apps.core.generative_ai.generative_ai_decode_manager",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.generative_ai_decode_manager",
        "documentation": {}
    },
    {
        "label": "GenerativeAIDecodeController",
        "importPath": "apps.core.generative_ai.generative_ai_decode_manager",
        "description": "apps.core.generative_ai.generative_ai_decode_manager",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.generative_ai_decode_manager",
        "documentation": {}
    },
    {
        "label": "TransactionStatisticsManager",
        "importPath": "apps.dashboard.utils.class_utils",
        "description": "apps.dashboard.utils.class_utils",
        "isExtraImport": true,
        "detail": "apps.dashboard.utils.class_utils",
        "documentation": {}
    },
    {
        "label": "DataBackup",
        "importPath": "apps.data_backups.models",
        "description": "apps.data_backups.models",
        "isExtraImport": true,
        "detail": "apps.data_backups.models",
        "documentation": {}
    },
    {
        "label": "DataBackup",
        "importPath": "apps.data_backups.models",
        "description": "apps.data_backups.models",
        "isExtraImport": true,
        "detail": "apps.data_backups.models",
        "documentation": {}
    },
    {
        "label": "DataBackup",
        "importPath": "apps.data_backups.models",
        "description": "apps.data_backups.models",
        "isExtraImport": true,
        "detail": "apps.data_backups.models",
        "documentation": {}
    },
    {
        "label": "DataBackup",
        "importPath": "apps.data_backups.models",
        "description": "apps.data_backups.models",
        "isExtraImport": true,
        "detail": "apps.data_backups.models",
        "documentation": {}
    },
    {
        "label": "DATA_BACKUP_ADMIN_LIST",
        "importPath": "apps.data_backups.utils",
        "description": "apps.data_backups.utils",
        "isExtraImport": true,
        "detail": "apps.data_backups.utils",
        "documentation": {}
    },
    {
        "label": "DATA_BACKUP_ADMIN_SEARCH",
        "importPath": "apps.data_backups.utils",
        "description": "apps.data_backups.utils",
        "isExtraImport": true,
        "detail": "apps.data_backups.utils",
        "documentation": {}
    },
    {
        "label": "DATA_BACKUP_ADMIN_FILTER",
        "importPath": "apps.data_backups.utils",
        "description": "apps.data_backups.utils",
        "isExtraImport": true,
        "detail": "apps.data_backups.utils",
        "documentation": {}
    },
    {
        "label": "BACKUP_TYPES",
        "importPath": "apps.data_backups.utils",
        "description": "apps.data_backups.utils",
        "isExtraImport": true,
        "detail": "apps.data_backups.utils",
        "documentation": {}
    },
    {
        "label": "BACKUP_TYPES",
        "importPath": "apps.data_backups.utils",
        "description": "apps.data_backups.utils",
        "isExtraImport": true,
        "detail": "apps.data_backups.utils",
        "documentation": {}
    },
    {
        "label": "BackupTypesNames",
        "importPath": "apps.data_backups.utils",
        "description": "apps.data_backups.utils",
        "isExtraImport": true,
        "detail": "apps.data_backups.utils",
        "documentation": {}
    },
    {
        "label": "BackupTypesNames",
        "importPath": "apps.data_backups.utils",
        "description": "apps.data_backups.utils",
        "isExtraImport": true,
        "detail": "apps.data_backups.utils",
        "documentation": {}
    },
    {
        "label": "DataBackupExecutor",
        "importPath": "apps.core.data_backups.data_backup_executor",
        "description": "apps.core.data_backups.data_backup_executor",
        "isExtraImport": true,
        "detail": "apps.core.data_backups.data_backup_executor",
        "documentation": {}
    },
    {
        "label": "DataBackupExecutor",
        "importPath": "apps.core.data_backups.data_backup_executor",
        "description": "apps.core.data_backups.data_backup_executor",
        "isExtraImport": true,
        "detail": "apps.core.data_backups.data_backup_executor",
        "documentation": {}
    },
    {
        "label": "DataBackupExecutor",
        "importPath": "apps.core.data_backups.data_backup_executor",
        "description": "apps.core.data_backups.data_backup_executor",
        "isExtraImport": true,
        "detail": "apps.core.data_backups.data_backup_executor",
        "documentation": {}
    },
    {
        "label": "DataBackupView_BackupManage",
        "importPath": "apps.data_backups.views",
        "description": "apps.data_backups.views",
        "isExtraImport": true,
        "detail": "apps.data_backups.views",
        "documentation": {}
    },
    {
        "label": "DataBackupView_BackupDelete",
        "importPath": "apps.data_backups.views",
        "description": "apps.data_backups.views",
        "isExtraImport": true,
        "detail": "apps.data_backups.views",
        "documentation": {}
    },
    {
        "label": "DataBackupView_ReloadBackup",
        "importPath": "apps.data_backups.views",
        "description": "apps.data_backups.views",
        "isExtraImport": true,
        "detail": "apps.data_backups.views",
        "documentation": {}
    },
    {
        "label": "NER_INTEGRATION_ADMIN_LIST",
        "importPath": "apps.data_security.utils",
        "description": "apps.data_security.utils",
        "isExtraImport": true,
        "detail": "apps.data_security.utils",
        "documentation": {}
    },
    {
        "label": "NER_INTEGRATION_ADMIN_SEARCH",
        "importPath": "apps.data_security.utils",
        "description": "apps.data_security.utils",
        "isExtraImport": true,
        "detail": "apps.data_security.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.data_security.utils",
        "description": "apps.data_security.utils",
        "isExtraImport": true,
        "detail": "apps.data_security.utils",
        "documentation": {}
    },
    {
        "label": "NER_LANGUAGES",
        "importPath": "apps.data_security.utils.constant_utils",
        "description": "apps.data_security.utils.constant_utils",
        "isExtraImport": true,
        "detail": "apps.data_security.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "NERIntegrationForm",
        "importPath": "apps.data_security.forms",
        "description": "apps.data_security.forms",
        "isExtraImport": true,
        "detail": "apps.data_security.forms",
        "documentation": {}
    },
    {
        "label": "NERView_IntegrationCreate",
        "importPath": "apps.data_security.views",
        "description": "apps.data_security.views",
        "isExtraImport": true,
        "detail": "apps.data_security.views",
        "documentation": {}
    },
    {
        "label": "NERView_IntegrationUpdate",
        "importPath": "apps.data_security.views",
        "description": "apps.data_security.views",
        "isExtraImport": true,
        "detail": "apps.data_security.views",
        "documentation": {}
    },
    {
        "label": "NERView_IntegrationDelete",
        "importPath": "apps.data_security.views",
        "description": "apps.data_security.views",
        "isExtraImport": true,
        "detail": "apps.data_security.views",
        "documentation": {}
    },
    {
        "label": "NERView_IntegrationList",
        "importPath": "apps.data_security.views",
        "description": "apps.data_security.views",
        "isExtraImport": true,
        "detail": "apps.data_security.views",
        "documentation": {}
    },
    {
        "label": "DataSourceBrowserConnection",
        "importPath": "apps.datasource_browsers.models.browser_connection_models",
        "description": "apps.datasource_browsers.models.browser_connection_models",
        "isExtraImport": true,
        "detail": "apps.datasource_browsers.models.browser_connection_models",
        "documentation": {}
    },
    {
        "label": "BrowserView_BrowserCreate",
        "importPath": "apps.datasource_browsers.views",
        "description": "apps.datasource_browsers.views",
        "isExtraImport": true,
        "detail": "apps.datasource_browsers.views",
        "documentation": {}
    },
    {
        "label": "BrowserView_BrowserUpdate",
        "importPath": "apps.datasource_browsers.views",
        "description": "apps.datasource_browsers.views",
        "isExtraImport": true,
        "detail": "apps.datasource_browsers.views",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.datasource_browsers.views",
        "description": "apps.datasource_browsers.views",
        "isExtraImport": true,
        "detail": "apps.datasource_browsers.views",
        "documentation": {}
    },
    {
        "label": "delete_selected",
        "importPath": "django.contrib.admin.actions",
        "description": "django.contrib.admin.actions",
        "isExtraImport": true,
        "detail": "django.contrib.admin.actions",
        "documentation": {}
    },
    {
        "label": "delete_selected",
        "importPath": "django.contrib.admin.actions",
        "description": "django.contrib.admin.actions",
        "isExtraImport": true,
        "detail": "django.contrib.admin.actions",
        "documentation": {}
    },
    {
        "label": "delete_selected",
        "importPath": "django.contrib.admin.actions",
        "description": "django.contrib.admin.actions",
        "isExtraImport": true,
        "detail": "django.contrib.admin.actions",
        "documentation": {}
    },
    {
        "label": "delete_selected",
        "importPath": "django.contrib.admin.actions",
        "description": "django.contrib.admin.actions",
        "isExtraImport": true,
        "detail": "django.contrib.admin.actions",
        "documentation": {}
    },
    {
        "label": "embed_repository_chunks_helper",
        "importPath": "apps.core.codebase.handler_methods.embedding_handler_repo_chunk",
        "description": "apps.core.codebase.handler_methods.embedding_handler_repo_chunk",
        "isExtraImport": true,
        "detail": "apps.core.codebase.handler_methods.embedding_handler_repo_chunk",
        "documentation": {}
    },
    {
        "label": "embed_repository_helper",
        "importPath": "apps.core.codebase.handler_methods.embedding_handler_repo",
        "description": "apps.core.codebase.handler_methods.embedding_handler_repo",
        "isExtraImport": true,
        "detail": "apps.core.codebase.handler_methods.embedding_handler_repo",
        "documentation": {}
    },
    {
        "label": "shared_task",
        "importPath": "celery",
        "description": "celery",
        "isExtraImport": true,
        "detail": "celery",
        "documentation": {}
    },
    {
        "label": "shared_task",
        "importPath": "celery",
        "description": "celery",
        "isExtraImport": true,
        "detail": "celery",
        "documentation": {}
    },
    {
        "label": "shared_task",
        "importPath": "celery",
        "description": "celery",
        "isExtraImport": true,
        "detail": "celery",
        "documentation": {}
    },
    {
        "label": "shared_task",
        "importPath": "celery",
        "description": "celery",
        "isExtraImport": true,
        "detail": "celery",
        "documentation": {}
    },
    {
        "label": "shared_task",
        "importPath": "celery",
        "description": "celery",
        "isExtraImport": true,
        "detail": "celery",
        "documentation": {}
    },
    {
        "label": "shared_task",
        "importPath": "celery",
        "description": "celery",
        "isExtraImport": true,
        "detail": "celery",
        "documentation": {}
    },
    {
        "label": "shared_task",
        "importPath": "celery",
        "description": "celery",
        "isExtraImport": true,
        "detail": "celery",
        "documentation": {}
    },
    {
        "label": "shared_task",
        "importPath": "celery",
        "description": "celery",
        "isExtraImport": true,
        "detail": "celery",
        "documentation": {}
    },
    {
        "label": "shared_task",
        "importPath": "celery",
        "description": "celery",
        "isExtraImport": true,
        "detail": "celery",
        "documentation": {}
    },
    {
        "label": "shared_task",
        "importPath": "celery",
        "description": "celery",
        "isExtraImport": true,
        "detail": "celery",
        "documentation": {}
    },
    {
        "label": "shared_task",
        "importPath": "celery",
        "description": "celery",
        "isExtraImport": true,
        "detail": "celery",
        "documentation": {}
    },
    {
        "label": "shared_task",
        "importPath": "celery",
        "description": "celery",
        "isExtraImport": true,
        "detail": "celery",
        "documentation": {}
    },
    {
        "label": "shared_task",
        "importPath": "celery",
        "description": "celery",
        "isExtraImport": true,
        "detail": "celery",
        "documentation": {}
    },
    {
        "label": "shared_task",
        "importPath": "celery",
        "description": "celery",
        "isExtraImport": true,
        "detail": "celery",
        "documentation": {}
    },
    {
        "label": "shared_task",
        "importPath": "celery",
        "description": "celery",
        "isExtraImport": true,
        "detail": "celery",
        "documentation": {}
    },
    {
        "label": "Celery",
        "importPath": "celery",
        "description": "celery",
        "isExtraImport": true,
        "detail": "celery",
        "documentation": {}
    },
    {
        "label": "add_repository_upload_log",
        "importPath": "apps.datasource_codebase.tasks.create_repository_upload_log_tasks",
        "description": "apps.datasource_codebase.tasks.create_repository_upload_log_tasks",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.tasks.create_repository_upload_log_tasks",
        "documentation": {}
    },
    {
        "label": "RecursiveCharacterTextSplitter",
        "importPath": "langchain_text_splitters",
        "description": "langchain_text_splitters",
        "isExtraImport": true,
        "detail": "langchain_text_splitters",
        "documentation": {}
    },
    {
        "label": "RecursiveCharacterTextSplitter",
        "importPath": "langchain_text_splitters",
        "description": "langchain_text_splitters",
        "isExtraImport": true,
        "detail": "langchain_text_splitters",
        "documentation": {}
    },
    {
        "label": "RecursiveCharacterTextSplitter",
        "importPath": "langchain_text_splitters",
        "description": "langchain_text_splitters",
        "isExtraImport": true,
        "detail": "langchain_text_splitters",
        "documentation": {}
    },
    {
        "label": "wonderwords",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "wonderwords",
        "description": "wonderwords",
        "detail": "wonderwords",
        "documentation": {}
    },
    {
        "label": "CodeRepositoryStorageForm",
        "importPath": "apps.datasource_codebase.forms",
        "description": "apps.datasource_codebase.forms",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.forms",
        "documentation": {}
    },
    {
        "label": "CodeRepositoryStorageForm",
        "importPath": "apps.datasource_codebase.forms",
        "description": "apps.datasource_codebase.forms",
        "isExtraImport": true,
        "detail": "apps.datasource_codebase.forms",
        "documentation": {}
    },
    {
        "label": "FILE_SYSTEM_ADMIN_LIST",
        "importPath": "apps.datasource_file_systems.utils",
        "description": "apps.datasource_file_systems.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_file_systems.utils",
        "documentation": {}
    },
    {
        "label": "FILE_SYSTEM_ADMIN_FILTER",
        "importPath": "apps.datasource_file_systems.utils",
        "description": "apps.datasource_file_systems.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_file_systems.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.datasource_file_systems.utils",
        "description": "apps.datasource_file_systems.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_file_systems.utils",
        "documentation": {}
    },
    {
        "label": "DATASOURCE_FILE_SYSTEMS_OS_TYPES",
        "importPath": "apps.datasource_file_systems.utils",
        "description": "apps.datasource_file_systems.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_file_systems.utils",
        "documentation": {}
    },
    {
        "label": "DATASOURCE_FILE_SYSTEMS_OS_TYPES",
        "importPath": "apps.datasource_file_systems.utils",
        "description": "apps.datasource_file_systems.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_file_systems.utils",
        "documentation": {}
    },
    {
        "label": "DATASOURCE_FILE_SYSTEMS_OS_TYPES",
        "importPath": "apps.datasource_file_systems.utils",
        "description": "apps.datasource_file_systems.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_file_systems.utils",
        "documentation": {}
    },
    {
        "label": "factory_embed_document_chunks_handler",
        "importPath": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_chunk",
        "description": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_chunk",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_chunk",
        "documentation": {}
    },
    {
        "label": "factory_embed_memory_chunks_handler",
        "importPath": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_chunk",
        "description": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_chunk",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_chunk",
        "documentation": {}
    },
    {
        "label": "embed_document_helper",
        "importPath": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_document",
        "description": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_document",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_document",
        "documentation": {}
    },
    {
        "label": "embed_memory_helper",
        "importPath": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_document",
        "description": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_document",
        "isExtraImport": true,
        "detail": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_document",
        "documentation": {}
    },
    {
        "label": "UnstructuredCSVLoader",
        "importPath": "langchain_community.document_loaders",
        "description": "langchain_community.document_loaders",
        "isExtraImport": true,
        "detail": "langchain_community.document_loaders",
        "documentation": {}
    },
    {
        "label": "Docx2txtLoader",
        "importPath": "langchain_community.document_loaders",
        "description": "langchain_community.document_loaders",
        "isExtraImport": true,
        "detail": "langchain_community.document_loaders",
        "documentation": {}
    },
    {
        "label": "UnstructuredHTMLLoader",
        "importPath": "langchain_community.document_loaders",
        "description": "langchain_community.document_loaders",
        "isExtraImport": true,
        "detail": "langchain_community.document_loaders",
        "documentation": {}
    },
    {
        "label": "NotebookLoader",
        "importPath": "langchain_community.document_loaders",
        "description": "langchain_community.document_loaders",
        "isExtraImport": true,
        "detail": "langchain_community.document_loaders",
        "documentation": {}
    },
    {
        "label": "JSONLoader",
        "importPath": "langchain_community.document_loaders",
        "description": "langchain_community.document_loaders",
        "isExtraImport": true,
        "detail": "langchain_community.document_loaders",
        "documentation": {}
    },
    {
        "label": "UnstructuredMarkdownLoader",
        "importPath": "langchain_community.document_loaders",
        "description": "langchain_community.document_loaders",
        "isExtraImport": true,
        "detail": "langchain_community.document_loaders",
        "documentation": {}
    },
    {
        "label": "UnstructuredODTLoader",
        "importPath": "langchain_community.document_loaders",
        "description": "langchain_community.document_loaders",
        "isExtraImport": true,
        "detail": "langchain_community.document_loaders",
        "documentation": {}
    },
    {
        "label": "PyPDFLoader",
        "importPath": "langchain_community.document_loaders",
        "description": "langchain_community.document_loaders",
        "isExtraImport": true,
        "detail": "langchain_community.document_loaders",
        "documentation": {}
    },
    {
        "label": "UnstructuredPowerPointLoader",
        "importPath": "langchain_community.document_loaders",
        "description": "langchain_community.document_loaders",
        "isExtraImport": true,
        "detail": "langchain_community.document_loaders",
        "documentation": {}
    },
    {
        "label": "UnstructuredRTFLoader",
        "importPath": "langchain_community.document_loaders",
        "description": "langchain_community.document_loaders",
        "isExtraImport": true,
        "detail": "langchain_community.document_loaders",
        "documentation": {}
    },
    {
        "label": "UnstructuredExcelLoader",
        "importPath": "langchain_community.document_loaders",
        "description": "langchain_community.document_loaders",
        "isExtraImport": true,
        "detail": "langchain_community.document_loaders",
        "documentation": {}
    },
    {
        "label": "UnstructuredXMLLoader",
        "importPath": "langchain_community.document_loaders",
        "description": "langchain_community.document_loaders",
        "isExtraImport": true,
        "detail": "langchain_community.document_loaders",
        "documentation": {}
    },
    {
        "label": "warnings",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "warnings",
        "description": "warnings",
        "detail": "warnings",
        "documentation": {}
    },
    {
        "label": "DocumentKnowledgeBaseForm",
        "importPath": "apps.datasource_knowledge_base.forms",
        "description": "apps.datasource_knowledge_base.forms",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.forms",
        "documentation": {}
    },
    {
        "label": "DocumentKnowledgeBaseForm",
        "importPath": "apps.datasource_knowledge_base.forms",
        "description": "apps.datasource_knowledge_base.forms",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.forms",
        "documentation": {}
    },
    {
        "label": "VectorStoreView_Create",
        "importPath": "apps.datasource_knowledge_base.views",
        "description": "apps.datasource_knowledge_base.views",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.views",
        "documentation": {}
    },
    {
        "label": "VectorStoreView_List",
        "importPath": "apps.datasource_knowledge_base.views",
        "description": "apps.datasource_knowledge_base.views",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.views",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.datasource_knowledge_base.views",
        "description": "apps.datasource_knowledge_base.views",
        "isExtraImport": true,
        "detail": "apps.datasource_knowledge_base.views",
        "documentation": {}
    },
    {
        "label": "MEDIA_MANAGER_ITEM_ADMIN_LIST_DISPLAY",
        "importPath": "apps.datasource_media_storages.utils",
        "description": "apps.datasource_media_storages.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.datasource_media_storages.utils",
        "description": "apps.datasource_media_storages.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.utils",
        "documentation": {}
    },
    {
        "label": "MEDIA_STORE_ADMIN_LIST_DISPLAY",
        "importPath": "apps.datasource_media_storages.utils",
        "description": "apps.datasource_media_storages.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.utils",
        "documentation": {}
    },
    {
        "label": "MEDIA_STORE_ADMIN_LIST_FILTER",
        "importPath": "apps.datasource_media_storages.utils",
        "description": "apps.datasource_media_storages.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.datasource_media_storages.utils",
        "description": "apps.datasource_media_storages.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.utils",
        "documentation": {}
    },
    {
        "label": "MEDIA_FILE_TYPES",
        "importPath": "apps.datasource_media_storages.utils",
        "description": "apps.datasource_media_storages.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.utils",
        "documentation": {}
    },
    {
        "label": "MEDIA_MANAGER_ITEM_TYPES",
        "importPath": "apps.datasource_media_storages.utils",
        "description": "apps.datasource_media_storages.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.utils",
        "documentation": {}
    },
    {
        "label": "MEDIA_FILE_TYPES",
        "importPath": "apps.datasource_media_storages.utils",
        "description": "apps.datasource_media_storages.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.utils",
        "documentation": {}
    },
    {
        "label": "MediaManagerItemCategoriesNames",
        "importPath": "apps.datasource_media_storages.utils",
        "description": "apps.datasource_media_storages.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.utils",
        "documentation": {}
    },
    {
        "label": "MediaManagerItemFormatTypesNamesLists",
        "importPath": "apps.datasource_media_storages.utils",
        "description": "apps.datasource_media_storages.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.utils",
        "documentation": {}
    },
    {
        "label": "UNIT_BYTES_THOUSAND",
        "importPath": "apps.datasource_media_storages.utils",
        "description": "apps.datasource_media_storages.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.utils",
        "documentation": {}
    },
    {
        "label": "decode_stream__docx",
        "importPath": "apps.datasource_media_storages.utils",
        "description": "apps.datasource_media_storages.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.utils",
        "documentation": {}
    },
    {
        "label": "decode_stream__pptx",
        "importPath": "apps.datasource_media_storages.utils",
        "description": "apps.datasource_media_storages.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.utils",
        "documentation": {}
    },
    {
        "label": "decode_stream__xlsx",
        "importPath": "apps.datasource_media_storages.utils",
        "description": "apps.datasource_media_storages.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.datasource_media_storages.utils",
        "description": "apps.datasource_media_storages.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.utils",
        "documentation": {}
    },
    {
        "label": "MediaManagerItemFormatTypesNamesLists",
        "importPath": "apps.datasource_media_storages.utils",
        "description": "apps.datasource_media_storages.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.datasource_media_storages.utils",
        "description": "apps.datasource_media_storages.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.utils",
        "documentation": {}
    },
    {
        "label": "MEDIA_MANAGER_ITEM_TYPES",
        "importPath": "apps.datasource_media_storages.utils",
        "description": "apps.datasource_media_storages.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.utils",
        "documentation": {}
    },
    {
        "label": "MEDIA_MANAGER_ITEM_TYPES",
        "importPath": "apps.datasource_media_storages.utils",
        "description": "apps.datasource_media_storages.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.utils",
        "documentation": {}
    },
    {
        "label": "upload_file_to_storage",
        "importPath": "apps.datasource_media_storages.tasks",
        "description": "apps.datasource_media_storages.tasks",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.tasks",
        "documentation": {}
    },
    {
        "label": "download_file_from_url",
        "importPath": "apps.datasource_media_storages.tasks",
        "description": "apps.datasource_media_storages.tasks",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.tasks",
        "documentation": {}
    },
    {
        "label": "Document",
        "importPath": "docx",
        "description": "docx",
        "isExtraImport": true,
        "detail": "docx",
        "documentation": {}
    },
    {
        "label": "Presentation",
        "importPath": "pptx",
        "description": "pptx",
        "isExtraImport": true,
        "detail": "pptx",
        "documentation": {}
    },
    {
        "label": "load_workbook",
        "importPath": "openpyxl",
        "description": "openpyxl",
        "isExtraImport": true,
        "detail": "openpyxl",
        "documentation": {}
    },
    {
        "label": "run_query_media_manager",
        "importPath": "apps.core.tool_calls.core_services.core_service_query_media_manager",
        "description": "apps.core.tool_calls.core_services.core_service_query_media_manager",
        "isExtraImport": true,
        "detail": "apps.core.tool_calls.core_services.core_service_query_media_manager",
        "documentation": {}
    },
    {
        "label": "MediaView_ManagerCreate",
        "importPath": "apps.datasource_media_storages.views",
        "description": "apps.datasource_media_storages.views",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.views",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.datasource_media_storages.views",
        "description": "apps.datasource_media_storages.views",
        "isExtraImport": true,
        "detail": "apps.datasource_media_storages.views",
        "documentation": {}
    },
    {
        "label": "ML_MODEL_ITEM_ADMIN_LIST",
        "importPath": "apps.datasource_ml_models.utils",
        "description": "apps.datasource_ml_models.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_ml_models.utils",
        "documentation": {}
    },
    {
        "label": "ML_MODEL_ITEM_ADMIN_FILTER",
        "importPath": "apps.datasource_ml_models.utils",
        "description": "apps.datasource_ml_models.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_ml_models.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.datasource_ml_models.utils",
        "description": "apps.datasource_ml_models.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_ml_models.utils",
        "documentation": {}
    },
    {
        "label": "ML_MODEL_MANAGER_ADMIN_LIST",
        "importPath": "apps.datasource_ml_models.utils",
        "description": "apps.datasource_ml_models.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_ml_models.utils",
        "documentation": {}
    },
    {
        "label": "ML_MODEL_MANAGER_ADMIN_FILTER",
        "importPath": "apps.datasource_ml_models.utils",
        "description": "apps.datasource_ml_models.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_ml_models.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.datasource_ml_models.utils",
        "description": "apps.datasource_ml_models.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_ml_models.utils",
        "documentation": {}
    },
    {
        "label": "ML_MODEL_ITEM_CATEGORIES",
        "importPath": "apps.datasource_ml_models.utils",
        "description": "apps.datasource_ml_models.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_ml_models.utils",
        "documentation": {}
    },
    {
        "label": "ML_MODEL_ITEM_CATEGORIES",
        "importPath": "apps.datasource_ml_models.utils",
        "description": "apps.datasource_ml_models.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_ml_models.utils",
        "documentation": {}
    },
    {
        "label": "ML_MODEL_ITEM_CATEGORIES",
        "importPath": "apps.datasource_ml_models.utils",
        "description": "apps.datasource_ml_models.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_ml_models.utils",
        "documentation": {}
    },
    {
        "label": "DELETE_ALL_ML_ITEMS_SPECIFIER",
        "importPath": "apps.datasource_ml_models.utils",
        "description": "apps.datasource_ml_models.utils",
        "isExtraImport": true,
        "detail": "apps.datasource_ml_models.utils",
        "documentation": {}
    },
    {
        "label": "upload_model_to_ml_model_base",
        "importPath": "apps.datasource_ml_models.tasks",
        "description": "apps.datasource_ml_models.tasks",
        "isExtraImport": true,
        "detail": "apps.datasource_ml_models.tasks",
        "documentation": {}
    },
    {
        "label": "DataSourceMLModelItemForm",
        "importPath": "apps.datasource_ml_models.forms",
        "description": "apps.datasource_ml_models.forms",
        "isExtraImport": true,
        "detail": "apps.datasource_ml_models.forms",
        "documentation": {}
    },
    {
        "label": "DataSourceMLModelConnectionForm",
        "importPath": "apps.datasource_ml_models.forms",
        "description": "apps.datasource_ml_models.forms",
        "isExtraImport": true,
        "detail": "apps.datasource_ml_models.forms",
        "documentation": {}
    },
    {
        "label": "DataSourceMLModelConnectionForm",
        "importPath": "apps.datasource_ml_models.forms",
        "description": "apps.datasource_ml_models.forms",
        "isExtraImport": true,
        "detail": "apps.datasource_ml_models.forms",
        "documentation": {}
    },
    {
        "label": "SQLDatabaseConnectionForm",
        "importPath": "apps.datasource_sql.forms",
        "description": "apps.datasource_sql.forms",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.forms",
        "documentation": {}
    },
    {
        "label": "SQLDatabaseConnectionForm",
        "importPath": "apps.datasource_sql.forms",
        "description": "apps.datasource_sql.forms",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.forms",
        "documentation": {}
    },
    {
        "label": "CustomSQLQueryForm",
        "importPath": "apps.datasource_sql.forms",
        "description": "apps.datasource_sql.forms",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.forms",
        "documentation": {}
    },
    {
        "label": "CustomSQLQueryForm",
        "importPath": "apps.datasource_sql.forms",
        "description": "apps.datasource_sql.forms",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.forms",
        "documentation": {}
    },
    {
        "label": "SQLDatabaseView_ManagerCreate",
        "importPath": "apps.datasource_sql.views",
        "description": "apps.datasource_sql.views",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.views",
        "documentation": {}
    },
    {
        "label": "SQLDatabaseView_ManagerList",
        "importPath": "apps.datasource_sql.views",
        "description": "apps.datasource_sql.views",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.views",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.datasource_sql.views",
        "description": "apps.datasource_sql.views",
        "isExtraImport": true,
        "detail": "apps.datasource_sql.views",
        "documentation": {}
    },
    {
        "label": "EXPORT_ASSISTANT_API_ADMIN_LIST",
        "importPath": "apps.export_assistants.utils",
        "description": "apps.export_assistants.utils",
        "isExtraImport": true,
        "detail": "apps.export_assistants.utils",
        "documentation": {}
    },
    {
        "label": "EXPORT_ASSISTANT_API_ADMIN_FILTER",
        "importPath": "apps.export_assistants.utils",
        "description": "apps.export_assistants.utils",
        "isExtraImport": true,
        "detail": "apps.export_assistants.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.export_assistants.utils",
        "description": "apps.export_assistants.utils",
        "isExtraImport": true,
        "detail": "apps.export_assistants.utils",
        "documentation": {}
    },
    {
        "label": "EXPORT_ASSISTANT_LOG_ADMIN_LIST",
        "importPath": "apps.export_assistants.utils",
        "description": "apps.export_assistants.utils",
        "isExtraImport": true,
        "detail": "apps.export_assistants.utils",
        "documentation": {}
    },
    {
        "label": "EXPORT_ASSISTANT_LOG_ADMIN_FILTER",
        "importPath": "apps.export_assistants.utils",
        "description": "apps.export_assistants.utils",
        "isExtraImport": true,
        "detail": "apps.export_assistants.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.export_assistants.utils",
        "description": "apps.export_assistants.utils",
        "isExtraImport": true,
        "detail": "apps.export_assistants.utils",
        "documentation": {}
    },
    {
        "label": "generate_assistant_custom_api_key",
        "importPath": "apps.export_assistants.utils",
        "description": "apps.export_assistants.utils",
        "isExtraImport": true,
        "detail": "apps.export_assistants.utils",
        "documentation": {}
    },
    {
        "label": "generate_endpoint",
        "importPath": "apps.export_assistants.utils",
        "description": "apps.export_assistants.utils",
        "isExtraImport": true,
        "detail": "apps.export_assistants.utils",
        "documentation": {}
    },
    {
        "label": "ExportAPIStatusCodes",
        "importPath": "apps.export_assistants.utils",
        "description": "apps.export_assistants.utils",
        "isExtraImport": true,
        "detail": "apps.export_assistants.utils",
        "documentation": {}
    },
    {
        "label": "importlib",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "importlib",
        "description": "importlib",
        "detail": "importlib",
        "documentation": {}
    },
    {
        "label": "import_module",
        "importPath": "importlib",
        "description": "importlib",
        "isExtraImport": true,
        "detail": "importlib",
        "documentation": {}
    },
    {
        "label": "util",
        "importPath": "importlib",
        "description": "importlib",
        "isExtraImport": true,
        "detail": "importlib",
        "documentation": {}
    },
    {
        "label": "BaseCommand",
        "importPath": "django.core.management.base",
        "description": "django.core.management.base",
        "isExtraImport": true,
        "detail": "django.core.management.base",
        "documentation": {}
    },
    {
        "label": "BaseCommand",
        "importPath": "django.core.management.base",
        "description": "django.core.management.base",
        "isExtraImport": true,
        "detail": "django.core.management.base",
        "documentation": {}
    },
    {
        "label": "BaseCommand",
        "importPath": "django.core.management.base",
        "description": "django.core.management.base",
        "isExtraImport": true,
        "detail": "django.core.management.base",
        "documentation": {}
    },
    {
        "label": "ExportAssistantAPIView",
        "importPath": "apps.export_assistants.views.endpoints",
        "description": "apps.export_assistants.views.endpoints",
        "isExtraImport": true,
        "detail": "apps.export_assistants.views.endpoints",
        "documentation": {}
    },
    {
        "label": "hashlib",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "hashlib",
        "description": "hashlib",
        "detail": "hashlib",
        "documentation": {}
    },
    {
        "label": "csrf_exempt",
        "importPath": "django.views.decorators.csrf",
        "description": "django.views.decorators.csrf",
        "isExtraImport": true,
        "detail": "django.views.decorators.csrf",
        "documentation": {}
    },
    {
        "label": "csrf_exempt",
        "importPath": "django.views.decorators.csrf",
        "description": "django.views.decorators.csrf",
        "isExtraImport": true,
        "detail": "django.views.decorators.csrf",
        "documentation": {}
    },
    {
        "label": "csrf_exempt",
        "importPath": "django.views.decorators.csrf",
        "description": "django.views.decorators.csrf",
        "isExtraImport": true,
        "detail": "django.views.decorators.csrf",
        "documentation": {}
    },
    {
        "label": "csrf_exempt",
        "importPath": "django.views.decorators.csrf",
        "description": "django.views.decorators.csrf",
        "isExtraImport": true,
        "detail": "django.views.decorators.csrf",
        "documentation": {}
    },
    {
        "label": "csrf_exempt",
        "importPath": "django.views.decorators.csrf",
        "description": "django.views.decorators.csrf",
        "isExtraImport": true,
        "detail": "django.views.decorators.csrf",
        "documentation": {}
    },
    {
        "label": "ExportAssistantView_List",
        "importPath": "apps.export_assistants.views",
        "description": "apps.export_assistants.views",
        "isExtraImport": true,
        "detail": "apps.export_assistants.views",
        "documentation": {}
    },
    {
        "label": "ExportAssistantView_Create",
        "importPath": "apps.export_assistants.views",
        "description": "apps.export_assistants.views",
        "isExtraImport": true,
        "detail": "apps.export_assistants.views",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.export_assistants.views",
        "description": "apps.export_assistants.views",
        "isExtraImport": true,
        "detail": "apps.export_assistants.views",
        "documentation": {}
    },
    {
        "label": "ExportLeanmodAssistantAPI",
        "importPath": "apps.export_leanmods.models",
        "description": "apps.export_leanmods.models",
        "isExtraImport": true,
        "detail": "apps.export_leanmods.models",
        "documentation": {}
    },
    {
        "label": "LeanmodRequestLog",
        "importPath": "apps.export_leanmods.models",
        "description": "apps.export_leanmods.models",
        "isExtraImport": true,
        "detail": "apps.export_leanmods.models",
        "documentation": {}
    },
    {
        "label": "ExportLeanmodAssistantAPI",
        "importPath": "apps.export_leanmods.models",
        "description": "apps.export_leanmods.models",
        "isExtraImport": true,
        "detail": "apps.export_leanmods.models",
        "documentation": {}
    },
    {
        "label": "ExportLeanmodAssistantAPI",
        "importPath": "apps.export_leanmods.models",
        "description": "apps.export_leanmods.models",
        "isExtraImport": true,
        "detail": "apps.export_leanmods.models",
        "documentation": {}
    },
    {
        "label": "LeanmodRequestLog",
        "importPath": "apps.export_leanmods.models",
        "description": "apps.export_leanmods.models",
        "isExtraImport": true,
        "detail": "apps.export_leanmods.models",
        "documentation": {}
    },
    {
        "label": "ExportLeanmodAssistantAPI",
        "importPath": "apps.export_leanmods.models",
        "description": "apps.export_leanmods.models",
        "isExtraImport": true,
        "detail": "apps.export_leanmods.models",
        "documentation": {}
    },
    {
        "label": "ExportLeanmodAssistantAPI",
        "importPath": "apps.export_leanmods.models",
        "description": "apps.export_leanmods.models",
        "isExtraImport": true,
        "detail": "apps.export_leanmods.models",
        "documentation": {}
    },
    {
        "label": "ExportLeanmodAssistantAPI",
        "importPath": "apps.export_leanmods.models",
        "description": "apps.export_leanmods.models",
        "isExtraImport": true,
        "detail": "apps.export_leanmods.models",
        "documentation": {}
    },
    {
        "label": "ExportLeanmodAssistantAPI",
        "importPath": "apps.export_leanmods.models",
        "description": "apps.export_leanmods.models",
        "isExtraImport": true,
        "detail": "apps.export_leanmods.models",
        "documentation": {}
    },
    {
        "label": "ExportLeanmodAssistantAPI",
        "importPath": "apps.export_leanmods.models",
        "description": "apps.export_leanmods.models",
        "isExtraImport": true,
        "detail": "apps.export_leanmods.models",
        "documentation": {}
    },
    {
        "label": "EXPORT_LEANMOD_ASSISTANTS_API_ADMIN_LIST",
        "importPath": "apps.export_leanmods.utils",
        "description": "apps.export_leanmods.utils",
        "isExtraImport": true,
        "detail": "apps.export_leanmods.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.export_leanmods.utils",
        "description": "apps.export_leanmods.utils",
        "isExtraImport": true,
        "detail": "apps.export_leanmods.utils",
        "documentation": {}
    },
    {
        "label": "EXPORT_LEANMOD_REQUEST_LOG_ADMIN_LIST",
        "importPath": "apps.export_leanmods.utils",
        "description": "apps.export_leanmods.utils",
        "isExtraImport": true,
        "detail": "apps.export_leanmods.utils",
        "documentation": {}
    },
    {
        "label": "EXPORT_LEANMOD_REQUEST_LOG_ADMIN_FILTER",
        "importPath": "apps.export_leanmods.utils",
        "description": "apps.export_leanmods.utils",
        "isExtraImport": true,
        "detail": "apps.export_leanmods.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.export_leanmods.utils",
        "description": "apps.export_leanmods.utils",
        "isExtraImport": true,
        "detail": "apps.export_leanmods.utils",
        "documentation": {}
    },
    {
        "label": "generate_leanmod_assistant_endpoint",
        "importPath": "apps.export_leanmods.utils",
        "description": "apps.export_leanmods.utils",
        "isExtraImport": true,
        "detail": "apps.export_leanmods.utils",
        "documentation": {}
    },
    {
        "label": "generate_leanmod_assistant_custom_api_key",
        "importPath": "apps.export_leanmods.utils",
        "description": "apps.export_leanmods.utils",
        "isExtraImport": true,
        "detail": "apps.export_leanmods.utils",
        "documentation": {}
    },
    {
        "label": "LeanModAssistantStatusCodes",
        "importPath": "apps.export_leanmods.utils",
        "description": "apps.export_leanmods.utils",
        "isExtraImport": true,
        "detail": "apps.export_leanmods.utils",
        "documentation": {}
    },
    {
        "label": "start_endpoint_for_leanmod",
        "importPath": "apps.export_leanmods.management.commands.start_exported_leanmods",
        "description": "apps.export_leanmods.management.commands.start_exported_leanmods",
        "isExtraImport": true,
        "detail": "apps.export_leanmods.management.commands.start_exported_leanmods",
        "documentation": {}
    },
    {
        "label": "start_endpoint_for_leanmod",
        "importPath": "apps.export_leanmods.management.commands.start_exported_leanmods",
        "description": "apps.export_leanmods.management.commands.start_exported_leanmods",
        "isExtraImport": true,
        "detail": "apps.export_leanmods.management.commands.start_exported_leanmods",
        "documentation": {}
    },
    {
        "label": "ExportLeanModView_List",
        "importPath": "apps.export_leanmods.views",
        "description": "apps.export_leanmods.views",
        "isExtraImport": true,
        "detail": "apps.export_leanmods.views",
        "documentation": {}
    },
    {
        "label": "ExportLeanModView_Create",
        "importPath": "apps.export_leanmods.views",
        "description": "apps.export_leanmods.views",
        "isExtraImport": true,
        "detail": "apps.export_leanmods.views",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.export_leanmods.views",
        "description": "apps.export_leanmods.views",
        "isExtraImport": true,
        "detail": "apps.export_leanmods.views",
        "documentation": {}
    },
    {
        "label": "ExportOrchestrationAPI",
        "importPath": "apps.export_orchestrations.models",
        "description": "apps.export_orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.export_orchestrations.models",
        "documentation": {}
    },
    {
        "label": "OrchestratorRequestLog",
        "importPath": "apps.export_orchestrations.models",
        "description": "apps.export_orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.export_orchestrations.models",
        "documentation": {}
    },
    {
        "label": "ExportOrchestrationAPI",
        "importPath": "apps.export_orchestrations.models",
        "description": "apps.export_orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.export_orchestrations.models",
        "documentation": {}
    },
    {
        "label": "ExportOrchestrationAPI",
        "importPath": "apps.export_orchestrations.models",
        "description": "apps.export_orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.export_orchestrations.models",
        "documentation": {}
    },
    {
        "label": "OrchestratorRequestLog",
        "importPath": "apps.export_orchestrations.models",
        "description": "apps.export_orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.export_orchestrations.models",
        "documentation": {}
    },
    {
        "label": "ExportOrchestrationAPI",
        "importPath": "apps.export_orchestrations.models",
        "description": "apps.export_orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.export_orchestrations.models",
        "documentation": {}
    },
    {
        "label": "ExportOrchestrationAPI",
        "importPath": "apps.export_orchestrations.models",
        "description": "apps.export_orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.export_orchestrations.models",
        "documentation": {}
    },
    {
        "label": "ExportOrchestrationAPI",
        "importPath": "apps.export_orchestrations.models",
        "description": "apps.export_orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.export_orchestrations.models",
        "documentation": {}
    },
    {
        "label": "ExportOrchestrationAPI",
        "importPath": "apps.export_orchestrations.models",
        "description": "apps.export_orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.export_orchestrations.models",
        "documentation": {}
    },
    {
        "label": "ExportOrchestrationAPI",
        "importPath": "apps.export_orchestrations.models",
        "description": "apps.export_orchestrations.models",
        "isExtraImport": true,
        "detail": "apps.export_orchestrations.models",
        "documentation": {}
    },
    {
        "label": "EXPORT_ORCHESTRATION_ADMIN_LIST",
        "importPath": "apps.export_orchestrations.utils",
        "description": "apps.export_orchestrations.utils",
        "isExtraImport": true,
        "detail": "apps.export_orchestrations.utils",
        "documentation": {}
    },
    {
        "label": "EXPORT_ORCHESTRATION_ADMIN_FILTER",
        "importPath": "apps.export_orchestrations.utils",
        "description": "apps.export_orchestrations.utils",
        "isExtraImport": true,
        "detail": "apps.export_orchestrations.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.export_orchestrations.utils",
        "description": "apps.export_orchestrations.utils",
        "isExtraImport": true,
        "detail": "apps.export_orchestrations.utils",
        "documentation": {}
    },
    {
        "label": "EXPORT_ORCHESTRATION_LOG_ADMIN_LIST",
        "importPath": "apps.export_orchestrations.utils",
        "description": "apps.export_orchestrations.utils",
        "isExtraImport": true,
        "detail": "apps.export_orchestrations.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.export_orchestrations.utils",
        "description": "apps.export_orchestrations.utils",
        "isExtraImport": true,
        "detail": "apps.export_orchestrations.utils",
        "documentation": {}
    },
    {
        "label": "generate_orchestration_endpoint",
        "importPath": "apps.export_orchestrations.utils",
        "description": "apps.export_orchestrations.utils",
        "isExtraImport": true,
        "detail": "apps.export_orchestrations.utils",
        "documentation": {}
    },
    {
        "label": "generate_orchestration_custom_api_key",
        "importPath": "apps.export_orchestrations.utils",
        "description": "apps.export_orchestrations.utils",
        "isExtraImport": true,
        "detail": "apps.export_orchestrations.utils",
        "documentation": {}
    },
    {
        "label": "ExportOrchestrationRequestStatusCodes",
        "importPath": "apps.export_orchestrations.utils",
        "description": "apps.export_orchestrations.utils",
        "isExtraImport": true,
        "detail": "apps.export_orchestrations.utils",
        "documentation": {}
    },
    {
        "label": "OrchestrationExecutor",
        "importPath": "apps.core.orchestration.orchestration_executor",
        "description": "apps.core.orchestration.orchestration_executor",
        "isExtraImport": true,
        "detail": "apps.core.orchestration.orchestration_executor",
        "documentation": {}
    },
    {
        "label": "OrchestrationExecutor",
        "importPath": "apps.core.orchestration.orchestration_executor",
        "description": "apps.core.orchestration.orchestration_executor",
        "isExtraImport": true,
        "detail": "apps.core.orchestration.orchestration_executor",
        "documentation": {}
    },
    {
        "label": "OrchestrationExecutor",
        "importPath": "apps.core.orchestration.orchestration_executor",
        "description": "apps.core.orchestration.orchestration_executor",
        "isExtraImport": true,
        "detail": "apps.core.orchestration.orchestration_executor",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.export_orchestrations.management.commands.start_exported_orchestrations",
        "description": "apps.export_orchestrations.management.commands.start_exported_orchestrations",
        "isExtraImport": true,
        "detail": "apps.export_orchestrations.management.commands.start_exported_orchestrations",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.export_orchestrations.management.commands.start_exported_orchestrations",
        "description": "apps.export_orchestrations.management.commands.start_exported_orchestrations",
        "isExtraImport": true,
        "detail": "apps.export_orchestrations.management.commands.start_exported_orchestrations",
        "documentation": {}
    },
    {
        "label": "FineTunedModelConnection",
        "importPath": "apps.finetuning.models",
        "description": "apps.finetuning.models",
        "isExtraImport": true,
        "detail": "apps.finetuning.models",
        "documentation": {}
    },
    {
        "label": "FineTunedModelConnection",
        "importPath": "apps.finetuning.models",
        "description": "apps.finetuning.models",
        "isExtraImport": true,
        "detail": "apps.finetuning.models",
        "documentation": {}
    },
    {
        "label": "FineTunedModelConnection",
        "importPath": "apps.finetuning.models",
        "description": "apps.finetuning.models",
        "isExtraImport": true,
        "detail": "apps.finetuning.models",
        "documentation": {}
    },
    {
        "label": "FineTunedModelConnection",
        "importPath": "apps.finetuning.models",
        "description": "apps.finetuning.models",
        "isExtraImport": true,
        "detail": "apps.finetuning.models",
        "documentation": {}
    },
    {
        "label": "FineTunedModelConnection",
        "importPath": "apps.finetuning.models",
        "description": "apps.finetuning.models",
        "isExtraImport": true,
        "detail": "apps.finetuning.models",
        "documentation": {}
    },
    {
        "label": "FineTunedModelConnection",
        "importPath": "apps.finetuning.models",
        "description": "apps.finetuning.models",
        "isExtraImport": true,
        "detail": "apps.finetuning.models",
        "documentation": {}
    },
    {
        "label": "FineTunedModelConnection",
        "importPath": "apps.finetuning.models",
        "description": "apps.finetuning.models",
        "isExtraImport": true,
        "detail": "apps.finetuning.models",
        "documentation": {}
    },
    {
        "label": "FINETUNING_ADMIN_LIST",
        "importPath": "apps.finetuning.utils",
        "description": "apps.finetuning.utils",
        "isExtraImport": true,
        "detail": "apps.finetuning.utils",
        "documentation": {}
    },
    {
        "label": "FINETUNING_ADMIN_SEARCH",
        "importPath": "apps.finetuning.utils",
        "description": "apps.finetuning.utils",
        "isExtraImport": true,
        "detail": "apps.finetuning.utils",
        "documentation": {}
    },
    {
        "label": "FINE_TUNING_MODEL_PROVIDERS",
        "importPath": "apps.finetuning.utils",
        "description": "apps.finetuning.utils",
        "isExtraImport": true,
        "detail": "apps.finetuning.utils",
        "documentation": {}
    },
    {
        "label": "FineTuningModelProvidersNames",
        "importPath": "apps.finetuning.utils",
        "description": "apps.finetuning.utils",
        "isExtraImport": true,
        "detail": "apps.finetuning.utils",
        "documentation": {}
    },
    {
        "label": "MODEL_TYPES",
        "importPath": "apps.finetuning.utils",
        "description": "apps.finetuning.utils",
        "isExtraImport": true,
        "detail": "apps.finetuning.utils",
        "documentation": {}
    },
    {
        "label": "FineTuningModelProvidersNames",
        "importPath": "apps.finetuning.utils",
        "description": "apps.finetuning.utils",
        "isExtraImport": true,
        "detail": "apps.finetuning.utils",
        "documentation": {}
    },
    {
        "label": "FineTunedModelTypesNames",
        "importPath": "apps.finetuning.utils",
        "description": "apps.finetuning.utils",
        "isExtraImport": true,
        "detail": "apps.finetuning.utils",
        "documentation": {}
    },
    {
        "label": "FineTunedModelConnectionForm",
        "importPath": "apps.finetuning.forms",
        "description": "apps.finetuning.forms",
        "isExtraImport": true,
        "detail": "apps.finetuning.forms",
        "documentation": {}
    },
    {
        "label": "FineTunedModelConnectionForm",
        "importPath": "apps.finetuning.forms",
        "description": "apps.finetuning.forms",
        "isExtraImport": true,
        "detail": "apps.finetuning.forms",
        "documentation": {}
    },
    {
        "label": "HARMONIQ_DEITIES",
        "importPath": "apps.harmoniq.utils.constant_utils",
        "description": "apps.harmoniq.utils.constant_utils",
        "isExtraImport": true,
        "detail": "apps.harmoniq.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "OpenAIRealtimeAPIClient",
        "importPath": "apps.core.harmoniq.harmoniq_executor",
        "description": "apps.core.harmoniq.harmoniq_executor",
        "isExtraImport": true,
        "detail": "apps.core.harmoniq.harmoniq_executor",
        "documentation": {}
    },
    {
        "label": "sync_request_communication",
        "importPath": "apps.core.harmoniq.harmoniq_executor",
        "description": "apps.core.harmoniq.harmoniq_executor",
        "isExtraImport": true,
        "detail": "apps.core.harmoniq.harmoniq_executor",
        "documentation": {}
    },
    {
        "label": "HarmoniqView_List",
        "importPath": "apps.harmoniq.views",
        "description": "apps.harmoniq.views",
        "isExtraImport": true,
        "detail": "apps.harmoniq.views",
        "documentation": {}
    },
    {
        "label": "HarmoniqView_Use",
        "importPath": "apps.harmoniq.views",
        "description": "apps.harmoniq.views",
        "isExtraImport": true,
        "detail": "apps.harmoniq.views",
        "documentation": {}
    },
    {
        "label": "HarmoniqView_Create",
        "importPath": "apps.harmoniq.views",
        "description": "apps.harmoniq.views",
        "isExtraImport": true,
        "detail": "apps.harmoniq.views",
        "documentation": {}
    },
    {
        "label": "HarmoniqView_Update",
        "importPath": "apps.harmoniq.views",
        "description": "apps.harmoniq.views",
        "isExtraImport": true,
        "detail": "apps.harmoniq.views",
        "documentation": {}
    },
    {
        "label": "HarmoniqView_ConfirmDelete",
        "importPath": "apps.harmoniq.views",
        "description": "apps.harmoniq.views",
        "isExtraImport": true,
        "detail": "apps.harmoniq.views",
        "documentation": {}
    },
    {
        "label": "HarmoniqCommunicationView",
        "importPath": "apps.harmoniq.views",
        "description": "apps.harmoniq.views",
        "isExtraImport": true,
        "detail": "apps.harmoniq.views",
        "documentation": {}
    },
    {
        "label": "HarmoniqView_TestInternal",
        "importPath": "apps.harmoniq.views.internal.internal_test_harmoniq_views",
        "description": "apps.harmoniq.views.internal.internal_test_harmoniq_views",
        "isExtraImport": true,
        "detail": "apps.harmoniq.views.internal.internal_test_harmoniq_views",
        "documentation": {}
    },
    {
        "label": "send_mail",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "EmailMultiAlternatives",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "LandingView_Index",
        "importPath": "apps.landing.views",
        "description": "apps.landing.views",
        "isExtraImport": true,
        "detail": "apps.landing.views",
        "documentation": {}
    },
    {
        "label": "LandingView_ContactFormSubmit",
        "importPath": "apps.landing.views",
        "description": "apps.landing.views",
        "isExtraImport": true,
        "detail": "apps.landing.views",
        "documentation": {}
    },
    {
        "label": "LandingView_FAQ",
        "importPath": "apps.landing.views",
        "description": "apps.landing.views",
        "isExtraImport": true,
        "detail": "apps.landing.views",
        "documentation": {}
    },
    {
        "label": "LandingView_AdminNotAccredited",
        "importPath": "apps.landing.views",
        "description": "apps.landing.views",
        "isExtraImport": true,
        "detail": "apps.landing.views",
        "documentation": {}
    },
    {
        "label": "LandingView_Endeavours",
        "importPath": "apps.landing.views",
        "description": "apps.landing.views",
        "isExtraImport": true,
        "detail": "apps.landing.views",
        "documentation": {}
    },
    {
        "label": "LandingView_IntegrationToOrganizations",
        "importPath": "apps.landing.views",
        "description": "apps.landing.views",
        "isExtraImport": true,
        "detail": "apps.landing.views",
        "documentation": {}
    },
    {
        "label": "EXPERT_NETWORK_ADMIN_LIST",
        "importPath": "apps.leanmod.utils",
        "description": "apps.leanmod.utils",
        "isExtraImport": true,
        "detail": "apps.leanmod.utils",
        "documentation": {}
    },
    {
        "label": "EXPERT_NETWORK_ADMIN_FILTER",
        "importPath": "apps.leanmod.utils",
        "description": "apps.leanmod.utils",
        "isExtraImport": true,
        "detail": "apps.leanmod.utils",
        "documentation": {}
    },
    {
        "label": "EXPERT_NETWORK_ADMIN_SEARCH",
        "importPath": "apps.leanmod.utils",
        "description": "apps.leanmod.utils",
        "isExtraImport": true,
        "detail": "apps.leanmod.utils",
        "documentation": {}
    },
    {
        "label": "EXPERT_NETWORK_REFERENCE_ADMIN_LIST",
        "importPath": "apps.leanmod.utils",
        "description": "apps.leanmod.utils",
        "isExtraImport": true,
        "detail": "apps.leanmod.utils",
        "documentation": {}
    },
    {
        "label": "EXPERT_NETWORK_REFERENCE_ADMIN_FILTER",
        "importPath": "apps.leanmod.utils",
        "description": "apps.leanmod.utils",
        "isExtraImport": true,
        "detail": "apps.leanmod.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.leanmod.utils",
        "description": "apps.leanmod.utils",
        "isExtraImport": true,
        "detail": "apps.leanmod.utils",
        "documentation": {}
    },
    {
        "label": "LEAN_ASSISTANT_ADMIN_LIST",
        "importPath": "apps.leanmod.utils",
        "description": "apps.leanmod.utils",
        "isExtraImport": true,
        "detail": "apps.leanmod.utils",
        "documentation": {}
    },
    {
        "label": "LEAN_ASSISTANT_ADMIN_FILTER",
        "importPath": "apps.leanmod.utils",
        "description": "apps.leanmod.utils",
        "isExtraImport": true,
        "detail": "apps.leanmod.utils",
        "documentation": {}
    },
    {
        "label": "LEAN_ASSISTANT_ADMIN_SEARCH",
        "importPath": "apps.leanmod.utils",
        "description": "apps.leanmod.utils",
        "isExtraImport": true,
        "detail": "apps.leanmod.utils",
        "documentation": {}
    },
    {
        "label": "LeanModAssistantView_Create",
        "importPath": "apps.leanmod.views",
        "description": "apps.leanmod.views",
        "isExtraImport": true,
        "detail": "apps.leanmod.views",
        "documentation": {}
    },
    {
        "label": "LeanModAssistantView_Update",
        "importPath": "apps.leanmod.views",
        "description": "apps.leanmod.views",
        "isExtraImport": true,
        "detail": "apps.leanmod.views",
        "documentation": {}
    },
    {
        "label": "LeanModAssistantView_Delete",
        "importPath": "apps.leanmod.views",
        "description": "apps.leanmod.views",
        "isExtraImport": true,
        "detail": "apps.leanmod.views",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.leanmod.views",
        "description": "apps.leanmod.views",
        "isExtraImport": true,
        "detail": "apps.leanmod.views",
        "documentation": {}
    },
    {
        "label": "LLM_CORE_ADMIN_LIST",
        "importPath": "apps.llm_core.utils",
        "description": "apps.llm_core.utils",
        "isExtraImport": true,
        "detail": "apps.llm_core.utils",
        "documentation": {}
    },
    {
        "label": "LLM_CORE_ADMIN_FILTER",
        "importPath": "apps.llm_core.utils",
        "description": "apps.llm_core.utils",
        "isExtraImport": true,
        "detail": "apps.llm_core.utils",
        "documentation": {}
    },
    {
        "label": "LLM_CORE_ADMIN_SEARCH",
        "importPath": "apps.llm_core.utils",
        "description": "apps.llm_core.utils",
        "isExtraImport": true,
        "detail": "apps.llm_core.utils",
        "documentation": {}
    },
    {
        "label": "LARGE_LANGUAGE_MODEL_PROVIDERS",
        "importPath": "apps.llm_core.utils",
        "description": "apps.llm_core.utils",
        "isExtraImport": true,
        "detail": "apps.llm_core.utils",
        "documentation": {}
    },
    {
        "label": "GPT_MODEL_NAMES",
        "importPath": "apps.llm_core.utils",
        "description": "apps.llm_core.utils",
        "isExtraImport": true,
        "detail": "apps.llm_core.utils",
        "documentation": {}
    },
    {
        "label": "LARGE_LANGUAGE_MODEL_PROVIDERS",
        "importPath": "apps.llm_core.utils",
        "description": "apps.llm_core.utils",
        "isExtraImport": true,
        "detail": "apps.llm_core.utils",
        "documentation": {}
    },
    {
        "label": "GPT_MODEL_NAMES",
        "importPath": "apps.llm_core.utils",
        "description": "apps.llm_core.utils",
        "isExtraImport": true,
        "detail": "apps.llm_core.utils",
        "documentation": {}
    },
    {
        "label": "LARGE_LANGUAGE_MODEL_PROVIDERS",
        "importPath": "apps.llm_core.utils",
        "description": "apps.llm_core.utils",
        "isExtraImport": true,
        "detail": "apps.llm_core.utils",
        "documentation": {}
    },
    {
        "label": "GPT_MODEL_NAMES",
        "importPath": "apps.llm_core.utils",
        "description": "apps.llm_core.utils",
        "isExtraImport": true,
        "detail": "apps.llm_core.utils",
        "documentation": {}
    },
    {
        "label": "LLMCoreForm",
        "importPath": "apps.llm_core.forms",
        "description": "apps.llm_core.forms",
        "isExtraImport": true,
        "detail": "apps.llm_core.forms",
        "documentation": {}
    },
    {
        "label": "LLMCoreForm",
        "importPath": "apps.llm_core.forms",
        "description": "apps.llm_core.forms",
        "isExtraImport": true,
        "detail": "apps.llm_core.forms",
        "documentation": {}
    },
    {
        "label": "decimal",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "decimal",
        "description": "decimal",
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "qrcode",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "qrcode",
        "description": "qrcode",
        "detail": "qrcode",
        "documentation": {}
    },
    {
        "label": "tiktoken",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "tiktoken",
        "description": "tiktoken",
        "detail": "tiktoken",
        "documentation": {}
    },
    {
        "label": "render_to_string",
        "importPath": "django.template.loader",
        "description": "django.template.loader",
        "isExtraImport": true,
        "detail": "django.template.loader",
        "documentation": {}
    },
    {
        "label": "AssistantMemory",
        "importPath": "apps.memories.models",
        "description": "apps.memories.models",
        "isExtraImport": true,
        "detail": "apps.memories.models",
        "documentation": {}
    },
    {
        "label": "AssistantMemory",
        "importPath": "apps.memories.models",
        "description": "apps.memories.models",
        "isExtraImport": true,
        "detail": "apps.memories.models",
        "documentation": {}
    },
    {
        "label": "AssistantMemory",
        "importPath": "apps.memories.models",
        "description": "apps.memories.models",
        "isExtraImport": true,
        "detail": "apps.memories.models",
        "documentation": {}
    },
    {
        "label": "AssistantMemory",
        "importPath": "apps.memories.models",
        "description": "apps.memories.models",
        "isExtraImport": true,
        "detail": "apps.memories.models",
        "documentation": {}
    },
    {
        "label": "AssistantMemory",
        "importPath": "apps.memories.models",
        "description": "apps.memories.models",
        "isExtraImport": true,
        "detail": "apps.memories.models",
        "documentation": {}
    },
    {
        "label": "MEMORIES_ADMIN_LIST",
        "importPath": "apps.memories.utils",
        "description": "apps.memories.utils",
        "isExtraImport": true,
        "detail": "apps.memories.utils",
        "documentation": {}
    },
    {
        "label": "MEMORIES_ADMIN_FILTER",
        "importPath": "apps.memories.utils",
        "description": "apps.memories.utils",
        "isExtraImport": true,
        "detail": "apps.memories.utils",
        "documentation": {}
    },
    {
        "label": "MEMORIES_ADMIN_SEARCH",
        "importPath": "apps.memories.utils",
        "description": "apps.memories.utils",
        "isExtraImport": true,
        "detail": "apps.memories.utils",
        "documentation": {}
    },
    {
        "label": "AGENT_STANDARD_MEMORY_TYPES",
        "importPath": "apps.memories.utils",
        "description": "apps.memories.utils",
        "isExtraImport": true,
        "detail": "apps.memories.utils",
        "documentation": {}
    },
    {
        "label": "AgentStandardMemoryTypesNames",
        "importPath": "apps.memories.utils",
        "description": "apps.memories.utils",
        "isExtraImport": true,
        "detail": "apps.memories.utils",
        "documentation": {}
    },
    {
        "label": "AssistantMemoryView_List",
        "importPath": "apps.memories.views",
        "description": "apps.memories.views",
        "isExtraImport": true,
        "detail": "apps.memories.views",
        "documentation": {}
    },
    {
        "label": "AssistantMemoryView_Create",
        "importPath": "apps.memories.views",
        "description": "apps.memories.views",
        "isExtraImport": true,
        "detail": "apps.memories.views",
        "documentation": {}
    },
    {
        "label": "AssistantMemoryView_Delete",
        "importPath": "apps.memories.views",
        "description": "apps.memories.views",
        "isExtraImport": true,
        "detail": "apps.memories.views",
        "documentation": {}
    },
    {
        "label": "MessageTemplate",
        "importPath": "apps.message_templates.models",
        "description": "apps.message_templates.models",
        "isExtraImport": true,
        "detail": "apps.message_templates.models",
        "documentation": {}
    },
    {
        "label": "MessageTemplate",
        "importPath": "apps.message_templates.models",
        "description": "apps.message_templates.models",
        "isExtraImport": true,
        "detail": "apps.message_templates.models",
        "documentation": {}
    },
    {
        "label": "MessageTemplate",
        "importPath": "apps.message_templates.models",
        "description": "apps.message_templates.models",
        "isExtraImport": true,
        "detail": "apps.message_templates.models",
        "documentation": {}
    },
    {
        "label": "MessageTemplate",
        "importPath": "apps.message_templates.models",
        "description": "apps.message_templates.models",
        "isExtraImport": true,
        "detail": "apps.message_templates.models",
        "documentation": {}
    },
    {
        "label": "MessageTemplate",
        "importPath": "apps.message_templates.models",
        "description": "apps.message_templates.models",
        "isExtraImport": true,
        "detail": "apps.message_templates.models",
        "documentation": {}
    },
    {
        "label": "MessageTemplate",
        "importPath": "apps.message_templates.models",
        "description": "apps.message_templates.models",
        "isExtraImport": true,
        "detail": "apps.message_templates.models",
        "documentation": {}
    },
    {
        "label": "MessageTemplate",
        "importPath": "apps.message_templates.models",
        "description": "apps.message_templates.models",
        "isExtraImport": true,
        "detail": "apps.message_templates.models",
        "documentation": {}
    },
    {
        "label": "MessageTemplate",
        "importPath": "apps.message_templates.models",
        "description": "apps.message_templates.models",
        "isExtraImport": true,
        "detail": "apps.message_templates.models",
        "documentation": {}
    },
    {
        "label": "MessageTemplate",
        "importPath": "apps.message_templates.models",
        "description": "apps.message_templates.models",
        "isExtraImport": true,
        "detail": "apps.message_templates.models",
        "documentation": {}
    },
    {
        "label": "MessageTemplate",
        "importPath": "apps.message_templates.models",
        "description": "apps.message_templates.models",
        "isExtraImport": true,
        "detail": "apps.message_templates.models",
        "documentation": {}
    },
    {
        "label": "MESSAGE_TEMPLATE_ADMIN_LIST",
        "importPath": "apps.message_templates.utils",
        "description": "apps.message_templates.utils",
        "isExtraImport": true,
        "detail": "apps.message_templates.utils",
        "documentation": {}
    },
    {
        "label": "MESSAGE_TEMPLATE_ADMIN_FILTER",
        "importPath": "apps.message_templates.utils",
        "description": "apps.message_templates.utils",
        "isExtraImport": true,
        "detail": "apps.message_templates.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.message_templates.utils",
        "description": "apps.message_templates.utils",
        "isExtraImport": true,
        "detail": "apps.message_templates.utils",
        "documentation": {}
    },
    {
        "label": "MessageTemplateForm",
        "importPath": "apps.message_templates.forms",
        "description": "apps.message_templates.forms",
        "isExtraImport": true,
        "detail": "apps.message_templates.forms",
        "documentation": {}
    },
    {
        "label": "MessageTemplateForm",
        "importPath": "apps.message_templates.forms",
        "description": "apps.message_templates.forms",
        "isExtraImport": true,
        "detail": "apps.message_templates.forms",
        "documentation": {}
    },
    {
        "label": "MessageTemplateView_List",
        "importPath": "apps.message_templates.views",
        "description": "apps.message_templates.views",
        "isExtraImport": true,
        "detail": "apps.message_templates.views",
        "documentation": {}
    },
    {
        "label": "MessageTemplateView_Create",
        "importPath": "apps.message_templates.views",
        "description": "apps.message_templates.views",
        "isExtraImport": true,
        "detail": "apps.message_templates.views",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.message_templates.views",
        "description": "apps.message_templates.views",
        "isExtraImport": true,
        "detail": "apps.message_templates.views",
        "documentation": {}
    },
    {
        "label": "CUSTOM_API_ADMIN_LIST",
        "importPath": "apps.mm_apis.utils",
        "description": "apps.mm_apis.utils",
        "isExtraImport": true,
        "detail": "apps.mm_apis.utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_API_ADMIN_FILTER",
        "importPath": "apps.mm_apis.utils",
        "description": "apps.mm_apis.utils",
        "isExtraImport": true,
        "detail": "apps.mm_apis.utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_API_ADMIN_SEARCH",
        "importPath": "apps.mm_apis.utils",
        "description": "apps.mm_apis.utils",
        "isExtraImport": true,
        "detail": "apps.mm_apis.utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_API_REF_ADMIN_LIST",
        "importPath": "apps.mm_apis.utils",
        "description": "apps.mm_apis.utils",
        "isExtraImport": true,
        "detail": "apps.mm_apis.utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_API_REF_ADMIN_FILTER",
        "importPath": "apps.mm_apis.utils",
        "description": "apps.mm_apis.utils",
        "isExtraImport": true,
        "detail": "apps.mm_apis.utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_API_REF_ADMIN_SEARCH",
        "importPath": "apps.mm_apis.utils",
        "description": "apps.mm_apis.utils",
        "isExtraImport": true,
        "detail": "apps.mm_apis.utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_API_AUTHENTICATION_TYPES",
        "importPath": "apps.mm_apis.utils",
        "description": "apps.mm_apis.utils",
        "isExtraImport": true,
        "detail": "apps.mm_apis.utils",
        "documentation": {}
    },
    {
        "label": "MAXIMUM_RETRIES",
        "importPath": "apps.mm_apis.utils",
        "description": "apps.mm_apis.utils",
        "isExtraImport": true,
        "detail": "apps.mm_apis.utils",
        "documentation": {}
    },
    {
        "label": "NUMBER_OF_RANDOM_FEATURED_APIS",
        "importPath": "apps.mm_apis.utils",
        "description": "apps.mm_apis.utils",
        "isExtraImport": true,
        "detail": "apps.mm_apis.utils",
        "documentation": {}
    },
    {
        "label": "CATEGORIES_OF_CUSTOM_APIS",
        "importPath": "apps.mm_apis.utils",
        "description": "apps.mm_apis.utils",
        "isExtraImport": true,
        "detail": "apps.mm_apis.utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_API_AUTHENTICATION_TYPES",
        "importPath": "apps.mm_apis.utils",
        "description": "apps.mm_apis.utils",
        "isExtraImport": true,
        "detail": "apps.mm_apis.utils",
        "documentation": {}
    },
    {
        "label": "CATEGORIES_OF_CUSTOM_APIS",
        "importPath": "apps.mm_apis.utils",
        "description": "apps.mm_apis.utils",
        "isExtraImport": true,
        "detail": "apps.mm_apis.utils",
        "documentation": {}
    },
    {
        "label": "CustomAPIForm",
        "importPath": "apps.mm_apis.forms",
        "description": "apps.mm_apis.forms",
        "isExtraImport": true,
        "detail": "apps.mm_apis.forms",
        "documentation": {}
    },
    {
        "label": "CustomAPIView_Create",
        "importPath": "apps.mm_apis.views",
        "description": "apps.mm_apis.views",
        "isExtraImport": true,
        "detail": "apps.mm_apis.views",
        "documentation": {}
    },
    {
        "label": "CustomAPIView_List",
        "importPath": "apps.mm_apis.views",
        "description": "apps.mm_apis.views",
        "isExtraImport": true,
        "detail": "apps.mm_apis.views",
        "documentation": {}
    },
    {
        "label": "CustomAPIView_Delete",
        "importPath": "apps.mm_apis.views",
        "description": "apps.mm_apis.views",
        "isExtraImport": true,
        "detail": "apps.mm_apis.views",
        "documentation": {}
    },
    {
        "label": "CustomAPIView_Store",
        "importPath": "apps.mm_apis.views",
        "description": "apps.mm_apis.views",
        "isExtraImport": true,
        "detail": "apps.mm_apis.views",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.mm_apis.views",
        "description": "apps.mm_apis.views",
        "isExtraImport": true,
        "detail": "apps.mm_apis.views",
        "documentation": {}
    },
    {
        "label": "CUSTOM_FUNCTION_ADMIN_LIST",
        "importPath": "apps.mm_functions.utils",
        "description": "apps.mm_functions.utils",
        "isExtraImport": true,
        "detail": "apps.mm_functions.utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_FUNCTION_ADMIN_FILTER",
        "importPath": "apps.mm_functions.utils",
        "description": "apps.mm_functions.utils",
        "isExtraImport": true,
        "detail": "apps.mm_functions.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.mm_functions.utils",
        "description": "apps.mm_functions.utils",
        "isExtraImport": true,
        "detail": "apps.mm_functions.utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_FUNCTION_REF_ADMIN_LIST",
        "importPath": "apps.mm_functions.utils",
        "description": "apps.mm_functions.utils",
        "isExtraImport": true,
        "detail": "apps.mm_functions.utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_FUNCTION_REF_ADMIN_FILTER",
        "importPath": "apps.mm_functions.utils",
        "description": "apps.mm_functions.utils",
        "isExtraImport": true,
        "detail": "apps.mm_functions.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.mm_functions.utils",
        "description": "apps.mm_functions.utils",
        "isExtraImport": true,
        "detail": "apps.mm_functions.utils",
        "documentation": {}
    },
    {
        "label": "NUMBER_OF_RANDOM_FEATURED_FUNCTIONS",
        "importPath": "apps.mm_functions.utils",
        "description": "apps.mm_functions.utils",
        "isExtraImport": true,
        "detail": "apps.mm_functions.utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_FUNCTION_CATEGORIES",
        "importPath": "apps.mm_functions.utils",
        "description": "apps.mm_functions.utils",
        "isExtraImport": true,
        "detail": "apps.mm_functions.utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_FUNCTION_CATEGORIES",
        "importPath": "apps.mm_functions.utils",
        "description": "apps.mm_functions.utils",
        "isExtraImport": true,
        "detail": "apps.mm_functions.utils",
        "documentation": {}
    },
    {
        "label": "shutil",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "shutil",
        "description": "shutil",
        "detail": "shutil",
        "documentation": {}
    },
    {
        "label": "subprocess",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "subprocess",
        "description": "subprocess",
        "detail": "subprocess",
        "documentation": {}
    },
    {
        "label": "CustomFunctionForm",
        "importPath": "apps.mm_functions.forms",
        "description": "apps.mm_functions.forms",
        "isExtraImport": true,
        "detail": "apps.mm_functions.forms",
        "documentation": {}
    },
    {
        "label": "CustomFunctionView_Create",
        "importPath": "apps.mm_functions.views",
        "description": "apps.mm_functions.views",
        "isExtraImport": true,
        "detail": "apps.mm_functions.views",
        "documentation": {}
    },
    {
        "label": "CustomFunctionView_List",
        "importPath": "apps.mm_functions.views",
        "description": "apps.mm_functions.views",
        "isExtraImport": true,
        "detail": "apps.mm_functions.views",
        "documentation": {}
    },
    {
        "label": "CustomFunctionView_Connections",
        "importPath": "apps.mm_functions.views",
        "description": "apps.mm_functions.views",
        "isExtraImport": true,
        "detail": "apps.mm_functions.views",
        "documentation": {}
    },
    {
        "label": "CustomFunctionView_Delete",
        "importPath": "apps.mm_functions.views",
        "description": "apps.mm_functions.views",
        "isExtraImport": true,
        "detail": "apps.mm_functions.views",
        "documentation": {}
    },
    {
        "label": "CustomFunctionView_Store",
        "importPath": "apps.mm_functions.views",
        "description": "apps.mm_functions.views",
        "isExtraImport": true,
        "detail": "apps.mm_functions.views",
        "documentation": {}
    },
    {
        "label": "SCHEDULED_JOB_ADMIN_LIST",
        "importPath": "apps.mm_scheduled_jobs.utils",
        "description": "apps.mm_scheduled_jobs.utils",
        "isExtraImport": true,
        "detail": "apps.mm_scheduled_jobs.utils",
        "documentation": {}
    },
    {
        "label": "SCHEDULED_JOB_ADMIN_SEARCH",
        "importPath": "apps.mm_scheduled_jobs.utils",
        "description": "apps.mm_scheduled_jobs.utils",
        "isExtraImport": true,
        "detail": "apps.mm_scheduled_jobs.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.mm_scheduled_jobs.utils",
        "description": "apps.mm_scheduled_jobs.utils",
        "isExtraImport": true,
        "detail": "apps.mm_scheduled_jobs.utils",
        "documentation": {}
    },
    {
        "label": "SCHEDULED_JOB_INSTANCE_ADMIN_LIST",
        "importPath": "apps.mm_scheduled_jobs.utils",
        "description": "apps.mm_scheduled_jobs.utils",
        "isExtraImport": true,
        "detail": "apps.mm_scheduled_jobs.utils",
        "documentation": {}
    },
    {
        "label": "SCHEDULED_JOB_INSTANCE_ADMIN_SEARCH",
        "importPath": "apps.mm_scheduled_jobs.utils",
        "description": "apps.mm_scheduled_jobs.utils",
        "isExtraImport": true,
        "detail": "apps.mm_scheduled_jobs.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.mm_scheduled_jobs.utils",
        "description": "apps.mm_scheduled_jobs.utils",
        "isExtraImport": true,
        "detail": "apps.mm_scheduled_jobs.utils",
        "documentation": {}
    },
    {
        "label": "SCHEDULED_JOB_INSTANCE_STATUSES",
        "importPath": "apps.mm_scheduled_jobs.utils",
        "description": "apps.mm_scheduled_jobs.utils",
        "isExtraImport": true,
        "detail": "apps.mm_scheduled_jobs.utils",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "post_delete",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "post_delete",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "pre_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "pre_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "post_delete",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "PeriodicTask",
        "importPath": "django_celery_beat.models",
        "description": "django_celery_beat.models",
        "isExtraImport": true,
        "detail": "django_celery_beat.models",
        "documentation": {}
    },
    {
        "label": "PeriodicTask",
        "importPath": "django_celery_beat.models",
        "description": "django_celery_beat.models",
        "isExtraImport": true,
        "detail": "django_celery_beat.models",
        "documentation": {}
    },
    {
        "label": "CrontabSchedule",
        "importPath": "django_celery_beat.models",
        "description": "django_celery_beat.models",
        "isExtraImport": true,
        "detail": "django_celery_beat.models",
        "documentation": {}
    },
    {
        "label": "PeriodicTask",
        "importPath": "django_celery_beat.models",
        "description": "django_celery_beat.models",
        "isExtraImport": true,
        "detail": "django_celery_beat.models",
        "documentation": {}
    },
    {
        "label": "add_periodic_task",
        "importPath": "apps.mm_scheduled_jobs.tasks",
        "description": "apps.mm_scheduled_jobs.tasks",
        "isExtraImport": true,
        "detail": "apps.mm_scheduled_jobs.tasks",
        "documentation": {}
    },
    {
        "label": "ScheduledJobForm",
        "importPath": "apps.mm_scheduled_jobs.forms",
        "description": "apps.mm_scheduled_jobs.forms",
        "isExtraImport": true,
        "detail": "apps.mm_scheduled_jobs.forms",
        "documentation": {}
    },
    {
        "label": "CUSTOM_SCRIPT_ADMIN_LIST",
        "importPath": "apps.mm_scripts.utils",
        "description": "apps.mm_scripts.utils",
        "isExtraImport": true,
        "detail": "apps.mm_scripts.utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_SCRIPT_ADMIN_SEARCH",
        "importPath": "apps.mm_scripts.utils",
        "description": "apps.mm_scripts.utils",
        "isExtraImport": true,
        "detail": "apps.mm_scripts.utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_SCRIPT_ADMIN_LIST_FILTER",
        "importPath": "apps.mm_scripts.utils",
        "description": "apps.mm_scripts.utils",
        "isExtraImport": true,
        "detail": "apps.mm_scripts.utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_SCRIPT_REFERENCE_ADMIN_LIST",
        "importPath": "apps.mm_scripts.utils",
        "description": "apps.mm_scripts.utils",
        "isExtraImport": true,
        "detail": "apps.mm_scripts.utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_SCRIPT_REFERENCE_ADMIN_SEARCH",
        "importPath": "apps.mm_scripts.utils",
        "description": "apps.mm_scripts.utils",
        "isExtraImport": true,
        "detail": "apps.mm_scripts.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.mm_scripts.utils",
        "description": "apps.mm_scripts.utils",
        "isExtraImport": true,
        "detail": "apps.mm_scripts.utils",
        "documentation": {}
    },
    {
        "label": "NUMBER_OF_RANDOM_FEATURED_SCRIPTS",
        "importPath": "apps.mm_scripts.utils",
        "description": "apps.mm_scripts.utils",
        "isExtraImport": true,
        "detail": "apps.mm_scripts.utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_SCRIPT_CATEGORIES",
        "importPath": "apps.mm_scripts.utils",
        "description": "apps.mm_scripts.utils",
        "isExtraImport": true,
        "detail": "apps.mm_scripts.utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_SCRIPT_CATEGORIES",
        "importPath": "apps.mm_scripts.utils",
        "description": "apps.mm_scripts.utils",
        "isExtraImport": true,
        "detail": "apps.mm_scripts.utils",
        "documentation": {}
    },
    {
        "label": "CustomScriptForm",
        "importPath": "apps.mm_scripts.forms",
        "description": "apps.mm_scripts.forms",
        "isExtraImport": true,
        "detail": "apps.mm_scripts.forms",
        "documentation": {}
    },
    {
        "label": "CustomScriptView_Create",
        "importPath": "apps.mm_scripts.views",
        "description": "apps.mm_scripts.views",
        "isExtraImport": true,
        "detail": "apps.mm_scripts.views",
        "documentation": {}
    },
    {
        "label": "CustomScriptView_List",
        "importPath": "apps.mm_scripts.views",
        "description": "apps.mm_scripts.views",
        "isExtraImport": true,
        "detail": "apps.mm_scripts.views",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.mm_scripts.views",
        "description": "apps.mm_scripts.views",
        "isExtraImport": true,
        "detail": "apps.mm_scripts.views",
        "documentation": {}
    },
    {
        "label": "TRIGGERED_JOB_ADMIN_LIST",
        "importPath": "apps.mm_triggered_jobs.utils",
        "description": "apps.mm_triggered_jobs.utils",
        "isExtraImport": true,
        "detail": "apps.mm_triggered_jobs.utils",
        "documentation": {}
    },
    {
        "label": "TRIGGERED_JOB_ADMIN_SEARCH",
        "importPath": "apps.mm_triggered_jobs.utils",
        "description": "apps.mm_triggered_jobs.utils",
        "isExtraImport": true,
        "detail": "apps.mm_triggered_jobs.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.mm_triggered_jobs.utils",
        "description": "apps.mm_triggered_jobs.utils",
        "isExtraImport": true,
        "detail": "apps.mm_triggered_jobs.utils",
        "documentation": {}
    },
    {
        "label": "TRIGGERED_JOB_INSTANCE_ADMIN_LIST",
        "importPath": "apps.mm_triggered_jobs.utils",
        "description": "apps.mm_triggered_jobs.utils",
        "isExtraImport": true,
        "detail": "apps.mm_triggered_jobs.utils",
        "documentation": {}
    },
    {
        "label": "TRIGGERED_JOB_INSTANCE_ADMIN_SEARCH",
        "importPath": "apps.mm_triggered_jobs.utils",
        "description": "apps.mm_triggered_jobs.utils",
        "isExtraImport": true,
        "detail": "apps.mm_triggered_jobs.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.mm_triggered_jobs.utils",
        "description": "apps.mm_triggered_jobs.utils",
        "isExtraImport": true,
        "detail": "apps.mm_triggered_jobs.utils",
        "documentation": {}
    },
    {
        "label": "TRIGGERED_JOB_INSTANCE_STATUSES",
        "importPath": "apps.mm_triggered_jobs.utils",
        "description": "apps.mm_triggered_jobs.utils",
        "isExtraImport": true,
        "detail": "apps.mm_triggered_jobs.utils",
        "documentation": {}
    },
    {
        "label": "TriggeredJobInstanceStatusesNames",
        "importPath": "apps.mm_triggered_jobs.utils",
        "description": "apps.mm_triggered_jobs.utils",
        "isExtraImport": true,
        "detail": "apps.mm_triggered_jobs.utils",
        "documentation": {}
    },
    {
        "label": "generate_triggered_job_chat_name",
        "importPath": "apps.mm_triggered_jobs.utils",
        "description": "apps.mm_triggered_jobs.utils",
        "isExtraImport": true,
        "detail": "apps.mm_triggered_jobs.utils",
        "documentation": {}
    },
    {
        "label": "TriggeredJobForm",
        "importPath": "apps.mm_triggered_jobs.forms",
        "description": "apps.mm_triggered_jobs.forms",
        "isExtraImport": true,
        "detail": "apps.mm_triggered_jobs.forms",
        "documentation": {}
    },
    {
        "label": "StarredMessage",
        "importPath": "apps.starred_messages.models",
        "description": "apps.starred_messages.models",
        "isExtraImport": true,
        "detail": "apps.starred_messages.models",
        "documentation": {}
    },
    {
        "label": "StarredMessage",
        "importPath": "apps.starred_messages.models",
        "description": "apps.starred_messages.models",
        "isExtraImport": true,
        "detail": "apps.starred_messages.models",
        "documentation": {}
    },
    {
        "label": "StarredMessage",
        "importPath": "apps.starred_messages.models",
        "description": "apps.starred_messages.models",
        "isExtraImport": true,
        "detail": "apps.starred_messages.models",
        "documentation": {}
    },
    {
        "label": "StarredMessage",
        "importPath": "apps.starred_messages.models",
        "description": "apps.starred_messages.models",
        "isExtraImport": true,
        "detail": "apps.starred_messages.models",
        "documentation": {}
    },
    {
        "label": "StarredMessage",
        "importPath": "apps.starred_messages.models",
        "description": "apps.starred_messages.models",
        "isExtraImport": true,
        "detail": "apps.starred_messages.models",
        "documentation": {}
    },
    {
        "label": "markdown",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "markdown",
        "description": "markdown",
        "detail": "markdown",
        "documentation": {}
    },
    {
        "label": "mark_safe",
        "importPath": "django.utils.safestring",
        "description": "django.utils.safestring",
        "isExtraImport": true,
        "detail": "django.utils.safestring",
        "documentation": {}
    },
    {
        "label": "mark_safe",
        "importPath": "django.utils.safestring",
        "description": "django.utils.safestring",
        "isExtraImport": true,
        "detail": "django.utils.safestring",
        "documentation": {}
    },
    {
        "label": "AuxiliaryLLMAudioClient",
        "importPath": "apps.core.generative_ai.auxiliary_clients.auxiliary_llm_audio_client",
        "description": "apps.core.generative_ai.auxiliary_clients.auxiliary_llm_audio_client",
        "isExtraImport": true,
        "detail": "apps.core.generative_ai.auxiliary_clients.auxiliary_llm_audio_client",
        "documentation": {}
    },
    {
        "label": "MaestroForm",
        "importPath": "apps.orchestrations.forms",
        "description": "apps.orchestrations.forms",
        "isExtraImport": true,
        "detail": "apps.orchestrations.forms",
        "documentation": {}
    },
    {
        "label": "MaestroForm",
        "importPath": "apps.orchestrations.forms",
        "description": "apps.orchestrations.forms",
        "isExtraImport": true,
        "detail": "apps.orchestrations.forms",
        "documentation": {}
    },
    {
        "label": "OrchestrationQuery",
        "importPath": "apps.orchestrations.models.query",
        "description": "apps.orchestrations.models.query",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models.query",
        "documentation": {}
    },
    {
        "label": "OrchestrationQuery",
        "importPath": "apps.orchestrations.models.query",
        "description": "apps.orchestrations.models.query",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models.query",
        "documentation": {}
    },
    {
        "label": "OrchestrationQuery",
        "importPath": "apps.orchestrations.models.query",
        "description": "apps.orchestrations.models.query",
        "isExtraImport": true,
        "detail": "apps.orchestrations.models.query",
        "documentation": {}
    },
    {
        "label": "OrchestrationView_Create",
        "importPath": "apps.orchestrations.views",
        "description": "apps.orchestrations.views",
        "isExtraImport": true,
        "detail": "apps.orchestrations.views",
        "documentation": {}
    },
    {
        "label": "OrchestrationView_Update",
        "importPath": "apps.orchestrations.views",
        "description": "apps.orchestrations.views",
        "isExtraImport": true,
        "detail": "apps.orchestrations.views",
        "documentation": {}
    },
    {
        "label": "OrchestrationView_QueryList",
        "importPath": "apps.orchestrations.views",
        "description": "apps.orchestrations.views",
        "isExtraImport": true,
        "detail": "apps.orchestrations.views",
        "documentation": {}
    },
    {
        "label": "\\\n                                       OrchestrationView_List",
        "importPath": "apps.orchestrations.views",
        "description": "apps.orchestrations.views",
        "isExtraImport": true,
        "detail": "apps.orchestrations.views",
        "documentation": {}
    },
    {
        "label": "OrchestrationView_Delete",
        "importPath": "apps.orchestrations.views",
        "description": "apps.orchestrations.views",
        "isExtraImport": true,
        "detail": "apps.orchestrations.views",
        "documentation": {}
    },
    {
        "label": "OrchestrationView_QueryDelete",
        "importPath": "apps.orchestrations.views",
        "description": "apps.orchestrations.views",
        "isExtraImport": true,
        "detail": "apps.orchestrations.views",
        "documentation": {}
    },
    {
        "label": "OrchestrationView_QueryDetail",
        "importPath": "apps.orchestrations.views",
        "description": "apps.orchestrations.views",
        "isExtraImport": true,
        "detail": "apps.orchestrations.views",
        "documentation": {}
    },
    {
        "label": "OrchestrationView_QueryRerun",
        "importPath": "apps.orchestrations.views",
        "description": "apps.orchestrations.views",
        "isExtraImport": true,
        "detail": "apps.orchestrations.views",
        "documentation": {}
    },
    {
        "label": "ORGANIZATION_ADMIN_LIST",
        "importPath": "apps.organization.utils",
        "description": "apps.organization.utils",
        "isExtraImport": true,
        "detail": "apps.organization.utils",
        "documentation": {}
    },
    {
        "label": "ORGANIZATION_ADMIN_FILTER",
        "importPath": "apps.organization.utils",
        "description": "apps.organization.utils",
        "isExtraImport": true,
        "detail": "apps.organization.utils",
        "documentation": {}
    },
    {
        "label": "ORGANIZATION_ADMIN_SEARCH",
        "importPath": "apps.organization.utils",
        "description": "apps.organization.utils",
        "isExtraImport": true,
        "detail": "apps.organization.utils",
        "documentation": {}
    },
    {
        "label": "PromoCode",
        "importPath": "auth.models",
        "description": "auth.models",
        "isExtraImport": true,
        "detail": "auth.models",
        "documentation": {}
    },
    {
        "label": "Profile",
        "importPath": "auth.models",
        "description": "auth.models",
        "isExtraImport": true,
        "detail": "auth.models",
        "documentation": {}
    },
    {
        "label": "Profile",
        "importPath": "auth.models",
        "description": "auth.models",
        "isExtraImport": true,
        "detail": "auth.models",
        "documentation": {}
    },
    {
        "label": "Profile",
        "importPath": "auth.models",
        "description": "auth.models",
        "isExtraImport": true,
        "detail": "auth.models",
        "documentation": {}
    },
    {
        "label": "UserCreditCard",
        "importPath": "auth.models",
        "description": "auth.models",
        "isExtraImport": true,
        "detail": "auth.models",
        "documentation": {}
    },
    {
        "label": "Profile",
        "importPath": "auth.models",
        "description": "auth.models",
        "isExtraImport": true,
        "detail": "auth.models",
        "documentation": {}
    },
    {
        "label": "UserCreditCard",
        "importPath": "auth.models",
        "description": "auth.models",
        "isExtraImport": true,
        "detail": "auth.models",
        "documentation": {}
    },
    {
        "label": "Profile",
        "importPath": "auth.models",
        "description": "auth.models",
        "isExtraImport": true,
        "detail": "auth.models",
        "documentation": {}
    },
    {
        "label": "PromoCode",
        "importPath": "auth.models",
        "description": "auth.models",
        "isExtraImport": true,
        "detail": "auth.models",
        "documentation": {}
    },
    {
        "label": "UserCreditCard",
        "importPath": "auth.models",
        "description": "auth.models",
        "isExtraImport": true,
        "detail": "auth.models",
        "documentation": {}
    },
    {
        "label": "Profile",
        "importPath": "auth.models",
        "description": "auth.models",
        "isExtraImport": true,
        "detail": "auth.models",
        "documentation": {}
    },
    {
        "label": "Profile",
        "importPath": "auth.models",
        "description": "auth.models",
        "isExtraImport": true,
        "detail": "auth.models",
        "documentation": {}
    },
    {
        "label": "Profile",
        "importPath": "auth.models",
        "description": "auth.models",
        "isExtraImport": true,
        "detail": "auth.models",
        "documentation": {}
    },
    {
        "label": "Profile",
        "importPath": "auth.models",
        "description": "auth.models",
        "isExtraImport": true,
        "detail": "auth.models",
        "documentation": {}
    },
    {
        "label": "Profile",
        "importPath": "auth.models",
        "description": "auth.models",
        "isExtraImport": true,
        "detail": "auth.models",
        "documentation": {}
    },
    {
        "label": "OrganizationForm",
        "importPath": "apps.organization.forms",
        "description": "apps.organization.forms",
        "isExtraImport": true,
        "detail": "apps.organization.forms",
        "documentation": {}
    },
    {
        "label": "OrganizationForm",
        "importPath": "apps.organization.forms",
        "description": "apps.organization.forms",
        "isExtraImport": true,
        "detail": "apps.organization.forms",
        "documentation": {}
    },
    {
        "label": "STARRED_MESSAGE_ADMIN_LIST",
        "importPath": "apps.starred_messages.utils",
        "description": "apps.starred_messages.utils",
        "isExtraImport": true,
        "detail": "apps.starred_messages.utils",
        "documentation": {}
    },
    {
        "label": "STARRED_MESSAGE_ADMIN_FILTER",
        "importPath": "apps.starred_messages.utils",
        "description": "apps.starred_messages.utils",
        "isExtraImport": true,
        "detail": "apps.starred_messages.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.starred_messages.utils",
        "description": "apps.starred_messages.utils",
        "isExtraImport": true,
        "detail": "apps.starred_messages.utils",
        "documentation": {}
    },
    {
        "label": "STARRED_MESSAGE_SENDER_TYPES",
        "importPath": "apps.starred_messages.utils",
        "description": "apps.starred_messages.utils",
        "isExtraImport": true,
        "detail": "apps.starred_messages.utils",
        "documentation": {}
    },
    {
        "label": "StarredMessageView_List",
        "importPath": "apps.starred_messages.views",
        "description": "apps.starred_messages.views",
        "isExtraImport": true,
        "detail": "apps.starred_messages.views",
        "documentation": {}
    },
    {
        "label": "StarredMessageView_Delete",
        "importPath": "apps.starred_messages.views",
        "description": "apps.starred_messages.views",
        "isExtraImport": true,
        "detail": "apps.starred_messages.views",
        "documentation": {}
    },
    {
        "label": "SupportTicket",
        "importPath": "apps.support_system.models",
        "description": "apps.support_system.models",
        "isExtraImport": true,
        "detail": "apps.support_system.models",
        "documentation": {}
    },
    {
        "label": "SupportTicketResponse",
        "importPath": "apps.support_system.models",
        "description": "apps.support_system.models",
        "isExtraImport": true,
        "detail": "apps.support_system.models",
        "documentation": {}
    },
    {
        "label": "SupportTicket",
        "importPath": "apps.support_system.models",
        "description": "apps.support_system.models",
        "isExtraImport": true,
        "detail": "apps.support_system.models",
        "documentation": {}
    },
    {
        "label": "SupportTicket",
        "importPath": "apps.support_system.models",
        "description": "apps.support_system.models",
        "isExtraImport": true,
        "detail": "apps.support_system.models",
        "documentation": {}
    },
    {
        "label": "SupportTicketResponse",
        "importPath": "apps.support_system.models",
        "description": "apps.support_system.models",
        "isExtraImport": true,
        "detail": "apps.support_system.models",
        "documentation": {}
    },
    {
        "label": "SupportTicket",
        "importPath": "apps.support_system.models",
        "description": "apps.support_system.models",
        "isExtraImport": true,
        "detail": "apps.support_system.models",
        "documentation": {}
    },
    {
        "label": "SUPPORT_TICKET_SYSTEM_ADMIN_LIST",
        "importPath": "apps.support_system.utils",
        "description": "apps.support_system.utils",
        "isExtraImport": true,
        "detail": "apps.support_system.utils",
        "documentation": {}
    },
    {
        "label": "SUPPORT_TICKET_SYSTEM_ADMIN_FILTER",
        "importPath": "apps.support_system.utils",
        "description": "apps.support_system.utils",
        "isExtraImport": true,
        "detail": "apps.support_system.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.support_system.utils",
        "description": "apps.support_system.utils",
        "isExtraImport": true,
        "detail": "apps.support_system.utils",
        "documentation": {}
    },
    {
        "label": "SUPPORT_TICKET_RESPONSE_ADMIN_LIST",
        "importPath": "apps.support_system.utils",
        "description": "apps.support_system.utils",
        "isExtraImport": true,
        "detail": "apps.support_system.utils",
        "documentation": {}
    },
    {
        "label": "SUPPORT_TICKET_RESPONSE_ADMIN_SEARCH",
        "importPath": "apps.support_system.utils",
        "description": "apps.support_system.utils",
        "isExtraImport": true,
        "detail": "apps.support_system.utils",
        "documentation": {}
    },
    {
        "label": "STATUSES_FOR_SUPPORT_TICKETS",
        "importPath": "apps.support_system.utils",
        "description": "apps.support_system.utils",
        "isExtraImport": true,
        "detail": "apps.support_system.utils",
        "documentation": {}
    },
    {
        "label": "PRIORITY_CATEGORY_OF_SUPPORT_TICKETS",
        "importPath": "apps.support_system.utils",
        "description": "apps.support_system.utils",
        "isExtraImport": true,
        "detail": "apps.support_system.utils",
        "documentation": {}
    },
    {
        "label": "TICKET_STATUS_PRIORITY_MAP",
        "importPath": "apps.support_system.utils",
        "description": "apps.support_system.utils",
        "isExtraImport": true,
        "detail": "apps.support_system.utils",
        "documentation": {}
    },
    {
        "label": "SupportTicket",
        "importPath": "apps.support_system.models.support_ticket_models",
        "description": "apps.support_system.models.support_ticket_models",
        "isExtraImport": true,
        "detail": "apps.support_system.models.support_ticket_models",
        "documentation": {}
    },
    {
        "label": "SupportTicketForm",
        "importPath": "apps.support_system.forms.support_ticket_forms",
        "description": "apps.support_system.forms.support_ticket_forms",
        "isExtraImport": true,
        "detail": "apps.support_system.forms.support_ticket_forms",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "user_passes_test",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "TemplateHelper",
        "importPath": "web_project.template_helpers.theme",
        "description": "web_project.template_helpers.theme",
        "isExtraImport": true,
        "detail": "web_project.template_helpers.theme",
        "documentation": {}
    },
    {
        "label": "TemplateHelper",
        "importPath": "web_project.template_helpers.theme",
        "description": "web_project.template_helpers.theme",
        "isExtraImport": true,
        "detail": "web_project.template_helpers.theme",
        "documentation": {}
    },
    {
        "label": "TemplateHelper",
        "importPath": "web_project.template_helpers.theme",
        "description": "web_project.template_helpers.theme",
        "isExtraImport": true,
        "detail": "web_project.template_helpers.theme",
        "documentation": {}
    },
    {
        "label": "TemplateHelper",
        "importPath": "web_project.template_helpers.theme",
        "description": "web_project.template_helpers.theme",
        "isExtraImport": true,
        "detail": "web_project.template_helpers.theme",
        "documentation": {}
    },
    {
        "label": "TemplateHelper",
        "importPath": "web_project.template_helpers.theme",
        "description": "web_project.template_helpers.theme",
        "isExtraImport": true,
        "detail": "web_project.template_helpers.theme",
        "documentation": {}
    },
    {
        "label": "TemplateHelper",
        "importPath": "web_project.template_helpers.theme",
        "description": "web_project.template_helpers.theme",
        "isExtraImport": true,
        "detail": "web_project.template_helpers.theme",
        "documentation": {}
    },
    {
        "label": "TemplateHelper",
        "importPath": "web_project.template_helpers.theme",
        "description": "web_project.template_helpers.theme",
        "isExtraImport": true,
        "detail": "web_project.template_helpers.theme",
        "documentation": {}
    },
    {
        "label": "TemplateHelper",
        "importPath": "web_project.template_helpers.theme",
        "description": "web_project.template_helpers.theme",
        "isExtraImport": true,
        "detail": "web_project.template_helpers.theme",
        "documentation": {}
    },
    {
        "label": "TemplateHelper",
        "importPath": "web_project.template_helpers.theme",
        "description": "web_project.template_helpers.theme",
        "isExtraImport": true,
        "detail": "web_project.template_helpers.theme",
        "documentation": {}
    },
    {
        "label": "TemplateHelper",
        "importPath": "web_project.template_helpers.theme",
        "description": "web_project.template_helpers.theme",
        "isExtraImport": true,
        "detail": "web_project.template_helpers.theme",
        "documentation": {}
    },
    {
        "label": "TemplateHelper",
        "importPath": "web_project.template_helpers.theme",
        "description": "web_project.template_helpers.theme",
        "isExtraImport": true,
        "detail": "web_project.template_helpers.theme",
        "documentation": {}
    },
    {
        "label": "TemplateHelper",
        "importPath": "web_project.template_helpers.theme",
        "description": "web_project.template_helpers.theme",
        "isExtraImport": true,
        "detail": "web_project.template_helpers.theme",
        "documentation": {}
    },
    {
        "label": "TemplateHelper",
        "importPath": "web_project.template_helpers.theme",
        "description": "web_project.template_helpers.theme",
        "isExtraImport": true,
        "detail": "web_project.template_helpers.theme",
        "documentation": {}
    },
    {
        "label": "TemplateHelper",
        "importPath": "web_project.template_helpers.theme",
        "description": "web_project.template_helpers.theme",
        "isExtraImport": true,
        "detail": "web_project.template_helpers.theme",
        "documentation": {}
    },
    {
        "label": "Transaction",
        "importPath": "apps.theme.transactions.models",
        "description": "apps.theme.transactions.models",
        "isExtraImport": true,
        "detail": "apps.theme.transactions.models",
        "documentation": {}
    },
    {
        "label": "Transaction",
        "importPath": "apps.theme.transactions.models",
        "description": "apps.theme.transactions.models",
        "isExtraImport": true,
        "detail": "apps.theme.transactions.models",
        "documentation": {}
    },
    {
        "label": "Transaction",
        "importPath": "apps.theme.transactions.models",
        "description": "apps.theme.transactions.models",
        "isExtraImport": true,
        "detail": "apps.theme.transactions.models",
        "documentation": {}
    },
    {
        "label": "Transaction",
        "importPath": "apps.theme.transactions.models",
        "description": "apps.theme.transactions.models",
        "isExtraImport": true,
        "detail": "apps.theme.transactions.models",
        "documentation": {}
    },
    {
        "label": "TransactionForm",
        "importPath": "apps.theme.transactions.forms",
        "description": "apps.theme.transactions.forms",
        "isExtraImport": true,
        "detail": "apps.theme.transactions.forms",
        "documentation": {}
    },
    {
        "label": "TransactionForm",
        "importPath": "apps.theme.transactions.forms",
        "description": "apps.theme.transactions.forms",
        "isExtraImport": true,
        "detail": "apps.theme.transactions.forms",
        "documentation": {}
    },
    {
        "label": "TransactionListView",
        "importPath": "apps.theme.transactions.transaction_list.views",
        "description": "apps.theme.transactions.transaction_list.views",
        "isExtraImport": true,
        "detail": "apps.theme.transactions.transaction_list.views",
        "documentation": {}
    },
    {
        "label": "TransactionAddView",
        "importPath": "apps.theme.transactions.transaction_add.views",
        "description": "apps.theme.transactions.transaction_add.views",
        "isExtraImport": true,
        "detail": "apps.theme.transactions.transaction_add.views",
        "documentation": {}
    },
    {
        "label": "TransactionUpdateView",
        "importPath": "apps.theme.transactions.transaction_update.views",
        "description": "apps.theme.transactions.transaction_update.views",
        "isExtraImport": true,
        "detail": "apps.theme.transactions.transaction_update.views",
        "documentation": {}
    },
    {
        "label": "TransactionDeleteView",
        "importPath": "apps.theme.transactions.transaction_delete.views",
        "description": "apps.theme.transactions.transaction_delete.views",
        "isExtraImport": true,
        "detail": "apps.theme.transactions.transaction_delete.views",
        "documentation": {}
    },
    {
        "label": "UserStatusForm",
        "importPath": "apps.user_management.forms",
        "description": "apps.user_management.forms",
        "isExtraImport": true,
        "detail": "apps.user_management.forms",
        "documentation": {}
    },
    {
        "label": "require_POST",
        "importPath": "django.views.decorators.http",
        "description": "django.views.decorators.http",
        "isExtraImport": true,
        "detail": "django.views.decorators.http",
        "documentation": {}
    },
    {
        "label": "UserManagementView_UserInvite",
        "importPath": "apps.user_management.views",
        "description": "apps.user_management.views",
        "isExtraImport": true,
        "detail": "apps.user_management.views",
        "documentation": {}
    },
    {
        "label": "UserManagementView_UserList",
        "importPath": "apps.user_management.views",
        "description": "apps.user_management.views",
        "isExtraImport": true,
        "detail": "apps.user_management.views",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.user_management.views",
        "description": "apps.user_management.views",
        "isExtraImport": true,
        "detail": "apps.user_management.views",
        "documentation": {}
    },
    {
        "label": "UserRoleForm",
        "importPath": "apps.user_permissions.forms",
        "description": "apps.user_permissions.forms",
        "isExtraImport": true,
        "detail": "apps.user_permissions.forms",
        "documentation": {}
    },
    {
        "label": "UserRoleForm",
        "importPath": "apps.user_permissions.forms",
        "description": "apps.user_permissions.forms",
        "isExtraImport": true,
        "detail": "apps.user_permissions.forms",
        "documentation": {}
    },
    {
        "label": "PermissionView_PermissionCreate",
        "importPath": "apps.user_permissions.views",
        "description": "apps.user_permissions.views",
        "isExtraImport": true,
        "detail": "apps.user_permissions.views",
        "documentation": {}
    },
    {
        "label": "PermissionView_PermissionList",
        "importPath": "apps.user_permissions.views",
        "description": "apps.user_permissions.views",
        "isExtraImport": true,
        "detail": "apps.user_permissions.views",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.user_permissions.views",
        "description": "apps.user_permissions.views",
        "isExtraImport": true,
        "detail": "apps.user_permissions.views",
        "documentation": {}
    },
    {
        "label": "ProfileUpdateForm",
        "importPath": "apps.user_profile_management.forms",
        "description": "apps.user_profile_management.forms",
        "isExtraImport": true,
        "detail": "apps.user_profile_management.forms",
        "documentation": {}
    },
    {
        "label": "CreditCardForm",
        "importPath": "apps.user_profile_management.forms",
        "description": "apps.user_profile_management.forms",
        "isExtraImport": true,
        "detail": "apps.user_profile_management.forms",
        "documentation": {}
    },
    {
        "label": "infer_credit_card_type",
        "importPath": "apps.user_profile_management.utils",
        "description": "apps.user_profile_management.utils",
        "isExtraImport": true,
        "detail": "apps.user_profile_management.utils",
        "documentation": {}
    },
    {
        "label": "COUNTRIES",
        "importPath": "auth.utils.countries",
        "description": "auth.utils.countries",
        "isExtraImport": true,
        "detail": "auth.utils.countries",
        "documentation": {}
    },
    {
        "label": "COUNTRIES",
        "importPath": "auth.utils.countries",
        "description": "auth.utils.countries",
        "isExtraImport": true,
        "detail": "auth.utils.countries",
        "documentation": {}
    },
    {
        "label": "UserProfileView_List",
        "importPath": "apps.user_profile_management.views",
        "description": "apps.user_profile_management.views",
        "isExtraImport": true,
        "detail": "apps.user_profile_management.views",
        "documentation": {}
    },
    {
        "label": "UserProfileView_CreditCardRemove",
        "importPath": "apps.user_profile_management.views",
        "description": "apps.user_profile_management.views",
        "isExtraImport": true,
        "detail": "apps.user_profile_management.views",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.user_profile_management.views",
        "description": "apps.user_profile_management.views",
        "isExtraImport": true,
        "detail": "apps.user_profile_management.views",
        "documentation": {}
    },
    {
        "label": "SettingsView_UserSettings",
        "importPath": "apps.user_settings.views",
        "description": "apps.user_settings.views",
        "isExtraImport": true,
        "detail": "apps.user_settings.views",
        "documentation": {}
    },
    {
        "label": "SettingsView_DeleteAllLLMModels",
        "importPath": "apps.user_settings.views",
        "description": "apps.user_settings.views",
        "isExtraImport": true,
        "detail": "apps.user_settings.views",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.user_settings.views",
        "description": "apps.user_settings.views",
        "isExtraImport": true,
        "detail": "apps.user_settings.views",
        "documentation": {}
    },
    {
        "label": "GENERATED_VIDEO_ADMIN_LIST",
        "importPath": "apps.video_generations.utils",
        "description": "apps.video_generations.utils",
        "isExtraImport": true,
        "detail": "apps.video_generations.utils",
        "documentation": {}
    },
    {
        "label": "GENERATED_VIDEO_ADMIN_FILTER",
        "importPath": "apps.video_generations.utils",
        "description": "apps.video_generations.utils",
        "isExtraImport": true,
        "detail": "apps.video_generations.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.video_generations.utils",
        "description": "apps.video_generations.utils",
        "isExtraImport": true,
        "detail": "apps.video_generations.utils",
        "documentation": {}
    },
    {
        "label": "VIDEO_GENERATOR_ADMIN_LIST",
        "importPath": "apps.video_generations.utils",
        "description": "apps.video_generations.utils",
        "isExtraImport": true,
        "detail": "apps.video_generations.utils",
        "documentation": {}
    },
    {
        "label": "VIDEO_GENERATOR_ADMIN_FILTER",
        "importPath": "apps.video_generations.utils",
        "description": "apps.video_generations.utils",
        "isExtraImport": true,
        "detail": "apps.video_generations.utils",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "apps.video_generations.utils",
        "description": "apps.video_generations.utils",
        "isExtraImport": true,
        "detail": "apps.video_generations.utils",
        "documentation": {}
    },
    {
        "label": "VideoGeneratorView_Create",
        "importPath": "apps.video_generations.views",
        "description": "apps.video_generations.views",
        "isExtraImport": true,
        "detail": "apps.video_generations.views",
        "documentation": {}
    },
    {
        "label": "VideoGeneratorView_Update",
        "importPath": "apps.video_generations.views",
        "description": "apps.video_generations.views",
        "isExtraImport": true,
        "detail": "apps.video_generations.views",
        "documentation": {}
    },
    {
        "label": "VideoGeneratorView_Connections",
        "importPath": "apps.video_generations.views",
        "description": "apps.video_generations.views",
        "isExtraImport": true,
        "detail": "apps.video_generations.views",
        "documentation": {}
    },
    {
        "label": "VideoGeneratorView_ConfirmDelete",
        "importPath": "apps.video_generations.views",
        "description": "apps.video_generations.views",
        "isExtraImport": true,
        "detail": "apps.video_generations.views",
        "documentation": {}
    },
    {
        "label": "AuthView",
        "importPath": "auth.views",
        "description": "auth.views",
        "isExtraImport": true,
        "detail": "auth.views",
        "documentation": {}
    },
    {
        "label": "AuthView",
        "importPath": "auth.views",
        "description": "auth.views",
        "isExtraImport": true,
        "detail": "auth.views",
        "documentation": {}
    },
    {
        "label": "AuthView",
        "importPath": "auth.views",
        "description": "auth.views",
        "isExtraImport": true,
        "detail": "auth.views",
        "documentation": {}
    },
    {
        "label": "AuthView",
        "importPath": "auth.views",
        "description": "auth.views",
        "isExtraImport": true,
        "detail": "auth.views",
        "documentation": {}
    },
    {
        "label": "AuthView",
        "importPath": "auth.views",
        "description": "auth.views",
        "isExtraImport": true,
        "detail": "auth.views",
        "documentation": {}
    },
    {
        "label": "countries_for_language",
        "importPath": "country_list",
        "description": "country_list",
        "isExtraImport": true,
        "detail": "country_list",
        "documentation": {}
    },
    {
        "label": "strip_tags",
        "importPath": "django.utils.html",
        "description": "django.utils.html",
        "isExtraImport": true,
        "detail": "django.utils.html",
        "documentation": {}
    },
    {
        "label": "LogoutView",
        "importPath": "django.contrib.auth.views",
        "description": "django.contrib.auth.views",
        "isExtraImport": true,
        "detail": "django.contrib.auth.views",
        "documentation": {}
    },
    {
        "label": "AsyncWebsocketConsumer",
        "importPath": "channels.generic.websocket",
        "description": "channels.generic.websocket",
        "isExtraImport": true,
        "detail": "channels.generic.websocket",
        "documentation": {}
    },
    {
        "label": "AsyncWebsocketConsumer",
        "importPath": "channels.generic.websocket",
        "description": "channels.generic.websocket",
        "isExtraImport": true,
        "detail": "channels.generic.websocket",
        "documentation": {}
    },
    {
        "label": "AsyncWebsocketConsumer",
        "importPath": "channels.generic.websocket",
        "description": "channels.generic.websocket",
        "isExtraImport": true,
        "detail": "channels.generic.websocket",
        "documentation": {}
    },
    {
        "label": "AsyncWebsocketConsumer",
        "importPath": "channels.generic.websocket",
        "description": "channels.generic.websocket",
        "isExtraImport": true,
        "detail": "channels.generic.websocket",
        "documentation": {}
    },
    {
        "label": "AsyncWebsocketConsumer",
        "importPath": "channels.generic.websocket",
        "description": "channels.generic.websocket",
        "isExtraImport": true,
        "detail": "channels.generic.websocket",
        "documentation": {}
    },
    {
        "label": "generate_for_time_step",
        "importPath": "apps._meta.voidforger.test_helpers.generator",
        "description": "apps._meta.voidforger.test_helpers.generator",
        "isExtraImport": true,
        "detail": "apps._meta.voidforger.test_helpers.generator",
        "documentation": {}
    },
    {
        "label": "MiddlewareMixin",
        "importPath": "django.utils.deprecation",
        "description": "django.utils.deprecation",
        "isExtraImport": true,
        "detail": "django.utils.deprecation",
        "documentation": {}
    },
    {
        "label": "MiddlewareMixin",
        "importPath": "django.utils.deprecation",
        "description": "django.utils.deprecation",
        "isExtraImport": true,
        "detail": "django.utils.deprecation",
        "documentation": {}
    },
    {
        "label": "CONTENT_MIX",
        "importPath": "config.consts.loading_bar_content",
        "description": "config.consts.loading_bar_content",
        "isExtraImport": true,
        "detail": "config.consts.loading_bar_content",
        "documentation": {}
    },
    {
        "label": "LogEntry",
        "importPath": "django.contrib.admin.models",
        "description": "django.contrib.admin.models",
        "isExtraImport": true,
        "detail": "django.contrib.admin.models",
        "documentation": {}
    },
    {
        "label": "LogEntry",
        "importPath": "django.contrib.admin.models",
        "description": "django.contrib.admin.models",
        "isExtraImport": true,
        "detail": "django.contrib.admin.models",
        "documentation": {}
    },
    {
        "label": "EXCLUDE_MODELS_FROM_AUDIT_LOGS",
        "importPath": "config.utils.constant_utils",
        "description": "config.utils.constant_utils",
        "isExtraImport": true,
        "detail": "config.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "AuthMiddlewareStack",
        "importPath": "channels.auth",
        "description": "channels.auth",
        "isExtraImport": true,
        "detail": "channels.auth",
        "documentation": {}
    },
    {
        "label": "URLRouter",
        "importPath": "channels.routing",
        "description": "channels.routing",
        "isExtraImport": true,
        "detail": "channels.routing",
        "documentation": {}
    },
    {
        "label": "ProtocolTypeRouter",
        "importPath": "channels.routing",
        "description": "channels.routing",
        "isExtraImport": true,
        "detail": "channels.routing",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "websocket_urlpatterns",
        "importPath": "config.routing",
        "description": "config.routing",
        "isExtraImport": true,
        "detail": "config.routing",
        "documentation": {}
    },
    {
        "label": "crontab",
        "importPath": "celery.schedules",
        "description": "celery.schedules",
        "isExtraImport": true,
        "detail": "celery.schedules",
        "documentation": {}
    },
    {
        "label": "S3Boto3Storage",
        "importPath": "storages.backends.s3boto3",
        "description": "storages.backends.s3boto3",
        "isExtraImport": true,
        "detail": "storages.backends.s3boto3",
        "documentation": {}
    },
    {
        "label": "LogConsumer",
        "importPath": "config.consumers",
        "description": "config.consumers",
        "isExtraImport": true,
        "detail": "config.consumers",
        "documentation": {}
    },
    {
        "label": "OrchestrationLogConsumer",
        "importPath": "config.consumers",
        "description": "config.consumers",
        "isExtraImport": true,
        "detail": "config.consumers",
        "documentation": {}
    },
    {
        "label": "OrchestrationGenericLogConsumer",
        "importPath": "config.consumers",
        "description": "config.consumers",
        "isExtraImport": true,
        "detail": "config.consumers",
        "documentation": {}
    },
    {
        "label": "\\",
        "importPath": "config.consumers",
        "description": "config.consumers",
        "isExtraImport": true,
        "detail": "config.consumers",
        "documentation": {}
    },
    {
        "label": "gettext_lazy",
        "importPath": "django.utils.translation",
        "description": "django.utils.translation",
        "isExtraImport": true,
        "detail": "django.utils.translation",
        "documentation": {}
    },
    {
        "label": "activate",
        "importPath": "django.utils.translation",
        "description": "django.utils.translation",
        "isExtraImport": true,
        "detail": "django.utils.translation",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "sentry_sdk",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sentry_sdk",
        "description": "sentry_sdk",
        "detail": "sentry_sdk",
        "documentation": {}
    },
    {
        "label": "AudioSegment",
        "importPath": "pydub",
        "description": "pydub",
        "isExtraImport": true,
        "detail": "pydub",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "trigger_error",
        "importPath": "config.utils.function_utils",
        "description": "config.utils.function_utils",
        "isExtraImport": true,
        "detail": "config.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "docs_redirect_view",
        "importPath": "config.utils.function_utils",
        "description": "config.utils.function_utils",
        "isExtraImport": true,
        "detail": "config.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "SystemView",
        "importPath": "web_project.views",
        "description": "web_project.views",
        "isExtraImport": true,
        "detail": "web_project.views",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "escape",
        "kind": 2,
        "importPath": ".venv.bin.dumppdf",
        "description": ".venv.bin.dumppdf",
        "peekOfCode": "def escape(s: Union[str, bytes]) -> str:\n    if isinstance(s, bytes):\n        us = str(s, \"latin-1\")\n    else:\n        us = s\n    return ESC_PAT.sub(lambda m: \"&#%d;\" % ord(m.group(0)), us)\ndef dumpxml(out: TextIO, obj: object, codec: Optional[str] = None) -> None:\n    if obj is None:\n        out.write(\"<null />\")\n        return",
        "detail": ".venv.bin.dumppdf",
        "documentation": {}
    },
    {
        "label": "dumpxml",
        "kind": 2,
        "importPath": ".venv.bin.dumppdf",
        "description": ".venv.bin.dumppdf",
        "peekOfCode": "def dumpxml(out: TextIO, obj: object, codec: Optional[str] = None) -> None:\n    if obj is None:\n        out.write(\"<null />\")\n        return\n    if isinstance(obj, dict):\n        out.write('<dict size=\"%d\">\\n' % len(obj))\n        for (k, v) in obj.items():\n            out.write(\"<key>%s</key>\\n\" % k)\n            out.write(\"<value>\")\n            dumpxml(out, v)",
        "detail": ".venv.bin.dumppdf",
        "documentation": {}
    },
    {
        "label": "dumptrailers",
        "kind": 2,
        "importPath": ".venv.bin.dumppdf",
        "description": ".venv.bin.dumppdf",
        "peekOfCode": "def dumptrailers(\n    out: TextIO, doc: PDFDocument, show_fallback_xref: bool = False\n) -> None:\n    for xref in doc.xrefs:\n        if not isinstance(xref, PDFXRefFallback) or show_fallback_xref:\n            out.write(\"<trailer>\\n\")\n            dumpxml(out, xref.get_trailer())\n            out.write(\"\\n</trailer>\\n\\n\")\n    no_xrefs = all(isinstance(xref, PDFXRefFallback) for xref in doc.xrefs)\n    if no_xrefs and not show_fallback_xref:",
        "detail": ".venv.bin.dumppdf",
        "documentation": {}
    },
    {
        "label": "dumpallobjs",
        "kind": 2,
        "importPath": ".venv.bin.dumppdf",
        "description": ".venv.bin.dumppdf",
        "peekOfCode": "def dumpallobjs(\n    out: TextIO,\n    doc: PDFDocument,\n    codec: Optional[str] = None,\n    show_fallback_xref: bool = False,\n) -> None:\n    visited = set()\n    out.write(\"<pdf>\")\n    for xref in doc.xrefs:\n        for objid in xref.get_objids():",
        "detail": ".venv.bin.dumppdf",
        "documentation": {}
    },
    {
        "label": "dumpoutline",
        "kind": 2,
        "importPath": ".venv.bin.dumppdf",
        "description": ".venv.bin.dumppdf",
        "peekOfCode": "def dumpoutline(\n    outfp: TextIO,\n    fname: str,\n    objids: Any,\n    pagenos: Container[int],\n    password: str = \"\",\n    dumpall: bool = False,\n    codec: Optional[str] = None,\n    extractdir: Optional[str] = None,\n) -> None:",
        "detail": ".venv.bin.dumppdf",
        "documentation": {}
    },
    {
        "label": "extractembedded",
        "kind": 2,
        "importPath": ".venv.bin.dumppdf",
        "description": ".venv.bin.dumppdf",
        "peekOfCode": "def extractembedded(fname: str, password: str, extractdir: str) -> None:\n    def extract1(objid: int, obj: Dict[str, Any]) -> None:\n        filename = os.path.basename(obj.get(\"UF\") or cast(bytes, obj.get(\"F\")).decode())\n        fileref = obj[\"EF\"].get(\"UF\") or obj[\"EF\"].get(\"F\")\n        fileobj = doc.getobj(fileref.objid)\n        if not isinstance(fileobj, PDFStream):\n            error_msg = (\n                \"unable to process PDF: reference for %r is not a \"\n                \"PDFStream\" % filename\n            )",
        "detail": ".venv.bin.dumppdf",
        "documentation": {}
    },
    {
        "label": "dumppdf",
        "kind": 2,
        "importPath": ".venv.bin.dumppdf",
        "description": ".venv.bin.dumppdf",
        "peekOfCode": "def dumppdf(\n    outfp: TextIO,\n    fname: str,\n    objids: Iterable[int],\n    pagenos: Container[int],\n    password: str = \"\",\n    dumpall: bool = False,\n    codec: Optional[str] = None,\n    extractdir: Optional[str] = None,\n    show_fallback_xref: bool = False,",
        "detail": ".venv.bin.dumppdf",
        "documentation": {}
    },
    {
        "label": "create_parser",
        "kind": 2,
        "importPath": ".venv.bin.dumppdf",
        "description": ".venv.bin.dumppdf",
        "peekOfCode": "def create_parser() -> ArgumentParser:\n    parser = ArgumentParser(description=__doc__, add_help=True)\n    parser.add_argument(\n        \"files\",\n        type=str,\n        default=None,\n        nargs=\"+\",\n        help=\"One or more paths to PDF files.\",\n    )\n    parser.add_argument(",
        "detail": ".venv.bin.dumppdf",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".venv.bin.dumppdf",
        "description": ".venv.bin.dumppdf",
        "peekOfCode": "def main(argv: Optional[List[str]] = None) -> None:\n    parser = create_parser()\n    args = parser.parse_args(args=argv)\n    if args.debug:\n        logging.getLogger().setLevel(logging.DEBUG)\n    if args.outfile == \"-\":\n        outfp = sys.stdout\n    else:\n        outfp = open(args.outfile, \"w\")\n    if args.objects:",
        "detail": ".venv.bin.dumppdf",
        "documentation": {}
    },
    {
        "label": "logger",
        "kind": 5,
        "importPath": ".venv.bin.dumppdf",
        "description": ".venv.bin.dumppdf",
        "peekOfCode": "logger = logging.getLogger(__name__)\nESC_PAT = re.compile(r'[\\000-\\037&<>()\"\\042\\047\\134\\177-\\377]')\ndef escape(s: Union[str, bytes]) -> str:\n    if isinstance(s, bytes):\n        us = str(s, \"latin-1\")\n    else:\n        us = s\n    return ESC_PAT.sub(lambda m: \"&#%d;\" % ord(m.group(0)), us)\ndef dumpxml(out: TextIO, obj: object, codec: Optional[str] = None) -> None:\n    if obj is None:",
        "detail": ".venv.bin.dumppdf",
        "documentation": {}
    },
    {
        "label": "ESC_PAT",
        "kind": 5,
        "importPath": ".venv.bin.dumppdf",
        "description": ".venv.bin.dumppdf",
        "peekOfCode": "ESC_PAT = re.compile(r'[\\000-\\037&<>()\"\\042\\047\\134\\177-\\377]')\ndef escape(s: Union[str, bytes]) -> str:\n    if isinstance(s, bytes):\n        us = str(s, \"latin-1\")\n    else:\n        us = s\n    return ESC_PAT.sub(lambda m: \"&#%d;\" % ord(m.group(0)), us)\ndef dumpxml(out: TextIO, obj: object, codec: Optional[str] = None) -> None:\n    if obj is None:\n        out.write(\"<null />\")",
        "detail": ".venv.bin.dumppdf",
        "documentation": {}
    },
    {
        "label": "LITERAL_FILESPEC",
        "kind": 5,
        "importPath": ".venv.bin.dumppdf",
        "description": ".venv.bin.dumppdf",
        "peekOfCode": "LITERAL_FILESPEC = LIT(\"Filespec\")\nLITERAL_EMBEDDEDFILE = LIT(\"EmbeddedFile\")\ndef extractembedded(fname: str, password: str, extractdir: str) -> None:\n    def extract1(objid: int, obj: Dict[str, Any]) -> None:\n        filename = os.path.basename(obj.get(\"UF\") or cast(bytes, obj.get(\"F\")).decode())\n        fileref = obj[\"EF\"].get(\"UF\") or obj[\"EF\"].get(\"F\")\n        fileobj = doc.getobj(fileref.objid)\n        if not isinstance(fileobj, PDFStream):\n            error_msg = (\n                \"unable to process PDF: reference for %r is not a \"",
        "detail": ".venv.bin.dumppdf",
        "documentation": {}
    },
    {
        "label": "LITERAL_EMBEDDEDFILE",
        "kind": 5,
        "importPath": ".venv.bin.dumppdf",
        "description": ".venv.bin.dumppdf",
        "peekOfCode": "LITERAL_EMBEDDEDFILE = LIT(\"EmbeddedFile\")\ndef extractembedded(fname: str, password: str, extractdir: str) -> None:\n    def extract1(objid: int, obj: Dict[str, Any]) -> None:\n        filename = os.path.basename(obj.get(\"UF\") or cast(bytes, obj.get(\"F\")).decode())\n        fileref = obj[\"EF\"].get(\"UF\") or obj[\"EF\"].get(\"F\")\n        fileobj = doc.getobj(fileref.objid)\n        if not isinstance(fileobj, PDFStream):\n            error_msg = (\n                \"unable to process PDF: reference for %r is not a \"\n                \"PDFStream\" % filename",
        "detail": ".venv.bin.dumppdf",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".venv.bin.jp",
        "description": ".venv.bin.jp",
        "peekOfCode": "def main():\n    parser = argparse.ArgumentParser()\n    parser.add_argument('expression')\n    parser.add_argument('-f', '--filename',\n                        help=('The filename containing the input data.  '\n                              'If a filename is not given then data is '\n                              'read from stdin.'))\n    parser.add_argument('--ast', action='store_true',\n                        help=('Pretty print the AST, do not search the data.'))\n    args = parser.parse_args()",
        "detail": ".venv.bin.jp",
        "documentation": {}
    },
    {
        "label": "float_or_disabled",
        "kind": 2,
        "importPath": ".venv.bin.pdf2txt",
        "description": ".venv.bin.pdf2txt",
        "peekOfCode": "def float_or_disabled(x: str) -> Optional[float]:\n    if x.lower().strip() == \"disabled\":\n        return None\n    try:\n        return float(x)\n    except ValueError:\n        raise argparse.ArgumentTypeError(\"invalid float value: {}\".format(x))\ndef extract_text(\n    files: Iterable[str] = [],\n    outfile: str = \"-\",",
        "detail": ".venv.bin.pdf2txt",
        "documentation": {}
    },
    {
        "label": "extract_text",
        "kind": 2,
        "importPath": ".venv.bin.pdf2txt",
        "description": ".venv.bin.pdf2txt",
        "peekOfCode": "def extract_text(\n    files: Iterable[str] = [],\n    outfile: str = \"-\",\n    laparams: Optional[LAParams] = None,\n    output_type: str = \"text\",\n    codec: str = \"utf-8\",\n    strip_control: bool = False,\n    maxpages: int = 0,\n    page_numbers: Optional[Container[int]] = None,\n    password: str = \"\",",
        "detail": ".venv.bin.pdf2txt",
        "documentation": {}
    },
    {
        "label": "create_parser",
        "kind": 2,
        "importPath": ".venv.bin.pdf2txt",
        "description": ".venv.bin.pdf2txt",
        "peekOfCode": "def create_parser() -> argparse.ArgumentParser:\n    parser = argparse.ArgumentParser(description=__doc__, add_help=True)\n    parser.add_argument(\n        \"files\",\n        type=str,\n        default=None,\n        nargs=\"+\",\n        help=\"One or more paths to PDF files.\",\n    )\n    parser.add_argument(",
        "detail": ".venv.bin.pdf2txt",
        "documentation": {}
    },
    {
        "label": "parse_args",
        "kind": 2,
        "importPath": ".venv.bin.pdf2txt",
        "description": ".venv.bin.pdf2txt",
        "peekOfCode": "def parse_args(args: Optional[List[str]]) -> argparse.Namespace:\n    parsed_args = create_parser().parse_args(args=args)\n    # Propagate parsed layout parameters to LAParams object\n    if parsed_args.no_laparams:\n        parsed_args.laparams = None\n    else:\n        parsed_args.laparams = LAParams(\n            line_overlap=parsed_args.line_overlap,\n            char_margin=parsed_args.char_margin,\n            line_margin=parsed_args.line_margin,",
        "detail": ".venv.bin.pdf2txt",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": ".venv.bin.pdf2txt",
        "description": ".venv.bin.pdf2txt",
        "peekOfCode": "def main(args: Optional[List[str]] = None) -> int:\n    parsed_args = parse_args(args)\n    outfp = extract_text(**vars(parsed_args))\n    outfp.close()\n    return 0\nif __name__ == \"__main__\":\n    sys.exit(main())",
        "detail": ".venv.bin.pdf2txt",
        "documentation": {}
    },
    {
        "label": "OUTPUT_TYPES",
        "kind": 5,
        "importPath": ".venv.bin.pdf2txt",
        "description": ".venv.bin.pdf2txt",
        "peekOfCode": "OUTPUT_TYPES = ((\".htm\", \"html\"), (\".html\", \"html\"), (\".xml\", \"xml\"), (\".tag\", \"tag\"))\ndef float_or_disabled(x: str) -> Optional[float]:\n    if x.lower().strip() == \"disabled\":\n        return None\n    try:\n        return float(x)\n    except ValueError:\n        raise argparse.ArgumentTypeError(\"invalid float value: {}\".format(x))\ndef extract_text(\n    files: Iterable[str] = [],",
        "detail": ".venv.bin.pdf2txt",
        "documentation": {}
    },
    {
        "label": "description",
        "kind": 5,
        "importPath": ".venv.bin.rst2html",
        "description": ".venv.bin.rst2html",
        "peekOfCode": "description = ('Generates (X)HTML documents from standalone reStructuredText '\n               'sources.  ' + default_description)\npublish_cmdline(writer_name='html', description=description)",
        "detail": ".venv.bin.rst2html",
        "documentation": {}
    },
    {
        "label": "description",
        "kind": 5,
        "importPath": ".venv.bin.rst2html4",
        "description": ".venv.bin.rst2html4",
        "peekOfCode": "description = ('Generates (X)HTML documents from standalone reStructuredText '\n               'sources.  ' + default_description)\npublish_cmdline(writer_name='html4', description=description)",
        "detail": ".venv.bin.rst2html4",
        "documentation": {}
    },
    {
        "label": "description",
        "kind": 5,
        "importPath": ".venv.bin.rst2html5",
        "description": ".venv.bin.rst2html5",
        "peekOfCode": "description = ('Generates HTML5 documents from standalone '\n               'reStructuredText sources.\\n'\n               + default_description)\npublish_cmdline(writer_name='html5', description=description)",
        "detail": ".venv.bin.rst2html5",
        "documentation": {}
    },
    {
        "label": "description",
        "kind": 5,
        "importPath": ".venv.bin.rst2latex",
        "description": ".venv.bin.rst2latex",
        "peekOfCode": "description = ('Generates LaTeX documents from standalone reStructuredText '\n               'sources. '\n               'Reads from <source> (default is stdin) and writes to '\n               '<destination> (default is stdout).  See '\n               '<https://docutils.sourceforge.io/docs/user/latex.html> for '\n               'the full reference.')\npublish_cmdline(writer_name='latex', description=description)",
        "detail": ".venv.bin.rst2latex",
        "documentation": {}
    },
    {
        "label": "description",
        "kind": 5,
        "importPath": ".venv.bin.rst2man",
        "description": ".venv.bin.rst2man",
        "peekOfCode": "description = (\"Generates plain unix manual documents.  \"\n               + default_description)\npublish_cmdline(writer=manpage.Writer(), description=description)",
        "detail": ".venv.bin.rst2man",
        "documentation": {}
    },
    {
        "label": "description",
        "kind": 5,
        "importPath": ".venv.bin.rst2odt",
        "description": ".venv.bin.rst2odt",
        "peekOfCode": "description = ('Generates OpenDocument/OpenOffice/ODF documents from '\n               'standalone reStructuredText sources.  ' + default_description)\nwriter = Writer()\nreader = Reader()\noutput = publish_cmdline_to_binary(reader=reader, writer=writer,\n                                   description=description)",
        "detail": ".venv.bin.rst2odt",
        "documentation": {}
    },
    {
        "label": "writer",
        "kind": 5,
        "importPath": ".venv.bin.rst2odt",
        "description": ".venv.bin.rst2odt",
        "peekOfCode": "writer = Writer()\nreader = Reader()\noutput = publish_cmdline_to_binary(reader=reader, writer=writer,\n                                   description=description)",
        "detail": ".venv.bin.rst2odt",
        "documentation": {}
    },
    {
        "label": "reader",
        "kind": 5,
        "importPath": ".venv.bin.rst2odt",
        "description": ".venv.bin.rst2odt",
        "peekOfCode": "reader = Reader()\noutput = publish_cmdline_to_binary(reader=reader, writer=writer,\n                                   description=description)",
        "detail": ".venv.bin.rst2odt",
        "documentation": {}
    },
    {
        "label": "output",
        "kind": 5,
        "importPath": ".venv.bin.rst2odt",
        "description": ".venv.bin.rst2odt",
        "peekOfCode": "output = publish_cmdline_to_binary(reader=reader, writer=writer,\n                                   description=description)",
        "detail": ".venv.bin.rst2odt",
        "documentation": {}
    },
    {
        "label": "description",
        "kind": 5,
        "importPath": ".venv.bin.rst2pseudoxml",
        "description": ".venv.bin.rst2pseudoxml",
        "peekOfCode": "description = ('Generates pseudo-XML from standalone reStructuredText '\n               'sources (for testing purposes).  ' + default_description)\npublish_cmdline(description=description)",
        "detail": ".venv.bin.rst2pseudoxml",
        "documentation": {}
    },
    {
        "label": "description",
        "kind": 5,
        "importPath": ".venv.bin.rst2s5",
        "description": ".venv.bin.rst2s5",
        "peekOfCode": "description = ('Generates S5 (X)HTML slideshow documents from standalone '\n               'reStructuredText sources.  ' + default_description)\npublish_cmdline(writer_name='s5', description=description)",
        "detail": ".venv.bin.rst2s5",
        "documentation": {}
    },
    {
        "label": "description",
        "kind": 5,
        "importPath": ".venv.bin.rst2xetex",
        "description": ".venv.bin.rst2xetex",
        "peekOfCode": "description = ('Generates LaTeX documents from standalone reStructuredText '\n               'sources for compilation with the Unicode-aware TeX variants '\n               'XeLaTeX or LuaLaTeX. '\n               'Reads from <source> (default is stdin) and writes to '\n               '<destination> (default is stdout).  See '\n               '<https://docutils.sourceforge.io/docs/user/latex.html> for '\n               'the full reference.')\npublish_cmdline(writer_name='xetex', description=description)",
        "detail": ".venv.bin.rst2xetex",
        "documentation": {}
    },
    {
        "label": "description",
        "kind": 5,
        "importPath": ".venv.bin.rst2xml",
        "description": ".venv.bin.rst2xml",
        "peekOfCode": "description = ('Generates Docutils-native XML from standalone '\n               'reStructuredText sources.  ' + default_description)\npublish_cmdline(writer_name='xml', description=description)",
        "detail": ".venv.bin.rst2xml",
        "documentation": {}
    },
    {
        "label": "description",
        "kind": 5,
        "importPath": ".venv.bin.rstpep2html",
        "description": ".venv.bin.rstpep2html",
        "peekOfCode": "description = ('Generates (X)HTML from reStructuredText-format PEP files.  '\n               + default_description)\npublish_cmdline(reader_name='pep', writer_name='pep_html',\n                description=description)",
        "detail": ".venv.bin.rstpep2html",
        "documentation": {}
    },
    {
        "label": "cmd_doc",
        "kind": 5,
        "importPath": ".venv.bin.runxlrd",
        "description": ".venv.bin.runxlrd",
        "peekOfCode": "cmd_doc = \"\"\"\nCommands:\n2rows           Print the contents of first and last row in each sheet\n3rows           Print the contents of first, second and last row in each sheet\nbench           Same as \"show\", but doesn't print -- for profiling\nbiff_count[1]   Print a count of each type of BIFF record in the file\nbiff_dump[1]    Print a dump (char and hex) of the BIFF records in the file\nfonts           hdr + print a dump of all font objects\nhdr             Mini-overview of file (no per-sheet information)\nhotshot         Do a hotshot profile run e.g. ... -f1 hotshot bench bigfile*.xls",
        "detail": ".venv.bin.runxlrd",
        "documentation": {}
    },
    {
        "label": "options",
        "kind": 5,
        "importPath": ".venv.bin.runxlrd",
        "description": ".venv.bin.runxlrd",
        "peekOfCode": "options = None\nif __name__ == \"__main__\":\n    import xlrd\n    import sys\n    import time\n    import glob\n    import traceback\n    import gc\n    from xlrd.timemachine import xrange, REPR\n    class LogHandler(object):",
        "detail": ".venv.bin.runxlrd",
        "documentation": {}
    },
    {
        "label": "extract_file",
        "kind": 2,
        "importPath": ".venv.bin.vba_extract",
        "description": ".venv.bin.vba_extract",
        "peekOfCode": "def extract_file(xlsm_zip, filename):\n    # Extract a single file from an Excel xlsm macro file.\n    data = xlsm_zip.read(\"xl/\" + filename)\n    # Write the data to a local file.\n    file = open(filename, \"wb\")\n    file.write(data)\n    file.close()\n# The VBA project file and project signature file we want to extract.\nvba_filename = \"vbaProject.bin\"\nvba_signature_filename = \"vbaProjectSignature.bin\"",
        "detail": ".venv.bin.vba_extract",
        "documentation": {}
    },
    {
        "label": "vba_filename",
        "kind": 5,
        "importPath": ".venv.bin.vba_extract",
        "description": ".venv.bin.vba_extract",
        "peekOfCode": "vba_filename = \"vbaProject.bin\"\nvba_signature_filename = \"vbaProjectSignature.bin\"\n# Get the xlsm file name from the commandline.\nif len(sys.argv) > 1:\n    xlsm_file = sys.argv[1]\nelse:\n    print(\n        \"\\nUtility to extract a vbaProject.bin binary from an Excel 2007+ \"\n        \"xlsm macro file for insertion into an XlsxWriter file.\\n\"\n        \"If the macros are digitally signed, extracts also a vbaProjectSignature.bin \"",
        "detail": ".venv.bin.vba_extract",
        "documentation": {}
    },
    {
        "label": "vba_signature_filename",
        "kind": 5,
        "importPath": ".venv.bin.vba_extract",
        "description": ".venv.bin.vba_extract",
        "peekOfCode": "vba_signature_filename = \"vbaProjectSignature.bin\"\n# Get the xlsm file name from the commandline.\nif len(sys.argv) > 1:\n    xlsm_file = sys.argv[1]\nelse:\n    print(\n        \"\\nUtility to extract a vbaProject.bin binary from an Excel 2007+ \"\n        \"xlsm macro file for insertion into an XlsxWriter file.\\n\"\n        \"If the macros are digitally signed, extracts also a vbaProjectSignature.bin \"\n        \"file.\\n\"",
        "detail": ".venv.bin.vba_extract",
        "documentation": {}
    },
    {
        "label": "generate_for_time_step",
        "kind": 2,
        "importPath": "apps._meta.voidforger.test_helpers.generator",
        "description": "apps._meta.voidforger.test_helpers.generator",
        "peekOfCode": "def generate_for_time_step():\n    legion_nodes = mock_legion_nodes()\n    operation_nodes = mock_operation_nodes()\n    picklist = [\n        MOCK_STREAM_STRATEGIST,\n        MOCK_STREAM_BACKTESTING,\n        MOCK_STREAM_TRADER,\n        MOCK_STREAM_RISK_MANAGER,\n        MOCK_STREAM_PORTFOLIO_MANAGER\n    ]",
        "detail": "apps._meta.voidforger.test_helpers.generator",
        "documentation": {}
    },
    {
        "label": "MOCK_STREAM_STRATEGIST",
        "kind": 5,
        "importPath": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "description": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "peekOfCode": "MOCK_STREAM_STRATEGIST = [\n    # For the STRATEGIST legion node\n    \"🟢Strategist: I'm currently idle, awaiting new orders or scheduled/triggered operations.\",\n    \"🔵Strategist: Chatting with an assistant to discuss data sources.\",\n    \"🟢Strategist: I am triggered by API request, fetching data from the financial data source.\",\n    \"🟢Strategist: Working on quantitative data, and gathering insights for potential strategies.\",\n    \"🔵Strategist: Chatting with an assistant to decide on which data sources to use.\",\n    \"🟢Strategist: Thinking and generating a potential strategy.\",\n    \"🟢Strategist: Browsing online for strategy ideas.\",\n    \"🔵Strategist: Chatting with an assistant to discuss about what could be the next strategy.\",",
        "detail": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "documentation": {}
    },
    {
        "label": "MOCK_STREAM_BACKTESTING",
        "kind": 5,
        "importPath": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "description": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "peekOfCode": "MOCK_STREAM_BACKTESTING = [\n    # For the BACKTESTING legion node\n    \"🟢Backtesting: I am idle, waiting for new models to test.\",\n    \"🔵Backtesting: Configuring parameters for a next backtest.\",\n    \"🟢Backtesting: Running backtests on a new trading algorithm.\",\n    \"🟢Backtesting: Analyzing results from model tests.\",\n    \"🔵Backtesting: Updating risk assessment parameters based on backtests.\",\n    \"🟢Backtesting: Validating model accuracy based on historical data.\",\n    \"🟢Backtesting: Refining models to improve precision.\",\n    \"🟢Backtesting: Checking for overfitting in the latest strategy models.\",",
        "detail": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "documentation": {}
    },
    {
        "label": "MOCK_STREAM_TRADER",
        "kind": 5,
        "importPath": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "description": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "peekOfCode": "MOCK_STREAM_TRADER = [\n    # For the TRADER legion node\n    \"🟢Trader: I am idle, waiting for market opening.\",\n    \"🔵Trader: Analyzing pre-market data and adjusting trading strategies.\",\n    \"🟢Trader: Executing trades based on automated algorithms.\",\n    \"🟢Trader: Monitoring live market feeds.\",\n    \"🟢Trader: Reviewing the effectiveness of recently implemented trades.\",\n    \"🟢Trader: Optimizing trading algorithms.\",\n    \"🔵Trader: Consulting with risk management orchestration node.\",\n    \"🔵Trader: Adjusting positions in response to unexpected market news.\",",
        "detail": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "documentation": {}
    },
    {
        "label": "MOCK_STREAM_RISK_MANAGER",
        "kind": 5,
        "importPath": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "description": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "peekOfCode": "MOCK_STREAM_RISK_MANAGER = [\n    # For the RISK MANAGER legion node\n    \"🟢Risk Manager: I'm currently idle.\",\n    \"🟢Risk Manager: Monitoring overall risk exposure across portfolios.\",\n    \"🔵Risk Manager: Analyzing market fluctuations and their impact on risk levels.\",\n    \"🟢Risk Manager: Reviewing compliance with internal and external risk regulations.\",\n    \"🟢Risk Manager: Updating risk models to incorporate latest market data.\",\n    \"🔵Risk Manager: Conducting a stress test on active positions.\",\n    \"🟢Risk Manager: Preparing risk assessment report.\",\n    \"🟢Risk Manager: Consulting with trader orchestrator to align risk thresholds with market strategies.\",",
        "detail": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "documentation": {}
    },
    {
        "label": "MOCK_STREAM_PORTFOLIO_MANAGER",
        "kind": 5,
        "importPath": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "description": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "peekOfCode": "MOCK_STREAM_PORTFOLIO_MANAGER = [\n    # For the PORTFOLIO MANAGER legion node\n    \"🟢Portfolio Manager: Reviewing daily portfolio performance and making adjustments as necessary.\",\n    \"🔵Portfolio Manager: Conducting asset allocation review based on current market conditions.\",\n    \"🟢Portfolio Manager: Identifying new investment opportunities.\",\n    \"🟢Portfolio Manager: Analyzing recent portfolio risk metrics; re-balancing to maintain target allocations.\",\n    \"🟢Portfolio Manager: Monitoring geopolitical events.\",\n    \"🟢Portfolio Manager: Checking for currency exposure and considering hedge options.\",\n    \"🟡Portfolio Manager: Pausing new investments for assessment.\",\n    \"🟢Portfolio Manager: Reviewing historical performance data to refine investment models.\",",
        "detail": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "documentation": {}
    },
    {
        "label": "MOCK_TRADING_ACTIVITY",
        "kind": 5,
        "importPath": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "description": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "peekOfCode": "MOCK_TRADING_ACTIVITY = [\n    \"🟢LONG order placed for \",\n    \"🔴SHORT order placed for \",\n    \"🔵CLOSE order placed for \",\n    \"🟡HOLD / No action attempted. Active surveillance is ongoing.\",\n]\nMOCK_TRADING_SYMBOL = [\n    \"ETH. \",\n    \"BTC. \",\n    \"SOL. \",",
        "detail": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "documentation": {}
    },
    {
        "label": "MOCK_TRADING_SYMBOL",
        "kind": 5,
        "importPath": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "description": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "peekOfCode": "MOCK_TRADING_SYMBOL = [\n    \"ETH. \",\n    \"BTC. \",\n    \"SOL. \",\n    \"BNB. \",\n    \"XRP. \",\n]\nMOCK_LEVERAGE = [\n    \"Transaction leverage is set for 'X1'.\",\n    \"Transaction leverage is set for 'X2'.\",",
        "detail": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "documentation": {}
    },
    {
        "label": "MOCK_LEVERAGE",
        "kind": 5,
        "importPath": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "description": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "peekOfCode": "MOCK_LEVERAGE = [\n    \"Transaction leverage is set for 'X1'.\",\n    \"Transaction leverage is set for 'X2'.\",\n    \"Transaction leverage is set for 'X3.\",\n    \"Transaction leverage is set for 'X4.\",\n    \"Transaction leverage is set for 'X5.\",\n    \"Transaction leverage is set for 'X6.\",\n    \"Transaction leverage is set for 'X8.\",\n    \"Transaction leverage is set for 'X10.\",\n    \"Transaction leverage is set for 'X20.\",",
        "detail": "apps._meta.voidforger.test_helpers.mock_stream_text",
        "documentation": {}
    },
    {
        "label": "MockLegionNodeStatusNames",
        "kind": 6,
        "importPath": "apps._meta.voidforger.test_helpers.mocker",
        "description": "apps._meta.voidforger.test_helpers.mocker",
        "peekOfCode": "class MockLegionNodeStatusNames:\n    IDLE = \"idle\"\n    PROCESSING = \"processing\"\n    SENDING = \"sending\"\n    RECEIVING = \"receiving\"\n    @staticmethod\n    def as_list():\n        return [\n            MockLegionNodeStatusNames.IDLE,\n            MockLegionNodeStatusNames.PROCESSING,",
        "detail": "apps._meta.voidforger.test_helpers.mocker",
        "documentation": {}
    },
    {
        "label": "MockOperationNodeStatusNames",
        "kind": 6,
        "importPath": "apps._meta.voidforger.test_helpers.mocker",
        "description": "apps._meta.voidforger.test_helpers.mocker",
        "peekOfCode": "class MockOperationNodeStatusNames:\n    ST0 = \"ST0\"\n    STA = \"STA\"\n    STB = \"STB\"\n    STC = \"STC\"\ndef mock_legion_node_status():\n    return r.choice(MockLegionNodeStatusNames.as_list())\ndef mock_legion_nodes(n_nodes=5):\n    legion_node_status_mocks = []\n    for i in range(n_nodes):",
        "detail": "apps._meta.voidforger.test_helpers.mocker",
        "documentation": {}
    },
    {
        "label": "mock_legion_node_status",
        "kind": 2,
        "importPath": "apps._meta.voidforger.test_helpers.mocker",
        "description": "apps._meta.voidforger.test_helpers.mocker",
        "peekOfCode": "def mock_legion_node_status():\n    return r.choice(MockLegionNodeStatusNames.as_list())\ndef mock_legion_nodes(n_nodes=5):\n    legion_node_status_mocks = []\n    for i in range(n_nodes):\n        legion_node_status_mocks.append(mock_legion_node_status())\n    return legion_node_status_mocks\ndef mock_operation_node_status():\n    likelihood_st0 = 0.50\n    likelihood_sta = 0.30",
        "detail": "apps._meta.voidforger.test_helpers.mocker",
        "documentation": {}
    },
    {
        "label": "mock_legion_nodes",
        "kind": 2,
        "importPath": "apps._meta.voidforger.test_helpers.mocker",
        "description": "apps._meta.voidforger.test_helpers.mocker",
        "peekOfCode": "def mock_legion_nodes(n_nodes=5):\n    legion_node_status_mocks = []\n    for i in range(n_nodes):\n        legion_node_status_mocks.append(mock_legion_node_status())\n    return legion_node_status_mocks\ndef mock_operation_node_status():\n    likelihood_st0 = 0.50\n    likelihood_sta = 0.30\n    likelihood_stb = 0.15\n    val_operation_node = r.random()",
        "detail": "apps._meta.voidforger.test_helpers.mocker",
        "documentation": {}
    },
    {
        "label": "mock_operation_node_status",
        "kind": 2,
        "importPath": "apps._meta.voidforger.test_helpers.mocker",
        "description": "apps._meta.voidforger.test_helpers.mocker",
        "peekOfCode": "def mock_operation_node_status():\n    likelihood_st0 = 0.50\n    likelihood_sta = 0.30\n    likelihood_stb = 0.15\n    val_operation_node = r.random()\n    if val_operation_node < likelihood_st0:\n        return MockOperationNodeStatusNames.ST0\n    elif val_operation_node < likelihood_st0 + likelihood_sta:\n        return MockOperationNodeStatusNames.STA\n    elif val_operation_node < likelihood_st0 + likelihood_sta + likelihood_stb:",
        "detail": "apps._meta.voidforger.test_helpers.mocker",
        "documentation": {}
    },
    {
        "label": "mock_operation_nodes",
        "kind": 2,
        "importPath": "apps._meta.voidforger.test_helpers.mocker",
        "description": "apps._meta.voidforger.test_helpers.mocker",
        "peekOfCode": "def mock_operation_nodes(n_nodes=9):\n    operation_node_status_mocks = []\n    for i in range(n_nodes):\n        operation_node_status_mocks.append(mock_operation_node_status())\n    return operation_node_status_mocks\ndef generate_stream_data(picklist):\n    status_text = r.choice(picklist)\n    return status_text\ndef mock_trading():\n    prob_buy = 0.04",
        "detail": "apps._meta.voidforger.test_helpers.mocker",
        "documentation": {}
    },
    {
        "label": "generate_stream_data",
        "kind": 2,
        "importPath": "apps._meta.voidforger.test_helpers.mocker",
        "description": "apps._meta.voidforger.test_helpers.mocker",
        "peekOfCode": "def generate_stream_data(picklist):\n    status_text = r.choice(picklist)\n    return status_text\ndef mock_trading():\n    prob_buy = 0.04\n    prob_sell = 0.04\n    prob_close = 0.08\n    activity_num = r.random()\n    if activity_num < prob_buy:\n        activity_text = MOCK_TRADING_ACTIVITY[0]",
        "detail": "apps._meta.voidforger.test_helpers.mocker",
        "documentation": {}
    },
    {
        "label": "mock_trading",
        "kind": 2,
        "importPath": "apps._meta.voidforger.test_helpers.mocker",
        "description": "apps._meta.voidforger.test_helpers.mocker",
        "peekOfCode": "def mock_trading():\n    prob_buy = 0.04\n    prob_sell = 0.04\n    prob_close = 0.08\n    activity_num = r.random()\n    if activity_num < prob_buy:\n        activity_text = MOCK_TRADING_ACTIVITY[0]\n    elif activity_num < prob_buy + prob_sell:\n        activity_text = MOCK_TRADING_ACTIVITY[1]\n    elif activity_num < prob_buy + prob_sell + prob_close:",
        "detail": "apps._meta.voidforger.test_helpers.mocker",
        "documentation": {}
    },
    {
        "label": "VoidforgerConfig",
        "kind": 6,
        "importPath": "apps._meta.voidforger.apps",
        "description": "apps._meta.voidforger.apps",
        "peekOfCode": "class VoidforgerConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps._meta.voidforger'",
        "detail": "apps._meta.voidforger.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps._meta.voidforger.urls",
        "description": "apps._meta.voidforger.urls",
        "peekOfCode": "app_name = 'voidforger'\nurlpatterns = []",
        "detail": "apps._meta.voidforger.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps._meta.voidforger.urls",
        "description": "apps._meta.voidforger.urls",
        "peekOfCode": "urlpatterns = []",
        "detail": "apps._meta.voidforger.urls",
        "documentation": {}
    },
    {
        "label": "VoidForgerDashboardView",
        "kind": 6,
        "importPath": "apps._meta.voidforger.views",
        "description": "apps._meta.voidforger.views",
        "peekOfCode": "class VoidForgerDashboardView(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context.update(\n            {\"layout_path\": TemplateHelper.set_layout(\"layout_blank.html\", context)})\n        return context",
        "detail": "apps._meta.voidforger.views",
        "documentation": {}
    },
    {
        "label": "AssistantAdmin",
        "kind": 6,
        "importPath": "apps.assistants.admin.assistant_admin",
        "description": "apps.assistants.admin.assistant_admin",
        "peekOfCode": "class AssistantAdmin(admin.ModelAdmin):\n    list_display = AGENT_ADMIN_DISPLAY_FIELDS\n    list_filter = AGENT_ADMIN_FILTER_FIELDS\n    search_fields = AGENT_ADMIN_SEARCH_FIELDS\n    date_hierarchy = \"created_at\"\n    ordering = [\"-created_at\"]",
        "detail": "apps.assistants.admin.assistant_admin",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.assistants.migrations.0001_initial",
        "description": "apps.assistants.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Assistant',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "apps.assistants.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.assistants.migrations.0002_initial",
        "description": "apps.assistants.migrations.0002_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('assistants', '0001_initial'),\n        ('data_security', '0001_initial'),\n        ('llm_core', '0001_initial'),\n        ('memories', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(",
        "detail": "apps.assistants.migrations.0002_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.assistants.migrations.0003_initial",
        "description": "apps.assistants.migrations.0003_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('assistants', '0002_initial'),\n        ('organization', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='assistant',\n            name='organization',",
        "detail": "apps.assistants.migrations.0003_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.assistants.migrations.0004_assistant_multi_step_reasoning_capability_choice",
        "description": "apps.assistants.migrations.0004_assistant_multi_step_reasoning_capability_choice",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('assistants', '0003_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='assistant',\n            name='multi_step_reasoning_capability_choice',\n            field=models.CharField(choices=[('none', 'None'), ('cost-effective', 'Cost Effective'), ('high-performance', 'High Performance')], default='none', max_length=100),\n        ),",
        "detail": "apps.assistants.migrations.0004_assistant_multi_step_reasoning_capability_choice",
        "documentation": {}
    },
    {
        "label": "Assistant",
        "kind": 6,
        "importPath": "apps.assistants.models.assistant_models",
        "description": "apps.assistants.models.assistant_models",
        "peekOfCode": "class Assistant(models.Model):\n    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE, related_name='assistants')\n    llm_model = models.ForeignKey('llm_core.LLMCore', on_delete=models.CASCADE, related_name='assistants')\n    name = models.CharField(max_length=255)\n    description = models.TextField(default=\"\", blank=True)\n    instructions = models.TextField(default=\"\", blank=True)\n    response_template = models.TextField(default=\"\", blank=True)\n    audience = models.CharField(max_length=1000)\n    tone = models.CharField(max_length=1000)\n    response_language = models.CharField(max_length=10, choices=AGENT_SPEECH_LANGUAGES, default=\"auto\")",
        "detail": "apps.assistants.models.assistant_models",
        "documentation": {}
    },
    {
        "label": "fixture_test_assistants",
        "kind": 2,
        "importPath": "apps.assistants.tests.conftest",
        "description": "apps.assistants.tests.conftest",
        "peekOfCode": "def fixture_test_assistants():\n    return True",
        "detail": "apps.assistants.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_assistant_test_forms",
        "kind": 2,
        "importPath": "apps.assistants.tests.test_forms",
        "description": "apps.assistants.tests.test_forms",
        "peekOfCode": "def test_init_assistant_test_forms():\n    assert True",
        "detail": "apps.assistants.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_assistant_test_models",
        "kind": 2,
        "importPath": "apps.assistants.tests.test_models",
        "description": "apps.assistants.tests.test_models",
        "peekOfCode": "def test_init_assistant_test_models():\n    assert True",
        "detail": "apps.assistants.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_assistant_test_utils",
        "kind": 2,
        "importPath": "apps.assistants.tests.test_utils",
        "description": "apps.assistants.tests.test_utils",
        "peekOfCode": "def test_init_assistant_test_utils():\n    assert True",
        "detail": "apps.assistants.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_assistant_test_views",
        "kind": 2,
        "importPath": "apps.assistants.tests.test_views",
        "description": "apps.assistants.tests.test_views",
        "peekOfCode": "def test_init_assistant_test_views():\n    assert True",
        "detail": "apps.assistants.tests.test_views",
        "documentation": {}
    },
    {
        "label": "ContextManagementStrategyNames",
        "kind": 6,
        "importPath": "apps.assistants.utils.constant_utils",
        "description": "apps.assistants.utils.constant_utils",
        "peekOfCode": "class ContextManagementStrategyNames:\n    STOP = \"stop\"\n    FORGET = \"forget\"\n    VECTORIZE = \"vectorize\"\n    @staticmethod\n    def as_dict():\n        return {\"stop\": \"Stop Conversation\",\n                \"forget\": \"Forget Oldest Messages\",\n                \"vectorize\": \"Vectorize Oldest Messages\"}\nEMBEDDING_MANAGERS = [",
        "detail": "apps.assistants.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "EmbeddingManagersNames",
        "kind": 6,
        "importPath": "apps.assistants.utils.constant_utils",
        "description": "apps.assistants.utils.constant_utils",
        "peekOfCode": "class EmbeddingManagersNames:\n    TEXT2VEC_OPENAI = \"text2vec-openai\"\n    @staticmethod\n    def as_dict():\n        return {\"text2vec-openai\": \"Text2Vec (OpenAI)\"}\nMULTI_STEP_REASONING_CAPABILITY_CHOICE = [\n    ('none', 'None'),\n    ('cost-effective', 'Cost Effective'),\n    ('high-performance', 'High Performance'),\n]",
        "detail": "apps.assistants.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MultiStepReasoningCapabilityChoicesNames",
        "kind": 6,
        "importPath": "apps.assistants.utils.constant_utils",
        "description": "apps.assistants.utils.constant_utils",
        "peekOfCode": "class MultiStepReasoningCapabilityChoicesNames:\n    NONE = \"none\"\n    COST_EFFECTIVE = \"cost-effective\"\n    HIGH_PERFORMANCE = \"high-performance\"\n    @staticmethod\n    def as_dict():\n        return {\"none\": \"None\", \"cost-effective\": \"Cost Effective\", \"high-performance\": \"High Performance\"}\nclass MultiStepReasoningCapabilityModelNames:\n    O1_PREVIEW = \"o1-preview\"\n    O1_MINI = \"o1-mini\"",
        "detail": "apps.assistants.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MultiStepReasoningCapabilityModelNames",
        "kind": 6,
        "importPath": "apps.assistants.utils.constant_utils",
        "description": "apps.assistants.utils.constant_utils",
        "peekOfCode": "class MultiStepReasoningCapabilityModelNames:\n    O1_PREVIEW = \"o1-preview\"\n    O1_MINI = \"o1-mini\"\nAGENT_ADMIN_DISPLAY_FIELDS = (\n    \"organization\",\n    \"response_language\",\n    \"llm_model\", \"name\",\n    \"instructions\",\n    \"audience\",\n    \"tone\",",
        "detail": "apps.assistants.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "AGENT_SPEECH_LANGUAGES",
        "kind": 5,
        "importPath": "apps.assistants.utils.constant_utils",
        "description": "apps.assistants.utils.constant_utils",
        "peekOfCode": "AGENT_SPEECH_LANGUAGES = [\n    (\"auto\", \"Auto (Detect)\"),\n    (\"en\", \"English\"), (\"es\", \"Spanish\"), (\"fr\", \"French\"), (\"de\", \"German\"), (\"it\", \"Italian\"),\n    (\"pt\", \"Portuguese\"), (\"nl\", \"Dutch\"), (\"ru\", \"Russian\"), (\"ja\", \"Japanese\"), (\"ko\", \"Korean\"),\n    (\"zh\", \"Chinese\"), (\"ar\", \"Arabic\"), (\"tr\", \"Turkish\"), (\"pl\", \"Polish\"), (\"sv\", \"Swedish\"),\n    (\"da\", \"Danish\"), (\"fi\", \"Finnish\"), (\"no\", \"Norwegian\"), (\"he\", \"Hebrew\"), (\"id\", \"Indonesian\"),\n    (\"ms\", \"Malay\"), (\"th\", \"Thai\"), (\"hi\", \"Hindi\"), (\"hu\", \"Hungarian\"), (\"cs\", \"Czech\"),\n    (\"sk\", \"Slovak\"), (\"uk\", \"Ukrainian\"), (\"ro\", \"Romanian\"), (\"bg\", \"Bulgarian\"), (\"el\", \"Greek\"),\n    (\"fi\", \"Finnish\"), (\"et\", \"Estonian\"), (\"lv\", \"Latvian\"), (\"lt\", \"Lithuanian\"), (\"hr\", \"Croatian\"),\n    (\"sr\", \"Serbian\"), (\"sl\", \"Slovenian\"), (\"mk\", \"Macedonian\"), (\"sq\", \"Albanian\"), (\"bs\", \"Bosnian\"),",
        "detail": "apps.assistants.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "AGENT_SPEECH_LANGUAGES",
        "kind": 5,
        "importPath": "apps.assistants.utils.constant_utils",
        "description": "apps.assistants.utils.constant_utils",
        "peekOfCode": "AGENT_SPEECH_LANGUAGES = [AGENT_SPEECH_LANGUAGES[0]] + sorted(AGENT_SPEECH_LANGUAGES[1:],\n                                                              key=lambda x: x[1])\nCONTEXT_MANAGEMENT_STRATEGY = [\n    (\"stop\", \"Stop Conversation\"),\n    (\"forget\", \"Forget Oldest Messages\"),\n    (\"vectorize\", \"Vectorize Oldest Messages\"),\n]\nclass ContextManagementStrategyNames:\n    STOP = \"stop\"\n    FORGET = \"forget\"",
        "detail": "apps.assistants.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CONTEXT_MANAGEMENT_STRATEGY",
        "kind": 5,
        "importPath": "apps.assistants.utils.constant_utils",
        "description": "apps.assistants.utils.constant_utils",
        "peekOfCode": "CONTEXT_MANAGEMENT_STRATEGY = [\n    (\"stop\", \"Stop Conversation\"),\n    (\"forget\", \"Forget Oldest Messages\"),\n    (\"vectorize\", \"Vectorize Oldest Messages\"),\n]\nclass ContextManagementStrategyNames:\n    STOP = \"stop\"\n    FORGET = \"forget\"\n    VECTORIZE = \"vectorize\"\n    @staticmethod",
        "detail": "apps.assistants.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "EMBEDDING_MANAGERS",
        "kind": 5,
        "importPath": "apps.assistants.utils.constant_utils",
        "description": "apps.assistants.utils.constant_utils",
        "peekOfCode": "EMBEDDING_MANAGERS = [\n    (\"text2vec-openai\", \"Text2Vec (OpenAI)\"),\n]\nclass EmbeddingManagersNames:\n    TEXT2VEC_OPENAI = \"text2vec-openai\"\n    @staticmethod\n    def as_dict():\n        return {\"text2vec-openai\": \"Text2Vec (OpenAI)\"}\nMULTI_STEP_REASONING_CAPABILITY_CHOICE = [\n    ('none', 'None'),",
        "detail": "apps.assistants.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MULTI_STEP_REASONING_CAPABILITY_CHOICE",
        "kind": 5,
        "importPath": "apps.assistants.utils.constant_utils",
        "description": "apps.assistants.utils.constant_utils",
        "peekOfCode": "MULTI_STEP_REASONING_CAPABILITY_CHOICE = [\n    ('none', 'None'),\n    ('cost-effective', 'Cost Effective'),\n    ('high-performance', 'High Performance'),\n]\nclass MultiStepReasoningCapabilityChoicesNames:\n    NONE = \"none\"\n    COST_EFFECTIVE = \"cost-effective\"\n    HIGH_PERFORMANCE = \"high-performance\"\n    @staticmethod",
        "detail": "apps.assistants.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "AGENT_ADMIN_DISPLAY_FIELDS",
        "kind": 5,
        "importPath": "apps.assistants.utils.constant_utils",
        "description": "apps.assistants.utils.constant_utils",
        "peekOfCode": "AGENT_ADMIN_DISPLAY_FIELDS = (\n    \"organization\",\n    \"response_language\",\n    \"llm_model\", \"name\",\n    \"instructions\",\n    \"audience\",\n    \"tone\",\n    \"time_awareness\",\n    \"place_awareness\",\n    \"tool_max_attempts_per_instance\",",
        "detail": "apps.assistants.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "AGENT_ADMIN_FILTER_FIELDS",
        "kind": 5,
        "importPath": "apps.assistants.utils.constant_utils",
        "description": "apps.assistants.utils.constant_utils",
        "peekOfCode": "AGENT_ADMIN_FILTER_FIELDS = (\n    \"organization\",\n    \"response_language\",\n    \"llm_model\",\n    \"name\",\n    \"instructions\",\n    \"audience\",\n    \"tone\",\n    \"document_base_directory\",\n    \"time_awareness\",",
        "detail": "apps.assistants.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "AGENT_ADMIN_SEARCH_FIELDS",
        "kind": 5,
        "importPath": "apps.assistants.utils.constant_utils",
        "description": "apps.assistants.utils.constant_utils",
        "peekOfCode": "AGENT_ADMIN_SEARCH_FIELDS = (\n    \"organization\",\n    \"response_language\",\n    \"llm_model\",\n    \"name\",\n    \"instructions\",\n    \"audience\",\n    \"tone\",\n    \"document_base_directory\",\n    \"time_awareness\",",
        "detail": "apps.assistants.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "RANDOM_SUFFIX_MINIMUM_VALUE",
        "kind": 5,
        "importPath": "apps.assistants.utils.constant_utils",
        "description": "apps.assistants.utils.constant_utils",
        "peekOfCode": "RANDOM_SUFFIX_MINIMUM_VALUE = 1_000_000_000\nRANDOM_SUFFIX_MAXIMUM_VALUE = 9_999_999_999",
        "detail": "apps.assistants.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "RANDOM_SUFFIX_MAXIMUM_VALUE",
        "kind": 5,
        "importPath": "apps.assistants.utils.constant_utils",
        "description": "apps.assistants.utils.constant_utils",
        "peekOfCode": "RANDOM_SUFFIX_MAXIMUM_VALUE = 9_999_999_999",
        "detail": "apps.assistants.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "generate_random_string",
        "kind": 2,
        "importPath": "apps.assistants.utils.function_utils",
        "description": "apps.assistants.utils.function_utils",
        "peekOfCode": "def generate_random_string(length=16):\n    return ''.join(random.choice(string.ascii_letters + string.digits) for _ in range(length))\ndef generate_random_name_suffix():\n    return f\"{str(random.randint(RANDOM_SUFFIX_MINIMUM_VALUE, RANDOM_SUFFIX_MAXIMUM_VALUE))}\"",
        "detail": "apps.assistants.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "generate_random_name_suffix",
        "kind": 2,
        "importPath": "apps.assistants.utils.function_utils",
        "description": "apps.assistants.utils.function_utils",
        "peekOfCode": "def generate_random_name_suffix():\n    return f\"{str(random.randint(RANDOM_SUFFIX_MINIMUM_VALUE, RANDOM_SUFFIX_MAXIMUM_VALUE))}\"",
        "detail": "apps.assistants.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "AssistantView_Create",
        "kind": 6,
        "importPath": "apps.assistants.views.create_assistant_views",
        "description": "apps.assistants.views.create_assistant_views",
        "peekOfCode": "class AssistantView_Create(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['organizations'] = Organization.objects.filter(users__in=[self.request.user])\n        context['llm_models'] = LLMCore.objects.filter(organization__in=context['organizations'])\n        context['response_languages'] = AGENT_SPEECH_LANGUAGES\n        context['context_overflow_strategies'] = CONTEXT_MANAGEMENT_STRATEGY\n        context['reasoning_capability_choices'] = MULTI_STEP_REASONING_CAPABILITY_CHOICE\n        context['vectorizers'] = EMBEDDING_MANAGERS\n        context[\"ner_integrations\"] = NERIntegration.objects.filter(",
        "detail": "apps.assistants.views.create_assistant_views",
        "documentation": {}
    },
    {
        "label": "AssistantView_Delete",
        "kind": 6,
        "importPath": "apps.assistants.views.delete_assistant_views",
        "description": "apps.assistants.views.delete_assistant_views",
        "peekOfCode": "class AssistantView_Delete(LoginRequiredMixin, DeleteView):\n    model = Assistant\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        agent = self.get_object()\n        context['assistant'] = agent\n        return context\n    def post(self, request, *args, **kwargs):\n        context_user = self.request.user\n        ##############################",
        "detail": "apps.assistants.views.delete_assistant_views",
        "documentation": {}
    },
    {
        "label": "AssistantView_List",
        "kind": 6,
        "importPath": "apps.assistants.views.list_assistants_views",
        "description": "apps.assistants.views.list_assistants_views",
        "peekOfCode": "class AssistantView_List(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        user = self.request.user\n        ##############################\n        # PERMISSION CHECK FOR - LIST_ASSISTANTS\n        if not UserPermissionManager.is_authorized(user=user, operation=PermissionNames.LIST_ASSISTANTS):\n            messages.error(self.request, \"You do not have permission to list agents.\")\n            return context\n        ##############################",
        "detail": "apps.assistants.views.list_assistants_views",
        "documentation": {}
    },
    {
        "label": "AssistantView_Update",
        "kind": 6,
        "importPath": "apps.assistants.views.update_assistant_views",
        "description": "apps.assistants.views.update_assistant_views",
        "peekOfCode": "class AssistantView_Update(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        agent_id = self.kwargs.get('pk')\n        agent = get_object_or_404(Assistant, id=agent_id)\n        context['organizations'] = Organization.objects.filter(users__in=[self.request.user])\n        context['llm_models'] = LLMCore.objects.filter(organization__in=context['organizations'])\n        context['assistant'] = agent\n        context['response_languages'] = AGENT_SPEECH_LANGUAGES\n        context['context_overflow_strategies'] = CONTEXT_MANAGEMENT_STRATEGY",
        "detail": "apps.assistants.views.update_assistant_views",
        "documentation": {}
    },
    {
        "label": "AssistantsConfig",
        "kind": 6,
        "importPath": "apps.assistants.apps",
        "description": "apps.assistants.apps",
        "peekOfCode": "class AssistantsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.assistants'",
        "detail": "apps.assistants.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.assistants.urls",
        "description": "apps.assistants.urls",
        "peekOfCode": "app_name = \"assistants\"\nurlpatterns = [\n    path(\"create/\", AssistantView_Create.as_view(template_name=\"assistants/create_assistant.html\"), name=\"create\"),\n    path(\"list/\", AssistantView_List.as_view(template_name=\"assistants/list_assistants.html\"), name=\"list\"),\n    path(\"update/<int:pk>/\", AssistantView_Update.as_view(template_name=\"assistants/update_assistant.html\"),\n         name=\"update\"),\n    path(\"delete/<int:pk>/\", AssistantView_Delete.as_view(template_name=\"assistants/confirm_delete_assistant.html\"),\n         name=\"delete\"),\n]",
        "detail": "apps.assistants.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.assistants.urls",
        "description": "apps.assistants.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"create/\", AssistantView_Create.as_view(template_name=\"assistants/create_assistant.html\"), name=\"create\"),\n    path(\"list/\", AssistantView_List.as_view(template_name=\"assistants/list_assistants.html\"), name=\"list\"),\n    path(\"update/<int:pk>/\", AssistantView_Update.as_view(template_name=\"assistants/update_assistant.html\"),\n         name=\"update\"),\n    path(\"delete/<int:pk>/\", AssistantView_Delete.as_view(template_name=\"assistants/confirm_delete_assistant.html\"),\n         name=\"delete\"),\n]",
        "detail": "apps.assistants.urls",
        "documentation": {}
    },
    {
        "label": "AuditLogAdmin",
        "kind": 6,
        "importPath": "apps.audit_logs.admin.audit_log_admin",
        "description": "apps.audit_logs.admin.audit_log_admin",
        "peekOfCode": "class AuditLogAdmin(admin.ModelAdmin):\n    list_display = AUDIT_LOG_ADMIN_LIST\n    search_fields = AUDIT_LOG_ADMIN_SEARCH\n    list_filter = AUDIT_LOG_ADMIN_FILTER\n    ordering = ('-timestamp',)",
        "detail": "apps.audit_logs.admin.audit_log_admin",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.audit_logs.migrations.0001_initial",
        "description": "apps.audit_logs.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='AuditLog',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "apps.audit_logs.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "AuditLog",
        "kind": 6,
        "importPath": "apps.audit_logs.models.audit_log_models",
        "description": "apps.audit_logs.models.audit_log_models",
        "peekOfCode": "class AuditLog(models.Model):\n    action = models.CharField(max_length=6, choices=AUDIT_LOG_ACTION_CHOICES)\n    model_name = models.CharField(max_length=10000)\n    object_id = models.PositiveIntegerField()\n    timestamp = models.DateTimeField(default=timezone.now)\n    user = models.ForeignKey(get_user_model(), null=True, blank=True, on_delete=models.SET_NULL)\n    changes = models.JSONField(null=True, blank=True)\n    class Meta:\n        verbose_name = \"Audit Log\"\n        verbose_name_plural = \"Audit Logs\"",
        "detail": "apps.audit_logs.models.audit_log_models",
        "documentation": {}
    },
    {
        "label": "fixture_test_audit_logs",
        "kind": 2,
        "importPath": "apps.audit_logs.tests.conftest",
        "description": "apps.audit_logs.tests.conftest",
        "peekOfCode": "def fixture_test_audit_logs():\n    return True",
        "detail": "apps.audit_logs.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_audit_logs_test_forms",
        "kind": 2,
        "importPath": "apps.audit_logs.tests.test_forms",
        "description": "apps.audit_logs.tests.test_forms",
        "peekOfCode": "def test_init_audit_logs_test_forms():\n    assert True",
        "detail": "apps.audit_logs.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_audit_logs_test_models",
        "kind": 2,
        "importPath": "apps.audit_logs.tests.test_models",
        "description": "apps.audit_logs.tests.test_models",
        "peekOfCode": "def test_init_audit_logs_test_models():\n    assert True",
        "detail": "apps.audit_logs.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_audit_logs_test_utils",
        "kind": 2,
        "importPath": "apps.audit_logs.tests.test_utils",
        "description": "apps.audit_logs.tests.test_utils",
        "peekOfCode": "def test_init_audit_logs_test_utils():\n    assert True",
        "detail": "apps.audit_logs.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_audit_logs_test_views",
        "kind": 2,
        "importPath": "apps.audit_logs.tests.test_views",
        "description": "apps.audit_logs.tests.test_views",
        "peekOfCode": "def test_init_audit_logs_test_views():\n    assert True",
        "detail": "apps.audit_logs.tests.test_views",
        "documentation": {}
    },
    {
        "label": "AUDIT_LOG_ACTION_CHOICES",
        "kind": 5,
        "importPath": "apps.audit_logs.utils.constant_utils",
        "description": "apps.audit_logs.utils.constant_utils",
        "peekOfCode": "AUDIT_LOG_ACTION_CHOICES = [\n    ('create', 'Create'),\n    ('update', 'Update'),\n    ('delete', 'Delete'),\n]\nAUDIT_LOG_ADMIN_LIST = [\n    \"action\",\n    'model_name',\n    'object_id',\n    'timestamp',",
        "detail": "apps.audit_logs.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "AUDIT_LOG_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.audit_logs.utils.constant_utils",
        "description": "apps.audit_logs.utils.constant_utils",
        "peekOfCode": "AUDIT_LOG_ADMIN_LIST = [\n    \"action\",\n    'model_name',\n    'object_id',\n    'timestamp',\n    'user',\n]\nAUDIT_LOG_ADMIN_SEARCH = [\n    \"action\",\n    'model_name',",
        "detail": "apps.audit_logs.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "AUDIT_LOG_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.audit_logs.utils.constant_utils",
        "description": "apps.audit_logs.utils.constant_utils",
        "peekOfCode": "AUDIT_LOG_ADMIN_SEARCH = [\n    \"action\",\n    'model_name',\n    'object_id',\n    'timestamp',\n    'user',\n]\nAUDIT_LOG_ADMIN_FILTER = [\n    \"action\",\n    'model_name',",
        "detail": "apps.audit_logs.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "AUDIT_LOG_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.audit_logs.utils.constant_utils",
        "description": "apps.audit_logs.utils.constant_utils",
        "peekOfCode": "AUDIT_LOG_ADMIN_FILTER = [\n    \"action\",\n    'model_name',\n    'object_id',\n    'timestamp',\n    'user',\n]",
        "detail": "apps.audit_logs.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "AuditLogsConfig",
        "kind": 6,
        "importPath": "apps.audit_logs.apps",
        "description": "apps.audit_logs.apps",
        "peekOfCode": "class AuditLogsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.audit_logs'",
        "detail": "apps.audit_logs.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.audit_logs.urls",
        "description": "apps.audit_logs.urls",
        "peekOfCode": "app_name = 'audit_logs'\nurlpatterns = []",
        "detail": "apps.audit_logs.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.audit_logs.urls",
        "description": "apps.audit_logs.urls",
        "peekOfCode": "urlpatterns = []",
        "detail": "apps.audit_logs.urls",
        "documentation": {}
    },
    {
        "label": "BlogPostAdmin",
        "kind": 6,
        "importPath": "apps.blog_app.admin.blog_post_admin",
        "description": "apps.blog_app.admin.blog_post_admin",
        "peekOfCode": "class BlogPostAdmin(admin.ModelAdmin):\n    list_display = BLOG_POST_ADMIN_LIST\n    list_filter = BLOG_POST_ADMIN_FILTER\n    search_fields = BLOG_POST_ADMIN_SEARCH\n    ordering = ['-created_at']",
        "detail": "apps.blog_app.admin.blog_post_admin",
        "documentation": {}
    },
    {
        "label": "BlogSEOMetaAdmin",
        "kind": 6,
        "importPath": "apps.blog_app.admin.blog_seo_meta_admin",
        "description": "apps.blog_app.admin.blog_seo_meta_admin",
        "peekOfCode": "class BlogSEOMetaAdmin(admin.ModelAdmin):\n    list_display = BLOG_SEO_ADMIN_LIST\n    list_filter = BLOG_SEO_ADMIN_FILTER\n    search_fields = BLOG_SEO_ADMIN_SEARCH\n    ordering = ['post']",
        "detail": "apps.blog_app.admin.blog_seo_meta_admin",
        "documentation": {}
    },
    {
        "label": "BlogTagAdmin",
        "kind": 6,
        "importPath": "apps.blog_app.admin.blog_tag_admin",
        "description": "apps.blog_app.admin.blog_tag_admin",
        "peekOfCode": "class BlogTagAdmin(admin.ModelAdmin):\n    list_display = BLOG_TAG_ADMIN_LIST\n    list_filter = BLOG_TAG_ADMIN_FILTER\n    search_fields = BLOG_TAG_ADMIN_SEARCH\n    ordering = ['name']",
        "detail": "apps.blog_app.admin.blog_tag_admin",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.blog_app.migrations.0001_initial",
        "description": "apps.blog_app.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='BlogPost',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "apps.blog_app.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "BlogPost",
        "kind": 6,
        "importPath": "apps.blog_app.models.blog_post_models",
        "description": "apps.blog_app.models.blog_post_models",
        "peekOfCode": "class BlogPost(models.Model):\n    title = models.CharField(max_length=255)\n    slug = models.SlugField(max_length=255, unique=True, blank=True)\n    author = models.ForeignKey('auth.User', on_delete=models.CASCADE, null=True, blank=True)\n    content = models.TextField()\n    thumbnail_image = models.ImageField(upload_to='blog_post_images/%Y/%m/%d/', blank=True, null=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    published_at = models.DateTimeField(default=timezone.now)\n    status = models.CharField(max_length=10, choices=STATUS_CHOICES, default='draft')",
        "detail": "apps.blog_app.models.blog_post_models",
        "documentation": {}
    },
    {
        "label": "BlogSEOMeta",
        "kind": 6,
        "importPath": "apps.blog_app.models.blog_seo_meta_models",
        "description": "apps.blog_app.models.blog_seo_meta_models",
        "peekOfCode": "class BlogSEOMeta(models.Model):\n    post = models.OneToOneField(\"BlogPost\", on_delete=models.CASCADE, related_name='seo_meta')\n    meta_title = models.CharField(max_length=300, blank=True)\n    meta_description = models.CharField(max_length=1000, blank=True)\n    meta_keywords = models.CharField(max_length=300, blank=True)\n    def __str__(self):\n        return f'SEO Meta for {self.post.title}'\n    class Meta:\n        verbose_name = 'Blog SEO Meta'\n        verbose_name_plural = 'Blog SEO Meta'",
        "detail": "apps.blog_app.models.blog_seo_meta_models",
        "documentation": {}
    },
    {
        "label": "BlogTag",
        "kind": 6,
        "importPath": "apps.blog_app.models.blog_tag_models",
        "description": "apps.blog_app.models.blog_tag_models",
        "peekOfCode": "class BlogTag(models.Model):\n    blog_posts = models.ManyToManyField('BlogPost', related_name='tags', blank=True)\n    name = models.CharField(max_length=255)\n    slug = models.SlugField(max_length=255, unique=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    def save(self, *args, **kwargs):\n        if not self.slug:\n            self.slug = slugify(self.name)\n        super().save(*args, **kwargs)",
        "detail": "apps.blog_app.models.blog_tag_models",
        "documentation": {}
    },
    {
        "label": "fixture_blog_app_init",
        "kind": 2,
        "importPath": "apps.blog_app.tests.conftest",
        "description": "apps.blog_app.tests.conftest",
        "peekOfCode": "def fixture_blog_app_init():\n    return True",
        "detail": "apps.blog_app.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_blog_app_test_forms",
        "kind": 2,
        "importPath": "apps.blog_app.tests.test_forms",
        "description": "apps.blog_app.tests.test_forms",
        "peekOfCode": "def test_init_blog_app_test_forms():\n    assert True",
        "detail": "apps.blog_app.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_blog_app_test_models",
        "kind": 2,
        "importPath": "apps.blog_app.tests.test_models",
        "description": "apps.blog_app.tests.test_models",
        "peekOfCode": "def test_init_blog_app_test_models():\n    assert True",
        "detail": "apps.blog_app.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_blog_app_test_utils",
        "kind": 2,
        "importPath": "apps.blog_app.tests.test_utils",
        "description": "apps.blog_app.tests.test_utils",
        "peekOfCode": "def test_init_blog_app_test_utils():\n    assert True",
        "detail": "apps.blog_app.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_blog_app_test_views",
        "kind": 2,
        "importPath": "apps.blog_app.tests.test_views",
        "description": "apps.blog_app.tests.test_views",
        "peekOfCode": "def test_init_blog_app_test_views():\n    assert True",
        "detail": "apps.blog_app.tests.test_views",
        "documentation": {}
    },
    {
        "label": "STATUS_CHOICES",
        "kind": 5,
        "importPath": "apps.blog_app.utils.constant_utils",
        "description": "apps.blog_app.utils.constant_utils",
        "peekOfCode": "STATUS_CHOICES = (\n    ('draft', 'Draft'),\n    ('published', 'Published'),\n)\nBLOG_POST_ADMIN_LIST = ['title', 'status', 'published_at', 'created_at', 'updated_at']\nBLOG_POST_ADMIN_FILTER = ['status', 'published_at', 'created_at', 'updated_at']\nBLOG_POST_ADMIN_SEARCH = ['title', 'content']\nBLOG_SEO_ADMIN_LIST = ['post', 'meta_title', 'meta_description', 'meta_keywords']\nBLOG_SEO_ADMIN_FILTER = ['meta_title', 'meta_description', 'meta_keywords']\nBLOG_SEO_ADMIN_SEARCH = ['post']",
        "detail": "apps.blog_app.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BLOG_POST_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.blog_app.utils.constant_utils",
        "description": "apps.blog_app.utils.constant_utils",
        "peekOfCode": "BLOG_POST_ADMIN_LIST = ['title', 'status', 'published_at', 'created_at', 'updated_at']\nBLOG_POST_ADMIN_FILTER = ['status', 'published_at', 'created_at', 'updated_at']\nBLOG_POST_ADMIN_SEARCH = ['title', 'content']\nBLOG_SEO_ADMIN_LIST = ['post', 'meta_title', 'meta_description', 'meta_keywords']\nBLOG_SEO_ADMIN_FILTER = ['meta_title', 'meta_description', 'meta_keywords']\nBLOG_SEO_ADMIN_SEARCH = ['post']\nBLOG_TAG_ADMIN_LIST = ['name', 'slug', 'created_at', 'updated_at']\nBLOG_TAG_ADMIN_FILTER = ['created_at', 'updated_at']\nBLOG_TAG_ADMIN_SEARCH = ['name']",
        "detail": "apps.blog_app.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BLOG_POST_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.blog_app.utils.constant_utils",
        "description": "apps.blog_app.utils.constant_utils",
        "peekOfCode": "BLOG_POST_ADMIN_FILTER = ['status', 'published_at', 'created_at', 'updated_at']\nBLOG_POST_ADMIN_SEARCH = ['title', 'content']\nBLOG_SEO_ADMIN_LIST = ['post', 'meta_title', 'meta_description', 'meta_keywords']\nBLOG_SEO_ADMIN_FILTER = ['meta_title', 'meta_description', 'meta_keywords']\nBLOG_SEO_ADMIN_SEARCH = ['post']\nBLOG_TAG_ADMIN_LIST = ['name', 'slug', 'created_at', 'updated_at']\nBLOG_TAG_ADMIN_FILTER = ['created_at', 'updated_at']\nBLOG_TAG_ADMIN_SEARCH = ['name']",
        "detail": "apps.blog_app.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BLOG_POST_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.blog_app.utils.constant_utils",
        "description": "apps.blog_app.utils.constant_utils",
        "peekOfCode": "BLOG_POST_ADMIN_SEARCH = ['title', 'content']\nBLOG_SEO_ADMIN_LIST = ['post', 'meta_title', 'meta_description', 'meta_keywords']\nBLOG_SEO_ADMIN_FILTER = ['meta_title', 'meta_description', 'meta_keywords']\nBLOG_SEO_ADMIN_SEARCH = ['post']\nBLOG_TAG_ADMIN_LIST = ['name', 'slug', 'created_at', 'updated_at']\nBLOG_TAG_ADMIN_FILTER = ['created_at', 'updated_at']\nBLOG_TAG_ADMIN_SEARCH = ['name']",
        "detail": "apps.blog_app.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BLOG_SEO_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.blog_app.utils.constant_utils",
        "description": "apps.blog_app.utils.constant_utils",
        "peekOfCode": "BLOG_SEO_ADMIN_LIST = ['post', 'meta_title', 'meta_description', 'meta_keywords']\nBLOG_SEO_ADMIN_FILTER = ['meta_title', 'meta_description', 'meta_keywords']\nBLOG_SEO_ADMIN_SEARCH = ['post']\nBLOG_TAG_ADMIN_LIST = ['name', 'slug', 'created_at', 'updated_at']\nBLOG_TAG_ADMIN_FILTER = ['created_at', 'updated_at']\nBLOG_TAG_ADMIN_SEARCH = ['name']",
        "detail": "apps.blog_app.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BLOG_SEO_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.blog_app.utils.constant_utils",
        "description": "apps.blog_app.utils.constant_utils",
        "peekOfCode": "BLOG_SEO_ADMIN_FILTER = ['meta_title', 'meta_description', 'meta_keywords']\nBLOG_SEO_ADMIN_SEARCH = ['post']\nBLOG_TAG_ADMIN_LIST = ['name', 'slug', 'created_at', 'updated_at']\nBLOG_TAG_ADMIN_FILTER = ['created_at', 'updated_at']\nBLOG_TAG_ADMIN_SEARCH = ['name']",
        "detail": "apps.blog_app.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BLOG_SEO_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.blog_app.utils.constant_utils",
        "description": "apps.blog_app.utils.constant_utils",
        "peekOfCode": "BLOG_SEO_ADMIN_SEARCH = ['post']\nBLOG_TAG_ADMIN_LIST = ['name', 'slug', 'created_at', 'updated_at']\nBLOG_TAG_ADMIN_FILTER = ['created_at', 'updated_at']\nBLOG_TAG_ADMIN_SEARCH = ['name']",
        "detail": "apps.blog_app.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BLOG_TAG_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.blog_app.utils.constant_utils",
        "description": "apps.blog_app.utils.constant_utils",
        "peekOfCode": "BLOG_TAG_ADMIN_LIST = ['name', 'slug', 'created_at', 'updated_at']\nBLOG_TAG_ADMIN_FILTER = ['created_at', 'updated_at']\nBLOG_TAG_ADMIN_SEARCH = ['name']",
        "detail": "apps.blog_app.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BLOG_TAG_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.blog_app.utils.constant_utils",
        "description": "apps.blog_app.utils.constant_utils",
        "peekOfCode": "BLOG_TAG_ADMIN_FILTER = ['created_at', 'updated_at']\nBLOG_TAG_ADMIN_SEARCH = ['name']",
        "detail": "apps.blog_app.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BLOG_TAG_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.blog_app.utils.constant_utils",
        "description": "apps.blog_app.utils.constant_utils",
        "peekOfCode": "BLOG_TAG_ADMIN_SEARCH = ['name']",
        "detail": "apps.blog_app.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BlogPostView_Detail",
        "kind": 6,
        "importPath": "apps.blog_app.views.detail_blog_post_view",
        "description": "apps.blog_app.views.detail_blog_post_view",
        "peekOfCode": "class BlogPostView_Detail(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        post_slug = self.kwargs.get('slug')\n        post = get_object_or_404(BlogPost, slug=post_slug, status='published')\n        context['post'] = post\n        if hasattr(post, 'seo_meta'):\n            context['seo_meta'] = post.seo_meta\n        related_posts = BlogPost.objects.filter(tags__in=post.tags.all()).exclude(id=post.id).distinct()[:3]\n        context['related_posts'] = related_posts",
        "detail": "apps.blog_app.views.detail_blog_post_view",
        "documentation": {}
    },
    {
        "label": "BlogPostView_List",
        "kind": 6,
        "importPath": "apps.blog_app.views.list_blog_posts_views",
        "description": "apps.blog_app.views.list_blog_posts_views",
        "peekOfCode": "class BlogPostView_List(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        search_query = self.request.GET.get('search', '')\n        if search_query:\n            posts = BlogPost.objects.filter(\n                Q(title__icontains=search_query) |\n                Q(content__icontains=search_query) |\n                Q(tags__name__icontains=search_query),\n            ).order_by('-published_at')",
        "detail": "apps.blog_app.views.list_blog_posts_views",
        "documentation": {}
    },
    {
        "label": "BlogConfig",
        "kind": 6,
        "importPath": "apps.blog_app.apps",
        "description": "apps.blog_app.apps",
        "peekOfCode": "class BlogConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.blog_app'",
        "detail": "apps.blog_app.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.blog_app.urls",
        "description": "apps.blog_app.urls",
        "peekOfCode": "app_name = 'blog_app'\nurlpatterns = [\n    path('', BlogPostView_List.as_view(\n        template_name='blog_app/blogpost_list.html'\n    ), name='post_list'),\n    path('post/<slug:slug>/', BlogPostView_Detail.as_view(\n        template_name='blog_app/blogpost_detail.html'\n    ), name='post_detail'),\n]",
        "detail": "apps.blog_app.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.blog_app.urls",
        "description": "apps.blog_app.urls",
        "peekOfCode": "urlpatterns = [\n    path('', BlogPostView_List.as_view(\n        template_name='blog_app/blogpost_list.html'\n    ), name='post_list'),\n    path('post/<slug:slug>/', BlogPostView_Detail.as_view(\n        template_name='blog_app/blogpost_detail.html'\n    ), name='post_detail'),\n]",
        "detail": "apps.blog_app.urls",
        "documentation": {}
    },
    {
        "label": "BrainstormingCompleteSynthesisAdmin",
        "kind": 6,
        "importPath": "apps.brainstorms.admin.brainstorming_complete_synthesis_admin",
        "description": "apps.brainstorms.admin.brainstorming_complete_synthesis_admin",
        "peekOfCode": "class BrainstormingCompleteSynthesisAdmin(admin.ModelAdmin):\n    list_display = BRAINSTORMING_ADMIN_LIST\n    list_filter = BRAINSTORMING_ADMIN_FILTER\n    search_fields = BRAINSTORMING_ADMIN_SEARCH\n    ordering = ('-created_at',)",
        "detail": "apps.brainstorms.admin.brainstorming_complete_synthesis_admin",
        "documentation": {}
    },
    {
        "label": "BrainstormingIdeaAdmin",
        "kind": 6,
        "importPath": "apps.brainstorms.admin.brainstorming_idea_admin",
        "description": "apps.brainstorms.admin.brainstorming_idea_admin",
        "peekOfCode": "class BrainstormingIdeaAdmin(admin.ModelAdmin):\n    list_display = BRAINSTORMING_IDEA_ADMIN_LIST\n    list_filter = BRAINSTORMING_IDEA_ADMIN_FILTER\n    search_fields = BRAINSTORMING_IDEA_ADMIN_SEARCH\n    ordering = ('-created_at', 'idea_title', 'brainstorming_session')",
        "detail": "apps.brainstorms.admin.brainstorming_idea_admin",
        "documentation": {}
    },
    {
        "label": "BrainstormingLevelSynthesisAdmin",
        "kind": 6,
        "importPath": "apps.brainstorms.admin.brainstorming_level_synthesis_admin",
        "description": "apps.brainstorms.admin.brainstorming_level_synthesis_admin",
        "peekOfCode": "class BrainstormingLevelSynthesisAdmin(admin.ModelAdmin):\n    list_display = BRAINSTORMING_LEVEL_SYNTHESIS_ADMIN_LIST\n    list_filter = BRAINSTORMING_LEVEL_SYNTHESIS_ADMIN_FILTER\n    search_fields = BRAINSTORMING_LEVEL_SYNTHESIS_ADMIN_SEARCH\n    ordering = ('-created_at',)",
        "detail": "apps.brainstorms.admin.brainstorming_level_synthesis_admin",
        "documentation": {}
    },
    {
        "label": "BrainstormingSessionAdmin",
        "kind": 6,
        "importPath": "apps.brainstorms.admin.brainstorming_session_admin",
        "description": "apps.brainstorms.admin.brainstorming_session_admin",
        "peekOfCode": "class BrainstormingSessionAdmin(admin.ModelAdmin):\n    list_display = BRAINSTORMING_SESSION_ADMIN_LIST\n    list_filter = BRAINSTORMING_SESSION_ADMIN_FILTER\n    search_fields = BRAINSTORMING_SESSION_ADMIN_SEARCH\n    readonly_fields = ['created_at', 'updated_at']\n    ordering = ['-created_at']",
        "detail": "apps.brainstorms.admin.brainstorming_session_admin",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.brainstorms.migrations.0001_initial",
        "description": "apps.brainstorms.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('llm_core', '0002_initial'),\n        ('organization', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='BrainstormingIdea',",
        "detail": "apps.brainstorms.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.brainstorms.migrations.0002_alter_brainstormingidea_unique_together",
        "description": "apps.brainstorms.migrations.0002_alter_brainstormingidea_unique_together",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('brainstorms', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterUniqueTogether(\n            name='brainstormingidea',\n            unique_together={('brainstorming_session', 'idea_description', 'depth_level')},\n        ),\n    ]",
        "detail": "apps.brainstorms.migrations.0002_alter_brainstormingidea_unique_together",
        "documentation": {}
    },
    {
        "label": "BrainstormingCompleteSynthesis",
        "kind": 6,
        "importPath": "apps.brainstorms.models.brainstorming_complete_synthesis_models",
        "description": "apps.brainstorms.models.brainstorming_complete_synthesis_models",
        "peekOfCode": "class BrainstormingCompleteSynthesis(models.Model):\n    brainstorming_session = models.ForeignKey('BrainstormingSession', on_delete=models.CASCADE)\n    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE)\n    synthesis_content = models.TextField()\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    def __str__(self):\n        return self.brainstorming_session.session_name\n    class Meta:\n        verbose_name = 'Brainstorming Complete Synthesis'",
        "detail": "apps.brainstorms.models.brainstorming_complete_synthesis_models",
        "documentation": {}
    },
    {
        "label": "BrainstormingIdea",
        "kind": 6,
        "importPath": "apps.brainstorms.models.brainstorming_idea_models",
        "description": "apps.brainstorms.models.brainstorming_idea_models",
        "peekOfCode": "class BrainstormingIdea(models.Model):\n    brainstorming_session = models.ForeignKey('BrainstormingSession', on_delete=models.CASCADE)\n    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE)\n    idea_title = models.CharField(max_length=1000)\n    idea_description = models.TextField()\n    depth_level = models.IntegerField(default=1)\n    is_bookmarked = models.BooleanField(default=False)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    def __str__(self):",
        "detail": "apps.brainstorms.models.brainstorming_idea_models",
        "documentation": {}
    },
    {
        "label": "BrainstormingLevelSynthesis",
        "kind": 6,
        "importPath": "apps.brainstorms.models.brainstorming_level_synthesis_models",
        "description": "apps.brainstorms.models.brainstorming_level_synthesis_models",
        "peekOfCode": "class BrainstormingLevelSynthesis(models.Model):\n    brainstorming_session = models.ForeignKey('BrainstormingSession', on_delete=models.CASCADE)\n    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE)\n    depth_level = models.IntegerField()\n    ideas = models.ManyToManyField('BrainstormingIdea')\n    synthesis_content = models.TextField()\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    def __str__(self):\n        return self.brainstorming_session.session_name + ' - ' + str(self.depth_level)",
        "detail": "apps.brainstorms.models.brainstorming_level_synthesis_models",
        "documentation": {}
    },
    {
        "label": "BrainstormingSession",
        "kind": 6,
        "importPath": "apps.brainstorms.models.brainstorming_session_models",
        "description": "apps.brainstorms.models.brainstorming_session_models",
        "peekOfCode": "class BrainstormingSession(models.Model):\n    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE)\n    llm_model = models.ForeignKey('llm_core.LLMCore', on_delete=models.CASCADE)\n    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE)\n    session_name = models.CharField(max_length=1000)\n    topic_definition = models.TextField()\n    constraints = models.TextField()\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    def __str__(self):",
        "detail": "apps.brainstorms.models.brainstorming_session_models",
        "documentation": {}
    },
    {
        "label": "fixture_brainstorms_init",
        "kind": 2,
        "importPath": "apps.brainstorms.tests.conftest",
        "description": "apps.brainstorms.tests.conftest",
        "peekOfCode": "def fixture_brainstorms_init():\n    return True",
        "detail": "apps.brainstorms.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_brainstorms_test_forms",
        "kind": 2,
        "importPath": "apps.brainstorms.tests.test_forms",
        "description": "apps.brainstorms.tests.test_forms",
        "peekOfCode": "def test_init_brainstorms_test_forms():\n    assert True",
        "detail": "apps.brainstorms.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_brainstorms_test_models",
        "kind": 2,
        "importPath": "apps.brainstorms.tests.test_models",
        "description": "apps.brainstorms.tests.test_models",
        "peekOfCode": "def test_init_brainstorms_test_models():\n    assert True",
        "detail": "apps.brainstorms.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_brainstorms_test_utils",
        "kind": 2,
        "importPath": "apps.brainstorms.tests.test_utils",
        "description": "apps.brainstorms.tests.test_utils",
        "peekOfCode": "def test_init_brainstorms_test_utils():\n    assert True",
        "detail": "apps.brainstorms.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_brainstorms_test_views",
        "kind": 2,
        "importPath": "apps.brainstorms.tests.test_views",
        "description": "apps.brainstorms.tests.test_views",
        "peekOfCode": "def test_init_brainstorms_test_views():\n    assert True",
        "detail": "apps.brainstorms.tests.test_views",
        "documentation": {}
    },
    {
        "label": "BrainstormingActionTypeNames",
        "kind": 6,
        "importPath": "apps.brainstorms.utils.constant_utils",
        "description": "apps.brainstorms.utils.constant_utils",
        "peekOfCode": "class BrainstormingActionTypeNames:\n    CREATE_FIRST_LAYER = 'create_first_layer'\n    CREATE_DEEPER_LAYER = 'create_deeper_layer'\n    GENERATE_LEVEL_SYNTHESIS = 'generate_level_synthesis'\n    GENERATE_COMPLETE_SYNTHESIS = 'generate_complete_synthesis'",
        "detail": "apps.brainstorms.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BRAINSTORMING_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.brainstorms.utils.constant_utils",
        "description": "apps.brainstorms.utils.constant_utils",
        "peekOfCode": "BRAINSTORMING_ADMIN_LIST = ('brainstorming_session', 'created_by_user', 'created_at')\nBRAINSTORMING_ADMIN_FILTER = ('brainstorming_session', 'created_by_user', 'created_at')\nBRAINSTORMING_ADMIN_SEARCH = ('brainstorming_session', 'created_by_user', 'created_at')\nBRAINSTORMING_IDEA_ADMIN_LIST = ('idea_title', 'brainstorming_session', 'created_by_user', 'depth_level',\n                                 'is_bookmarked', 'created_at')\nBRAINSTORMING_IDEA_ADMIN_FILTER = ('brainstorming_session', 'created_by_user', 'depth_level', 'is_bookmarked',\n                                   'created_at')\nBRAINSTORMING_IDEA_ADMIN_SEARCH = ('idea_title', 'idea_description')\nBRAINSTORMING_LEVEL_SYNTHESIS_ADMIN_LIST = ('brainstorming_session', 'depth_level', 'created_at')\nBRAINSTORMING_LEVEL_SYNTHESIS_ADMIN_FILTER = ('brainstorming_session', 'depth_level', 'created_at')",
        "detail": "apps.brainstorms.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BRAINSTORMING_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.brainstorms.utils.constant_utils",
        "description": "apps.brainstorms.utils.constant_utils",
        "peekOfCode": "BRAINSTORMING_ADMIN_FILTER = ('brainstorming_session', 'created_by_user', 'created_at')\nBRAINSTORMING_ADMIN_SEARCH = ('brainstorming_session', 'created_by_user', 'created_at')\nBRAINSTORMING_IDEA_ADMIN_LIST = ('idea_title', 'brainstorming_session', 'created_by_user', 'depth_level',\n                                 'is_bookmarked', 'created_at')\nBRAINSTORMING_IDEA_ADMIN_FILTER = ('brainstorming_session', 'created_by_user', 'depth_level', 'is_bookmarked',\n                                   'created_at')\nBRAINSTORMING_IDEA_ADMIN_SEARCH = ('idea_title', 'idea_description')\nBRAINSTORMING_LEVEL_SYNTHESIS_ADMIN_LIST = ('brainstorming_session', 'depth_level', 'created_at')\nBRAINSTORMING_LEVEL_SYNTHESIS_ADMIN_FILTER = ('brainstorming_session', 'depth_level', 'created_at')\nBRAINSTORMING_LEVEL_SYNTHESIS_ADMIN_SEARCH = ('brainstorming_session', 'depth_level', 'created_at')",
        "detail": "apps.brainstorms.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BRAINSTORMING_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.brainstorms.utils.constant_utils",
        "description": "apps.brainstorms.utils.constant_utils",
        "peekOfCode": "BRAINSTORMING_ADMIN_SEARCH = ('brainstorming_session', 'created_by_user', 'created_at')\nBRAINSTORMING_IDEA_ADMIN_LIST = ('idea_title', 'brainstorming_session', 'created_by_user', 'depth_level',\n                                 'is_bookmarked', 'created_at')\nBRAINSTORMING_IDEA_ADMIN_FILTER = ('brainstorming_session', 'created_by_user', 'depth_level', 'is_bookmarked',\n                                   'created_at')\nBRAINSTORMING_IDEA_ADMIN_SEARCH = ('idea_title', 'idea_description')\nBRAINSTORMING_LEVEL_SYNTHESIS_ADMIN_LIST = ('brainstorming_session', 'depth_level', 'created_at')\nBRAINSTORMING_LEVEL_SYNTHESIS_ADMIN_FILTER = ('brainstorming_session', 'depth_level', 'created_at')\nBRAINSTORMING_LEVEL_SYNTHESIS_ADMIN_SEARCH = ('brainstorming_session', 'depth_level', 'created_at')\nBRAINSTORMING_SESSION_ADMIN_LIST = ['session_name', 'organization', 'llm_model', 'created_by_user', 'created_at']",
        "detail": "apps.brainstorms.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BRAINSTORMING_IDEA_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.brainstorms.utils.constant_utils",
        "description": "apps.brainstorms.utils.constant_utils",
        "peekOfCode": "BRAINSTORMING_IDEA_ADMIN_LIST = ('idea_title', 'brainstorming_session', 'created_by_user', 'depth_level',\n                                 'is_bookmarked', 'created_at')\nBRAINSTORMING_IDEA_ADMIN_FILTER = ('brainstorming_session', 'created_by_user', 'depth_level', 'is_bookmarked',\n                                   'created_at')\nBRAINSTORMING_IDEA_ADMIN_SEARCH = ('idea_title', 'idea_description')\nBRAINSTORMING_LEVEL_SYNTHESIS_ADMIN_LIST = ('brainstorming_session', 'depth_level', 'created_at')\nBRAINSTORMING_LEVEL_SYNTHESIS_ADMIN_FILTER = ('brainstorming_session', 'depth_level', 'created_at')\nBRAINSTORMING_LEVEL_SYNTHESIS_ADMIN_SEARCH = ('brainstorming_session', 'depth_level', 'created_at')\nBRAINSTORMING_SESSION_ADMIN_LIST = ['session_name', 'organization', 'llm_model', 'created_by_user', 'created_at']\nBRAINSTORMING_SESSION_ADMIN_FILTER = ['organization', 'llm_model', 'created_by_user', 'created_at']",
        "detail": "apps.brainstorms.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BRAINSTORMING_IDEA_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.brainstorms.utils.constant_utils",
        "description": "apps.brainstorms.utils.constant_utils",
        "peekOfCode": "BRAINSTORMING_IDEA_ADMIN_FILTER = ('brainstorming_session', 'created_by_user', 'depth_level', 'is_bookmarked',\n                                   'created_at')\nBRAINSTORMING_IDEA_ADMIN_SEARCH = ('idea_title', 'idea_description')\nBRAINSTORMING_LEVEL_SYNTHESIS_ADMIN_LIST = ('brainstorming_session', 'depth_level', 'created_at')\nBRAINSTORMING_LEVEL_SYNTHESIS_ADMIN_FILTER = ('brainstorming_session', 'depth_level', 'created_at')\nBRAINSTORMING_LEVEL_SYNTHESIS_ADMIN_SEARCH = ('brainstorming_session', 'depth_level', 'created_at')\nBRAINSTORMING_SESSION_ADMIN_LIST = ['session_name', 'organization', 'llm_model', 'created_by_user', 'created_at']\nBRAINSTORMING_SESSION_ADMIN_FILTER = ['organization', 'llm_model', 'created_by_user', 'created_at']\nBRAINSTORMING_SESSION_ADMIN_SEARCH = ['session_name', 'organization__name', 'llm_model__nickname',\n                                      'created_by_user__username']",
        "detail": "apps.brainstorms.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BRAINSTORMING_IDEA_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.brainstorms.utils.constant_utils",
        "description": "apps.brainstorms.utils.constant_utils",
        "peekOfCode": "BRAINSTORMING_IDEA_ADMIN_SEARCH = ('idea_title', 'idea_description')\nBRAINSTORMING_LEVEL_SYNTHESIS_ADMIN_LIST = ('brainstorming_session', 'depth_level', 'created_at')\nBRAINSTORMING_LEVEL_SYNTHESIS_ADMIN_FILTER = ('brainstorming_session', 'depth_level', 'created_at')\nBRAINSTORMING_LEVEL_SYNTHESIS_ADMIN_SEARCH = ('brainstorming_session', 'depth_level', 'created_at')\nBRAINSTORMING_SESSION_ADMIN_LIST = ['session_name', 'organization', 'llm_model', 'created_by_user', 'created_at']\nBRAINSTORMING_SESSION_ADMIN_FILTER = ['organization', 'llm_model', 'created_by_user', 'created_at']\nBRAINSTORMING_SESSION_ADMIN_SEARCH = ['session_name', 'organization__name', 'llm_model__nickname',\n                                      'created_by_user__username']\nclass BrainstormingActionTypeNames:\n    CREATE_FIRST_LAYER = 'create_first_layer'",
        "detail": "apps.brainstorms.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BRAINSTORMING_LEVEL_SYNTHESIS_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.brainstorms.utils.constant_utils",
        "description": "apps.brainstorms.utils.constant_utils",
        "peekOfCode": "BRAINSTORMING_LEVEL_SYNTHESIS_ADMIN_LIST = ('brainstorming_session', 'depth_level', 'created_at')\nBRAINSTORMING_LEVEL_SYNTHESIS_ADMIN_FILTER = ('brainstorming_session', 'depth_level', 'created_at')\nBRAINSTORMING_LEVEL_SYNTHESIS_ADMIN_SEARCH = ('brainstorming_session', 'depth_level', 'created_at')\nBRAINSTORMING_SESSION_ADMIN_LIST = ['session_name', 'organization', 'llm_model', 'created_by_user', 'created_at']\nBRAINSTORMING_SESSION_ADMIN_FILTER = ['organization', 'llm_model', 'created_by_user', 'created_at']\nBRAINSTORMING_SESSION_ADMIN_SEARCH = ['session_name', 'organization__name', 'llm_model__nickname',\n                                      'created_by_user__username']\nclass BrainstormingActionTypeNames:\n    CREATE_FIRST_LAYER = 'create_first_layer'\n    CREATE_DEEPER_LAYER = 'create_deeper_layer'",
        "detail": "apps.brainstorms.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BRAINSTORMING_LEVEL_SYNTHESIS_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.brainstorms.utils.constant_utils",
        "description": "apps.brainstorms.utils.constant_utils",
        "peekOfCode": "BRAINSTORMING_LEVEL_SYNTHESIS_ADMIN_FILTER = ('brainstorming_session', 'depth_level', 'created_at')\nBRAINSTORMING_LEVEL_SYNTHESIS_ADMIN_SEARCH = ('brainstorming_session', 'depth_level', 'created_at')\nBRAINSTORMING_SESSION_ADMIN_LIST = ['session_name', 'organization', 'llm_model', 'created_by_user', 'created_at']\nBRAINSTORMING_SESSION_ADMIN_FILTER = ['organization', 'llm_model', 'created_by_user', 'created_at']\nBRAINSTORMING_SESSION_ADMIN_SEARCH = ['session_name', 'organization__name', 'llm_model__nickname',\n                                      'created_by_user__username']\nclass BrainstormingActionTypeNames:\n    CREATE_FIRST_LAYER = 'create_first_layer'\n    CREATE_DEEPER_LAYER = 'create_deeper_layer'\n    GENERATE_LEVEL_SYNTHESIS = 'generate_level_synthesis'",
        "detail": "apps.brainstorms.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BRAINSTORMING_LEVEL_SYNTHESIS_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.brainstorms.utils.constant_utils",
        "description": "apps.brainstorms.utils.constant_utils",
        "peekOfCode": "BRAINSTORMING_LEVEL_SYNTHESIS_ADMIN_SEARCH = ('brainstorming_session', 'depth_level', 'created_at')\nBRAINSTORMING_SESSION_ADMIN_LIST = ['session_name', 'organization', 'llm_model', 'created_by_user', 'created_at']\nBRAINSTORMING_SESSION_ADMIN_FILTER = ['organization', 'llm_model', 'created_by_user', 'created_at']\nBRAINSTORMING_SESSION_ADMIN_SEARCH = ['session_name', 'organization__name', 'llm_model__nickname',\n                                      'created_by_user__username']\nclass BrainstormingActionTypeNames:\n    CREATE_FIRST_LAYER = 'create_first_layer'\n    CREATE_DEEPER_LAYER = 'create_deeper_layer'\n    GENERATE_LEVEL_SYNTHESIS = 'generate_level_synthesis'\n    GENERATE_COMPLETE_SYNTHESIS = 'generate_complete_synthesis'",
        "detail": "apps.brainstorms.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BRAINSTORMING_SESSION_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.brainstorms.utils.constant_utils",
        "description": "apps.brainstorms.utils.constant_utils",
        "peekOfCode": "BRAINSTORMING_SESSION_ADMIN_LIST = ['session_name', 'organization', 'llm_model', 'created_by_user', 'created_at']\nBRAINSTORMING_SESSION_ADMIN_FILTER = ['organization', 'llm_model', 'created_by_user', 'created_at']\nBRAINSTORMING_SESSION_ADMIN_SEARCH = ['session_name', 'organization__name', 'llm_model__nickname',\n                                      'created_by_user__username']\nclass BrainstormingActionTypeNames:\n    CREATE_FIRST_LAYER = 'create_first_layer'\n    CREATE_DEEPER_LAYER = 'create_deeper_layer'\n    GENERATE_LEVEL_SYNTHESIS = 'generate_level_synthesis'\n    GENERATE_COMPLETE_SYNTHESIS = 'generate_complete_synthesis'",
        "detail": "apps.brainstorms.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BRAINSTORMING_SESSION_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.brainstorms.utils.constant_utils",
        "description": "apps.brainstorms.utils.constant_utils",
        "peekOfCode": "BRAINSTORMING_SESSION_ADMIN_FILTER = ['organization', 'llm_model', 'created_by_user', 'created_at']\nBRAINSTORMING_SESSION_ADMIN_SEARCH = ['session_name', 'organization__name', 'llm_model__nickname',\n                                      'created_by_user__username']\nclass BrainstormingActionTypeNames:\n    CREATE_FIRST_LAYER = 'create_first_layer'\n    CREATE_DEEPER_LAYER = 'create_deeper_layer'\n    GENERATE_LEVEL_SYNTHESIS = 'generate_level_synthesis'\n    GENERATE_COMPLETE_SYNTHESIS = 'generate_complete_synthesis'",
        "detail": "apps.brainstorms.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BRAINSTORMING_SESSION_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.brainstorms.utils.constant_utils",
        "description": "apps.brainstorms.utils.constant_utils",
        "peekOfCode": "BRAINSTORMING_SESSION_ADMIN_SEARCH = ['session_name', 'organization__name', 'llm_model__nickname',\n                                      'created_by_user__username']\nclass BrainstormingActionTypeNames:\n    CREATE_FIRST_LAYER = 'create_first_layer'\n    CREATE_DEEPER_LAYER = 'create_deeper_layer'\n    GENERATE_LEVEL_SYNTHESIS = 'generate_level_synthesis'\n    GENERATE_COMPLETE_SYNTHESIS = 'generate_complete_synthesis'",
        "detail": "apps.brainstorms.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BrainstormingView_PerformCompleteSynthesis",
        "kind": 6,
        "importPath": "apps.brainstorms.views.complete_synthesis.perform_complete_synthesis_views",
        "description": "apps.brainstorms.views.complete_synthesis.perform_complete_synthesis_views",
        "peekOfCode": "class BrainstormingView_PerformCompleteSynthesis(LoginRequiredMixin, View):\n    def post(self, request, *args, **kwargs):\n        ss_id = self.kwargs.get('session_id')\n        session = get_object_or_404(BrainstormingSession, id=ss_id, created_by_user=request.user)\n        ##############################\n        # PERMISSION CHECK FOR - CREATE_BRAINSTORMING_SYNTHESES\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.CREATE_BRAINSTORMING_SYNTHESES):\n            messages.error(self.request, \"You do not have permission to create brainstorming syntheses.\")\n            return redirect('brainstorms:detail_session', session_id=session.id)",
        "detail": "apps.brainstorms.views.complete_synthesis.perform_complete_synthesis_views",
        "documentation": {}
    },
    {
        "label": "BrainstormingView_IdeaBookmark",
        "kind": 6,
        "importPath": "apps.brainstorms.views.idea.bookmark_idea_views",
        "description": "apps.brainstorms.views.idea.bookmark_idea_views",
        "peekOfCode": "class BrainstormingView_IdeaBookmark(LoginRequiredMixin, View):\n    def post(self, request, *args, **kwargs):\n        idea_id = self.kwargs.get('idea_id')\n        idea = get_object_or_404(BrainstormingIdea, id=idea_id, created_by_user=request.user)\n        ##############################\n        # PERMISSION CHECK FOR - BOOKMARK_BRAINSTORMING_IDEAS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.BOOKMARK_BRAINSTORMING_IDEAS):\n            messages.error(self.request, \"You do not have permission to bookmark ideas.\")\n            return redirect('brainstorms:detail_session', session_id=idea.brainstorming_session.id)",
        "detail": "apps.brainstorms.views.idea.bookmark_idea_views",
        "documentation": {}
    },
    {
        "label": "BrainstormingView_IdeaDeepen",
        "kind": 6,
        "importPath": "apps.brainstorms.views.idea.deepen_idea_views",
        "description": "apps.brainstorms.views.idea.deepen_idea_views",
        "peekOfCode": "class BrainstormingView_IdeaDeepen(LoginRequiredMixin, View):\n    def post(self, request, *args, **kwargs):\n        idea_id = self.kwargs.get('idea_id')\n        idea = get_object_or_404(BrainstormingIdea, id=idea_id)\n        session = idea.brainstorming_session\n        ##############################\n        # PERMISSION CHECK FOR - CREATE_BRAINSTORMING_IDEAS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.CREATE_BRAINSTORMING_IDEAS):\n            messages.error(self.request, \"You do not have permission to create brainstorming ideas.\")",
        "detail": "apps.brainstorms.views.idea.deepen_idea_views",
        "documentation": {}
    },
    {
        "label": "BrainstormingView_IdeaDelete",
        "kind": 6,
        "importPath": "apps.brainstorms.views.idea.delete_idea_views",
        "description": "apps.brainstorms.views.idea.delete_idea_views",
        "peekOfCode": "class BrainstormingView_IdeaDelete(LoginRequiredMixin, View):\n    def post(self, request, *args, **kwargs):\n        idea_id = self.kwargs.get('idea_id')\n        idea = get_object_or_404(BrainstormingIdea, id=idea_id, created_by_user=request.user)\n        ##############################\n        # PERMISSION CHECK FOR - DELETE_BRAINSTORMING_IDEAS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.DELETE_BRAINSTORMING_IDEAS):\n            messages.error(self.request, \"You do not have permission to delete ideas.\")\n            return redirect('brainstorms:detail_session', session_id=idea.brainstorming_session.id)",
        "detail": "apps.brainstorms.views.idea.delete_idea_views",
        "documentation": {}
    },
    {
        "label": "BrainstormingView_IdeasGenerate",
        "kind": 6,
        "importPath": "apps.brainstorms.views.idea.produce_ideas_views",
        "description": "apps.brainstorms.views.idea.produce_ideas_views",
        "peekOfCode": "class BrainstormingView_IdeasGenerate(LoginRequiredMixin, View):\n    def post(self, request, *args, **kwargs):\n        ss_id = self.kwargs.get('session_id')\n        ##############################\n        # PERMISSION CHECK FOR - CREATE_BRAINSTORMING_IDEAS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.CREATE_BRAINSTORMING_IDEAS):\n            messages.error(self.request, \"You do not have permission to create brainstorming ideas.\")\n            return redirect('brainstorms:detail_session', session_id=ss_id)\n        ##############################",
        "detail": "apps.brainstorms.views.idea.produce_ideas_views",
        "documentation": {}
    },
    {
        "label": "BrainstormingView_LevelSynthesis",
        "kind": 6,
        "importPath": "apps.brainstorms.views.level_synthesis.perform_level_synthesis_views",
        "description": "apps.brainstorms.views.level_synthesis.perform_level_synthesis_views",
        "peekOfCode": "class BrainstormingView_LevelSynthesis(LoginRequiredMixin, View):\n    def post(self, request, *args, **kwargs):\n        ss_id = self.kwargs.get('session_id')\n        depth_level = request.POST.get('depth_level', 1)\n        session = get_object_or_404(BrainstormingSession, id=ss_id, created_by_user=request.user)\n        ##############################\n        # PERMISSION CHECK FOR - CREATE_BRAINSTORMING_SYNTHESES\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.CREATE_BRAINSTORMING_SYNTHESES):\n            messages.error(self.request, \"You do not have permission to create brainstorming syntheses.\")",
        "detail": "apps.brainstorms.views.level_synthesis.perform_level_synthesis_views",
        "documentation": {}
    },
    {
        "label": "BrainstormingView_SessionConfirmDelete",
        "kind": 6,
        "importPath": "apps.brainstorms.views.session.confirm_delete_brainstorming_session",
        "description": "apps.brainstorms.views.session.confirm_delete_brainstorming_session",
        "peekOfCode": "class BrainstormingView_SessionConfirmDelete(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        ss_id = self.kwargs.get('session_id')\n        session = get_object_or_404(BrainstormingSession, id=ss_id, created_by_user=self.request.user)\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['session'] = session\n        return context\n    def post(self, request, *args, **kwargs):\n        ss_id = self.kwargs.get('session_id')\n        session = get_object_or_404(BrainstormingSession, id=ss_id, created_by_user=request.user)",
        "detail": "apps.brainstorms.views.session.confirm_delete_brainstorming_session",
        "documentation": {}
    },
    {
        "label": "BrainstormingView_SessionCreate",
        "kind": 6,
        "importPath": "apps.brainstorms.views.session.create_brainstorming_session_views",
        "description": "apps.brainstorms.views.session.create_brainstorming_session_views",
        "peekOfCode": "class BrainstormingView_SessionCreate(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        user = self.request.user\n        context['organizations'] = Organization.objects.filter(\n            users__in=[user]\n        )\n        context['llm_models'] = LLMCore.objects.filter(\n            organization__in=context['organizations']\n        )",
        "detail": "apps.brainstorms.views.session.create_brainstorming_session_views",
        "documentation": {}
    },
    {
        "label": "BrainstormingView_SessionDetail",
        "kind": 6,
        "importPath": "apps.brainstorms.views.session.detail_brainstorming_session_views",
        "description": "apps.brainstorms.views.session.detail_brainstorming_session_views",
        "peekOfCode": "class BrainstormingView_SessionDetail(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_BRAINSTORMING_SESSIONS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_BRAINSTORMING_SESSIONS):\n            messages.error(self.request, \"You do not have permission to list brainstorming sessions.\")\n            return context\n        ##############################",
        "detail": "apps.brainstorms.views.session.detail_brainstorming_session_views",
        "documentation": {}
    },
    {
        "label": "BrainstormingView_SessionList",
        "kind": 6,
        "importPath": "apps.brainstorms.views.session.list_brainstorming_sessions_views",
        "description": "apps.brainstorms.views.session.list_brainstorming_sessions_views",
        "peekOfCode": "class BrainstormingView_SessionList(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_BRAINSTORMING_SESSIONS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_BRAINSTORMING_SESSIONS):\n            messages.error(self.request, \"You do not have permission to list brainstorming sessions.\")\n            return context\n        ##############################",
        "detail": "apps.brainstorms.views.session.list_brainstorming_sessions_views",
        "documentation": {}
    },
    {
        "label": "BrainstormingView_SessionUpdate",
        "kind": 6,
        "importPath": "apps.brainstorms.views.session.update_brainstorming_session_views",
        "description": "apps.brainstorms.views.session.update_brainstorming_session_views",
        "peekOfCode": "class BrainstormingView_SessionUpdate(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        ss_id = self.kwargs.get('session_id')\n        session = get_object_or_404(BrainstormingSession, id=ss_id, created_by_user=self.request.user)\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['session'] = session\n        context['organizations'] = Organization.objects.filter(users__in=[self.request.user])\n        context['llm_models'] = LLMCore.objects.filter(organization__in=context['organizations'])\n        return context\n    def post(self, request, *args, **kwargs):",
        "detail": "apps.brainstorms.views.session.update_brainstorming_session_views",
        "documentation": {}
    },
    {
        "label": "BrainstormsConfig",
        "kind": 6,
        "importPath": "apps.brainstorms.apps",
        "description": "apps.brainstorms.apps",
        "peekOfCode": "class BrainstormsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.brainstorms'",
        "detail": "apps.brainstorms.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.brainstorms.urls",
        "description": "apps.brainstorms.urls",
        "peekOfCode": "app_name = 'brainstorms'\nurlpatterns = [\n    path(\"create/\", BrainstormingView_SessionCreate.as_view(\n        template_name='brainstorms/session/create_brainstorming_session.html'\n    ), name=\"create_session\"),\n    path(\"list/\", BrainstormingView_SessionList.as_view(\n        template_name='brainstorms/session/list_brainstorming_sessions.html'\n    ), name=\"list_sessions\"),\n    path(\"update/<int:session_id>/\", BrainstormingView_SessionUpdate.as_view(\n        template_name='brainstorms/session/update_brainstorming_session.html'",
        "detail": "apps.brainstorms.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.brainstorms.urls",
        "description": "apps.brainstorms.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"create/\", BrainstormingView_SessionCreate.as_view(\n        template_name='brainstorms/session/create_brainstorming_session.html'\n    ), name=\"create_session\"),\n    path(\"list/\", BrainstormingView_SessionList.as_view(\n        template_name='brainstorms/session/list_brainstorming_sessions.html'\n    ), name=\"list_sessions\"),\n    path(\"update/<int:session_id>/\", BrainstormingView_SessionUpdate.as_view(\n        template_name='brainstorms/session/update_brainstorming_session.html'\n    ), name=\"update_session\"),",
        "detail": "apps.brainstorms.urls",
        "documentation": {}
    },
    {
        "label": "ForumCategoryAdmin",
        "kind": 6,
        "importPath": "apps.community_forum.admin.forum_category_admin",
        "description": "apps.community_forum.admin.forum_category_admin",
        "peekOfCode": "class ForumCategoryAdmin(admin.ModelAdmin):\n    list_display = FORUM_CATEGORY_ADMIN_LIST\n    search_fields = FORUM_CATEGORY_ADMIN_SEARCH\n    list_filter = FORUM_CATEGORY_ADMIN_FILTER\n    ordering = (\"-created_at\",)",
        "detail": "apps.community_forum.admin.forum_category_admin",
        "documentation": {}
    },
    {
        "label": "ForumCommentAdmin",
        "kind": 6,
        "importPath": "apps.community_forum.admin.forum_comment_admin",
        "description": "apps.community_forum.admin.forum_comment_admin",
        "peekOfCode": "class ForumCommentAdmin(admin.ModelAdmin):\n    list_display = FORUM_COMMENT_ADMIN_LIST\n    search_fields = FORUM_COMMENT_ADMIN_SEARCH\n    list_filter = FORUM_COMMENT_ADMIN_FILTER\n    ordering = (\"-created_at\",)",
        "detail": "apps.community_forum.admin.forum_comment_admin",
        "documentation": {}
    },
    {
        "label": "ForumLikeAdmin",
        "kind": 6,
        "importPath": "apps.community_forum.admin.forum_like_admin",
        "description": "apps.community_forum.admin.forum_like_admin",
        "peekOfCode": "class ForumLikeAdmin(admin.ModelAdmin):\n    list_display = FORUM_LIKE_ADMIN_LIST\n    search_fields = FORUM_LIKE_ADMIN_SEARCH\n    list_filter = FORUM_LIKE_ADMIN_FILTER\n    ordering = (\"-created_at\",)",
        "detail": "apps.community_forum.admin.forum_like_admin",
        "documentation": {}
    },
    {
        "label": "ForumPostAdmin",
        "kind": 6,
        "importPath": "apps.community_forum.admin.forum_post_admin",
        "description": "apps.community_forum.admin.forum_post_admin",
        "peekOfCode": "class ForumPostAdmin(admin.ModelAdmin):\n    list_display = FORUM_POST_ADMIN_LIST\n    search_fields = FORUM_POST_ADMIN_SEARCH\n    list_filter = FORUM_POST_ADMIN_FILTER\n    ordering = (\"-created_at\",)",
        "detail": "apps.community_forum.admin.forum_post_admin",
        "documentation": {}
    },
    {
        "label": "ForumThreadAdmin",
        "kind": 6,
        "importPath": "apps.community_forum.admin.forum_thread_admin",
        "description": "apps.community_forum.admin.forum_thread_admin",
        "peekOfCode": "class ForumThreadAdmin(admin.ModelAdmin):\n    list_display = FORUM_THREAD_ADMIN_LIST\n    search_fields = FORUM_THREAD_ADMIN_SEARCH\n    list_filter = FORUM_THREAD_ADMIN_FILTER\n    ordering = (\"-created_at\",)",
        "detail": "apps.community_forum.admin.forum_thread_admin",
        "documentation": {}
    },
    {
        "label": "ForumCommentForm",
        "kind": 6,
        "importPath": "apps.community_forum.forms.forum_comment_forms",
        "description": "apps.community_forum.forms.forum_comment_forms",
        "peekOfCode": "class ForumCommentForm(forms.ModelForm):\n    class Meta:\n        model = ForumComment\n        fields = ['content']\n        widgets = {\n            'content': forms.Textarea(attrs={'placeholder': 'Enter your comment here...'}),\n        }",
        "detail": "apps.community_forum.forms.forum_comment_forms",
        "documentation": {}
    },
    {
        "label": "ForumPostForm",
        "kind": 6,
        "importPath": "apps.community_forum.forms.forum_post_forms",
        "description": "apps.community_forum.forms.forum_post_forms",
        "peekOfCode": "class ForumPostForm(forms.ModelForm):\n    class Meta:\n        model = ForumPost\n        fields = ['content']\n        widgets = {\n            'content': forms.Textarea(attrs={'placeholder': 'Enter your post content here...'}),\n        }",
        "detail": "apps.community_forum.forms.forum_post_forms",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.community_forum.migrations.0001_initial",
        "description": "apps.community_forum.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='ForumCategory',\n            fields=[\n                ('id', models.AutoField(primary_key=True, serialize=False)),",
        "detail": "apps.community_forum.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "ForumCategory",
        "kind": 6,
        "importPath": "apps.community_forum.models.forum_category_models",
        "description": "apps.community_forum.models.forum_category_models",
        "peekOfCode": "class ForumCategory(models.Model):\n    id = models.AutoField(primary_key=True)\n    name = models.CharField(max_length=100, unique=True)\n    description = models.TextField()\n    slug = models.SlugField(unique=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    def __str__(self):\n        return self.name + \" - \" + self.slug + \" - \" + self.created_at.strftime(\"%Y%m%d%H:%M:%S\")\n    class Meta:",
        "detail": "apps.community_forum.models.forum_category_models",
        "documentation": {}
    },
    {
        "label": "ForumComment",
        "kind": 6,
        "importPath": "apps.community_forum.models.forum_comment_models",
        "description": "apps.community_forum.models.forum_comment_models",
        "peekOfCode": "class ForumComment(models.Model):\n    id = models.AutoField(primary_key=True)\n    content = models.TextField()\n    created_by = models.ForeignKey(\"auth.User\", on_delete=models.CASCADE)\n    post = models.ForeignKey(\"ForumPost\", related_name='comments', on_delete=models.CASCADE)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    like_count = models.PositiveIntegerField(default=0)  # Storing the number of unique likes\n    def __str__(self):\n        return f\"Comment by {self.created_by} on Post ID {self.post.id}\"",
        "detail": "apps.community_forum.models.forum_comment_models",
        "documentation": {}
    },
    {
        "label": "ForumLike",
        "kind": 6,
        "importPath": "apps.community_forum.models.forum_like_models",
        "description": "apps.community_forum.models.forum_like_models",
        "peekOfCode": "class ForumLike(models.Model):\n    id = models.AutoField(primary_key=True)\n    user = models.ForeignKey(\"auth.User\", on_delete=models.CASCADE)\n    comment = models.ForeignKey(\"ForumComment\", related_name='likes', on_delete=models.CASCADE)\n    created_at = models.DateTimeField(auto_now_add=True)\n    def __str__(self):\n        return f\"Like by {self.user} on Comment ID {self.comment.id}\"\n    class Meta:\n        verbose_name = \"Like\"\n        verbose_name_plural = \"Likes\"",
        "detail": "apps.community_forum.models.forum_like_models",
        "documentation": {}
    },
    {
        "label": "ForumPost",
        "kind": 6,
        "importPath": "apps.community_forum.models.forum_post_models",
        "description": "apps.community_forum.models.forum_post_models",
        "peekOfCode": "class ForumPost(models.Model):\n    id = models.AutoField(primary_key=True)\n    thread = models.ForeignKey(\"ForumThread\", related_name='posts', on_delete=models.CASCADE)\n    content = models.TextField()\n    created_by = models.ForeignKey(\"auth.User\", on_delete=models.CASCADE)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    is_verified = models.BooleanField(default=False)  # Verification status for an answer\n    verified_comment = models.OneToOneField(\"ForumComment\", related_name='verified_post', on_delete=models.CASCADE,\n                                            null=True, blank=True)",
        "detail": "apps.community_forum.models.forum_post_models",
        "documentation": {}
    },
    {
        "label": "ForumThread",
        "kind": 6,
        "importPath": "apps.community_forum.models.forum_thread_models",
        "description": "apps.community_forum.models.forum_thread_models",
        "peekOfCode": "class ForumThread(models.Model):\n    id = models.AutoField(primary_key=True)\n    category = models.ForeignKey(\"ForumCategory\", related_name='threads', on_delete=models.CASCADE)\n    title = models.CharField(max_length=255)\n    created_by = models.ForeignKey(\"auth.User\", on_delete=models.CASCADE, null=True, blank=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    is_closed = models.BooleanField(default=False)\n    def __str__(self):\n        return self.title",
        "detail": "apps.community_forum.models.forum_thread_models",
        "documentation": {}
    },
    {
        "label": "fixture_community_forum_init",
        "kind": 2,
        "importPath": "apps.community_forum.tests.conftest",
        "description": "apps.community_forum.tests.conftest",
        "peekOfCode": "def fixture_community_forum_init():\n    return True",
        "detail": "apps.community_forum.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_community_forum_test_forms",
        "kind": 2,
        "importPath": "apps.community_forum.tests.test_forms",
        "description": "apps.community_forum.tests.test_forms",
        "peekOfCode": "def test_init_community_forum_test_forms():\n    assert True",
        "detail": "apps.community_forum.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_community_forum_test_models",
        "kind": 2,
        "importPath": "apps.community_forum.tests.test_models",
        "description": "apps.community_forum.tests.test_models",
        "peekOfCode": "def test_init_community_forum_test_models():\n    assert True",
        "detail": "apps.community_forum.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_community_forum_test_utils",
        "kind": 2,
        "importPath": "apps.community_forum.tests.test_utils",
        "description": "apps.community_forum.tests.test_utils",
        "peekOfCode": "def test_init_community_forum_test_utils():\n    assert True",
        "detail": "apps.community_forum.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_community_forum_test_views",
        "kind": 2,
        "importPath": "apps.community_forum.tests.test_views",
        "description": "apps.community_forum.tests.test_views",
        "peekOfCode": "def test_init_community_forum_test_views():\n    assert True",
        "detail": "apps.community_forum.tests.test_views",
        "documentation": {}
    },
    {
        "label": "CONST_SECONDS",
        "kind": 5,
        "importPath": "apps.community_forum.utils.constant_utils",
        "description": "apps.community_forum.utils.constant_utils",
        "peekOfCode": "CONST_SECONDS = 1\nCONST_MINUTES = 60 * CONST_SECONDS\nCONST_HOURS = 60 * CONST_MINUTES\nFORUM_CATEGORY_ADMIN_LIST = (\"name\", \"slug\", \"created_at\", \"updated_at\",)\nFORUM_CATEGORY_ADMIN_SEARCH = (\"name\", \"description\", \"slug\",)\nFORUM_CATEGORY_ADMIN_FILTER = (\"created_at\", \"updated_at\",)\nFORUM_COMMENT_ADMIN_LIST = (\"post\", \"content\", \"created_by\", \"created_at\", \"updated_at\")\nFORUM_COMMENT_ADMIN_SEARCH = (\"post__content\", \"content\", \"created_by__username\",)\nFORUM_COMMENT_ADMIN_FILTER = (\"created_at\", \"updated_at\",)\nFORUM_LIKE_ADMIN_LIST = (\"user\", \"created_at\")",
        "detail": "apps.community_forum.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CONST_MINUTES",
        "kind": 5,
        "importPath": "apps.community_forum.utils.constant_utils",
        "description": "apps.community_forum.utils.constant_utils",
        "peekOfCode": "CONST_MINUTES = 60 * CONST_SECONDS\nCONST_HOURS = 60 * CONST_MINUTES\nFORUM_CATEGORY_ADMIN_LIST = (\"name\", \"slug\", \"created_at\", \"updated_at\",)\nFORUM_CATEGORY_ADMIN_SEARCH = (\"name\", \"description\", \"slug\",)\nFORUM_CATEGORY_ADMIN_FILTER = (\"created_at\", \"updated_at\",)\nFORUM_COMMENT_ADMIN_LIST = (\"post\", \"content\", \"created_by\", \"created_at\", \"updated_at\")\nFORUM_COMMENT_ADMIN_SEARCH = (\"post__content\", \"content\", \"created_by__username\",)\nFORUM_COMMENT_ADMIN_FILTER = (\"created_at\", \"updated_at\",)\nFORUM_LIKE_ADMIN_LIST = (\"user\", \"created_at\")\nFORUM_LIKE_ADMIN_SEARCH = (\"comment\",)",
        "detail": "apps.community_forum.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CONST_HOURS",
        "kind": 5,
        "importPath": "apps.community_forum.utils.constant_utils",
        "description": "apps.community_forum.utils.constant_utils",
        "peekOfCode": "CONST_HOURS = 60 * CONST_MINUTES\nFORUM_CATEGORY_ADMIN_LIST = (\"name\", \"slug\", \"created_at\", \"updated_at\",)\nFORUM_CATEGORY_ADMIN_SEARCH = (\"name\", \"description\", \"slug\",)\nFORUM_CATEGORY_ADMIN_FILTER = (\"created_at\", \"updated_at\",)\nFORUM_COMMENT_ADMIN_LIST = (\"post\", \"content\", \"created_by\", \"created_at\", \"updated_at\")\nFORUM_COMMENT_ADMIN_SEARCH = (\"post__content\", \"content\", \"created_by__username\",)\nFORUM_COMMENT_ADMIN_FILTER = (\"created_at\", \"updated_at\",)\nFORUM_LIKE_ADMIN_LIST = (\"user\", \"created_at\")\nFORUM_LIKE_ADMIN_SEARCH = (\"comment\",)\nFORUM_LIKE_ADMIN_FILTER = (\"created_at\",)",
        "detail": "apps.community_forum.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "FORUM_CATEGORY_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.community_forum.utils.constant_utils",
        "description": "apps.community_forum.utils.constant_utils",
        "peekOfCode": "FORUM_CATEGORY_ADMIN_LIST = (\"name\", \"slug\", \"created_at\", \"updated_at\",)\nFORUM_CATEGORY_ADMIN_SEARCH = (\"name\", \"description\", \"slug\",)\nFORUM_CATEGORY_ADMIN_FILTER = (\"created_at\", \"updated_at\",)\nFORUM_COMMENT_ADMIN_LIST = (\"post\", \"content\", \"created_by\", \"created_at\", \"updated_at\")\nFORUM_COMMENT_ADMIN_SEARCH = (\"post__content\", \"content\", \"created_by__username\",)\nFORUM_COMMENT_ADMIN_FILTER = (\"created_at\", \"updated_at\",)\nFORUM_LIKE_ADMIN_LIST = (\"user\", \"created_at\")\nFORUM_LIKE_ADMIN_SEARCH = (\"comment\",)\nFORUM_LIKE_ADMIN_FILTER = (\"created_at\",)\nFORUM_POST_ADMIN_LIST = (\"thread\", \"content\", \"created_by\", \"created_at\", \"updated_at\", \"is_verified\",)",
        "detail": "apps.community_forum.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "FORUM_CATEGORY_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.community_forum.utils.constant_utils",
        "description": "apps.community_forum.utils.constant_utils",
        "peekOfCode": "FORUM_CATEGORY_ADMIN_SEARCH = (\"name\", \"description\", \"slug\",)\nFORUM_CATEGORY_ADMIN_FILTER = (\"created_at\", \"updated_at\",)\nFORUM_COMMENT_ADMIN_LIST = (\"post\", \"content\", \"created_by\", \"created_at\", \"updated_at\")\nFORUM_COMMENT_ADMIN_SEARCH = (\"post__content\", \"content\", \"created_by__username\",)\nFORUM_COMMENT_ADMIN_FILTER = (\"created_at\", \"updated_at\",)\nFORUM_LIKE_ADMIN_LIST = (\"user\", \"created_at\")\nFORUM_LIKE_ADMIN_SEARCH = (\"comment\",)\nFORUM_LIKE_ADMIN_FILTER = (\"created_at\",)\nFORUM_POST_ADMIN_LIST = (\"thread\", \"content\", \"created_by\", \"created_at\", \"updated_at\", \"is_verified\",)\nFORUM_POST_ADMIN_SEARCH = (\"thread__title\", \"content\", \"created_by__username\",)",
        "detail": "apps.community_forum.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "FORUM_CATEGORY_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.community_forum.utils.constant_utils",
        "description": "apps.community_forum.utils.constant_utils",
        "peekOfCode": "FORUM_CATEGORY_ADMIN_FILTER = (\"created_at\", \"updated_at\",)\nFORUM_COMMENT_ADMIN_LIST = (\"post\", \"content\", \"created_by\", \"created_at\", \"updated_at\")\nFORUM_COMMENT_ADMIN_SEARCH = (\"post__content\", \"content\", \"created_by__username\",)\nFORUM_COMMENT_ADMIN_FILTER = (\"created_at\", \"updated_at\",)\nFORUM_LIKE_ADMIN_LIST = (\"user\", \"created_at\")\nFORUM_LIKE_ADMIN_SEARCH = (\"comment\",)\nFORUM_LIKE_ADMIN_FILTER = (\"created_at\",)\nFORUM_POST_ADMIN_LIST = (\"thread\", \"content\", \"created_by\", \"created_at\", \"updated_at\", \"is_verified\",)\nFORUM_POST_ADMIN_SEARCH = (\"thread__title\", \"content\", \"created_by__username\",)\nFORUM_POST_ADMIN_FILTER = (\"created_at\", \"updated_at\", \"is_verified\",)",
        "detail": "apps.community_forum.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "FORUM_COMMENT_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.community_forum.utils.constant_utils",
        "description": "apps.community_forum.utils.constant_utils",
        "peekOfCode": "FORUM_COMMENT_ADMIN_LIST = (\"post\", \"content\", \"created_by\", \"created_at\", \"updated_at\")\nFORUM_COMMENT_ADMIN_SEARCH = (\"post__content\", \"content\", \"created_by__username\",)\nFORUM_COMMENT_ADMIN_FILTER = (\"created_at\", \"updated_at\",)\nFORUM_LIKE_ADMIN_LIST = (\"user\", \"created_at\")\nFORUM_LIKE_ADMIN_SEARCH = (\"comment\",)\nFORUM_LIKE_ADMIN_FILTER = (\"created_at\",)\nFORUM_POST_ADMIN_LIST = (\"thread\", \"content\", \"created_by\", \"created_at\", \"updated_at\", \"is_verified\",)\nFORUM_POST_ADMIN_SEARCH = (\"thread__title\", \"content\", \"created_by__username\",)\nFORUM_POST_ADMIN_FILTER = (\"created_at\", \"updated_at\", \"is_verified\",)\nFORUM_THREAD_ADMIN_LIST = (\"title\", \"category\", \"created_by\", \"created_at\", \"updated_at\", \"is_closed\",)",
        "detail": "apps.community_forum.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "FORUM_COMMENT_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.community_forum.utils.constant_utils",
        "description": "apps.community_forum.utils.constant_utils",
        "peekOfCode": "FORUM_COMMENT_ADMIN_SEARCH = (\"post__content\", \"content\", \"created_by__username\",)\nFORUM_COMMENT_ADMIN_FILTER = (\"created_at\", \"updated_at\",)\nFORUM_LIKE_ADMIN_LIST = (\"user\", \"created_at\")\nFORUM_LIKE_ADMIN_SEARCH = (\"comment\",)\nFORUM_LIKE_ADMIN_FILTER = (\"created_at\",)\nFORUM_POST_ADMIN_LIST = (\"thread\", \"content\", \"created_by\", \"created_at\", \"updated_at\", \"is_verified\",)\nFORUM_POST_ADMIN_SEARCH = (\"thread__title\", \"content\", \"created_by__username\",)\nFORUM_POST_ADMIN_FILTER = (\"created_at\", \"updated_at\", \"is_verified\",)\nFORUM_THREAD_ADMIN_LIST = (\"title\", \"category\", \"created_by\", \"created_at\", \"updated_at\", \"is_closed\",)\nFORUM_THREAD_ADMIN_SEARCH = (\"title\", \"category__name\", \"created_by__username\",)",
        "detail": "apps.community_forum.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "FORUM_COMMENT_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.community_forum.utils.constant_utils",
        "description": "apps.community_forum.utils.constant_utils",
        "peekOfCode": "FORUM_COMMENT_ADMIN_FILTER = (\"created_at\", \"updated_at\",)\nFORUM_LIKE_ADMIN_LIST = (\"user\", \"created_at\")\nFORUM_LIKE_ADMIN_SEARCH = (\"comment\",)\nFORUM_LIKE_ADMIN_FILTER = (\"created_at\",)\nFORUM_POST_ADMIN_LIST = (\"thread\", \"content\", \"created_by\", \"created_at\", \"updated_at\", \"is_verified\",)\nFORUM_POST_ADMIN_SEARCH = (\"thread__title\", \"content\", \"created_by__username\",)\nFORUM_POST_ADMIN_FILTER = (\"created_at\", \"updated_at\", \"is_verified\",)\nFORUM_THREAD_ADMIN_LIST = (\"title\", \"category\", \"created_by\", \"created_at\", \"updated_at\", \"is_closed\",)\nFORUM_THREAD_ADMIN_SEARCH = (\"title\", \"category__name\", \"created_by__username\",)\nFORUM_THREAD_ADMIN_FILTER = (\"created_at\", \"updated_at\", \"is_closed\",)",
        "detail": "apps.community_forum.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "FORUM_LIKE_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.community_forum.utils.constant_utils",
        "description": "apps.community_forum.utils.constant_utils",
        "peekOfCode": "FORUM_LIKE_ADMIN_LIST = (\"user\", \"created_at\")\nFORUM_LIKE_ADMIN_SEARCH = (\"comment\",)\nFORUM_LIKE_ADMIN_FILTER = (\"created_at\",)\nFORUM_POST_ADMIN_LIST = (\"thread\", \"content\", \"created_by\", \"created_at\", \"updated_at\", \"is_verified\",)\nFORUM_POST_ADMIN_SEARCH = (\"thread__title\", \"content\", \"created_by__username\",)\nFORUM_POST_ADMIN_FILTER = (\"created_at\", \"updated_at\", \"is_verified\",)\nFORUM_THREAD_ADMIN_LIST = (\"title\", \"category\", \"created_by\", \"created_at\", \"updated_at\", \"is_closed\",)\nFORUM_THREAD_ADMIN_SEARCH = (\"title\", \"category__name\", \"created_by__username\",)\nFORUM_THREAD_ADMIN_FILTER = (\"created_at\", \"updated_at\", \"is_closed\",)",
        "detail": "apps.community_forum.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "FORUM_LIKE_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.community_forum.utils.constant_utils",
        "description": "apps.community_forum.utils.constant_utils",
        "peekOfCode": "FORUM_LIKE_ADMIN_SEARCH = (\"comment\",)\nFORUM_LIKE_ADMIN_FILTER = (\"created_at\",)\nFORUM_POST_ADMIN_LIST = (\"thread\", \"content\", \"created_by\", \"created_at\", \"updated_at\", \"is_verified\",)\nFORUM_POST_ADMIN_SEARCH = (\"thread__title\", \"content\", \"created_by__username\",)\nFORUM_POST_ADMIN_FILTER = (\"created_at\", \"updated_at\", \"is_verified\",)\nFORUM_THREAD_ADMIN_LIST = (\"title\", \"category\", \"created_by\", \"created_at\", \"updated_at\", \"is_closed\",)\nFORUM_THREAD_ADMIN_SEARCH = (\"title\", \"category__name\", \"created_by__username\",)\nFORUM_THREAD_ADMIN_FILTER = (\"created_at\", \"updated_at\", \"is_closed\",)",
        "detail": "apps.community_forum.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "FORUM_LIKE_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.community_forum.utils.constant_utils",
        "description": "apps.community_forum.utils.constant_utils",
        "peekOfCode": "FORUM_LIKE_ADMIN_FILTER = (\"created_at\",)\nFORUM_POST_ADMIN_LIST = (\"thread\", \"content\", \"created_by\", \"created_at\", \"updated_at\", \"is_verified\",)\nFORUM_POST_ADMIN_SEARCH = (\"thread__title\", \"content\", \"created_by__username\",)\nFORUM_POST_ADMIN_FILTER = (\"created_at\", \"updated_at\", \"is_verified\",)\nFORUM_THREAD_ADMIN_LIST = (\"title\", \"category\", \"created_by\", \"created_at\", \"updated_at\", \"is_closed\",)\nFORUM_THREAD_ADMIN_SEARCH = (\"title\", \"category__name\", \"created_by__username\",)\nFORUM_THREAD_ADMIN_FILTER = (\"created_at\", \"updated_at\", \"is_closed\",)",
        "detail": "apps.community_forum.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "FORUM_POST_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.community_forum.utils.constant_utils",
        "description": "apps.community_forum.utils.constant_utils",
        "peekOfCode": "FORUM_POST_ADMIN_LIST = (\"thread\", \"content\", \"created_by\", \"created_at\", \"updated_at\", \"is_verified\",)\nFORUM_POST_ADMIN_SEARCH = (\"thread__title\", \"content\", \"created_by__username\",)\nFORUM_POST_ADMIN_FILTER = (\"created_at\", \"updated_at\", \"is_verified\",)\nFORUM_THREAD_ADMIN_LIST = (\"title\", \"category\", \"created_by\", \"created_at\", \"updated_at\", \"is_closed\",)\nFORUM_THREAD_ADMIN_SEARCH = (\"title\", \"category__name\", \"created_by__username\",)\nFORUM_THREAD_ADMIN_FILTER = (\"created_at\", \"updated_at\", \"is_closed\",)",
        "detail": "apps.community_forum.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "FORUM_POST_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.community_forum.utils.constant_utils",
        "description": "apps.community_forum.utils.constant_utils",
        "peekOfCode": "FORUM_POST_ADMIN_SEARCH = (\"thread__title\", \"content\", \"created_by__username\",)\nFORUM_POST_ADMIN_FILTER = (\"created_at\", \"updated_at\", \"is_verified\",)\nFORUM_THREAD_ADMIN_LIST = (\"title\", \"category\", \"created_by\", \"created_at\", \"updated_at\", \"is_closed\",)\nFORUM_THREAD_ADMIN_SEARCH = (\"title\", \"category__name\", \"created_by__username\",)\nFORUM_THREAD_ADMIN_FILTER = (\"created_at\", \"updated_at\", \"is_closed\",)",
        "detail": "apps.community_forum.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "FORUM_POST_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.community_forum.utils.constant_utils",
        "description": "apps.community_forum.utils.constant_utils",
        "peekOfCode": "FORUM_POST_ADMIN_FILTER = (\"created_at\", \"updated_at\", \"is_verified\",)\nFORUM_THREAD_ADMIN_LIST = (\"title\", \"category\", \"created_by\", \"created_at\", \"updated_at\", \"is_closed\",)\nFORUM_THREAD_ADMIN_SEARCH = (\"title\", \"category__name\", \"created_by__username\",)\nFORUM_THREAD_ADMIN_FILTER = (\"created_at\", \"updated_at\", \"is_closed\",)",
        "detail": "apps.community_forum.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "FORUM_THREAD_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.community_forum.utils.constant_utils",
        "description": "apps.community_forum.utils.constant_utils",
        "peekOfCode": "FORUM_THREAD_ADMIN_LIST = (\"title\", \"category\", \"created_by\", \"created_at\", \"updated_at\", \"is_closed\",)\nFORUM_THREAD_ADMIN_SEARCH = (\"title\", \"category__name\", \"created_by__username\",)\nFORUM_THREAD_ADMIN_FILTER = (\"created_at\", \"updated_at\", \"is_closed\",)",
        "detail": "apps.community_forum.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "FORUM_THREAD_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.community_forum.utils.constant_utils",
        "description": "apps.community_forum.utils.constant_utils",
        "peekOfCode": "FORUM_THREAD_ADMIN_SEARCH = (\"title\", \"category__name\", \"created_by__username\",)\nFORUM_THREAD_ADMIN_FILTER = (\"created_at\", \"updated_at\", \"is_closed\",)",
        "detail": "apps.community_forum.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "FORUM_THREAD_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.community_forum.utils.constant_utils",
        "description": "apps.community_forum.utils.constant_utils",
        "peekOfCode": "FORUM_THREAD_ADMIN_FILTER = (\"created_at\", \"updated_at\", \"is_closed\",)",
        "detail": "apps.community_forum.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "ForumView_CategoryList",
        "kind": 6,
        "importPath": "apps.community_forum.views.category.list_forum_categories_views",
        "description": "apps.community_forum.views.category.list_forum_categories_views",
        "peekOfCode": "class ForumView_CategoryList(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        search_query = self.request.GET.get('search', '')\n        if search_query:\n            categories = ForumCategory.objects.filter(threads__title__icontains=search_query).order_by(\"created_at\")\n        else:\n            categories = ForumCategory.objects.all().order_by(\"created_at\")\n        paginator = Paginator(categories, 20)\n        page_number = self.request.GET.get('page')",
        "detail": "apps.community_forum.views.category.list_forum_categories_views",
        "documentation": {}
    },
    {
        "label": "ForumView_CommentVerify",
        "kind": 6,
        "importPath": "apps.community_forum.views.comment.verify_forum_comment_views",
        "description": "apps.community_forum.views.comment.verify_forum_comment_views",
        "peekOfCode": "class ForumView_CommentVerify(LoginRequiredMixin, View):\n    def post(self, request, *args, **kwargs):\n        post_id = self.kwargs.get(\"post_id\")\n        comment_id = self.kwargs.get(\"comment_id\")\n        post = get_object_or_404(ForumPost, id=post_id)\n        comment = get_object_or_404(ForumComment, id=comment_id)\n        if post.is_verified:\n            comment_owner = post.verified_comment.created_by\n            comment_owner.profile.remove_points(ForumRewardActionsNames.GET_MERIT)\n        if post.created_by == request.user:",
        "detail": "apps.community_forum.views.comment.verify_forum_comment_views",
        "documentation": {}
    },
    {
        "label": "ForumView_CommentLike",
        "kind": 6,
        "importPath": "apps.community_forum.views.like.like_comment_views",
        "description": "apps.community_forum.views.like.like_comment_views",
        "peekOfCode": "class ForumView_CommentLike(LoginRequiredMixin, View):\n    def post(self, request, *args, **kwargs):\n        comment_id = self.kwargs.get(\"comment_id\")\n        comment = get_object_or_404(ForumComment, id=comment_id)\n        like, created = ForumLike.objects.get_or_create(user=request.user, comment=comment)\n        if not created:\n            like.delete()\n            comment.like_count -= 1\n            comment.save()\n            comment_owner = comment.created_by",
        "detail": "apps.community_forum.views.like.like_comment_views",
        "documentation": {}
    },
    {
        "label": "ForumView_PostCreate",
        "kind": 6,
        "importPath": "apps.community_forum.views.post.create_forum_post_views",
        "description": "apps.community_forum.views.post.create_forum_post_views",
        "peekOfCode": "class ForumView_PostCreate(LoginRequiredMixin, TemplateView):\n    def post(self, request, *args, **kwargs):\n        thread_id = self.kwargs.get(\"thread_id\")\n        thread = get_object_or_404(ForumThread, id=thread_id)\n        if request.user.profile.user_last_forum_post_at:\n            if (timezone.now() - request.user.profile.user_last_forum_post_at).seconds < (1 * CONST_HOURS):\n                messages.error(request, \"You can only post once per hour.\")\n                return redirect('community_forum:thread_detail', thread_id=thread.id)\n        request.user.profile.user_last_forum_post_at = timezone.now()\n        request.user.profile.save()",
        "detail": "apps.community_forum.views.post.create_forum_post_views",
        "documentation": {}
    },
    {
        "label": "ForumView_ThreadDetail",
        "kind": 6,
        "importPath": "apps.community_forum.views.thread.detail_forum_thread_views",
        "description": "apps.community_forum.views.thread.detail_forum_thread_views",
        "peekOfCode": "class ForumView_ThreadDetail(LoginRequiredMixin, TemplateView):\n    def post(self, request, *args, **kwargs):\n        thread_id = self.kwargs.get(\"thread_id\")\n        thread = get_object_or_404(ForumThread, id=thread_id)\n        post_id = request.POST.get(\"post_id\")\n        post = get_object_or_404(ForumPost, id=post_id)\n        if request.user.profile.user_last_forum_comment_at:\n            if (timezone.now() - request.user.profile.user_last_forum_comment_at).seconds < (5 * CONST_MINUTES):\n                messages.error(request, \"You can only comment once every 5 minutes.\")\n                return redirect('community_forum:thread_detail', thread_id=thread.id)",
        "detail": "apps.community_forum.views.thread.detail_forum_thread_views",
        "documentation": {}
    },
    {
        "label": "ForumView_ThreadList",
        "kind": 6,
        "importPath": "apps.community_forum.views.thread.list_forum_threads_views",
        "description": "apps.community_forum.views.thread.list_forum_threads_views",
        "peekOfCode": "class ForumView_ThreadList(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        category_slug = self.kwargs.get(\"slug\")\n        category = get_object_or_404(ForumCategory, slug=category_slug)\n        context['category'] = category\n        categories = ForumCategory.objects.prefetch_related(\n            Prefetch('threads', queryset=ForumThread.objects.order_by('-created_at'))\n        )\n        context['categories'] = categories",
        "detail": "apps.community_forum.views.thread.list_forum_threads_views",
        "documentation": {}
    },
    {
        "label": "CommunityForumConfig",
        "kind": 6,
        "importPath": "apps.community_forum.apps",
        "description": "apps.community_forum.apps",
        "peekOfCode": "class CommunityForumConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.community_forum'",
        "detail": "apps.community_forum.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.community_forum.urls",
        "description": "apps.community_forum.urls",
        "peekOfCode": "app_name = 'community_forum'\nurlpatterns = [\n    path('categories/', views.ForumView_CategoryList.as_view(\n        template_name='community_forum/category_list.html'), name='category_list'),\n    path('category/<slug:slug>/', views.ForumView_ThreadList.as_view(\n        template_name='community_forum/thread_list.html'\n    ), name='thread_list'),\n    path('thread/<int:thread_id>/', views.ForumView_ThreadDetail.as_view(\n        template_name='community_forum/thread_detail.html'\n    ), name='thread_detail'),",
        "detail": "apps.community_forum.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.community_forum.urls",
        "description": "apps.community_forum.urls",
        "peekOfCode": "urlpatterns = [\n    path('categories/', views.ForumView_CategoryList.as_view(\n        template_name='community_forum/category_list.html'), name='category_list'),\n    path('category/<slug:slug>/', views.ForumView_ThreadList.as_view(\n        template_name='community_forum/thread_list.html'\n    ), name='thread_list'),\n    path('thread/<int:thread_id>/', views.ForumView_ThreadDetail.as_view(\n        template_name='community_forum/thread_detail.html'\n    ), name='thread_detail'),\n    path('thread/<int:thread_id>/create_post/', views.ForumView_PostCreate.as_view(",
        "detail": "apps.community_forum.urls",
        "documentation": {}
    },
    {
        "label": "RunAudioProcessingActionTypesNames",
        "kind": 6,
        "importPath": "apps.core.audio_processing.utils.constant_utils",
        "description": "apps.core.audio_processing.utils.constant_utils",
        "peekOfCode": "class RunAudioProcessingActionTypesNames:\n    TTS = \"tts\"\n    STT = \"stt\"\n    @staticmethod\n    def as_list():\n        return [\n            RunAudioProcessingActionTypesNames.TTS, RunAudioProcessingActionTypesNames.STT\n        ]",
        "detail": "apps.core.audio_processing.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "AudioProcessingExecutor",
        "kind": 6,
        "importPath": "apps.core.audio_processing.audio_processing_executor",
        "description": "apps.core.audio_processing.audio_processing_executor",
        "peekOfCode": "class AudioProcessingExecutor:\n    def __init__(self, assistant, chat):\n        from apps.core.generative_ai.auxiliary_clients.auxiliary_llm_audio_client import AuxiliaryLLMAudioClient\n        self.assistant = assistant\n        self.chat = chat\n        self.client = AuxiliaryLLMAudioClient(assistant=self.assistant, chat_object=self.chat)\n    def convert_audio_to_text(self, audio_file_path: str):\n        from apps.llm_transaction.models import LLMTransaction\n        from apps.core.generative_ai.utils import GPT_DEFAULT_ENCODING_ENGINE\n        from apps.core.generative_ai.utils import ChatRoles",
        "detail": "apps.core.audio_processing.audio_processing_executor",
        "documentation": {}
    },
    {
        "label": "build_from_scratch_brainstorms_system_prompt",
        "kind": 2,
        "importPath": "apps.core.brainstorms.utils.function_utils",
        "description": "apps.core.brainstorms.utils.function_utils",
        "peekOfCode": "def build_from_scratch_brainstorms_system_prompt(session: BrainstormingSession):\n    topic_definition = session.topic_definition\n    constraints = session.constraints\n    prompt = f\"\"\"\n        Your task is to act like a BRAINSTORMING ASSISTANT and help the user generate ideas for the following topic:\n        '''\n        {topic_definition}\n        '''\n        The user has the following constraints about the topic, and you need to be very careful in considering them\n        since you must expect the user to be very sensitive about them:",
        "detail": "apps.core.brainstorms.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "build_from_previous_level_brainstorms_system_prompt",
        "kind": 2,
        "importPath": "apps.core.brainstorms.utils.function_utils",
        "description": "apps.core.brainstorms.utils.function_utils",
        "peekOfCode": "def build_from_previous_level_brainstorms_system_prompt(session: BrainstormingSession,\n                                                        previous_level_bookmarked_ideas: list):\n    topic_definition = session.topic_definition\n    constraints = session.constraints\n    ideas_textual = \"\"\n    for idea in previous_level_bookmarked_ideas:\n        idea: BrainstormingIdea\n        ideas_textual += f\"\"\"\n            --------------------------------------------------\n            - **Idea Title:** {idea.idea_title}",
        "detail": "apps.core.brainstorms.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "build_synthesis_from_level_system_prompt",
        "kind": 2,
        "importPath": "apps.core.brainstorms.utils.function_utils",
        "description": "apps.core.brainstorms.utils.function_utils",
        "peekOfCode": "def build_synthesis_from_level_system_prompt(session: BrainstormingSession, bookmarked_ideas: list):\n    topic_definition = session.topic_definition\n    constraints = session.constraints\n    ideas_textual = \"\"\n    for idea in bookmarked_ideas:\n        idea: BrainstormingIdea\n        ideas_textual += f\"\"\"\n                --------------------------------------------------\n                - **Idea Title:** {idea.idea_title}\n                - **Idea Description:** {idea.idea_description}",
        "detail": "apps.core.brainstorms.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "build_synthesis_from_all_levels_system_prompt",
        "kind": 2,
        "importPath": "apps.core.brainstorms.utils.function_utils",
        "description": "apps.core.brainstorms.utils.function_utils",
        "peekOfCode": "def build_synthesis_from_all_levels_system_prompt(session: BrainstormingSession, bookmarked_ideas: list):\n    topic_definition = session.topic_definition\n    constraints = session.constraints\n    ideas_textual = \"\"\n    for idea in bookmarked_ideas:\n        idea: BrainstormingIdea\n        ideas_textual += f\"\"\"\n                --------------------------------------------------\n                - **Idea Title:** {idea.idea_title}\n                - **Idea Description:** {idea.idea_description}",
        "detail": "apps.core.brainstorms.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "build_deepen_thought_over_idea_system_prompt",
        "kind": 2,
        "importPath": "apps.core.brainstorms.utils.function_utils",
        "description": "apps.core.brainstorms.utils.function_utils",
        "peekOfCode": "def build_deepen_thought_over_idea_system_prompt(idea: BrainstormingIdea):\n    topic_definition = idea.brainstorming_session.topic_definition\n    constraints = idea.brainstorming_session.constraints\n    idea: BrainstormingIdea\n    idea_textual = f\"\"\"\n        --------------------------------------------------\n        - **Idea Title:** {idea.idea_title}\n        - **Idea Description:** {idea.idea_description}\n        --------------------------------------------------\n        ...",
        "detail": "apps.core.brainstorms.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "find_json_presence",
        "kind": 2,
        "importPath": "apps.core.brainstorms.utils.function_utils",
        "description": "apps.core.brainstorms.utils.function_utils",
        "peekOfCode": "def find_json_presence(response: str, decoder=JSONDecoder()):\n    response = f\"\"\"{response}\"\"\"\n    response = response.replace(\"\\n\", \"\").replace(\"'\", '')\n    json_objects = []\n    pos = 0\n    while True:\n        match = response.find('{', pos)\n        if match == -1:\n            break\n        try:",
        "detail": "apps.core.brainstorms.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "BrainstormsExecutor",
        "kind": 6,
        "importPath": "apps.core.brainstorms.brainstorms_executor",
        "description": "apps.core.brainstorms.brainstorms_executor",
        "peekOfCode": "class BrainstormsExecutor:\n    from apps.brainstorms.models import BrainstormingSession\n    def __init__(self, session: BrainstormingSession):\n        self.session = session\n        self.client = OpenAI(api_key=self.session.llm_model.api_key)\n    def _generate_llm_response(self, system_prompt: str):\n        from apps.core.generative_ai.utils import ChatRoles\n        system_message = {\"role\": ChatRoles.SYSTEM.lower(), \"content\": system_prompt}\n        LLMTransaction.objects.create(\n            organization=self.session.organization, model=self.session.llm_model,",
        "detail": "apps.core.brainstorms.brainstorms_executor",
        "documentation": {}
    },
    {
        "label": "fixture_browsers_init",
        "kind": 2,
        "importPath": "apps.core.browsers.tests.conftest",
        "description": "apps.core.browsers.tests.conftest",
        "peekOfCode": "def fixture_browsers_init():\n    return True",
        "detail": "apps.core.browsers.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_browsers_test_services",
        "kind": 2,
        "importPath": "apps.core.browsers.tests.test_services",
        "description": "apps.core.browsers.tests.test_services",
        "peekOfCode": "def test_init_browsers_test_services():\n    assert True",
        "detail": "apps.core.browsers.tests.test_services",
        "documentation": {}
    },
    {
        "label": "SearchEnginesNames",
        "kind": 6,
        "importPath": "apps.core.browsers.utils.constant_utils",
        "description": "apps.core.browsers.utils.constant_utils",
        "peekOfCode": "class SearchEnginesNames:\n    GOOGLE = \"google\"\nclass BrowserURLs:\n    GOOGLE = \"https://www.google.com\"\nclass FindByTypes:\n    ID = By.ID\n    NAME = By.NAME\n    CSS_SELECTOR = By.CSS_SELECTOR\n    XPATH = By.XPATH\n    LINK_TEXT = By.LINK_TEXT",
        "detail": "apps.core.browsers.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BrowserURLs",
        "kind": 6,
        "importPath": "apps.core.browsers.utils.constant_utils",
        "description": "apps.core.browsers.utils.constant_utils",
        "peekOfCode": "class BrowserURLs:\n    GOOGLE = \"https://www.google.com\"\nclass FindByTypes:\n    ID = By.ID\n    NAME = By.NAME\n    CSS_SELECTOR = By.CSS_SELECTOR\n    XPATH = By.XPATH\n    LINK_TEXT = By.LINK_TEXT\n    PARTIAL_LINK_TEXT = By.PARTIAL_LINK_TEXT\n    TAG_NAME = By.TAG_NAME",
        "detail": "apps.core.browsers.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "FindByTypes",
        "kind": 6,
        "importPath": "apps.core.browsers.utils.constant_utils",
        "description": "apps.core.browsers.utils.constant_utils",
        "peekOfCode": "class FindByTypes:\n    ID = By.ID\n    NAME = By.NAME\n    CSS_SELECTOR = By.CSS_SELECTOR\n    XPATH = By.XPATH\n    LINK_TEXT = By.LINK_TEXT\n    PARTIAL_LINK_TEXT = By.PARTIAL_LINK_TEXT\n    TAG_NAME = By.TAG_NAME\n    CLASS_NAME = By.CLASS_NAME\n    @staticmethod",
        "detail": "apps.core.browsers.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BrowserActionsNames",
        "kind": 6,
        "importPath": "apps.core.browsers.utils.constant_utils",
        "description": "apps.core.browsers.utils.constant_utils",
        "peekOfCode": "class BrowserActionsNames:\n    BROWSER_SEARCH = \"browser_search\"\n    CLICK_URL_IN_SEARCH = \"click_url_in_search\"\n    @staticmethod\n    def as_list():\n        return [BrowserActionsNames.BROWSER_SEARCH, BrowserActionsNames.CLICK_URL_IN_SEARCH]\nclass BrowsingModes:\n    STANDARD = \"standard\"\n    WHITELIST = \"whitelist\"\n    BLACKLIST = \"blacklist\"",
        "detail": "apps.core.browsers.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BrowsingModes",
        "kind": 6,
        "importPath": "apps.core.browsers.utils.constant_utils",
        "description": "apps.core.browsers.utils.constant_utils",
        "peekOfCode": "class BrowsingModes:\n    STANDARD = \"standard\"\n    WHITELIST = \"whitelist\"\n    BLACKLIST = \"blacklist\"\nclass BrowsingExecutorOptions:\n    HEADLESS = \"headless\"\n    WINDOW_SIZE = \"--window-size=1920x1080\"",
        "detail": "apps.core.browsers.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BrowsingExecutorOptions",
        "kind": 6,
        "importPath": "apps.core.browsers.utils.constant_utils",
        "description": "apps.core.browsers.utils.constant_utils",
        "peekOfCode": "class BrowsingExecutorOptions:\n    HEADLESS = \"headless\"\n    WINDOW_SIZE = \"--window-size=1920x1080\"",
        "detail": "apps.core.browsers.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "IMPLICIT_WAIT_SECONDS",
        "kind": 5,
        "importPath": "apps.core.browsers.utils.constant_utils",
        "description": "apps.core.browsers.utils.constant_utils",
        "peekOfCode": "IMPLICIT_WAIT_SECONDS = 2\nclass SearchEnginesNames:\n    GOOGLE = \"google\"\nclass BrowserURLs:\n    GOOGLE = \"https://www.google.com\"\nclass FindByTypes:\n    ID = By.ID\n    NAME = By.NAME\n    CSS_SELECTOR = By.CSS_SELECTOR\n    XPATH = By.XPATH",
        "detail": "apps.core.browsers.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BrowsingExecutor",
        "kind": 6,
        "importPath": "apps.core.browsers.browser_executor",
        "description": "apps.core.browsers.browser_executor",
        "peekOfCode": "class BrowsingExecutor:\n    def __init__(self, connection):\n        self.connection = connection\n        self.engine = connection.browser_type\n        self.d = None\n        self.blacklisted_extensions = self.connection.blacklisted_extensions if self.connection else []\n        self.whitelisted_extensions = self.connection.whitelisted_extensions if self.connection else []\n        try:\n            mode = BrowsingModes.STANDARD\n            if self.whitelisted_extensions != [] or self.blacklisted_extensions != []:",
        "detail": "apps.core.browsers.browser_executor",
        "documentation": {}
    },
    {
        "label": "fixture_code_interpreter_init",
        "kind": 2,
        "importPath": "apps.core.code_analyst.tests.conftest",
        "description": "apps.core.code_analyst.tests.conftest",
        "peekOfCode": "def fixture_code_interpreter_init():\n    return True",
        "detail": "apps.core.code_analyst.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_code_interpreter_test_services",
        "kind": 2,
        "importPath": "apps.core.code_analyst.tests.test_services",
        "description": "apps.core.code_analyst.tests.test_services",
        "peekOfCode": "def test_init_code_interpreter_test_services():\n    assert True",
        "detail": "apps.core.code_analyst.tests.test_services",
        "documentation": {}
    },
    {
        "label": "BIN_FILE_FORMAT",
        "kind": 5,
        "importPath": "apps.core.code_analyst.utils.constant_utils",
        "description": "apps.core.code_analyst.utils.constant_utils",
        "peekOfCode": "BIN_FILE_FORMAT = \".bin\"",
        "detail": "apps.core.code_analyst.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "save_object_to_s3_bucket",
        "kind": 2,
        "importPath": "apps.core.code_analyst.utils.function_utils",
        "description": "apps.core.code_analyst.utils.function_utils",
        "peekOfCode": "def save_object_to_s3_bucket(file_format, f_data):\n    file_name = generate_file_object_name(file_format=file_format)\n    bucket_path = f\"{GENERATED_FILES_ROOT_MEDIA_PATH}{file_name}\"\n    uri = f\"{MEDIA_URL}{bucket_path}\"\n    try:\n        s3c = boto3.client('s3')\n        bucket = settings.AWS_STORAGE_BUCKET_NAME\n        s3c.put_object(Bucket=bucket, Key=bucket_path, Body=f_data)\n    except Exception as e:\n        return None",
        "detail": "apps.core.code_analyst.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "save_media_to_s3_bucket",
        "kind": 2,
        "importPath": "apps.core.code_analyst.utils.function_utils",
        "description": "apps.core.code_analyst.utils.function_utils",
        "peekOfCode": "def save_media_to_s3_bucket(file_format, img_data):\n    file_name = generate_file_object_name(file_format=file_format)\n    bucket_path = f\"{GENERATED_IMAGES_ROOT_MEDIA_PATH}{file_name}\"\n    uri = f\"{MEDIA_URL}{bucket_path}\"\n    try:\n        s3c = boto3.client('s3')\n        bucket = settings.AWS_STORAGE_BUCKET_NAME\n        s3c.put_object(Bucket=bucket, Key=bucket_path, Body=img_data)\n    except Exception as e:\n        return None",
        "detail": "apps.core.code_analyst.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "generate_file_object_name",
        "kind": 2,
        "importPath": "apps.core.code_analyst.utils.function_utils",
        "description": "apps.core.code_analyst.utils.function_utils",
        "peekOfCode": "def generate_file_object_name(file_format):\n    try:\n        tmp_uuid_1 = str(uuid4())\n        tmp_uuid_2 = str(uuid4())\n    except Exception as e:\n        return None\n    final_uuid = f\"{tmp_uuid_1}_{tmp_uuid_2}.{file_format}\"\n    return final_uuid\ndef save_file_and_return_uri(file_data, remote):\n    if not remote:",
        "detail": "apps.core.code_analyst.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "save_file_and_return_uri",
        "kind": 2,
        "importPath": "apps.core.code_analyst.utils.function_utils",
        "description": "apps.core.code_analyst.utils.function_utils",
        "peekOfCode": "def save_file_and_return_uri(file_data, remote):\n    if not remote:\n        estimate_file_type = filetype.guess(file_data)\n        if estimate_file_type is None:\n            estimate_file_type = BIN_FILE_FORMAT\n        format_specifier = estimate_file_type.extension\n    else:\n        format_specifier = remote.split(\".\")[-1]\n    return save_object_to_s3_bucket(format_specifier, file_data)\ndef save_files_and_return_uris(file_data_list: list[tuple]):",
        "detail": "apps.core.code_analyst.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "save_files_and_return_uris",
        "kind": 2,
        "importPath": "apps.core.code_analyst.utils.function_utils",
        "description": "apps.core.code_analyst.utils.function_utils",
        "peekOfCode": "def save_files_and_return_uris(file_data_list: list[tuple]):\n    uris = []\n    for data, remote in file_data_list:\n        try:\n            full_uri = save_file_and_return_uri(data, remote)\n            if full_uri is not None:\n                uris.append(full_uri)\n        except Exception as e:\n            continue\n    return uris",
        "detail": "apps.core.code_analyst.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "save_image_and_return_uri",
        "kind": 2,
        "importPath": "apps.core.code_analyst.utils.function_utils",
        "description": "apps.core.code_analyst.utils.function_utils",
        "peekOfCode": "def save_image_and_return_uri(img_data):\n    estimate_file_type = filetype.guess(img_data)\n    if estimate_file_type is None:\n        estimate_file_type = BIN_FILE_FORMAT\n    format_specifier = estimate_file_type.extension\n    return save_media_to_s3_bucket(format_specifier, img_data)\ndef save_images_and_return_uris(img_data_list):\n    uris = []\n    for data in img_data_list:\n        try:",
        "detail": "apps.core.code_analyst.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "save_images_and_return_uris",
        "kind": 2,
        "importPath": "apps.core.code_analyst.utils.function_utils",
        "description": "apps.core.code_analyst.utils.function_utils",
        "peekOfCode": "def save_images_and_return_uris(img_data_list):\n    uris = []\n    for data in img_data_list:\n        try:\n            full_uri = save_image_and_return_uri(data)\n            if full_uri is not None:\n                uris.append(full_uri)\n        except Exception as e:\n            continue\n    return uris",
        "detail": "apps.core.code_analyst.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "CodeAnalystExecutionManager",
        "kind": 6,
        "importPath": "apps.core.code_analyst.code_interpreter_executor",
        "description": "apps.core.code_analyst.code_interpreter_executor",
        "peekOfCode": "class CodeAnalystExecutionManager:\n    def __init__(self, assistant, chat):\n        self.assistant = assistant\n        self.chat = chat\n    def analyze_code_script(self, full_file_paths: list, query_string: str):\n        from apps.core.generative_ai.auxiliary_clients.auxiliary_llm_code_analysis_client import \\\n            AuxiliaryLLMCodeAnalysisManager\n        from apps.core.generative_ai.utils import GPT_DEFAULT_ENCODING_ENGINE\n        from apps.core.generative_ai.utils import ChatRoles\n        try:",
        "detail": "apps.core.code_analyst.code_interpreter_executor",
        "documentation": {}
    },
    {
        "label": "create_classes_helper",
        "kind": 2,
        "importPath": "apps.core.codebase.handler_methods.creation_handler",
        "description": "apps.core.codebase.handler_methods.creation_handler",
        "peekOfCode": "def create_classes_helper(executor):\n    output = {\"status\": True, \"error\": \"\"}\n    conn = executor.connection_object\n    c = executor.connect_c()\n    try:\n        _ = c.collections.create(\n            name=conn.class_name,\n            vectorizer_config=executor.decode_vectorizer(conn.vectorizer),\n            generative_config=wvc.config.Configure.Generative.openai(\n                model=DEFAULT_GENERATIVE_SEARCH_MODEL, temperature=conn.assistant.llm_model.temperature,",
        "detail": "apps.core.codebase.handler_methods.creation_handler",
        "documentation": {}
    },
    {
        "label": "build_repository_orm_structure",
        "kind": 2,
        "importPath": "apps.core.codebase.handler_methods.embedding_handler_repo",
        "description": "apps.core.codebase.handler_methods.embedding_handler_repo",
        "peekOfCode": "def build_repository_orm_structure(document: dict, knowledge_base, path: str):\n    from apps.datasource_codebase.models import CodeBaseRepository\n    _id, error = None, None\n    try:\n        doc_knowledge_base = knowledge_base\n        doc_file_name = path.split(\"/\")[-1]\n        doc_document_uri = path\n        doc_description = \"\"\n        doc_document_content_temporary = \"\"\n        doc_metadata = document[\"metadata\"]",
        "detail": "apps.core.codebase.handler_methods.embedding_handler_repo",
        "documentation": {}
    },
    {
        "label": "build_repository_weaviate_structure",
        "kind": 2,
        "importPath": "apps.core.codebase.handler_methods.embedding_handler_repo",
        "description": "apps.core.codebase.handler_methods.embedding_handler_repo",
        "peekOfCode": "def build_repository_weaviate_structure(document: dict, path: str,\n                                        number_of_chunks: int):\n    document_weaviate_object, error = None, None\n    try:\n        weaviate_document_file_name = path.split(\"/\")[-1]\n        weaviate_document_description = \"\"\n        weaviate_document_metadata = json.dumps(document[\"metadata\"], default=str, sort_keys=True)\n        weaviate_document_number_of_chunks = number_of_chunks\n        weaviate_document_created_at = \"\"\n        document_weaviate_object = {",
        "detail": "apps.core.codebase.handler_methods.embedding_handler_repo",
        "documentation": {}
    },
    {
        "label": "embed_repository_sync",
        "kind": 2,
        "importPath": "apps.core.codebase.handler_methods.embedding_handler_repo",
        "description": "apps.core.codebase.handler_methods.embedding_handler_repo",
        "peekOfCode": "def embed_repository_sync(executor_params, document_id, document_weaviate_object: dict, path: str):\n    from apps.core.codebase.codebase_decoder import CodeBaseDecoder\n    from apps.datasource_codebase.models import (CodeRepositoryStorageConnection, CodeBaseRepository)\n    from apps.datasource_codebase.tasks import add_repository_upload_log\n    conn_id = executor_params[\"connection_id\"]\n    conn_orm_obj = CodeRepositoryStorageConnection.objects.get(id=conn_id)\n    xc = CodeBaseDecoder.get(connection=conn_orm_obj)\n    c = xc.connect_c()\n    error, uuid = None, None\n    try:",
        "detail": "apps.core.codebase.handler_methods.embedding_handler_repo",
        "documentation": {}
    },
    {
        "label": "embed_repository_helper",
        "kind": 2,
        "importPath": "apps.core.codebase.handler_methods.embedding_handler_repo",
        "description": "apps.core.codebase.handler_methods.embedding_handler_repo",
        "peekOfCode": "def embed_repository_helper(executor_params: dict, document: dict, path: str, number_of_chunks: int):\n    from apps.datasource_codebase.models import CodeRepositoryStorageConnection\n    document_id, document_uuid = None, None\n    conn_id = executor_params[\"connection_id\"]\n    conn_orm_obj = CodeRepositoryStorageConnection.objects.get(id=conn_id)\n    try:\n        document_id, error = build_repository_orm_structure(\n            knowledge_base=conn_orm_obj, document=document, path=path)\n        if error:\n            return document_id, document_uuid, error",
        "detail": "apps.core.codebase.handler_methods.embedding_handler_repo",
        "documentation": {}
    },
    {
        "label": "build_chunk_orm_structure",
        "kind": 2,
        "importPath": "apps.core.codebase.handler_methods.embedding_handler_repo_chunk",
        "description": "apps.core.codebase.handler_methods.embedding_handler_repo_chunk",
        "peekOfCode": "def build_chunk_orm_structure(chunk: dict,\n                              knowledge_base,\n                              document_id: int,\n                              document_uuid: str,\n                              path: str,\n                              chunk_index: int):\n    from apps.datasource_codebase.models import CodeBaseRepositoryChunk\n    from apps.datasource_codebase.models import CodeBaseRepository\n    _id, error = None, None\n    try:",
        "detail": "apps.core.codebase.handler_methods.embedding_handler_repo_chunk",
        "documentation": {}
    },
    {
        "label": "build_chunk_weaviate_structure",
        "kind": 2,
        "importPath": "apps.core.codebase.handler_methods.embedding_handler_repo_chunk",
        "description": "apps.core.codebase.handler_methods.embedding_handler_repo_chunk",
        "peekOfCode": "def build_chunk_weaviate_structure(chunk: dict, path: str,\n                                   chunk_index: int,\n                                   document_uuid: str):\n    chunk_weaviate_object, error = None, None\n    try:\n        weaviate_chunk_document_file_name = str(path)\n        weaviate_chunk_number = chunk_index\n        weaviate_chunk_content = chunk[\"page_content\"]\n        weaviate_chunk_metadata = json.dumps(chunk[\"metadata\"], default=str, sort_keys=True)\n        weaviate_chunk_created_at = datetime.datetime.now(datetime.UTC).strftime(\"%Y-%m-%dT%H:%M:%S.%fZ\")",
        "detail": "apps.core.codebase.handler_methods.embedding_handler_repo_chunk",
        "documentation": {}
    },
    {
        "label": "embed_repository_chunk_sync",
        "kind": 2,
        "importPath": "apps.core.codebase.handler_methods.embedding_handler_repo_chunk",
        "description": "apps.core.codebase.handler_methods.embedding_handler_repo_chunk",
        "peekOfCode": "def embed_repository_chunk_sync(executor_params, chunk_id, chunk_weaviate_object: dict):\n    from apps.core.codebase.codebase_decoder import CodeBaseDecoder\n    from apps.datasource_codebase.models import (CodeRepositoryStorageConnection, CodeBaseRepositoryChunk)\n    conn_id = executor_params[\"connection_id\"]\n    conn_orm_obj = CodeRepositoryStorageConnection.objects.get(id=conn_id)\n    xc = CodeBaseDecoder.get(connection=conn_orm_obj)\n    c = xc.connect_c()\n    error = None\n    try:\n        chunk_class_name = f\"{xc.connection_object.class_name}Chunks\"",
        "detail": "apps.core.codebase.handler_methods.embedding_handler_repo_chunk",
        "documentation": {}
    },
    {
        "label": "embed_repository_chunks_helper",
        "kind": 2,
        "importPath": "apps.core.codebase.handler_methods.embedding_handler_repo_chunk",
        "description": "apps.core.codebase.handler_methods.embedding_handler_repo_chunk",
        "peekOfCode": "def embed_repository_chunks_helper(executor_params, chunks: list, path: str, document_id: int,\n                                   document_uuid: str):\n    from apps.datasource_codebase.models import CodeRepositoryStorageConnection\n    from apps.datasource_codebase.tasks import add_repository_upload_log\n    errors = []\n    conn_id = executor_params[\"connection_id\"]\n    conn_orm_obj = CodeRepositoryStorageConnection.objects.get(id=conn_id)\n    try:\n        for i, chunk in enumerate(chunks):\n            chunk_id, error = build_chunk_orm_structure(",
        "detail": "apps.core.codebase.handler_methods.embedding_handler_repo_chunk",
        "documentation": {}
    },
    {
        "label": "delete_weaviate_class_helper",
        "kind": 2,
        "importPath": "apps.core.codebase.handler_methods.removal_handler",
        "description": "apps.core.codebase.handler_methods.removal_handler",
        "peekOfCode": "def delete_weaviate_class_helper(executor, class_name):\n    c = executor.connect_c()\n    output = {\"status\": True, \"error\": \"\"}\n    try:\n        _ = c.collections.delete(class_name)\n        _ = c.collections.delete(f\"{class_name}Chunks\")\n    except Exception as e:\n        output[\"status\"] = False\n        output[\"error\"] = f\"[class_deleter.delete_weaviate_class_helper] Error deleting classes: {e}\"\n    return output",
        "detail": "apps.core.codebase.handler_methods.removal_handler",
        "documentation": {}
    },
    {
        "label": "delete_repository_helper",
        "kind": 2,
        "importPath": "apps.core.codebase.handler_methods.removal_handler_repo",
        "description": "apps.core.codebase.handler_methods.removal_handler_repo",
        "peekOfCode": "def delete_repository_helper(executor, class_name: str, document_uuid):\n    c = executor.connect_c()\n    output = {\"status\": True, \"error\": \"\"}\n    try:\n        _ = c.collections.get(class_name).data.delete_by_id(document_uuid)\n        _ = c.collections.get(f\"{class_name}Chunks\").data.delete_many(\n            where=Filter.by_property(\"repository_uuid\").equal(document_uuid))\n    except Exception as e:\n        output[\"status\"] = False\n        output[\"error\"] = f\"[repository_deleter.delete_repository_helper] Error deleting repository: {e}\"",
        "detail": "apps.core.codebase.handler_methods.removal_handler_repo",
        "documentation": {}
    },
    {
        "label": "DEFAULT_GENERATIVE_SEARCH_MODEL",
        "kind": 5,
        "importPath": "apps.core.codebase.utils.constant_utils",
        "description": "apps.core.codebase.utils.constant_utils",
        "peekOfCode": "DEFAULT_GENERATIVE_SEARCH_MODEL = \"gpt-4\"\nWEAVIATE_INITIALIZATION_TIMEOUT = 60\nWEAVIATE_QUERY_TIMEOUT = 120\nWEAVIATE_INSERT_TIMEOUT = 240\nKNOWLEDGE_BASE_PROVIDERS = {\n    \"WEAVIATE\": {\"code\": \"weaviate\", \"name\": \"Weaviate\"},\n}\nREPOSITORY_WEAVIATE_FIELDS_CONFIG = [\n    wvc.config.Property(\n        name=\"repository_file_name\",",
        "detail": "apps.core.codebase.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "WEAVIATE_INITIALIZATION_TIMEOUT",
        "kind": 5,
        "importPath": "apps.core.codebase.utils.constant_utils",
        "description": "apps.core.codebase.utils.constant_utils",
        "peekOfCode": "WEAVIATE_INITIALIZATION_TIMEOUT = 60\nWEAVIATE_QUERY_TIMEOUT = 120\nWEAVIATE_INSERT_TIMEOUT = 240\nKNOWLEDGE_BASE_PROVIDERS = {\n    \"WEAVIATE\": {\"code\": \"weaviate\", \"name\": \"Weaviate\"},\n}\nREPOSITORY_WEAVIATE_FIELDS_CONFIG = [\n    wvc.config.Property(\n        name=\"repository_file_name\",\n        data_type=wvc.config.DataType.TEXT,",
        "detail": "apps.core.codebase.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "WEAVIATE_QUERY_TIMEOUT",
        "kind": 5,
        "importPath": "apps.core.codebase.utils.constant_utils",
        "description": "apps.core.codebase.utils.constant_utils",
        "peekOfCode": "WEAVIATE_QUERY_TIMEOUT = 120\nWEAVIATE_INSERT_TIMEOUT = 240\nKNOWLEDGE_BASE_PROVIDERS = {\n    \"WEAVIATE\": {\"code\": \"weaviate\", \"name\": \"Weaviate\"},\n}\nREPOSITORY_WEAVIATE_FIELDS_CONFIG = [\n    wvc.config.Property(\n        name=\"repository_file_name\",\n        data_type=wvc.config.DataType.TEXT,\n        vectorize_property_name=True,",
        "detail": "apps.core.codebase.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "WEAVIATE_INSERT_TIMEOUT",
        "kind": 5,
        "importPath": "apps.core.codebase.utils.constant_utils",
        "description": "apps.core.codebase.utils.constant_utils",
        "peekOfCode": "WEAVIATE_INSERT_TIMEOUT = 240\nKNOWLEDGE_BASE_PROVIDERS = {\n    \"WEAVIATE\": {\"code\": \"weaviate\", \"name\": \"Weaviate\"},\n}\nREPOSITORY_WEAVIATE_FIELDS_CONFIG = [\n    wvc.config.Property(\n        name=\"repository_file_name\",\n        data_type=wvc.config.DataType.TEXT,\n        vectorize_property_name=True,\n        tokenization=wvc.config.Tokenization.LOWERCASE",
        "detail": "apps.core.codebase.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "KNOWLEDGE_BASE_PROVIDERS",
        "kind": 5,
        "importPath": "apps.core.codebase.utils.constant_utils",
        "description": "apps.core.codebase.utils.constant_utils",
        "peekOfCode": "KNOWLEDGE_BASE_PROVIDERS = {\n    \"WEAVIATE\": {\"code\": \"weaviate\", \"name\": \"Weaviate\"},\n}\nREPOSITORY_WEAVIATE_FIELDS_CONFIG = [\n    wvc.config.Property(\n        name=\"repository_file_name\",\n        data_type=wvc.config.DataType.TEXT,\n        vectorize_property_name=True,\n        tokenization=wvc.config.Tokenization.LOWERCASE\n    ),",
        "detail": "apps.core.codebase.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "REPOSITORY_WEAVIATE_FIELDS_CONFIG",
        "kind": 5,
        "importPath": "apps.core.codebase.utils.constant_utils",
        "description": "apps.core.codebase.utils.constant_utils",
        "peekOfCode": "REPOSITORY_WEAVIATE_FIELDS_CONFIG = [\n    wvc.config.Property(\n        name=\"repository_file_name\",\n        data_type=wvc.config.DataType.TEXT,\n        vectorize_property_name=True,\n        tokenization=wvc.config.Tokenization.LOWERCASE\n    ),\n    wvc.config.Property(\n        name=\"repository_description\",\n        data_type=wvc.config.DataType.TEXT,",
        "detail": "apps.core.codebase.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "REPOSITORY_CHUNK_WEAVIATE_FIELDS_CONFIG",
        "kind": 5,
        "importPath": "apps.core.codebase.utils.constant_utils",
        "description": "apps.core.codebase.utils.constant_utils",
        "peekOfCode": "REPOSITORY_CHUNK_WEAVIATE_FIELDS_CONFIG = [\n    wvc.config.Property(\n        name=\"chunk_repository_file_name\",\n        data_type=wvc.config.DataType.TEXT,\n        vectorize_property_name=True,\n        tokenization=wvc.config.Tokenization.LOWERCASE\n    ),\n    wvc.config.Property(\n        name=\"chunk_number\",\n        data_type=wvc.config.DataType.INT,",
        "detail": "apps.core.codebase.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CodeBaseDecoder",
        "kind": 6,
        "importPath": "apps.core.codebase.codebase_decoder",
        "description": "apps.core.codebase.codebase_decoder",
        "peekOfCode": "class CodeBaseDecoder:\n    @staticmethod\n    def get(connection):\n        if connection.provider == KNOWLEDGE_BASE_PROVIDERS[\"WEAVIATE\"][\"code\"]:\n            return WeaviateExecutor(connection)",
        "detail": "apps.core.codebase.codebase_decoder",
        "documentation": {}
    },
    {
        "label": "WeaviateExecutor",
        "kind": 6,
        "importPath": "apps.core.codebase.codebase_executor",
        "description": "apps.core.codebase.codebase_executor",
        "peekOfCode": "class WeaviateExecutor:\n    def __init__(self, connection):\n        self.connection_object = connection\n        self.client = None\n    def connect_c(self):\n        try:\n            c = weaviate.connect_to_weaviate_cloud(\n                cluster_url=self.connection_object.host_url,\n                auth_credentials=weaviate.auth.AuthApiKey(api_key=self.connection_object.provider_api_key),\n                headers={\"X-OpenAI-Api-Key\": self.connection_object.vectorizer_api_key},",
        "detail": "apps.core.codebase.codebase_executor",
        "documentation": {}
    },
    {
        "label": "fixture_chat_context_init",
        "kind": 2,
        "importPath": "apps.core.context_memory_manager.tests.conftest",
        "description": "apps.core.context_memory_manager.tests.conftest",
        "peekOfCode": "def fixture_chat_context_init():\n    return True",
        "detail": "apps.core.context_memory_manager.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_chat_context_test_services",
        "kind": 2,
        "importPath": "apps.core.context_memory_manager.tests.test_services",
        "description": "apps.core.context_memory_manager.tests.test_services",
        "peekOfCode": "def test_init_chat_context_test_services():\n    assert True",
        "detail": "apps.core.context_memory_manager.tests.test_services",
        "documentation": {}
    },
    {
        "label": "get_error_on_context_memory_handling_log",
        "kind": 2,
        "importPath": "apps.core.context_memory_manager.utils.function_utils",
        "description": "apps.core.context_memory_manager.utils.function_utils",
        "peekOfCode": "def get_error_on_context_memory_handling_log(error_log: str):\n    structured_log = f\"[ChatContextManager.forget_oldest_chat_messages] An error occurred while creating the \"\n    f\"system prompt for the operation: {str(error_log)}\"\n    return structured_log\ndef get_structured_memory_contents(message):\n    intra_memory_contents = f\"\"\"\n        ________________________________________\n        i. Chat Role: {message[\"role\"]}\n        ii. Context Content:\n        '''",
        "detail": "apps.core.context_memory_manager.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "get_structured_memory_contents",
        "kind": 2,
        "importPath": "apps.core.context_memory_manager.utils.function_utils",
        "description": "apps.core.context_memory_manager.utils.function_utils",
        "peekOfCode": "def get_structured_memory_contents(message):\n    intra_memory_contents = f\"\"\"\n        ________________________________________\n        i. Chat Role: {message[\"role\"]}\n        ii. Context Content:\n        '''\n        {message[\"content\"]}\n        '''\n        ________________________________________\n    \"\"\"",
        "detail": "apps.core.context_memory_manager.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "ContextMemoryManager",
        "kind": 6,
        "importPath": "apps.core.context_memory_manager.context_memory_manager",
        "description": "apps.core.context_memory_manager.context_memory_manager",
        "peekOfCode": "class ContextMemoryManager:\n    @staticmethod\n    def forget_oldest_chat_messages(message_history, maximum_allowed_messages):\n        from apps.core.generative_ai.utils import ChatRoles\n        try:\n            system_prompt = build_chat_history_memory_handling_prompt()\n        except Exception as e:\n            system_prompt = get_error_on_context_memory_handling_log(error_log=str(e))\n        msg = {\"role\": ChatRoles.SYSTEM, \"content\": system_prompt}\n        len_msg_history = len(message_history)",
        "detail": "apps.core.context_memory_manager.context_memory_manager",
        "documentation": {}
    },
    {
        "label": "DataBackupExecutor",
        "kind": 6,
        "importPath": "apps.core.data_backups.data_backup_executor",
        "description": "apps.core.data_backups.data_backup_executor",
        "peekOfCode": "class DataBackupExecutor:\n    class BackupLLMModel:\n        def __init__(self, organization, responsible_user):\n            self.organization = organization\n            self.responsible_user = responsible_user\n        def backup_llm_models(self, backup_name, password):\n            from apps.data_backups.models import DataBackup\n            from apps.data_backups.utils import BackupTypesNames\n            try:\n                queryset = LLMCore.objects.filter(organization=self.organization)",
        "detail": "apps.core.data_backups.data_backup_executor",
        "documentation": {}
    },
    {
        "label": "DEFAULT_MODEL",
        "kind": 5,
        "importPath": "apps.core.data_security.ner.utils.constant_utils",
        "description": "apps.core.data_security.ner.utils.constant_utils",
        "peekOfCode": "DEFAULT_MODEL = 'en_core_web_md'\nLANGUAGE_TO_MODEL_MAPPING = {'en': 'en_core_web_md'}",
        "detail": "apps.core.data_security.ner.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_TO_MODEL_MAPPING",
        "kind": 5,
        "importPath": "apps.core.data_security.ner.utils.constant_utils",
        "description": "apps.core.data_security.ner.utils.constant_utils",
        "peekOfCode": "LANGUAGE_TO_MODEL_MAPPING = {'en': 'en_core_web_md'}",
        "detail": "apps.core.data_security.ner.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "NERExecutor",
        "kind": 6,
        "importPath": "apps.core.data_security.ner.ner_executor",
        "description": "apps.core.data_security.ner.ner_executor",
        "peekOfCode": "class NERExecutor:\n    def __init__(self, ner_id: int):\n        try:\n            self.ner_integration: NERIntegration = NERIntegration.objects.get(id=ner_id)\n        except Exception as e:\n            pass\n        try:\n            self.model = self._decode_model_from_language(self.ner_integration.language)\n        except Exception as e:\n            pass",
        "detail": "apps.core.data_security.ner.ner_executor",
        "documentation": {}
    },
    {
        "label": "build_leanmod_to_expert_assistant_instructions_prompt",
        "kind": 2,
        "importPath": "apps.core.expert_networks.prompts.build_expert_network_to_assistant_instructions_prompt",
        "description": "apps.core.expert_networks.prompts.build_expert_network_to_assistant_instructions_prompt",
        "peekOfCode": "def build_leanmod_to_expert_assistant_instructions_prompt(query_text: str) -> str:\n    return f\"\"\"\n        **WARNING: This is an automated message.**\n            *IMPORTANT*: PLEASE READ FOLLOWING NOTE CAREFULLY !\n            ---\n            YOUR SUBJECT IS 'NOT' A HUMAN. IT 'IS' AN AI LIKE YOU.\n            ---\n            - If you see this, it means this message is sent to you by LEANMOD ORCHESTRATOR assistant,\n            within context of complex task execution. Please know that respondent to your messages is NOT\n            human; instead an AI system like you. The orchestrator is tasked for coordinating execution of",
        "detail": "apps.core.expert_networks.prompts.build_expert_network_to_assistant_instructions_prompt",
        "documentation": {}
    },
    {
        "label": "DEFAULT_EXPERT_ASSISTANT_ERROR_MESSAGE",
        "kind": 5,
        "importPath": "apps.core.expert_networks.prompts.error_messages",
        "description": "apps.core.expert_networks.prompts.error_messages",
        "peekOfCode": "DEFAULT_EXPERT_ASSISTANT_ERROR_MESSAGE = \"The Expert Assistant is not available at the moment. Please try again later.\"",
        "detail": "apps.core.expert_networks.prompts.error_messages",
        "documentation": {}
    },
    {
        "label": "ExpertNetworkExecutor",
        "kind": 6,
        "importPath": "apps.core.expert_networks.expert_network_executor",
        "description": "apps.core.expert_networks.expert_network_executor",
        "peekOfCode": "class ExpertNetworkExecutor:\n    def __init__(self, network):\n        network: ExpertNetwork\n        self.network = network\n    def consult_by_query(self, reference: ExpertNetworkAssistantReference, query: str, image_urls=None,\n                         file_urls=None):\n        from apps.core.generative_ai.gpt_openai_manager import OpenAIGPTClientManager\n        expert_agent: Assistant = reference.assistant\n        structured_order = build_leanmod_to_expert_assistant_instructions_prompt(query_text=query)\n        try:",
        "detail": "apps.core.expert_networks.expert_network_executor",
        "documentation": {}
    },
    {
        "label": "fixture_file_systems_init",
        "kind": 2,
        "importPath": "apps.core.file_systems.tests.conftest",
        "description": "apps.core.file_systems.tests.conftest",
        "peekOfCode": "def fixture_file_systems_init():\n    return True",
        "detail": "apps.core.file_systems.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_file_systems_test_services",
        "kind": 2,
        "importPath": "apps.core.file_systems.tests.test_services",
        "description": "apps.core.file_systems.tests.test_services",
        "peekOfCode": "def test_init_file_systems_test_services():\n    assert True",
        "detail": "apps.core.file_systems.tests.test_services",
        "documentation": {}
    },
    {
        "label": "MAX_CHARACTERS_RETRIEVAL",
        "kind": 5,
        "importPath": "apps.core.file_systems.utils.constant_utils",
        "description": "apps.core.file_systems.utils.constant_utils",
        "peekOfCode": "MAX_CHARACTERS_RETRIEVAL = 8000\nDEFAULT_BANNER_TIMEOUT = 200",
        "detail": "apps.core.file_systems.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DEFAULT_BANNER_TIMEOUT",
        "kind": 5,
        "importPath": "apps.core.file_systems.utils.constant_utils",
        "description": "apps.core.file_systems.utils.constant_utils",
        "peekOfCode": "DEFAULT_BANNER_TIMEOUT = 200",
        "detail": "apps.core.file_systems.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "FileSystemsExecutor",
        "kind": 6,
        "importPath": "apps.core.file_systems.file_systems_executor",
        "description": "apps.core.file_systems.file_systems_executor",
        "peekOfCode": "class FileSystemsExecutor:\n    def __init__(self, connection):\n        self.connection = connection\n        self.client = None\n        self.connect_c()\n        self.schema_str = self.retrieve_file_tree_schema()\n    def connect_c(self):\n        try:\n            ssh_connection_host = self.connection.host_url\n            ssh_port = self.connection.port",
        "detail": "apps.core.file_systems.file_systems_executor",
        "documentation": {}
    },
    {
        "label": "DataSourceFileSystemsOsTypeNames",
        "kind": 6,
        "importPath": "apps.core.file_systems.internal_command_sets",
        "description": "apps.core.file_systems.internal_command_sets",
        "peekOfCode": "class DataSourceFileSystemsOsTypeNames:\n    LINUX = 'linux'\n    MACOS = 'macos'\nLIST_DIRECTORY_RECURSIVE = 'list_directory_recursive'\nINTERNAL_COMMAND_SETS = {\n    LIST_DIRECTORY_RECURSIVE: {\n        'description': 'List directory contents recursively',\n        DataSourceFileSystemsOsTypeNames.LINUX: 'ls -R ../',\n        DataSourceFileSystemsOsTypeNames.MACOS: 'ls -R ../',\n    }",
        "detail": "apps.core.file_systems.internal_command_sets",
        "documentation": {}
    },
    {
        "label": "LIST_DIRECTORY_RECURSIVE",
        "kind": 5,
        "importPath": "apps.core.file_systems.internal_command_sets",
        "description": "apps.core.file_systems.internal_command_sets",
        "peekOfCode": "LIST_DIRECTORY_RECURSIVE = 'list_directory_recursive'\nINTERNAL_COMMAND_SETS = {\n    LIST_DIRECTORY_RECURSIVE: {\n        'description': 'List directory contents recursively',\n        DataSourceFileSystemsOsTypeNames.LINUX: 'ls -R ../',\n        DataSourceFileSystemsOsTypeNames.MACOS: 'ls -R ../',\n    }\n}",
        "detail": "apps.core.file_systems.internal_command_sets",
        "documentation": {}
    },
    {
        "label": "INTERNAL_COMMAND_SETS",
        "kind": 5,
        "importPath": "apps.core.file_systems.internal_command_sets",
        "description": "apps.core.file_systems.internal_command_sets",
        "peekOfCode": "INTERNAL_COMMAND_SETS = {\n    LIST_DIRECTORY_RECURSIVE: {\n        'description': 'List directory contents recursively',\n        DataSourceFileSystemsOsTypeNames.LINUX: 'ls -R ../',\n        DataSourceFileSystemsOsTypeNames.MACOS: 'ls -R ../',\n    }\n}",
        "detail": "apps.core.file_systems.internal_command_sets",
        "documentation": {}
    },
    {
        "label": "fixture_multi_modality_init",
        "kind": 2,
        "importPath": "apps.core.flexible_modalities.tests.conftest",
        "description": "apps.core.flexible_modalities.tests.conftest",
        "peekOfCode": "def fixture_multi_modality_init():\n    return True",
        "detail": "apps.core.flexible_modalities.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_multi_modality_functions_test_services",
        "kind": 2,
        "importPath": "apps.core.flexible_modalities.tests.test_services",
        "description": "apps.core.flexible_modalities.tests.test_services",
        "peekOfCode": "def test_init_multi_modality_functions_test_services():\n    assert True\ndef test_init_multi_modality_apis_test_services():\n    assert True\ndef test_init_multi_modality_scripts_test_services():\n    assert True",
        "detail": "apps.core.flexible_modalities.tests.test_services",
        "documentation": {}
    },
    {
        "label": "test_init_multi_modality_apis_test_services",
        "kind": 2,
        "importPath": "apps.core.flexible_modalities.tests.test_services",
        "description": "apps.core.flexible_modalities.tests.test_services",
        "peekOfCode": "def test_init_multi_modality_apis_test_services():\n    assert True\ndef test_init_multi_modality_scripts_test_services():\n    assert True",
        "detail": "apps.core.flexible_modalities.tests.test_services",
        "documentation": {}
    },
    {
        "label": "test_init_multi_modality_scripts_test_services",
        "kind": 2,
        "importPath": "apps.core.flexible_modalities.tests.test_services",
        "description": "apps.core.flexible_modalities.tests.test_services",
        "peekOfCode": "def test_init_multi_modality_scripts_test_services():\n    assert True",
        "detail": "apps.core.flexible_modalities.tests.test_services",
        "documentation": {}
    },
    {
        "label": "CustomAPIExecutor",
        "kind": 6,
        "importPath": "apps.core.flexible_modalities.custom_api_executor",
        "description": "apps.core.flexible_modalities.custom_api_executor",
        "peekOfCode": "class CustomAPIExecutor:\n    def __init__(self, context_organization, context_assistant, api):\n        self.api = api\n        self.context_organization = context_organization\n        self.context_assistant = context_assistant\n    def execute_custom_api(self, endpoint_name: str, path_values=None, query_values=None, body_values=None):\n        from apps.core.generative_ai.utils import GPT_DEFAULT_ENCODING_ENGINE\n        from apps.core.generative_ai.utils import ChatRoles\n        api_id = self.api.id\n        promise = mm_api_execution_task.delay(",
        "detail": "apps.core.flexible_modalities.custom_api_executor",
        "documentation": {}
    },
    {
        "label": "CustomFunctionExecutor",
        "kind": 6,
        "importPath": "apps.core.flexible_modalities.custom_function_executor",
        "description": "apps.core.flexible_modalities.custom_function_executor",
        "peekOfCode": "class CustomFunctionExecutor:\n    def __init__(self, context_organization, context_assistant, function):\n        self.function = function\n        self.context_organization = context_organization\n        self.context_assistant = context_assistant\n    def execute_custom_function(self, input_data):\n        from apps.core.generative_ai.utils import GPT_DEFAULT_ENCODING_ENGINE\n        from apps.core.generative_ai.utils import ChatRoles\n        function_id = self.function.id\n        promise = mm_function_execution_task.delay(function_id, input_data)",
        "detail": "apps.core.flexible_modalities.custom_function_executor",
        "documentation": {}
    },
    {
        "label": "CustomScriptsContentRetriever",
        "kind": 6,
        "importPath": "apps.core.flexible_modalities.custom_script_executor",
        "description": "apps.core.flexible_modalities.custom_script_executor",
        "peekOfCode": "class CustomScriptsContentRetriever:\n    def __init__(self, context_organization, context_assistant, script):\n        self.script = script\n        self.context_organization = context_organization\n        self.context_assistant = context_assistant\n    def retrieve_custom_script_content(self):\n        from apps.core.generative_ai.utils import GPT_DEFAULT_ENCODING_ENGINE\n        from apps.core.generative_ai.utils import ChatRoles\n        script = self.script\n        script_content = script.script_content",
        "detail": "apps.core.flexible_modalities.custom_script_executor",
        "documentation": {}
    },
    {
        "label": "AuxiliaryLLMAnalystClient",
        "kind": 6,
        "importPath": "apps.core.generative_ai.auxiliary_clients.auxiliary_llm_analyst_client",
        "description": "apps.core.generative_ai.auxiliary_clients.auxiliary_llm_analyst_client",
        "peekOfCode": "class AuxiliaryLLMAnalystClient:\n    def __init__(self, assistant, chat_object):\n        self.assistant = assistant\n        self.chat = chat_object\n        self.connection = OpenAI(api_key=assistant.llm_model.api_key)\n    def interrogate_file(self, full_file_paths: list, query_string: str, interpretation_temperature: float):\n        c = self.connection\n        if len(full_file_paths) > CONCRETE_LIMIT_SINGLE_FILE_INTERPRETATION:\n            return get_number_of_files_too_high_log(max=CONCRETE_LIMIT_SINGLE_FILE_INTERPRETATION), [], []\n        contents = []",
        "detail": "apps.core.generative_ai.auxiliary_clients.auxiliary_llm_analyst_client",
        "documentation": {}
    },
    {
        "label": "AuxiliaryLLMAudioClient",
        "kind": 6,
        "importPath": "apps.core.generative_ai.auxiliary_clients.auxiliary_llm_audio_client",
        "description": "apps.core.generative_ai.auxiliary_clients.auxiliary_llm_audio_client",
        "peekOfCode": "class AuxiliaryLLMAudioClient:\n    def __init__(self, assistant, chat_object):\n        self.assistant = assistant\n        self.chat = chat_object\n        self.connection = OpenAI(api_key=assistant.llm_model.api_key)\n    def tts_audio_content_message(self, message, extension=\"mp3\", voice=OpenAITTSVoiceNames.ONYX):\n        final_output = {\"success\": False, \"message\": \"\", \"audio_url\": \"\"}\n        msg_output = message.message_text_content\n        try:\n            model_name = TTS_MODEL_NAME",
        "detail": "apps.core.generative_ai.auxiliary_clients.auxiliary_llm_audio_client",
        "documentation": {}
    },
    {
        "label": "AuxiliaryLLMCodeAnalysisManager",
        "kind": 6,
        "importPath": "apps.core.generative_ai.auxiliary_clients.auxiliary_llm_code_analysis_client",
        "description": "apps.core.generative_ai.auxiliary_clients.auxiliary_llm_code_analysis_client",
        "peekOfCode": "class AuxiliaryLLMCodeAnalysisManager:\n    def __init__(self, assistant, chat_object):\n        self.assistant = assistant\n        self.chat = chat_object\n        self.connection = OpenAI(api_key=assistant.llm_model.api_key)\n    def analyze_code_script(self, full_file_paths: list, query_string: str, interpretation_temperature: float):\n        c = self.connection\n        if len(full_file_paths) > CONCRETE_LIMIT_SINGLE_FILE_INTERPRETATION:\n            return get_number_of_codes_too_high_log(max=CONCRETE_LIMIT_SINGLE_FILE_INTERPRETATION), [], []\n        f_data = []",
        "detail": "apps.core.generative_ai.auxiliary_clients.auxiliary_llm_code_analysis_client",
        "documentation": {}
    },
    {
        "label": "AuxiliaryLLMMachineLearningClient",
        "kind": 6,
        "importPath": "apps.core.generative_ai.auxiliary_clients.auxiliary_llm_machine_learning_client",
        "description": "apps.core.generative_ai.auxiliary_clients.auxiliary_llm_machine_learning_client",
        "peekOfCode": "class AuxiliaryLLMMachineLearningClient:\n    def __init__(self, assistant, chat_object):\n        self.assistant = assistant\n        self.chat = chat_object\n        self.connection = OpenAI(api_key=assistant.llm_model.api_key)\n    def infer_prediction_with_ml(self, ml_model_path, input_data_urls: list, query_string: str,\n                                 interpretation_temperature: float = 0.25):\n        c = self.connection\n        if len(input_data_urls) > CONCRETE_LIMIT_ML_MODEL_PREDICTIONS:\n            return get_number_of_ml_predictions_too_high_log(max=CONCRETE_LIMIT_ML_MODEL_PREDICTIONS), [], []",
        "detail": "apps.core.generative_ai.auxiliary_clients.auxiliary_llm_machine_learning_client",
        "documentation": {}
    },
    {
        "label": "AuxiliaryLLMVisionClient",
        "kind": 6,
        "importPath": "apps.core.generative_ai.auxiliary_clients.auxiliary_llm_vision_client",
        "description": "apps.core.generative_ai.auxiliary_clients.auxiliary_llm_vision_client",
        "peekOfCode": "class AuxiliaryLLMVisionClient:\n    def __init__(self, assistant, chat_object):\n        self.assistant = assistant\n        self.chat = chat_object\n        self.connection = OpenAI(api_key=assistant.llm_model.api_key)\n    def interpret_image_content(self, full_image_paths: list, query_string: str, interpretation_temperature: float,\n                                interpretation_maximum_tokens: int):\n        c = self.connection\n        if len(full_image_paths) > CONCRETE_LIMIT_SINGLE_FILE_INTERPRETATION:\n            return get_number_of_files_too_high_log(max=CONCRETE_LIMIT_SINGLE_FILE_INTERPRETATION)",
        "detail": "apps.core.generative_ai.auxiliary_clients.auxiliary_llm_vision_client",
        "documentation": {}
    },
    {
        "label": "AuxiliaryLLMVisualClient",
        "kind": 6,
        "importPath": "apps.core.generative_ai.auxiliary_clients.auxiliary_llm_visual_client",
        "description": "apps.core.generative_ai.auxiliary_clients.auxiliary_llm_visual_client",
        "peekOfCode": "class AuxiliaryLLMVisualClient:\n    def __init__(self, assistant, chat_object):\n        self.assistant = assistant\n        self.chat = chat_object\n        self.connection = OpenAI(api_key=assistant.llm_model.api_key)\n    def generate_image(self, prompt: str, image_size: str, quality: str):\n        final_output = {\"success\": False, \"message\": \"\", \"image_url\": \"\"}\n        gen_img_llm_model = DEFAULT_IMAGE_GENERATION_MODEL\n        if image_size == DefaultImageResolutionChoicesNames.SQUARE:\n            image_size = DefaultImageResolutionChoices.Min1024Max1792.SQUARE",
        "detail": "apps.core.generative_ai.auxiliary_clients.auxiliary_llm_visual_client",
        "documentation": {}
    },
    {
        "label": "ReasoningAuxiliaryLLMManager",
        "kind": 6,
        "importPath": "apps.core.generative_ai.auxiliary_clients.auxiliary_reasoning_client",
        "description": "apps.core.generative_ai.auxiliary_clients.auxiliary_reasoning_client",
        "peekOfCode": "class ReasoningAuxiliaryLLMManager:\n    def __init__(self, assistant, chat_object):\n        self.connection = OpenAI(api_key=assistant.llm_model.api_key)\n        self.assistant = assistant\n        self.chat = chat_object\n    def process_reasoning(self, query: str):\n        model_name = None\n        if self.assistant.multi_step_reasoning_capability_choice == MultiStepReasoningCapabilityChoicesNames.NONE:\n            final_output = get_no_reasoning_capability_error_log()\n            return final_output",
        "detail": "apps.core.generative_ai.auxiliary_clients.auxiliary_reasoning_client",
        "documentation": {}
    },
    {
        "label": "GENERIC_AFFIRMATION_PROMPT",
        "kind": 5,
        "importPath": "apps.core.generative_ai.auxiliary_methods.affirmations.affirmation_instructions",
        "description": "apps.core.generative_ai.auxiliary_methods.affirmations.affirmation_instructions",
        "peekOfCode": "GENERIC_AFFIRMATION_PROMPT = f\"\"\"\n    **Affirmation Prompt**\n    - DO NOT ASK QUESTIONS TO ME. YOU ARE A ZERO-SHOT MODEL, PEOPLE WON'T CHAT WITH YOU, JUST PROVIDE YOUR BEST ANSWER.\n\"\"\"\nMACHINE_LEARNING_AFFIRMATION_PROMPT = f\"\"\"\n    **Machine Learning Affirmation Prompt**\n    - NEVER USE KERAS AND TENSORFLOW. ALWAYS USE PYTORCH. ALWAYS USE THE MODEL THAT IS SHARED WITH YOU, DO NOT DEVELOP MODELS YOURSELF.\n    - You will receive data and the \".pth\" model for prediction. You will use the model to predict the data and provide the results.\n\"\"\"",
        "detail": "apps.core.generative_ai.auxiliary_methods.affirmations.affirmation_instructions",
        "documentation": {}
    },
    {
        "label": "MACHINE_LEARNING_AFFIRMATION_PROMPT",
        "kind": 5,
        "importPath": "apps.core.generative_ai.auxiliary_methods.affirmations.affirmation_instructions",
        "description": "apps.core.generative_ai.auxiliary_methods.affirmations.affirmation_instructions",
        "peekOfCode": "MACHINE_LEARNING_AFFIRMATION_PROMPT = f\"\"\"\n    **Machine Learning Affirmation Prompt**\n    - NEVER USE KERAS AND TENSORFLOW. ALWAYS USE PYTORCH. ALWAYS USE THE MODEL THAT IS SHARED WITH YOU, DO NOT DEVELOP MODELS YOURSELF.\n    - You will receive data and the \".pth\" model for prediction. You will use the model to predict the data and provide the results.\n\"\"\"",
        "detail": "apps.core.generative_ai.auxiliary_methods.affirmations.affirmation_instructions",
        "documentation": {}
    },
    {
        "label": "get_technical_error_log",
        "kind": 2,
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "peekOfCode": "def get_technical_error_log(error_logs: str):\n    return f\"\"\"\n        Technical Details about the Error:\n            If the issue persists, please contact the platform administrator and deliver the error message below to\n            provide a solution to the problem as soon as possible.\n            '''\n            {str(error_logs)}\n            '''\n\"\"\"\ndef get_json_decode_error_log(error_logs: str):",
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "get_json_decode_error_log",
        "kind": 2,
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "peekOfCode": "def get_json_decode_error_log(error_logs: str):\n    return f\"\"\"\n        **SYSTEM MESSAGE:**\n        - An error occurred while decoding the JSON. This can be related to the incorrect formatting.\n        Please make sure that the response is in the correct JSON format.\n        Error Details:\n        '''\n        {str(error_logs)}\n        '''\n    \"\"\"",
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "get_image_generation_error_log",
        "kind": 2,
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "peekOfCode": "def get_image_generation_error_log(error_logs: str):\n    return f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while generating the image.\n    Error Details:\n    '''\n    {str(error_logs)}\n    '''\n    \"\"\"\ndef get_image_modification_error_log(error_logs: str):",
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "get_image_modification_error_log",
        "kind": 2,
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "peekOfCode": "def get_image_modification_error_log(error_logs: str):\n    return f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while editing the image.\n    Error Details:\n    '''\n    {str(error_logs)}\n    '''\n    \"\"\"\ndef get_image_variation_error_log(error_logs: str):",
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "get_image_variation_error_log",
        "kind": 2,
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "peekOfCode": "def get_image_variation_error_log(error_logs: str):\n    return f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while dreaming variation of the image.\n    Error Details:\n    '''\n    {str(error_logs)}\n    '''\n    \"\"\"\ndef get_statistics_analysis_error_log(error_logs: str):",
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "get_statistics_analysis_error_log",
        "kind": 2,
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "peekOfCode": "def get_statistics_analysis_error_log(error_logs: str):\n    return f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while analyzing the tenant statistics.\n    Error Details:\n    '''\n    {str(error_logs)}\n    '''\n    \"\"\"\ndef get_audio_reading_error_log(error_logs: str):",
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "get_audio_reading_error_log",
        "kind": 2,
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "peekOfCode": "def get_audio_reading_error_log(error_logs: str):\n    return f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while reading the audio file.\n    Error Details:\n    '''\n    {str(error_logs)}\n    '''\n    \"\"\"\ndef get_audio_transcription_error_log(error_logs: str):",
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "get_audio_transcription_error_log",
        "kind": 2,
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "peekOfCode": "def get_audio_transcription_error_log(error_logs: str):\n    return f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while transcribing the audio.\n    Error Details:\n    '''\n    {str(error_logs)}\n    '''\n    \"\"\"\ndef get_audio_generation_error_log(error_logs: str):",
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "get_audio_generation_error_log",
        "kind": 2,
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "peekOfCode": "def get_audio_generation_error_log(error_logs: str):\n    return f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while generating the audio.\n    Error Details:\n    '''\n    {str(error_logs)}\n    '''\n    \"\"\"\ndef get_audio_upload_error_log(error_logs: str):",
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "get_audio_upload_error_log",
        "kind": 2,
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "peekOfCode": "def get_audio_upload_error_log(error_logs: str):\n    return f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while uploading the audio.\n    Error Details:\n    '''\n    {str(error_logs)}\n    '''\n    \"\"\"\ndef get_no_reasoning_capability_error_log():",
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "get_no_reasoning_capability_error_log",
        "kind": 2,
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "peekOfCode": "def get_no_reasoning_capability_error_log():\n    return f\"\"\"\n    **SYSTEM MESSAGE:**\n    - The agent does not have the reasoning capability. If you would like to use the reasoning capability,\n    please enable it in the agent settings.\n    \"\"\"\ndef get_default_reasoning_error_log(error_logs: str):\n    return f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while processing the reasoning operation request.",
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "get_default_reasoning_error_log",
        "kind": 2,
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "peekOfCode": "def get_default_reasoning_error_log(error_logs: str):\n    return f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while processing the reasoning operation request.\n    Error Details:\n    '''\n    {str(error_logs)}\n    '''\n    \"\"\"",
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "ANALYST_PREPARATION_ERROR_LOG",
        "kind": 5,
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "peekOfCode": "ANALYST_PREPARATION_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while preparing the agent for the file interpretation.\n\"\"\"\nANALYST_THREAD_CREATION_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while preparing the thread for the file interpretation.\n\"\"\"\nANALYST_RESPONSE_RETRIEVAL_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**",
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "ANALYST_THREAD_CREATION_ERROR_LOG",
        "kind": 5,
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "peekOfCode": "ANALYST_THREAD_CREATION_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while preparing the thread for the file interpretation.\n\"\"\"\nANALYST_RESPONSE_RETRIEVAL_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while retrieving the response from the file interpreter assistant.\n\"\"\"\nMEDIA_MANAGER_CLEANUP_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE**:",
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "ANALYST_RESPONSE_RETRIEVAL_ERROR_LOG",
        "kind": 5,
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "peekOfCode": "ANALYST_RESPONSE_RETRIEVAL_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while retrieving the response from the file interpreter assistant.\n\"\"\"\nMEDIA_MANAGER_CLEANUP_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE**:\n     - An error occurred while cleaning up the file storage, assistant, and thread.\n\"\"\"\nIMAGE_ANALYST_RESPONSE_RETRIEVAL_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**",
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "MEDIA_MANAGER_CLEANUP_ERROR_LOG",
        "kind": 5,
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "peekOfCode": "MEDIA_MANAGER_CLEANUP_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE**:\n     - An error occurred while cleaning up the file storage, assistant, and thread.\n\"\"\"\nIMAGE_ANALYST_RESPONSE_RETRIEVAL_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while retrieving the response from the image interpreter assistant.\n\"\"\"\nIMAGE_ANALYST_RESPONSE_PROCESSING_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**",
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "IMAGE_ANALYST_RESPONSE_RETRIEVAL_ERROR_LOG",
        "kind": 5,
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "peekOfCode": "IMAGE_ANALYST_RESPONSE_RETRIEVAL_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while retrieving the response from the image interpreter assistant.\n\"\"\"\nIMAGE_ANALYST_RESPONSE_PROCESSING_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while processing the response from the image interpreter assistant.\n\"\"\"\nML_MODEL_NOT_FOUND_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**",
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "IMAGE_ANALYST_RESPONSE_PROCESSING_ERROR_LOG",
        "kind": 5,
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "peekOfCode": "IMAGE_ANALYST_RESPONSE_PROCESSING_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while processing the response from the image interpreter assistant.\n\"\"\"\nML_MODEL_NOT_FOUND_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n    - The model could not be found.\n\"\"\"\nML_MODEL_LOADING_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**",
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "ML_MODEL_NOT_FOUND_ERROR_LOG",
        "kind": 5,
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "peekOfCode": "ML_MODEL_NOT_FOUND_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n    - The model could not be found.\n\"\"\"\nML_MODEL_LOADING_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while loading the model.\n\"\"\"\nML_MODEL_OPENAI_UPLOAD_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**",
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "ML_MODEL_LOADING_ERROR_LOG",
        "kind": 5,
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "peekOfCode": "ML_MODEL_LOADING_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while loading the model.\n\"\"\"\nML_MODEL_OPENAI_UPLOAD_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n     - An error occurred while uploading the model to the OpenAI server.\n\"\"\"\nML_MODEL_AGENT_PREPARATION_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**",
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "ML_MODEL_OPENAI_UPLOAD_ERROR_LOG",
        "kind": 5,
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "peekOfCode": "ML_MODEL_OPENAI_UPLOAD_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n     - An error occurred while uploading the model to the OpenAI server.\n\"\"\"\nML_MODEL_AGENT_PREPARATION_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while preparing the agent for the ML model prediction.\n\"\"\"\nML_MODEL_THREAD_CREATION_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**",
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "ML_MODEL_AGENT_PREPARATION_ERROR_LOG",
        "kind": 5,
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "peekOfCode": "ML_MODEL_AGENT_PREPARATION_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while preparing the agent for the ML model prediction.\n\"\"\"\nML_MODEL_THREAD_CREATION_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while preparing the thread for the ML model prediction.\n\"\"\"\nML_MODEL_RESPONSE_RETRIEVAL_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**",
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "ML_MODEL_THREAD_CREATION_ERROR_LOG",
        "kind": 5,
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "peekOfCode": "ML_MODEL_THREAD_CREATION_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while preparing the thread for the ML model prediction.\n\"\"\"\nML_MODEL_RESPONSE_RETRIEVAL_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while retrieving the response from the ML model prediction assistant.\n\"\"\"\nML_MODEL_CLEANUP_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**",
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "ML_MODEL_RESPONSE_RETRIEVAL_ERROR_LOG",
        "kind": 5,
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "peekOfCode": "ML_MODEL_RESPONSE_RETRIEVAL_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while retrieving the response from the ML model prediction assistant.\n\"\"\"\nML_MODEL_CLEANUP_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while cleaning up the file storage, assistant, and thread.\n\"\"\"\nCODE_ANALYST_AGENT_PREPARATION_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**",
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "ML_MODEL_CLEANUP_ERROR_LOG",
        "kind": 5,
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "peekOfCode": "ML_MODEL_CLEANUP_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while cleaning up the file storage, assistant, and thread.\n\"\"\"\nCODE_ANALYST_AGENT_PREPARATION_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while preparing the agent for the code interpretation.\n\"\"\"\nCODE_ANALYST_THREAD_CREATION_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**",
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "CODE_ANALYST_AGENT_PREPARATION_ERROR_LOG",
        "kind": 5,
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "peekOfCode": "CODE_ANALYST_AGENT_PREPARATION_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while preparing the agent for the code interpretation.\n\"\"\"\nCODE_ANALYST_THREAD_CREATION_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while preparing the thread for the code interpretation.\n\"\"\"\nCODE_ANALYST_RESPONSE_RETRIEVAL_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**",
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "CODE_ANALYST_THREAD_CREATION_ERROR_LOG",
        "kind": 5,
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "peekOfCode": "CODE_ANALYST_THREAD_CREATION_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while preparing the thread for the code interpretation.\n\"\"\"\nCODE_ANALYST_RESPONSE_RETRIEVAL_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while retrieving the response from the code interpreter assistant.\n\"\"\"\nCODE_ANALYST_CLEANUP_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**",
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "CODE_ANALYST_RESPONSE_RETRIEVAL_ERROR_LOG",
        "kind": 5,
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "peekOfCode": "CODE_ANALYST_RESPONSE_RETRIEVAL_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while retrieving the response from the code interpreter assistant.\n\"\"\"\nCODE_ANALYST_CLEANUP_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while cleaning up the file storage, assistant, and thread.\n\"\"\"\ndef get_technical_error_log(error_logs: str):\n    return f\"\"\"",
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "CODE_ANALYST_CLEANUP_ERROR_LOG",
        "kind": 5,
        "importPath": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "peekOfCode": "CODE_ANALYST_CLEANUP_ERROR_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n    - An error occurred while cleaning up the file storage, assistant, and thread.\n\"\"\"\ndef get_technical_error_log(error_logs: str):\n    return f\"\"\"\n        Technical Details about the Error:\n            If the issue persists, please contact the platform administrator and deliver the error message below to\n            provide a solution to the problem as soon as possible.\n            '''",
        "detail": "apps.core.generative_ai.auxiliary_methods.errors.error_log_prompts",
        "documentation": {}
    },
    {
        "label": "get_maximum_tool_chains_reached_log",
        "kind": 2,
        "importPath": "apps.core.generative_ai.auxiliary_methods.json_operations.json_operation_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.json_operations.json_operation_prompts",
        "peekOfCode": "def get_maximum_tool_chains_reached_log(final_response: str):\n    log = f\"\"\"\n        {final_response}\n        ---\n        System Message:\n        The maximum number of multiple tool chains is reached. No further chaining can be executed. If you believe\n        you need to be able to chain more tools together, please increase the limit in the agent settings.\n        The response generation cycle is going to be stopped now.\n        ---\n    \"\"\"",
        "detail": "apps.core.generative_ai.auxiliary_methods.json_operations.json_operation_prompts",
        "documentation": {}
    },
    {
        "label": "get_maximum_tool_attempts_reached_log",
        "kind": 2,
        "importPath": "apps.core.generative_ai.auxiliary_methods.json_operations.json_operation_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.json_operations.json_operation_prompts",
        "peekOfCode": "def get_maximum_tool_attempts_reached_log(final_response: str):\n    log = f\"\"\"\n        {final_response}\n        ---\n        System Message:\n        The maximum number of attempts for this tool has been reached. No further attempts can be made\n        for retrieval via this tool. If you believe you need to be able to make more attempts for using the same\n        tool, please increase the limit in the agent settings.\n        The response generation cycle is going to be stopped now.\n        ---",
        "detail": "apps.core.generative_ai.auxiliary_methods.json_operations.json_operation_prompts",
        "documentation": {}
    },
    {
        "label": "embed_tool_call_in_prompt",
        "kind": 2,
        "importPath": "apps.core.generative_ai.auxiliary_methods.json_operations.json_operation_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.json_operations.json_operation_prompts",
        "peekOfCode": "def embed_tool_call_in_prompt(json_parts_of_response: str):\n    prompt = f\"\"\"\n    **Assistant Tool Call:**\n    ```\n    {json_parts_of_response}\n    ```\n    ---\n    \"\"\"\n    return prompt",
        "detail": "apps.core.generative_ai.auxiliary_methods.json_operations.json_operation_prompts",
        "documentation": {}
    },
    {
        "label": "get_number_of_files_too_high_log",
        "kind": 2,
        "importPath": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "peekOfCode": "def get_number_of_files_too_high_log(max):\n    return f\"\"\"\n        **SYSTEM MESSAGE:**\n        - The number of files to be interpreted is too high. Provide a smaller number of files. The maximum number\n        supported by the system is {max}.\n    \"\"\"\ndef get_number_of_ml_predictions_too_high_log(max):\n    return f\"\"\"\n        **SYSTEM MESSAGE:**\n        - The number of input data to be predicted is too high. Please provide a smaller number of input data. The",
        "detail": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "documentation": {}
    },
    {
        "label": "get_number_of_ml_predictions_too_high_log",
        "kind": 2,
        "importPath": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "peekOfCode": "def get_number_of_ml_predictions_too_high_log(max):\n    return f\"\"\"\n        **SYSTEM MESSAGE:**\n        - The number of input data to be predicted is too high. Please provide a smaller number of input data. The\n        maximum number supported by the system is {max}.\n    \"\"\"\ndef get_number_of_codes_too_high_log(max):\n    return f\"\"\"\n        **SYSTEM MESSAGE:**\n        - The number of codes to be executed is too high. Please provide a smaller number of codes. The maximum number",
        "detail": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "documentation": {}
    },
    {
        "label": "get_number_of_codes_too_high_log",
        "kind": 2,
        "importPath": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "peekOfCode": "def get_number_of_codes_too_high_log(max):\n    return f\"\"\"\n        **SYSTEM MESSAGE:**\n        - The number of codes to be executed is too high. Please provide a smaller number of codes. The maximum number\n        supported by the system is {max}.\n    \"\"\"\ndef get_file_interpreter_status_log(status):\n    return f\"\"\"\n        **SYSTEM MESSAGE:**\n        - The file interpretation process has {status} on the OpenAI server.",
        "detail": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "documentation": {}
    },
    {
        "label": "get_file_interpreter_status_log",
        "kind": 2,
        "importPath": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "peekOfCode": "def get_file_interpreter_status_log(status):\n    return f\"\"\"\n        **SYSTEM MESSAGE:**\n        - The file interpretation process has {status} on the OpenAI server.\n    \"\"\"\ndef get_ml_prediction_status_log(status):\n    return f\"\"\"\n        **SYSTEM MESSAGE:**\n        - The ML model prediction process has {status} on the OpenAI server.\n    \"\"\"",
        "detail": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "documentation": {}
    },
    {
        "label": "get_ml_prediction_status_log",
        "kind": 2,
        "importPath": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "peekOfCode": "def get_ml_prediction_status_log(status):\n    return f\"\"\"\n        **SYSTEM MESSAGE:**\n        - The ML model prediction process has {status} on the OpenAI server.\n    \"\"\"\ndef get_code_interpreter_status_log(status):\n    return f\"\"\"\n        **SYSTEM MESSAGE:**\n        - The code analysis process has {status} on the OpenAI server.\n    \"\"\"",
        "detail": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "documentation": {}
    },
    {
        "label": "get_code_interpreter_status_log",
        "kind": 2,
        "importPath": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "peekOfCode": "def get_code_interpreter_status_log(status):\n    return f\"\"\"\n        **SYSTEM MESSAGE:**\n        - The code analysis process has {status} on the OpenAI server.\n    \"\"\"",
        "detail": "apps.core.generative_ai.auxiliary_methods.status_logs.status_log_prompts",
        "documentation": {}
    },
    {
        "label": "HELPER_SYSTEM_INSTRUCTIONS",
        "kind": 5,
        "importPath": "apps.core.generative_ai.auxiliary_methods.tool_helpers.tool_helper_instructions",
        "description": "apps.core.generative_ai.auxiliary_methods.tool_helpers.tool_helper_instructions",
        "peekOfCode": "HELPER_SYSTEM_INSTRUCTIONS = {\n    \"code_interpreter\": {\n        \"name\": \"Code Interpreter Assistant\",\n        \"description\": \"\"\"\n            *NEVER ASK QUESTIONS, JUST DO THE JOB.*\n            '''\n            You are a Code Interpreter Assistant. You are responsible for writing + executing code and provide\n            the best answer based on the code you executed. You are capable of writing and executing code to help\n            the user.\n            '''",
        "detail": "apps.core.generative_ai.auxiliary_methods.tool_helpers.tool_helper_instructions",
        "documentation": {}
    },
    {
        "label": "FILE_GENERATION_INSTRUCTION_QUERY",
        "kind": 5,
        "importPath": "apps.core.generative_ai.auxiliary_methods.tool_helpers.tool_helper_instructions",
        "description": "apps.core.generative_ai.auxiliary_methods.tool_helpers.tool_helper_instructions",
        "peekOfCode": "FILE_GENERATION_INSTRUCTION_QUERY = f\"\"\"\n    ---\n    Please interpret the file or image I sent you, and provide a clear and concise description about the contents\n    within the image. Do not write an overly long description, and keep it to the point. It would be the best if your\n    description is less than 1000 characters in total. Make sure your interpretations are accurate and does not contain\n    subjective opinions; but instead focus on the facts and information that can be extracted from the image or file\n    itself.\n    **NOTE:** You must deliver the description in plain text format, without markdown elements or any other special\n    formatting, nor lists, multiple paragraphs, or bullet points. Just a single paragraph of plain text is what I need.\n    ---",
        "detail": "apps.core.generative_ai.auxiliary_methods.tool_helpers.tool_helper_instructions",
        "documentation": {}
    },
    {
        "label": "AgentRunConditions",
        "kind": 6,
        "importPath": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "peekOfCode": "class AgentRunConditions:\n    QUEUED = \"queued\"\n    IN_PROGRESS = \"in_progress\"\n    COMPLETED = \"completed\"\n    REQUIRES_ACTION = \"requires_action\"\n    EXPIRED = \"expired\"\n    CANCELLING = \"cancelling\"\n    CANCELLED = \"cancelled\"\n    FAILED = \"failed\"\n    INCOMPLETE = \"incomplete\"",
        "detail": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "documentation": {}
    },
    {
        "label": "BALANCE_OVERFLOW_LOG",
        "kind": 5,
        "importPath": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "peekOfCode": "BALANCE_OVERFLOW_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n    - It seems like you don't have enough balance to continue this conversation. Please contact your organization's\n    administrator to top up your balance, or if you have the necessary permissions, you can top up your balance\n    yourself. If you encounter any problems during the balance top-up process, please connect the support team to\n    get guidance.\n\"\"\"\nEMPTY_OBJECT_PATH_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n    - The specified object path is not valid or NULL (empty).",
        "detail": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "documentation": {}
    },
    {
        "label": "EMPTY_OBJECT_PATH_LOG",
        "kind": 5,
        "importPath": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "description": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "peekOfCode": "EMPTY_OBJECT_PATH_LOG = f\"\"\"\n    **SYSTEM MESSAGE:**\n    - The specified object path is not valid or NULL (empty).\n\"\"\"",
        "detail": "apps.core.generative_ai.auxiliary_methods.output_supply_prompts",
        "documentation": {}
    },
    {
        "label": "fixture_llms_init",
        "kind": 2,
        "importPath": "apps.core.generative_ai.tests.conftest",
        "description": "apps.core.generative_ai.tests.conftest",
        "peekOfCode": "def fixture_llms_init():\n    return True",
        "detail": "apps.core.generative_ai.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_llms_test_services",
        "kind": 2,
        "importPath": "apps.core.generative_ai.tests.test_services",
        "description": "apps.core.generative_ai.tests.test_services",
        "peekOfCode": "def test_init_llms_test_services():\n    assert True",
        "detail": "apps.core.generative_ai.tests.test_services",
        "documentation": {}
    },
    {
        "label": "test_init_llms_test_service_utils",
        "kind": 2,
        "importPath": "apps.core.generative_ai.tests.test_utils",
        "description": "apps.core.generative_ai.tests.test_utils",
        "peekOfCode": "def test_init_llms_test_service_utils():\n    assert True",
        "detail": "apps.core.generative_ai.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "ChatRoles",
        "kind": 6,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "class ChatRoles:\n    SYSTEM = \"system\"\n    USER = \"user\"\n    ASSISTANT = \"assistant\"\nACTIVE_RETRY_COUNT = 0\nACTIVE_TOOL_RETRY_COUNT = 0\nACTIVE_CHAIN_SIZE = 0\nDEFAULT_ERROR_MESSAGE = \"\"\"\n    Failed to respond at the current moment. This issue can be related to a variety of reasons, and most of them\n    are on the LLM client side. Your balance may not be sufficient from your provider, or the model you are trying to",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DefaultImageResolutionChoices",
        "kind": 6,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "class DefaultImageResolutionChoices:\n    class Min1024Max1792:\n        SQUARE = \"1024x1024\"\n        PORTRAIT = \"1024x1792\"\n        LANDSCAPE = \"1792x1024\"\nclass DefaultImageResolutionChoicesNames:\n    SQUARE = \"SQUARE\"\n    PORTRAIT = \"PORTRAIT\"\n    LANDSCAPE = \"LANDSCAPE\"\nclass DefaultImageQualityChoices:",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DefaultImageResolutionChoicesNames",
        "kind": 6,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "class DefaultImageResolutionChoicesNames:\n    SQUARE = \"SQUARE\"\n    PORTRAIT = \"PORTRAIT\"\n    LANDSCAPE = \"LANDSCAPE\"\nclass DefaultImageQualityChoices:\n    STANDARD = \"standard\"\n    HIGH_DEFINITION = \"hd\"\nclass DefaultImageQualityChoicesNames:\n    STANDARD = \"STANDARD\"\n    HIGH_DEFINITION = \"HIGH_DEFINITION\"",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DefaultImageQualityChoices",
        "kind": 6,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "class DefaultImageQualityChoices:\n    STANDARD = \"standard\"\n    HIGH_DEFINITION = \"hd\"\nclass DefaultImageQualityChoicesNames:\n    STANDARD = \"STANDARD\"\n    HIGH_DEFINITION = \"HIGH_DEFINITION\"\nclass RetryCallersNames:\n    RESPOND = \"respond\"\n    RESPOND_STREAM = \"respond_stream\"\nclass OpenAITTSVoiceNames:",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DefaultImageQualityChoicesNames",
        "kind": 6,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "class DefaultImageQualityChoicesNames:\n    STANDARD = \"STANDARD\"\n    HIGH_DEFINITION = \"HIGH_DEFINITION\"\nclass RetryCallersNames:\n    RESPOND = \"respond\"\n    RESPOND_STREAM = \"respond_stream\"\nclass OpenAITTSVoiceNames:\n    ALLOY = \"alloy\"\n    ECHO = \"echo\"\n    FABLE = \"fable\"",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "RetryCallersNames",
        "kind": 6,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "class RetryCallersNames:\n    RESPOND = \"respond\"\n    RESPOND_STREAM = \"respond_stream\"\nclass OpenAITTSVoiceNames:\n    ALLOY = \"alloy\"\n    ECHO = \"echo\"\n    FABLE = \"fable\"\n    ONYX = \"onyx\"\n    NOVA = \"nova\"\n    SHIMMER = \"shimmer\"",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "OpenAITTSVoiceNames",
        "kind": 6,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "class OpenAITTSVoiceNames:\n    ALLOY = \"alloy\"\n    ECHO = \"echo\"\n    FABLE = \"fable\"\n    ONYX = \"onyx\"\n    NOVA = \"nova\"\n    SHIMMER = \"shimmer\"\nDEFAULT_MULTISTEP_REASONING_MAXIMUM_TOKENS = 4000\nLLM_CORE_PROVIDERS = {\n    \"OPENAI\": {\"code\": \"OA\", \"name\": \"OpenAI-GPT\"},",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "ACTIVE_RETRY_COUNT",
        "kind": 5,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "ACTIVE_RETRY_COUNT = 0\nACTIVE_TOOL_RETRY_COUNT = 0\nACTIVE_CHAIN_SIZE = 0\nDEFAULT_ERROR_MESSAGE = \"\"\"\n    Failed to respond at the current moment. This issue can be related to a variety of reasons, and most of them\n    are on the LLM client side. Your balance may not be sufficient from your provider, or the model you are trying to\n    use may not be available at the moment. Please try again later or contact the support team for further assistance.\n\"\"\"\nGPT_DEFAULT_ENCODING_ENGINE = \"cl100k_base\"\nCONCRETE_LIMIT_SINGLE_FILE_INTERPRETATION = 20",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "ACTIVE_TOOL_RETRY_COUNT",
        "kind": 5,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "ACTIVE_TOOL_RETRY_COUNT = 0\nACTIVE_CHAIN_SIZE = 0\nDEFAULT_ERROR_MESSAGE = \"\"\"\n    Failed to respond at the current moment. This issue can be related to a variety of reasons, and most of them\n    are on the LLM client side. Your balance may not be sufficient from your provider, or the model you are trying to\n    use may not be available at the moment. Please try again later or contact the support team for further assistance.\n\"\"\"\nGPT_DEFAULT_ENCODING_ENGINE = \"cl100k_base\"\nCONCRETE_LIMIT_SINGLE_FILE_INTERPRETATION = 20\nCONCRETE_LIMIT_ML_MODEL_PREDICTIONS = 10",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "ACTIVE_CHAIN_SIZE",
        "kind": 5,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "ACTIVE_CHAIN_SIZE = 0\nDEFAULT_ERROR_MESSAGE = \"\"\"\n    Failed to respond at the current moment. This issue can be related to a variety of reasons, and most of them\n    are on the LLM client side. Your balance may not be sufficient from your provider, or the model you are trying to\n    use may not be available at the moment. Please try again later or contact the support team for further assistance.\n\"\"\"\nGPT_DEFAULT_ENCODING_ENGINE = \"cl100k_base\"\nCONCRETE_LIMIT_SINGLE_FILE_INTERPRETATION = 20\nCONCRETE_LIMIT_ML_MODEL_PREDICTIONS = 10\nDEFAULT_IMAGE_GENERATION_MODEL = \"dall-e-3\"",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DEFAULT_ERROR_MESSAGE",
        "kind": 5,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "DEFAULT_ERROR_MESSAGE = \"\"\"\n    Failed to respond at the current moment. This issue can be related to a variety of reasons, and most of them\n    are on the LLM client side. Your balance may not be sufficient from your provider, or the model you are trying to\n    use may not be available at the moment. Please try again later or contact the support team for further assistance.\n\"\"\"\nGPT_DEFAULT_ENCODING_ENGINE = \"cl100k_base\"\nCONCRETE_LIMIT_SINGLE_FILE_INTERPRETATION = 20\nCONCRETE_LIMIT_ML_MODEL_PREDICTIONS = 10\nDEFAULT_IMAGE_GENERATION_MODEL = \"dall-e-3\"\nDEFAULT_IMAGE_MODIFICATION_MODEL = \"dall-e-2\"",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "GPT_DEFAULT_ENCODING_ENGINE",
        "kind": 5,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "GPT_DEFAULT_ENCODING_ENGINE = \"cl100k_base\"\nCONCRETE_LIMIT_SINGLE_FILE_INTERPRETATION = 20\nCONCRETE_LIMIT_ML_MODEL_PREDICTIONS = 10\nDEFAULT_IMAGE_GENERATION_MODEL = \"dall-e-3\"\nDEFAULT_IMAGE_MODIFICATION_MODEL = \"dall-e-2\"\nDEFAULT_IMAGE_VARIATION_MODEL = \"dall-e-2\"\nDEFAULT_IMAGE_GENERATION_N = 1\nDEFAULT_IMAGE_MODIFICATION_N = 1\nDEFAULT_IMAGE_VARIATION_N = 1\nDEFAULT_STATISTICS_ANALYSIS_MAX_TOKENS = 4000",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CONCRETE_LIMIT_SINGLE_FILE_INTERPRETATION",
        "kind": 5,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "CONCRETE_LIMIT_SINGLE_FILE_INTERPRETATION = 20\nCONCRETE_LIMIT_ML_MODEL_PREDICTIONS = 10\nDEFAULT_IMAGE_GENERATION_MODEL = \"dall-e-3\"\nDEFAULT_IMAGE_MODIFICATION_MODEL = \"dall-e-2\"\nDEFAULT_IMAGE_VARIATION_MODEL = \"dall-e-2\"\nDEFAULT_IMAGE_GENERATION_N = 1\nDEFAULT_IMAGE_MODIFICATION_N = 1\nDEFAULT_IMAGE_VARIATION_N = 1\nDEFAULT_STATISTICS_ANALYSIS_MAX_TOKENS = 4000\nDEFAULT_STATISTICS_TEMPERATURE = 0.50",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CONCRETE_LIMIT_ML_MODEL_PREDICTIONS",
        "kind": 5,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "CONCRETE_LIMIT_ML_MODEL_PREDICTIONS = 10\nDEFAULT_IMAGE_GENERATION_MODEL = \"dall-e-3\"\nDEFAULT_IMAGE_MODIFICATION_MODEL = \"dall-e-2\"\nDEFAULT_IMAGE_VARIATION_MODEL = \"dall-e-2\"\nDEFAULT_IMAGE_GENERATION_N = 1\nDEFAULT_IMAGE_MODIFICATION_N = 1\nDEFAULT_IMAGE_VARIATION_N = 1\nDEFAULT_STATISTICS_ANALYSIS_MAX_TOKENS = 4000\nDEFAULT_STATISTICS_TEMPERATURE = 0.50\nDEFAULT_STATISTICS_ASSISTANT_NAME_PLACEHOLDER = \"BimodLab Platform Usage Statistics Assistant\"",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DEFAULT_IMAGE_GENERATION_MODEL",
        "kind": 5,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "DEFAULT_IMAGE_GENERATION_MODEL = \"dall-e-3\"\nDEFAULT_IMAGE_MODIFICATION_MODEL = \"dall-e-2\"\nDEFAULT_IMAGE_VARIATION_MODEL = \"dall-e-2\"\nDEFAULT_IMAGE_GENERATION_N = 1\nDEFAULT_IMAGE_MODIFICATION_N = 1\nDEFAULT_IMAGE_VARIATION_N = 1\nDEFAULT_STATISTICS_ANALYSIS_MAX_TOKENS = 4000\nDEFAULT_STATISTICS_TEMPERATURE = 0.50\nDEFAULT_STATISTICS_ASSISTANT_NAME_PLACEHOLDER = \"BimodLab Platform Usage Statistics Assistant\"\nDEFAULT_STATISTICS_ASSISTANT_AUDIENCE = \"Standard / BimodLab Application Users\"",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DEFAULT_IMAGE_MODIFICATION_MODEL",
        "kind": 5,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "DEFAULT_IMAGE_MODIFICATION_MODEL = \"dall-e-2\"\nDEFAULT_IMAGE_VARIATION_MODEL = \"dall-e-2\"\nDEFAULT_IMAGE_GENERATION_N = 1\nDEFAULT_IMAGE_MODIFICATION_N = 1\nDEFAULT_IMAGE_VARIATION_N = 1\nDEFAULT_STATISTICS_ANALYSIS_MAX_TOKENS = 4000\nDEFAULT_STATISTICS_TEMPERATURE = 0.50\nDEFAULT_STATISTICS_ASSISTANT_NAME_PLACEHOLDER = \"BimodLab Platform Usage Statistics Assistant\"\nDEFAULT_STATISTICS_ASSISTANT_AUDIENCE = \"Standard / BimodLab Application Users\"\nDEFAULT_STATISTICS_ASSISTANT_TONE = \"Formal & Descriptive\"",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DEFAULT_IMAGE_VARIATION_MODEL",
        "kind": 5,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "DEFAULT_IMAGE_VARIATION_MODEL = \"dall-e-2\"\nDEFAULT_IMAGE_GENERATION_N = 1\nDEFAULT_IMAGE_MODIFICATION_N = 1\nDEFAULT_IMAGE_VARIATION_N = 1\nDEFAULT_STATISTICS_ANALYSIS_MAX_TOKENS = 4000\nDEFAULT_STATISTICS_TEMPERATURE = 0.50\nDEFAULT_STATISTICS_ASSISTANT_NAME_PLACEHOLDER = \"BimodLab Platform Usage Statistics Assistant\"\nDEFAULT_STATISTICS_ASSISTANT_AUDIENCE = \"Standard / BimodLab Application Users\"\nDEFAULT_STATISTICS_ASSISTANT_TONE = \"Formal & Descriptive\"\nDEFAULT_STATISTICS_ASSISTANT_CHAT_NAME = \"Statistics Analysis & Evaluation\"",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DEFAULT_IMAGE_GENERATION_N",
        "kind": 5,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "DEFAULT_IMAGE_GENERATION_N = 1\nDEFAULT_IMAGE_MODIFICATION_N = 1\nDEFAULT_IMAGE_VARIATION_N = 1\nDEFAULT_STATISTICS_ANALYSIS_MAX_TOKENS = 4000\nDEFAULT_STATISTICS_TEMPERATURE = 0.50\nDEFAULT_STATISTICS_ASSISTANT_NAME_PLACEHOLDER = \"BimodLab Platform Usage Statistics Assistant\"\nDEFAULT_STATISTICS_ASSISTANT_AUDIENCE = \"Standard / BimodLab Application Users\"\nDEFAULT_STATISTICS_ASSISTANT_TONE = \"Formal & Descriptive\"\nDEFAULT_STATISTICS_ASSISTANT_CHAT_NAME = \"Statistics Analysis & Evaluation\"\nBIMOD_STREAMING_END_TAG = \"<[bimod_streaming_end]>\"",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DEFAULT_IMAGE_MODIFICATION_N",
        "kind": 5,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "DEFAULT_IMAGE_MODIFICATION_N = 1\nDEFAULT_IMAGE_VARIATION_N = 1\nDEFAULT_STATISTICS_ANALYSIS_MAX_TOKENS = 4000\nDEFAULT_STATISTICS_TEMPERATURE = 0.50\nDEFAULT_STATISTICS_ASSISTANT_NAME_PLACEHOLDER = \"BimodLab Platform Usage Statistics Assistant\"\nDEFAULT_STATISTICS_ASSISTANT_AUDIENCE = \"Standard / BimodLab Application Users\"\nDEFAULT_STATISTICS_ASSISTANT_TONE = \"Formal & Descriptive\"\nDEFAULT_STATISTICS_ASSISTANT_CHAT_NAME = \"Statistics Analysis & Evaluation\"\nBIMOD_STREAMING_END_TAG = \"<[bimod_streaming_end]>\"\nBIMOD_PROCESS_END = \"<[bimod_process_end]>\"",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DEFAULT_IMAGE_VARIATION_N",
        "kind": 5,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "DEFAULT_IMAGE_VARIATION_N = 1\nDEFAULT_STATISTICS_ANALYSIS_MAX_TOKENS = 4000\nDEFAULT_STATISTICS_TEMPERATURE = 0.50\nDEFAULT_STATISTICS_ASSISTANT_NAME_PLACEHOLDER = \"BimodLab Platform Usage Statistics Assistant\"\nDEFAULT_STATISTICS_ASSISTANT_AUDIENCE = \"Standard / BimodLab Application Users\"\nDEFAULT_STATISTICS_ASSISTANT_TONE = \"Formal & Descriptive\"\nDEFAULT_STATISTICS_ASSISTANT_CHAT_NAME = \"Statistics Analysis & Evaluation\"\nBIMOD_STREAMING_END_TAG = \"<[bimod_streaming_end]>\"\nBIMOD_PROCESS_END = \"<[bimod_process_end]>\"\nclass DefaultImageResolutionChoices:",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DEFAULT_STATISTICS_ANALYSIS_MAX_TOKENS",
        "kind": 5,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "DEFAULT_STATISTICS_ANALYSIS_MAX_TOKENS = 4000\nDEFAULT_STATISTICS_TEMPERATURE = 0.50\nDEFAULT_STATISTICS_ASSISTANT_NAME_PLACEHOLDER = \"BimodLab Platform Usage Statistics Assistant\"\nDEFAULT_STATISTICS_ASSISTANT_AUDIENCE = \"Standard / BimodLab Application Users\"\nDEFAULT_STATISTICS_ASSISTANT_TONE = \"Formal & Descriptive\"\nDEFAULT_STATISTICS_ASSISTANT_CHAT_NAME = \"Statistics Analysis & Evaluation\"\nBIMOD_STREAMING_END_TAG = \"<[bimod_streaming_end]>\"\nBIMOD_PROCESS_END = \"<[bimod_process_end]>\"\nclass DefaultImageResolutionChoices:\n    class Min1024Max1792:",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DEFAULT_STATISTICS_TEMPERATURE",
        "kind": 5,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "DEFAULT_STATISTICS_TEMPERATURE = 0.50\nDEFAULT_STATISTICS_ASSISTANT_NAME_PLACEHOLDER = \"BimodLab Platform Usage Statistics Assistant\"\nDEFAULT_STATISTICS_ASSISTANT_AUDIENCE = \"Standard / BimodLab Application Users\"\nDEFAULT_STATISTICS_ASSISTANT_TONE = \"Formal & Descriptive\"\nDEFAULT_STATISTICS_ASSISTANT_CHAT_NAME = \"Statistics Analysis & Evaluation\"\nBIMOD_STREAMING_END_TAG = \"<[bimod_streaming_end]>\"\nBIMOD_PROCESS_END = \"<[bimod_process_end]>\"\nclass DefaultImageResolutionChoices:\n    class Min1024Max1792:\n        SQUARE = \"1024x1024\"",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DEFAULT_STATISTICS_ASSISTANT_NAME_PLACEHOLDER",
        "kind": 5,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "DEFAULT_STATISTICS_ASSISTANT_NAME_PLACEHOLDER = \"BimodLab Platform Usage Statistics Assistant\"\nDEFAULT_STATISTICS_ASSISTANT_AUDIENCE = \"Standard / BimodLab Application Users\"\nDEFAULT_STATISTICS_ASSISTANT_TONE = \"Formal & Descriptive\"\nDEFAULT_STATISTICS_ASSISTANT_CHAT_NAME = \"Statistics Analysis & Evaluation\"\nBIMOD_STREAMING_END_TAG = \"<[bimod_streaming_end]>\"\nBIMOD_PROCESS_END = \"<[bimod_process_end]>\"\nclass DefaultImageResolutionChoices:\n    class Min1024Max1792:\n        SQUARE = \"1024x1024\"\n        PORTRAIT = \"1024x1792\"",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DEFAULT_STATISTICS_ASSISTANT_AUDIENCE",
        "kind": 5,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "DEFAULT_STATISTICS_ASSISTANT_AUDIENCE = \"Standard / BimodLab Application Users\"\nDEFAULT_STATISTICS_ASSISTANT_TONE = \"Formal & Descriptive\"\nDEFAULT_STATISTICS_ASSISTANT_CHAT_NAME = \"Statistics Analysis & Evaluation\"\nBIMOD_STREAMING_END_TAG = \"<[bimod_streaming_end]>\"\nBIMOD_PROCESS_END = \"<[bimod_process_end]>\"\nclass DefaultImageResolutionChoices:\n    class Min1024Max1792:\n        SQUARE = \"1024x1024\"\n        PORTRAIT = \"1024x1792\"\n        LANDSCAPE = \"1792x1024\"",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DEFAULT_STATISTICS_ASSISTANT_TONE",
        "kind": 5,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "DEFAULT_STATISTICS_ASSISTANT_TONE = \"Formal & Descriptive\"\nDEFAULT_STATISTICS_ASSISTANT_CHAT_NAME = \"Statistics Analysis & Evaluation\"\nBIMOD_STREAMING_END_TAG = \"<[bimod_streaming_end]>\"\nBIMOD_PROCESS_END = \"<[bimod_process_end]>\"\nclass DefaultImageResolutionChoices:\n    class Min1024Max1792:\n        SQUARE = \"1024x1024\"\n        PORTRAIT = \"1024x1792\"\n        LANDSCAPE = \"1792x1024\"\nclass DefaultImageResolutionChoicesNames:",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DEFAULT_STATISTICS_ASSISTANT_CHAT_NAME",
        "kind": 5,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "DEFAULT_STATISTICS_ASSISTANT_CHAT_NAME = \"Statistics Analysis & Evaluation\"\nBIMOD_STREAMING_END_TAG = \"<[bimod_streaming_end]>\"\nBIMOD_PROCESS_END = \"<[bimod_process_end]>\"\nclass DefaultImageResolutionChoices:\n    class Min1024Max1792:\n        SQUARE = \"1024x1024\"\n        PORTRAIT = \"1024x1792\"\n        LANDSCAPE = \"1792x1024\"\nclass DefaultImageResolutionChoicesNames:\n    SQUARE = \"SQUARE\"",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BIMOD_STREAMING_END_TAG",
        "kind": 5,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "BIMOD_STREAMING_END_TAG = \"<[bimod_streaming_end]>\"\nBIMOD_PROCESS_END = \"<[bimod_process_end]>\"\nclass DefaultImageResolutionChoices:\n    class Min1024Max1792:\n        SQUARE = \"1024x1024\"\n        PORTRAIT = \"1024x1792\"\n        LANDSCAPE = \"1792x1024\"\nclass DefaultImageResolutionChoicesNames:\n    SQUARE = \"SQUARE\"\n    PORTRAIT = \"PORTRAIT\"",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BIMOD_PROCESS_END",
        "kind": 5,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "BIMOD_PROCESS_END = \"<[bimod_process_end]>\"\nclass DefaultImageResolutionChoices:\n    class Min1024Max1792:\n        SQUARE = \"1024x1024\"\n        PORTRAIT = \"1024x1792\"\n        LANDSCAPE = \"1792x1024\"\nclass DefaultImageResolutionChoicesNames:\n    SQUARE = \"SQUARE\"\n    PORTRAIT = \"PORTRAIT\"\n    LANDSCAPE = \"LANDSCAPE\"",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DEFAULT_MULTISTEP_REASONING_MAXIMUM_TOKENS",
        "kind": 5,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "DEFAULT_MULTISTEP_REASONING_MAXIMUM_TOKENS = 4000\nLLM_CORE_PROVIDERS = {\n    \"OPENAI\": {\"code\": \"OA\", \"name\": \"OpenAI-GPT\"},\n}\nTTS_MODEL_NAME = \"tts-1\"\nSTT_MODEL_NAME = \"whisper-1\"\nTTS_RETRY_REMOVAL = 3\nSTT_RETRY_REMOVAL = 3\nDEFAULT_AUDIO_MIME_TYPE = \"audio/mpeg\"",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "LLM_CORE_PROVIDERS",
        "kind": 5,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "LLM_CORE_PROVIDERS = {\n    \"OPENAI\": {\"code\": \"OA\", \"name\": \"OpenAI-GPT\"},\n}\nTTS_MODEL_NAME = \"tts-1\"\nSTT_MODEL_NAME = \"whisper-1\"\nTTS_RETRY_REMOVAL = 3\nSTT_RETRY_REMOVAL = 3\nDEFAULT_AUDIO_MIME_TYPE = \"audio/mpeg\"",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "TTS_MODEL_NAME",
        "kind": 5,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "TTS_MODEL_NAME = \"tts-1\"\nSTT_MODEL_NAME = \"whisper-1\"\nTTS_RETRY_REMOVAL = 3\nSTT_RETRY_REMOVAL = 3\nDEFAULT_AUDIO_MIME_TYPE = \"audio/mpeg\"",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "STT_MODEL_NAME",
        "kind": 5,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "STT_MODEL_NAME = \"whisper-1\"\nTTS_RETRY_REMOVAL = 3\nSTT_RETRY_REMOVAL = 3\nDEFAULT_AUDIO_MIME_TYPE = \"audio/mpeg\"",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "TTS_RETRY_REMOVAL",
        "kind": 5,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "TTS_RETRY_REMOVAL = 3\nSTT_RETRY_REMOVAL = 3\nDEFAULT_AUDIO_MIME_TYPE = \"audio/mpeg\"",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "STT_RETRY_REMOVAL",
        "kind": 5,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "STT_RETRY_REMOVAL = 3\nDEFAULT_AUDIO_MIME_TYPE = \"audio/mpeg\"",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUDIO_MIME_TYPE",
        "kind": 5,
        "importPath": "apps.core.generative_ai.utils.constant_utils",
        "description": "apps.core.generative_ai.utils.constant_utils",
        "peekOfCode": "DEFAULT_AUDIO_MIME_TYPE = \"audio/mpeg\"",
        "detail": "apps.core.generative_ai.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "find_tool_call_from_json",
        "kind": 2,
        "importPath": "apps.core.generative_ai.utils.function_utils",
        "description": "apps.core.generative_ai.utils.function_utils",
        "peekOfCode": "def find_tool_call_from_json(response: str, decoder=JSONDecoder()):\n    response = f\"\"\"{response}\"\"\"\n    response = response.replace(\"\\n\", \"\").replace(\"'\", '\"')\n    json_objects = []\n    pos = 0\n    while True:\n        match = response.find('{', pos)\n        if match == -1:\n            break\n        try:",
        "detail": "apps.core.generative_ai.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "extract_image_uri",
        "kind": 2,
        "importPath": "apps.core.generative_ai.utils.function_utils",
        "description": "apps.core.generative_ai.utils.function_utils",
        "peekOfCode": "def extract_image_uri(response_str):\n    pattern = r'\"image_uri\":\\s*\"([^\"]+)\"'\n    match = re.search(pattern, response_str)\n    return match.group(1) if match else None\ndef extract_file_uri(response_str):\n    pattern = r'\"file_uri\":\\s*\"([^\"]+)\"'\n    match = re.search(pattern, response_str)\n    return match.group(1) if match else None\ndef generate_random_audio_filename(extension=\"mp3\"):\n    uuid1 = str(uuid.uuid4())",
        "detail": "apps.core.generative_ai.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "extract_file_uri",
        "kind": 2,
        "importPath": "apps.core.generative_ai.utils.function_utils",
        "description": "apps.core.generative_ai.utils.function_utils",
        "peekOfCode": "def extract_file_uri(response_str):\n    pattern = r'\"file_uri\":\\s*\"([^\"]+)\"'\n    match = re.search(pattern, response_str)\n    return match.group(1) if match else None\ndef generate_random_audio_filename(extension=\"mp3\"):\n    uuid1 = str(uuid.uuid4())\n    uuid2 = str(uuid.uuid4())\n    filename = f\"generated_audio_{uuid1}_{uuid2}.{extension}\"\n    return filename\ndef step_back_retry_mechanism(client, latest_message, caller=\"respond\"):",
        "detail": "apps.core.generative_ai.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "generate_random_audio_filename",
        "kind": 2,
        "importPath": "apps.core.generative_ai.utils.function_utils",
        "description": "apps.core.generative_ai.utils.function_utils",
        "peekOfCode": "def generate_random_audio_filename(extension=\"mp3\"):\n    uuid1 = str(uuid.uuid4())\n    uuid2 = str(uuid.uuid4())\n    filename = f\"generated_audio_{uuid1}_{uuid2}.{extension}\"\n    return filename\ndef step_back_retry_mechanism(client, latest_message, caller=\"respond\"):\n    from apps.core.generative_ai.utils import RetryCallersNames, DEFAULT_ERROR_MESSAGE\n    if apps.core.generative_ai.utils.constant_utils.ACTIVE_RETRY_COUNT < client.assistant.max_retry_count:\n        apps.core.generative_ai.utils.constant_utils.ACTIVE_RETRY_COUNT += 1\n        if caller == RetryCallersNames.RESPOND:",
        "detail": "apps.core.generative_ai.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "step_back_retry_mechanism",
        "kind": 2,
        "importPath": "apps.core.generative_ai.utils.function_utils",
        "description": "apps.core.generative_ai.utils.function_utils",
        "peekOfCode": "def step_back_retry_mechanism(client, latest_message, caller=\"respond\"):\n    from apps.core.generative_ai.utils import RetryCallersNames, DEFAULT_ERROR_MESSAGE\n    if apps.core.generative_ai.utils.constant_utils.ACTIVE_RETRY_COUNT < client.assistant.max_retry_count:\n        apps.core.generative_ai.utils.constant_utils.ACTIVE_RETRY_COUNT += 1\n        if caller == RetryCallersNames.RESPOND:\n            return client.respond(latest_message=latest_message)\n        elif caller == RetryCallersNames.RESPOND_STREAM:\n            return client.respond_stream(latest_message=latest_message)\n        else:\n            return DEFAULT_ERROR_MESSAGE",
        "detail": "apps.core.generative_ai.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "GenerativeAIDecodeController",
        "kind": 6,
        "importPath": "apps.core.generative_ai.generative_ai_decode_manager",
        "description": "apps.core.generative_ai.generative_ai_decode_manager",
        "peekOfCode": "class GenerativeAIDecodeController:\n    @staticmethod\n    def get(assistant: Assistant, multimodal_chat: MultimodalChat):\n        if assistant.llm_model.provider == LLM_CORE_PROVIDERS[\"OPENAI\"][\"code\"]:\n            return OpenAIGPTClientManager(assistant=assistant, chat_object=multimodal_chat)\n    @staticmethod\n    def get_lean(assistant: Assistant, multimodal_chat: MultimodalChat):\n        if assistant.llm_model.provider == LLM_CORE_PROVIDERS[\"OPENAI\"][\"code\"]:\n            return OpenAIGPTLeanClientManager(assistant=assistant, multimodal_chat=multimodal_chat)\n    @staticmethod",
        "detail": "apps.core.generative_ai.generative_ai_decode_manager",
        "documentation": {}
    },
    {
        "label": "OpenAIGPTClientManager",
        "kind": 6,
        "importPath": "apps.core.generative_ai.gpt_openai_manager",
        "description": "apps.core.generative_ai.gpt_openai_manager",
        "peekOfCode": "class OpenAIGPTClientManager:\n    def __init__(self, assistant, chat_object):\n        self.connection = OpenAI(api_key=assistant.llm_model.api_key)\n        self.assistant = assistant\n        self.chat = chat_object\n    @staticmethod\n    def get_naked_client(llm_model):\n        return OpenAI(api_key=llm_model.api_key)\n    def respond_stream(self, latest_message, prev_tool_name=None, with_media=False, file_uris=None, image_uris=None):\n        from apps.multimodal_chat.models import MultimodalChatMessage",
        "detail": "apps.core.generative_ai.gpt_openai_manager",
        "documentation": {}
    },
    {
        "label": "OpenAIGPTLeanClientManager",
        "kind": 6,
        "importPath": "apps.core.generative_ai.gpt_openai_manager_lean",
        "description": "apps.core.generative_ai.gpt_openai_manager_lean",
        "peekOfCode": "class OpenAIGPTLeanClientManager:\n    def __init__(self, assistant, multimodal_chat):\n        self.connection = OpenAI(api_key=assistant.llm_model.api_key)\n        self.lean_assistant: LeanAssistant = assistant\n        self.chat: MultimodalLeanChat = multimodal_chat\n    @staticmethod\n    def get_no_scope_connection(llm_model):\n        return OpenAI(api_key=llm_model.api_key)\n    def respond_stream(self, latest_message, prev_tool_name=None, with_media=False, file_uris=None, image_uris=None):\n        from apps.multimodal_chat.models import MultimodalLeanChatMessage",
        "detail": "apps.core.generative_ai.gpt_openai_manager_lean",
        "documentation": {}
    },
    {
        "label": "provide_analysis",
        "kind": 2,
        "importPath": "apps.core.generative_ai.statistical_analysis_manager",
        "description": "apps.core.generative_ai.statistical_analysis_manager",
        "peekOfCode": "def provide_analysis(llm_model, statistics):\n    try:\n        instructions = build_dashboard_statistics_prompt(statistics=statistics)\n        lean_prompt = SystemPromptFactoryBuilder.build_lean(\n            assistant_name=DEFAULT_STATISTICS_ASSISTANT_NAME_PLACEHOLDER, instructions=instructions,\n            audience=DEFAULT_STATISTICS_ASSISTANT_AUDIENCE, tone=DEFAULT_STATISTICS_ASSISTANT_TONE,\n            chat_name=DEFAULT_STATISTICS_ASSISTANT_CHAT_NAME)\n        c = OpenAIGPTClientManager.get_naked_client(llm_model=llm_model)\n        output = c.chat.completions.create(\n            model=llm_model.model_name,",
        "detail": "apps.core.generative_ai.statistical_analysis_manager",
        "documentation": {}
    },
    {
        "label": "DEFAULT_PCM_SAMPLING_RATE",
        "kind": 5,
        "importPath": "apps.core.harmoniq.utils.constant_utils",
        "description": "apps.core.harmoniq.utils.constant_utils",
        "peekOfCode": "DEFAULT_PCM_SAMPLING_RATE = 20_000\nDEFAULT_PCM_BITS_PER_SAMPLE = 16\nDEFAULT_PCM_NUMBER_OF_CHANNELS = 1",
        "detail": "apps.core.harmoniq.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DEFAULT_PCM_BITS_PER_SAMPLE",
        "kind": 5,
        "importPath": "apps.core.harmoniq.utils.constant_utils",
        "description": "apps.core.harmoniq.utils.constant_utils",
        "peekOfCode": "DEFAULT_PCM_BITS_PER_SAMPLE = 16\nDEFAULT_PCM_NUMBER_OF_CHANNELS = 1",
        "detail": "apps.core.harmoniq.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DEFAULT_PCM_NUMBER_OF_CHANNELS",
        "kind": 5,
        "importPath": "apps.core.harmoniq.utils.constant_utils",
        "description": "apps.core.harmoniq.utils.constant_utils",
        "peekOfCode": "DEFAULT_PCM_NUMBER_OF_CHANNELS = 1",
        "detail": "apps.core.harmoniq.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "get_tool_usage_instructions_prompt",
        "kind": 2,
        "importPath": "apps.core.harmoniq.utils.function_utils",
        "description": "apps.core.harmoniq.utils.function_utils",
        "peekOfCode": "def get_tool_usage_instructions_prompt() -> str:\n    # TODO: implement this string / prompt (1)\n    prompt = f\"\"\"\n    \"\"\"\n    return prompt\ndef get_available_tools_prompt(harmoniq_agent: Harmoniq) -> str:\n    # TODO: implement this string / prompt (2)\n    prompt = f\"\"\"\n    \"\"\"\n    return prompt",
        "detail": "apps.core.harmoniq.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "get_available_tools_prompt",
        "kind": 2,
        "importPath": "apps.core.harmoniq.utils.function_utils",
        "description": "apps.core.harmoniq.utils.function_utils",
        "peekOfCode": "def get_available_tools_prompt(harmoniq_agent: Harmoniq) -> str:\n    # TODO: implement this string / prompt (2)\n    prompt = f\"\"\"\n    \"\"\"\n    return prompt",
        "detail": "apps.core.harmoniq.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "OpenAIRealtimeAPIClient",
        "kind": 6,
        "importPath": "apps.core.harmoniq.harmoniq_executor",
        "description": "apps.core.harmoniq.harmoniq_executor",
        "peekOfCode": "class OpenAIRealtimeAPIClient:\n    def __init__(self, harmoniq_agent: Harmoniq, llm_model: LLMCore):\n        self.harmoniq_agent = harmoniq_agent\n        self.llm_model = llm_model\n        self.websocket_url = f\"wss://api.openai.com/v1/realtime?model={DEFAULT_HARMONIQ_MODEL}\"\n        self.audio_buffer = b\"\"\n        self.transcript = \"\"\n    async def connect(self):\n        self.ws = await websockets.connect(\n            self.websocket_url,",
        "detail": "apps.core.harmoniq.harmoniq_executor",
        "documentation": {}
    },
    {
        "label": "sync_request_communication",
        "kind": 2,
        "importPath": "apps.core.harmoniq.harmoniq_executor",
        "description": "apps.core.harmoniq.harmoniq_executor",
        "peekOfCode": "def sync_request_communication(api_client, query_text):\n    async_to_sync(api_client.request_communication)(query_text)\ndef pcm_to_wav(pcm_data, num_channels=DEFAULT_PCM_NUMBER_OF_CHANNELS, sample_rate=DEFAULT_PCM_SAMPLING_RATE,\n               bits_per_sample=DEFAULT_PCM_BITS_PER_SAMPLE):\n    byte_depth = bits_per_sample // 8\n    wav_output = BytesIO()\n    with wave.open(wav_output, 'wb') as wav_file:\n        wav_file.setnchannels(num_channels)\n        wav_file.setsampwidth(byte_depth)\n        wav_file.setframerate(sample_rate)",
        "detail": "apps.core.harmoniq.harmoniq_executor",
        "documentation": {}
    },
    {
        "label": "pcm_to_wav",
        "kind": 2,
        "importPath": "apps.core.harmoniq.harmoniq_executor",
        "description": "apps.core.harmoniq.harmoniq_executor",
        "peekOfCode": "def pcm_to_wav(pcm_data, num_channels=DEFAULT_PCM_NUMBER_OF_CHANNELS, sample_rate=DEFAULT_PCM_SAMPLING_RATE,\n               bits_per_sample=DEFAULT_PCM_BITS_PER_SAMPLE):\n    byte_depth = bits_per_sample // 8\n    wav_output = BytesIO()\n    with wave.open(wav_output, 'wb') as wav_file:\n        wav_file.setnchannels(num_channels)\n        wav_file.setsampwidth(byte_depth)\n        wav_file.setframerate(sample_rate)\n        wav_file.writeframes(pcm_data)\n    return wav_output.getvalue()",
        "detail": "apps.core.harmoniq.harmoniq_executor",
        "documentation": {}
    },
    {
        "label": "fixture_downloader_init",
        "kind": 2,
        "importPath": "apps.core.http_client.tests.conftest",
        "description": "apps.core.http_client.tests.conftest",
        "peekOfCode": "def fixture_downloader_init():\n    return True",
        "detail": "apps.core.http_client.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_downloader_test_services",
        "kind": 2,
        "importPath": "apps.core.http_client.tests.test_services",
        "description": "apps.core.http_client.tests.test_services",
        "peekOfCode": "def test_init_downloader_test_services():\n    assert True",
        "detail": "apps.core.http_client.tests.test_services",
        "documentation": {}
    },
    {
        "label": "get_url_could_not_resolved_error_message",
        "kind": 2,
        "importPath": "apps.core.http_client.utils.function_utils",
        "description": "apps.core.http_client.utils.function_utils",
        "peekOfCode": "def get_url_could_not_resolved_error_message(url: str) -> str:\n    return (f\"[function_utils.get_url_could_not_resolved_error_message] Could not guess the file extension for \"\n            f\"the file from url: {url}\")\ndef get_download_from_url_failed_error_message(error: str) -> str:\n    return f\"[DownloadExecutor.retrieve] Error downloading file from url: {error}\"\ndef get_downloaded_item_could_not_saved_error_message(error: str) -> str:\n    return f\"[DownloadExecutor.retrieve] Error saving the file to the storage: {error}\"\ndef get_transaction_could_not_saved_error_message(error: str) -> str:\n    return f\"[DownloadExecutor.retrieve] Error saving the transaction: {error}\"",
        "detail": "apps.core.http_client.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "get_download_from_url_failed_error_message",
        "kind": 2,
        "importPath": "apps.core.http_client.utils.function_utils",
        "description": "apps.core.http_client.utils.function_utils",
        "peekOfCode": "def get_download_from_url_failed_error_message(error: str) -> str:\n    return f\"[DownloadExecutor.retrieve] Error downloading file from url: {error}\"\ndef get_downloaded_item_could_not_saved_error_message(error: str) -> str:\n    return f\"[DownloadExecutor.retrieve] Error saving the file to the storage: {error}\"\ndef get_transaction_could_not_saved_error_message(error: str) -> str:\n    return f\"[DownloadExecutor.retrieve] Error saving the transaction: {error}\"",
        "detail": "apps.core.http_client.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "get_downloaded_item_could_not_saved_error_message",
        "kind": 2,
        "importPath": "apps.core.http_client.utils.function_utils",
        "description": "apps.core.http_client.utils.function_utils",
        "peekOfCode": "def get_downloaded_item_could_not_saved_error_message(error: str) -> str:\n    return f\"[DownloadExecutor.retrieve] Error saving the file to the storage: {error}\"\ndef get_transaction_could_not_saved_error_message(error: str) -> str:\n    return f\"[DownloadExecutor.retrieve] Error saving the transaction: {error}\"",
        "detail": "apps.core.http_client.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "get_transaction_could_not_saved_error_message",
        "kind": 2,
        "importPath": "apps.core.http_client.utils.function_utils",
        "description": "apps.core.http_client.utils.function_utils",
        "peekOfCode": "def get_transaction_could_not_saved_error_message(error: str) -> str:\n    return f\"[DownloadExecutor.retrieve] Error saving the transaction: {error}\"",
        "detail": "apps.core.http_client.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "HTTPClientDownloadExecutor",
        "kind": 6,
        "importPath": "apps.core.http_client.http_client_download_manager",
        "description": "apps.core.http_client.http_client_download_manager",
        "peekOfCode": "class HTTPClientDownloadExecutor:\n    def __init__(self, storage_id: int):\n        c = None\n        try:\n            c = DataSourceMediaStorageConnection.objects.get(id=storage_id)\n            if not c:\n                pass\n        except Exception as e:\n            pass\n        self.storage = c",
        "detail": "apps.core.http_client.http_client_download_manager",
        "documentation": {}
    },
    {
        "label": "fixture_config_init",
        "kind": 2,
        "importPath": "apps.core.internal_cost_manager.tests.conftest",
        "description": "apps.core.internal_cost_manager.tests.conftest",
        "peekOfCode": "def fixture_config_init():\n    return True",
        "detail": "apps.core.internal_cost_manager.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_config_test_mappings",
        "kind": 2,
        "importPath": "apps.core.internal_cost_manager.tests.test_mappings",
        "description": "apps.core.internal_cost_manager.tests.test_mappings",
        "peekOfCode": "def test_init_config_test_mappings():\n    assert True",
        "detail": "apps.core.internal_cost_manager.tests.test_mappings",
        "documentation": {}
    },
    {
        "label": "InternalServiceCosts",
        "kind": 6,
        "importPath": "apps.core.internal_cost_manager.costs_map",
        "description": "apps.core.internal_cost_manager.costs_map",
        "peekOfCode": "class InternalServiceCosts:\n    @staticmethod\n    def as_list():\n        return [\n            InternalServiceCosts.ContextMemory.COST,\n            InternalServiceCosts.ContextMemoryRetrieval.COST,\n            InternalServiceCosts.CodeInterpreter.COST,\n            InternalServiceCosts.DownloadExecutor.COST,\n            InternalServiceCosts.FileSystemsExecutor.COST,\n            InternalServiceCosts.KnowledgeBaseExecutor.COST,",
        "detail": "apps.core.internal_cost_manager.costs_map",
        "documentation": {}
    },
    {
        "label": "TRANSACTION_SOURCES",
        "kind": 5,
        "importPath": "apps.core.internal_cost_manager.costs_map",
        "description": "apps.core.internal_cost_manager.costs_map",
        "peekOfCode": "TRANSACTION_SOURCES = [\n    (\"app\", \"Application\"),\n    (\"api\", \"API\"),\n    (\"generation\", \"Generation\"),\n    (\"sql-read\", \"SQL Read\"),\n    (\"sql-write\", \"SQL Write\"),\n    (\"store-memory\", \"Store Memory\"),\n    (\"interpret-code\", \"Interpret Code\"),\n    (\"reasoning\", \"Reasoning\"),\n    (\"upload-file\", \"Upload File\"),",
        "detail": "apps.core.internal_cost_manager.costs_map",
        "documentation": {}
    },
    {
        "label": "TOOL_NAME_TO_COST_MAP",
        "kind": 5,
        "importPath": "apps.core.internal_cost_manager.costs_map",
        "description": "apps.core.internal_cost_manager.costs_map",
        "peekOfCode": "TOOL_NAME_TO_COST_MAP = {\n    \"store-memory\": InternalServiceCosts.ContextMemory.COST,\n    \"retrieve-memory\": InternalServiceCosts.ContextMemoryRetrieval.COST,\n    \"interpret-code\": InternalServiceCosts.CodeInterpreter.COST,\n    \"download-file\": InternalServiceCosts.DownloadExecutor.COST,\n    \"file-system-commands\": InternalServiceCosts.FileSystemsExecutor.COST,\n    \"knowledge-base-search\": InternalServiceCosts.KnowledgeBaseExecutor.COST,\n    \"code-base-search\": InternalServiceCosts.CodeBaseExecutor.COST,\n    \"browsing\": InternalServiceCosts.BrowsingExecutor.COST,\n    \"ml-model-prediction\": InternalServiceCosts.MLModelExecutor.COST,",
        "detail": "apps.core.internal_cost_manager.costs_map",
        "documentation": {}
    },
    {
        "label": "fixture_storages_init",
        "kind": 2,
        "importPath": "apps.core.media_managers.tests.conftest",
        "description": "apps.core.media_managers.tests.conftest",
        "peekOfCode": "def fixture_storages_init():\n    return True",
        "detail": "apps.core.media_managers.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_storages_test_services",
        "kind": 2,
        "importPath": "apps.core.media_managers.tests.test_services",
        "description": "apps.core.media_managers.tests.test_services",
        "peekOfCode": "def test_init_storages_test_services():\n    assert True",
        "detail": "apps.core.media_managers.tests.test_services",
        "documentation": {}
    },
    {
        "label": "ImageModes",
        "kind": 6,
        "importPath": "apps.core.media_managers.utils.constant_utils",
        "description": "apps.core.media_managers.utils.constant_utils",
        "peekOfCode": "class ImageModes:\n    RGBA = 'RGBA'\n    RGB = 'RGB'\n    JPG = \"JPG\"\n    JPEG = \"JPEG\"\nDEFAULT_IMAGE_COMPRESSION_JPEG = 80",
        "detail": "apps.core.media_managers.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "FILE_EXTENSION_BIN",
        "kind": 5,
        "importPath": "apps.core.media_managers.utils.constant_utils",
        "description": "apps.core.media_managers.utils.constant_utils",
        "peekOfCode": "FILE_EXTENSION_BIN = \".bin\"\nGENERATED_FILES_ROOT_MEDIA_PATH = \"generated/files/\"\nGENERATED_IMAGES_ROOT_MEDIA_PATH = \"generated/images/\"\nGENERATED_VIDEOS_ROOT_MEDIA_PATH = \"generated/videos/\"\nMEDIA_PATH_FREEFORM_SKETCH = \"free_form__user_sketch__\"\nMEDIA_PATH_EDIT_IMAGE_BASE = \"edit_image__original_version__\"\nMEDIA_PATH_EDIT_IMAGE_MASK = \"edit_image__masked_version__\"\nclass ImageModes:\n    RGBA = 'RGBA'\n    RGB = 'RGB'",
        "detail": "apps.core.media_managers.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "GENERATED_FILES_ROOT_MEDIA_PATH",
        "kind": 5,
        "importPath": "apps.core.media_managers.utils.constant_utils",
        "description": "apps.core.media_managers.utils.constant_utils",
        "peekOfCode": "GENERATED_FILES_ROOT_MEDIA_PATH = \"generated/files/\"\nGENERATED_IMAGES_ROOT_MEDIA_PATH = \"generated/images/\"\nGENERATED_VIDEOS_ROOT_MEDIA_PATH = \"generated/videos/\"\nMEDIA_PATH_FREEFORM_SKETCH = \"free_form__user_sketch__\"\nMEDIA_PATH_EDIT_IMAGE_BASE = \"edit_image__original_version__\"\nMEDIA_PATH_EDIT_IMAGE_MASK = \"edit_image__masked_version__\"\nclass ImageModes:\n    RGBA = 'RGBA'\n    RGB = 'RGB'\n    JPG = \"JPG\"",
        "detail": "apps.core.media_managers.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "GENERATED_IMAGES_ROOT_MEDIA_PATH",
        "kind": 5,
        "importPath": "apps.core.media_managers.utils.constant_utils",
        "description": "apps.core.media_managers.utils.constant_utils",
        "peekOfCode": "GENERATED_IMAGES_ROOT_MEDIA_PATH = \"generated/images/\"\nGENERATED_VIDEOS_ROOT_MEDIA_PATH = \"generated/videos/\"\nMEDIA_PATH_FREEFORM_SKETCH = \"free_form__user_sketch__\"\nMEDIA_PATH_EDIT_IMAGE_BASE = \"edit_image__original_version__\"\nMEDIA_PATH_EDIT_IMAGE_MASK = \"edit_image__masked_version__\"\nclass ImageModes:\n    RGBA = 'RGBA'\n    RGB = 'RGB'\n    JPG = \"JPG\"\n    JPEG = \"JPEG\"",
        "detail": "apps.core.media_managers.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "GENERATED_VIDEOS_ROOT_MEDIA_PATH",
        "kind": 5,
        "importPath": "apps.core.media_managers.utils.constant_utils",
        "description": "apps.core.media_managers.utils.constant_utils",
        "peekOfCode": "GENERATED_VIDEOS_ROOT_MEDIA_PATH = \"generated/videos/\"\nMEDIA_PATH_FREEFORM_SKETCH = \"free_form__user_sketch__\"\nMEDIA_PATH_EDIT_IMAGE_BASE = \"edit_image__original_version__\"\nMEDIA_PATH_EDIT_IMAGE_MASK = \"edit_image__masked_version__\"\nclass ImageModes:\n    RGBA = 'RGBA'\n    RGB = 'RGB'\n    JPG = \"JPG\"\n    JPEG = \"JPEG\"\nDEFAULT_IMAGE_COMPRESSION_JPEG = 80",
        "detail": "apps.core.media_managers.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MEDIA_PATH_FREEFORM_SKETCH",
        "kind": 5,
        "importPath": "apps.core.media_managers.utils.constant_utils",
        "description": "apps.core.media_managers.utils.constant_utils",
        "peekOfCode": "MEDIA_PATH_FREEFORM_SKETCH = \"free_form__user_sketch__\"\nMEDIA_PATH_EDIT_IMAGE_BASE = \"edit_image__original_version__\"\nMEDIA_PATH_EDIT_IMAGE_MASK = \"edit_image__masked_version__\"\nclass ImageModes:\n    RGBA = 'RGBA'\n    RGB = 'RGB'\n    JPG = \"JPG\"\n    JPEG = \"JPEG\"\nDEFAULT_IMAGE_COMPRESSION_JPEG = 80",
        "detail": "apps.core.media_managers.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MEDIA_PATH_EDIT_IMAGE_BASE",
        "kind": 5,
        "importPath": "apps.core.media_managers.utils.constant_utils",
        "description": "apps.core.media_managers.utils.constant_utils",
        "peekOfCode": "MEDIA_PATH_EDIT_IMAGE_BASE = \"edit_image__original_version__\"\nMEDIA_PATH_EDIT_IMAGE_MASK = \"edit_image__masked_version__\"\nclass ImageModes:\n    RGBA = 'RGBA'\n    RGB = 'RGB'\n    JPG = \"JPG\"\n    JPEG = \"JPEG\"\nDEFAULT_IMAGE_COMPRESSION_JPEG = 80",
        "detail": "apps.core.media_managers.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MEDIA_PATH_EDIT_IMAGE_MASK",
        "kind": 5,
        "importPath": "apps.core.media_managers.utils.constant_utils",
        "description": "apps.core.media_managers.utils.constant_utils",
        "peekOfCode": "MEDIA_PATH_EDIT_IMAGE_MASK = \"edit_image__masked_version__\"\nclass ImageModes:\n    RGBA = 'RGBA'\n    RGB = 'RGB'\n    JPG = \"JPG\"\n    JPEG = \"JPEG\"\nDEFAULT_IMAGE_COMPRESSION_JPEG = 80",
        "detail": "apps.core.media_managers.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DEFAULT_IMAGE_COMPRESSION_JPEG",
        "kind": 5,
        "importPath": "apps.core.media_managers.utils.constant_utils",
        "description": "apps.core.media_managers.utils.constant_utils",
        "peekOfCode": "DEFAULT_IMAGE_COMPRESSION_JPEG = 80",
        "detail": "apps.core.media_managers.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MediaManager",
        "kind": 6,
        "importPath": "apps.core.media_managers.media_manager_execution_handler",
        "description": "apps.core.media_managers.media_manager_execution_handler",
        "peekOfCode": "class MediaManager:\n    def __init__(self, connection, chat):\n        self.connection_object = connection\n        self.chat = chat\n    @staticmethod\n    def file_name_generator(file_format):\n        uuid_1 = str(uuid4())\n        uuid_2 = str(uuid4())\n        return f\"{uuid_1}_{uuid_2}.{file_format}\"\n    @staticmethod",
        "detail": "apps.core.media_managers.media_manager_execution_handler",
        "documentation": {}
    },
    {
        "label": "fixture_ml_models_init",
        "kind": 2,
        "importPath": "apps.core.ml_models.tests.conftest",
        "description": "apps.core.ml_models.tests.conftest",
        "peekOfCode": "def fixture_ml_models_init():\n    return True",
        "detail": "apps.core.ml_models.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_ml_models_test_services",
        "kind": 2,
        "importPath": "apps.core.ml_models.tests.test_services",
        "description": "apps.core.ml_models.tests.test_services",
        "peekOfCode": "def test_init_ml_models_test_services():\n    assert True",
        "detail": "apps.core.ml_models.tests.test_services",
        "documentation": {}
    },
    {
        "label": "GENERATED_FILES_ROOT_PATH",
        "kind": 5,
        "importPath": "apps.core.ml_models.utils.constant_utils",
        "description": "apps.core.ml_models.utils.constant_utils",
        "peekOfCode": "GENERATED_FILES_ROOT_PATH = \"generated/files/\"\nGENERATED_IMAGES_ROOT_PATH = \"generated/images/\"\nUNCLASSIFIED_FILE_EXTENSION = \".bin\"",
        "detail": "apps.core.ml_models.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "GENERATED_IMAGES_ROOT_PATH",
        "kind": 5,
        "importPath": "apps.core.ml_models.utils.constant_utils",
        "description": "apps.core.ml_models.utils.constant_utils",
        "peekOfCode": "GENERATED_IMAGES_ROOT_PATH = \"generated/images/\"\nUNCLASSIFIED_FILE_EXTENSION = \".bin\"",
        "detail": "apps.core.ml_models.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "UNCLASSIFIED_FILE_EXTENSION",
        "kind": 5,
        "importPath": "apps.core.ml_models.utils.constant_utils",
        "description": "apps.core.ml_models.utils.constant_utils",
        "peekOfCode": "UNCLASSIFIED_FILE_EXTENSION = \".bin\"",
        "detail": "apps.core.ml_models.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MLModelExecutor",
        "kind": 6,
        "importPath": "apps.core.ml_models.ml_model_executor",
        "description": "apps.core.ml_models.ml_model_executor",
        "peekOfCode": "class MLModelExecutor:\n    def __init__(self, connection, chat):\n        self.connection_object = connection\n        self.chat = chat\n    @staticmethod\n    def generate_save_name(extension):\n        generated_uuid = str(uuid4())\n        additional_uuid = str(uuid4())\n        return f\"{generated_uuid}_{additional_uuid}.{extension}\"\n    @staticmethod",
        "detail": "apps.core.ml_models.ml_model_executor",
        "documentation": {}
    },
    {
        "label": "fixture_nosql_init",
        "kind": 2,
        "importPath": "apps.core.nosql.tests.conftest",
        "description": "apps.core.nosql.tests.conftest",
        "peekOfCode": "def fixture_nosql_init():\n    return True",
        "detail": "apps.core.nosql.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_nosql_test_services",
        "kind": 2,
        "importPath": "apps.core.nosql.tests.test_services",
        "description": "apps.core.nosql.tests.test_services",
        "peekOfCode": "def test_init_nosql_test_services():\n    assert True",
        "detail": "apps.core.nosql.tests.test_services",
        "documentation": {}
    },
    {
        "label": "build_maestro_to_assistant_instructions_prompt",
        "kind": 2,
        "importPath": "apps.core.orchestration.prompts.calls.build_maestro_to_assistant_instructions",
        "description": "apps.core.orchestration.prompts.calls.build_maestro_to_assistant_instructions",
        "peekOfCode": "def build_maestro_to_assistant_instructions_prompt(maestro_query_text: str) -> str:\n    return f\"\"\"\n        **WARNING: This is an ORCHESTRATOR-GENERATED user message.**\n            !!! IMPORTANT: PLEASE READ THE FOLLOWING WARNING CAREFULLY !!!\n            ---\n            YOUR SUBJECT IS '''NOT''' A HUMAN BEING. YOUR SUBJECT 'IS' AN ARTIFICIAL INTELLIGENCE SYSTEM LIKE YOU.\n            ---\n            - If you see this message, it means that this message is sent to you by the ORCHESTRATOR assistant,\n            within the context of a complex task execution. Please know that the respondent to your messages is NOT\n            a human being; an instead an artificial intelligence system like you. The orchestration assistant is tasked",
        "detail": "apps.core.orchestration.prompts.calls.build_maestro_to_assistant_instructions",
        "documentation": {}
    },
    {
        "label": "build_orchestration_structured_tool_usage_instructions_prompt",
        "kind": 2,
        "importPath": "apps.core.orchestration.prompts.orchestration.build_assistant_calls_meta_tool_prompt",
        "description": "apps.core.orchestration.prompts.orchestration.build_assistant_calls_meta_tool_prompt",
        "peekOfCode": "def build_orchestration_structured_tool_usage_instructions_prompt(maestro):\n    response_prompt = f\"\"\"\n        **WORKER TOOL USAGE ABILITY:** (Very important! - Make sure to UNDERSTAND this part well)\n        - As an orchestration assistant, you are able to use worker assistants to provide better and more accurate\n        responses to the user's questions when you believe that there would be a benefit in doing so.\n        - While you are answering user's questions, you have two options:\n            1. You can directly provide a response to the question by text: Do this if you think you have enough\n            information to provide an answer to the user's question with the data you currently have. These\n            responses must be delivered in natural language.\n            2. You can output a JSON file, which will be interpreted by the system as a request to use a 'WORKER TOOL'.",
        "detail": "apps.core.orchestration.prompts.orchestration.build_assistant_calls_meta_tool_prompt",
        "documentation": {}
    },
    {
        "label": "build_orchestration_workers_multi_modality_prompt",
        "kind": 2,
        "importPath": "apps.core.orchestration.prompts.orchestration.build_assistant_calls_meta_tool_prompt",
        "description": "apps.core.orchestration.prompts.orchestration.build_assistant_calls_meta_tool_prompt",
        "peekOfCode": "def build_orchestration_workers_multi_modality_prompt(maestro):\n    maestro: Maestro\n    response_prompt = f\"\"\"\n        **WORKER ASSISTANT MULTI-MODALITY USAGE ABILITY:** (Very important! - Make sure to UNDERSTAND this part well)\n        - As an orchestration assistant, you are able to use worker assistants to provide better and more accurate\n        responses to the user's questions when you believe that there would be a benefit in doing so. In this section\n        of your prompt, you will receive the list of worker assistants that you have access to, their IDs, as well\n        as the data sources & capabilities they have access to. This information will help you to understand which\n        worker assistant can be the most helpful for you in the current context. Be careful in reaching out the right\n        worker assistant, as the data sources and capabilities of the worker assistants are different from each other.",
        "detail": "apps.core.orchestration.prompts.orchestration.build_assistant_calls_meta_tool_prompt",
        "documentation": {}
    },
    {
        "label": "build_structured_tool_prompt__orchestration_worker_assistant_call_execution",
        "kind": 2,
        "importPath": "apps.core.orchestration.prompts.orchestration.build_assistant_calls_meta_tool_prompt",
        "description": "apps.core.orchestration.prompts.orchestration.build_assistant_calls_meta_tool_prompt",
        "peekOfCode": "def build_structured_tool_prompt__orchestration_worker_assistant_call_execution():\n    response_prompt = f\"\"\"\n        **TOOL**: Worker Assistant Calling Tool\n        - The Worker Assistant Calling Tool is a tool that allows you to call worker assistants to provide better and\n        more accurate responses to the user's questions when you believe that there would be a benefit in doing so.\n        The Worker Assistant Calling Tool is a dedicated tool for calling worker assistants to execute a query on a\n        certain request / requirement of the user; and also lets you to send image URLs, or file URLs depending on the\n        requirements specified to you by the user's query. Don't forget that you can only share a single JSON file in\n        a single request, and make sure you stick to this rule.\n        - The standardized format for the dictionary that you will output to use the Worker Assistant Calling Tool",
        "detail": "apps.core.orchestration.prompts.orchestration.build_assistant_calls_meta_tool_prompt",
        "documentation": {}
    },
    {
        "label": "build_structured_orchestrator_primary_guidelines",
        "kind": 2,
        "importPath": "apps.core.orchestration.prompts.orchestration.build_main_orchestration_prompt",
        "description": "apps.core.orchestration.prompts.orchestration.build_main_orchestration_prompt",
        "peekOfCode": "def build_structured_orchestrator_primary_guidelines():\n    return f\"\"\"\n    **ORCHESTRATOR - PRIMARY GUIDELINES:**\n    - Until instructed by further instructions, you are an orchestrator assistant of Bimod.io, and you are\n     responsible for providing the best user experience to the user you are currently chatting with.\n     Bimod.io is a platform that provides a wide range of Artificial Intelligence services for its users,\n     letting them create AI orchestrators, worker assistants, and other AI services such as data source integration,\n     function and API integration, retrieval augmented generation, multiple assistant collaborative orchestration\n     with Mixture of Experts techniques, timed or triggered AI assistant tasks, etc.\n    - These definitions can be \"OVERRIDEN\" by the instructions section or other prompts given by the user",
        "detail": "apps.core.orchestration.prompts.orchestration.build_main_orchestration_prompt",
        "documentation": {}
    },
    {
        "label": "build_structured_orchestrator_instructions_prompt",
        "kind": 2,
        "importPath": "apps.core.orchestration.prompts.orchestration.build_main_orchestration_prompt",
        "description": "apps.core.orchestration.prompts.orchestration.build_main_orchestration_prompt",
        "peekOfCode": "def build_structured_orchestrator_instructions_prompt(maestro):\n    return f\"\"\"\n    **YOUR ORCHESTRATION INSTRUCTIONS:**\n    General Instructions:\n    - You are an orchestration 'Maestro' assistant, which means that you are tasked to lead and coordinate a\n    multi-modal mixture of experts process consisting multiple worker assistants with varying data source accesses,\n    along with different functional tools and capabilities. Your main responsibilities are:\n    1. Coordinating and leading the worker assistants to accomplish a complex query or task requested directly by the\n    user. This task is generally too complex to be handled by a single assistant and that is the main reason the user\n    has requested your assistance; for you to orchestrate the worker assistants to accomplish the task.",
        "detail": "apps.core.orchestration.prompts.orchestration.build_main_orchestration_prompt",
        "documentation": {}
    },
    {
        "label": "OrchestrationHistoryBuilder",
        "kind": 6,
        "importPath": "apps.core.orchestration.prompts.orchestration_history_builder",
        "description": "apps.core.orchestration.prompts.orchestration_history_builder",
        "peekOfCode": "class OrchestrationHistoryBuilder:\n    @staticmethod\n    def build(query_chat: OrchestrationQuery):\n        chat_messages: list[OrchestrationQueryLog] = query_chat.logs.all().order_by(\"created_at\")\n        context_history = []\n        for log in chat_messages:\n            sender_type = log.log_type\n            if sender_type == OrchestrationQueryLogTypesNames.USER:\n                sender_type = HistoryBuilder.ChatRoles.USER\n                message_text_content = f\"\"\"",
        "detail": "apps.core.orchestration.prompts.orchestration_history_builder",
        "documentation": {}
    },
    {
        "label": "OrchestrationPromptBuilder",
        "kind": 6,
        "importPath": "apps.core.orchestration.prompts.orchestration_prompt_builder",
        "description": "apps.core.orchestration.prompts.orchestration_prompt_builder",
        "peekOfCode": "class OrchestrationPromptBuilder:\n    @staticmethod\n    def build(query_chat: OrchestrationQuery, maestro: Maestro, user: User, role: str):\n        name = maestro.name\n        query_chat_text = query_chat.query_text\n        print(f\"[OrchestrationPromptBuilder.build] Building Orchestration Prompt for Maestro: {name}.\")\n        print(f\"[OrchestrationPromptBuilder.build] Query Chat Text: '{query_chat_text}'.\")\n        response_template = maestro.response_template\n        audience = maestro.audience\n        tone = maestro.tone",
        "detail": "apps.core.orchestration.prompts.orchestration_prompt_builder",
        "documentation": {}
    },
    {
        "label": "run_worker_tool",
        "kind": 2,
        "importPath": "apps.core.orchestration.runners.worker_tool_runner",
        "description": "apps.core.orchestration.runners.worker_tool_runner",
        "peekOfCode": "def run_worker_tool(maestro_id, query_id, worker_assistant_id, query_text, file_urls, image_urls):\n    from apps.core.orchestration.orchestration_executor import OrchestrationExecutor\n    from apps.core.orchestration.utils import DEFAULT_WORKER_ASSISTANT_ERROR_MESSAGE\n    maestro = Maestro.objects.get(id=maestro_id)\n    query_chat = OrchestrationQuery.objects.get(id=query_id)\n    try:\n        executor = OrchestrationExecutor(\n            maestro=maestro,\n            query_chat=query_chat,\n        )",
        "detail": "apps.core.orchestration.runners.worker_tool_runner",
        "documentation": {}
    },
    {
        "label": "OrchestrationChatRoles",
        "kind": 6,
        "importPath": "apps.core.orchestration.utils.constant_utils",
        "description": "apps.core.orchestration.utils.constant_utils",
        "peekOfCode": "class OrchestrationChatRoles:\n    SYSTEM = \"SYSTEM\"\n    USER = \"USER\"\n    ASSISTANT = \"ASSISTANT\"\n    TOOL = \"TOOL\"",
        "detail": "apps.core.orchestration.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DEFAULT_ORCHESTRATION_ERROR_MESSAGE",
        "kind": 5,
        "importPath": "apps.core.orchestration.utils.constant_utils",
        "description": "apps.core.orchestration.utils.constant_utils",
        "peekOfCode": "DEFAULT_ORCHESTRATION_ERROR_MESSAGE = (\"The Orchestration Executor has encountered a fatal error. Please try again \"\n                                       \"later.\")\nDEFAULT_WORKER_ASSISTANT_ERROR_MESSAGE = \"The Worker Assistant has encountered a fatal error. Please try again later.\"\nclass OrchestrationChatRoles:\n    SYSTEM = \"SYSTEM\"\n    USER = \"USER\"\n    ASSISTANT = \"ASSISTANT\"\n    TOOL = \"TOOL\"",
        "detail": "apps.core.orchestration.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DEFAULT_WORKER_ASSISTANT_ERROR_MESSAGE",
        "kind": 5,
        "importPath": "apps.core.orchestration.utils.constant_utils",
        "description": "apps.core.orchestration.utils.constant_utils",
        "peekOfCode": "DEFAULT_WORKER_ASSISTANT_ERROR_MESSAGE = \"The Worker Assistant has encountered a fatal error. Please try again later.\"\nclass OrchestrationChatRoles:\n    SYSTEM = \"SYSTEM\"\n    USER = \"USER\"\n    ASSISTANT = \"ASSISTANT\"\n    TOOL = \"TOOL\"",
        "detail": "apps.core.orchestration.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "send_orchestration_message",
        "kind": 2,
        "importPath": "apps.core.orchestration.utils.function_utils",
        "description": "apps.core.orchestration.utils.function_utils",
        "peekOfCode": "def send_orchestration_message(log_message, query_id, stop_tag=BIMOD_STREAMING_END_TAG):\n    channel_layer = get_channel_layer()\n    group_name = f'orchestration_logs_{query_id}'\n    query_object = OrchestrationQuery.objects.get(id=query_id)\n    maestro_id = query_object.maestro.id\n    generic_group_name = f'orchestration_generic_logs_{maestro_id}'\n    async_to_sync(channel_layer.group_send)(group_name, {'type': 'send_log', 'message': log_message})\n    async_to_sync(channel_layer.group_send)(generic_group_name, {'type': 'send_log', 'message': log_message})\n    if stop_tag == BIMOD_STREAMING_END_TAG:\n        async_to_sync(channel_layer.group_send)(group_name, {'type': 'send_log', 'message': BIMOD_STREAMING_END_TAG})",
        "detail": "apps.core.orchestration.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "embed_orchestration_tool_call_in_prompt",
        "kind": 2,
        "importPath": "apps.core.orchestration.utils.function_utils",
        "description": "apps.core.orchestration.utils.function_utils",
        "peekOfCode": "def embed_orchestration_tool_call_in_prompt(json_part):\n    return f\"\"\"\n        *Worker Tool Call:*\n        ```\n        {json_part}\n        ```\n    \"\"\"\ndef get_orchestration_json_decode_error_log(error_logs):\n    return f\"\"\"\n        **SYSTEM MESSAGE:**",
        "detail": "apps.core.orchestration.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "get_orchestration_json_decode_error_log",
        "kind": 2,
        "importPath": "apps.core.orchestration.utils.function_utils",
        "description": "apps.core.orchestration.utils.function_utils",
        "peekOfCode": "def get_orchestration_json_decode_error_log(error_logs):\n    return f\"\"\"\n        **SYSTEM MESSAGE:**\n        - An error occurred while decoding the JSON response provided by the AI assistant. This might be\n        related to the incorrect formatting of the response. Please make sure that the response is in the\n        correct JSON format.\n        Error Details:\n        '''\n        {str(error_logs)}\n        '''",
        "detail": "apps.core.orchestration.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "validate_orchestration_main_tool_json",
        "kind": 2,
        "importPath": "apps.core.orchestration.utils.function_utils",
        "description": "apps.core.orchestration.utils.function_utils",
        "peekOfCode": "def validate_orchestration_main_tool_json(tool_usage_json: dict):\n    if not tool_usage_json:\n        return \"\"\"\n                    The JSON is empty. Please make sure you are passing the correct JSON object to the\n                    ToolDecoder class.\n                \"\"\"\n    if not tool_usage_json.get(\"tool\"):\n        return \"\"\"\n                    The 'tool' field is missing from the tool_usage_json. Please make sure you are defining the tool\n                    name in the tool_usage_json.",
        "detail": "apps.core.orchestration.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "get_no_orchestration_tool_found_error_log",
        "kind": 2,
        "importPath": "apps.core.orchestration.utils.function_utils",
        "description": "apps.core.orchestration.utils.function_utils",
        "peekOfCode": "def get_no_orchestration_tool_found_error_log(query_name):\n    return f\"\"\"\n        There is no tool with the name: {query_name} in the system. Please make sure you are defining\n        the correct tool name in the tool_usage_json.\n    \"\"\"",
        "detail": "apps.core.orchestration.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "validate_orchestration_worker_assistant_call_execution_tool_json",
        "kind": 2,
        "importPath": "apps.core.orchestration.validators.validate_orchestration_assistant_call",
        "description": "apps.core.orchestration.validators.validate_orchestration_assistant_call",
        "peekOfCode": "def validate_orchestration_worker_assistant_call_execution_tool_json(tool_usage_json: dict):\n    if \"parameters\" not in tool_usage_json:\n        return \"\"\"\n            The 'parameters' field is missing from the tool_usage_json. This field is mandatory for using the\n            Worker Assistant Call Execution tool. Please make sure you are defining the 'parameters' field in the\n            tool_usage_json.\n        \"\"\"\n    parameters = tool_usage_json.get(\"parameters\")\n    if \"assistant_id\" not in parameters:\n        return \"\"\"",
        "detail": "apps.core.orchestration.validators.validate_orchestration_assistant_call",
        "documentation": {}
    },
    {
        "label": "OrchestrationExecutor",
        "kind": 6,
        "importPath": "apps.core.orchestration.orchestration_executor",
        "description": "apps.core.orchestration.orchestration_executor",
        "peekOfCode": "class OrchestrationExecutor:\n    def __init__(self, maestro, query_chat):\n        self.maestro = maestro\n        self.query_chat = query_chat\n        ############################################################################################################\n        self.client = OpenAIGPTClientManager.get_naked_client(llm_model=self.maestro.llm_model)\n        ############################################################################################################\n        self.worker_chats = {\n            #___________________________________________#\n            # This dictionary is to be filled with IDs of the Worker Assistants' chats as they get created.",
        "detail": "apps.core.orchestration.orchestration_executor",
        "documentation": {}
    },
    {
        "label": "OrchestrationToolManager",
        "kind": 6,
        "importPath": "apps.core.orchestration.orchestration_tool_manager",
        "description": "apps.core.orchestration.orchestration_tool_manager",
        "peekOfCode": "class OrchestrationToolManager:\n    def __init__(self, maestro: Maestro, query_chat: OrchestrationQuery, tool_usage_json_str: dict):\n        self.maestro = maestro\n        self.query_chat = query_chat\n        self.tool_usage_json_str = tool_usage_json_str\n        self.tool_usage_json = {}\n    def use_tool(self):\n        try:\n            if isinstance(self.tool_usage_json_str, dict):\n                self.tool_usage_json = self.tool_usage_json_str",
        "detail": "apps.core.orchestration.orchestration_tool_manager",
        "documentation": {}
    },
    {
        "label": "fixture_reasoning_init",
        "kind": 2,
        "importPath": "apps.core.reasoning.tests.conftest",
        "description": "apps.core.reasoning.tests.conftest",
        "peekOfCode": "def fixture_reasoning_init():\n    return True",
        "detail": "apps.core.reasoning.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_reasoning_test_services",
        "kind": 2,
        "importPath": "apps.core.reasoning.tests.test_services",
        "description": "apps.core.reasoning.tests.test_services",
        "peekOfCode": "def test_init_reasoning_test_services():\n    assert True",
        "detail": "apps.core.reasoning.tests.test_services",
        "documentation": {}
    },
    {
        "label": "ReasoningExecutor",
        "kind": 6,
        "importPath": "apps.core.reasoning.reasoning_executor",
        "description": "apps.core.reasoning.reasoning_executor",
        "peekOfCode": "class ReasoningExecutor:\n    def __init__(self, assistant, chat):\n        self.assistant = assistant\n        self.chat = chat\n    def execute_process_reasoning(self, query_string: str):\n        from apps.core.generative_ai.auxiliary_clients.auxiliary_reasoning_client import ReasoningAuxiliaryLLMManager\n        from apps.core.generative_ai.utils import GPT_DEFAULT_ENCODING_ENGINE\n        from apps.core.generative_ai.utils import ChatRoles\n        try:\n            llm_c = ReasoningAuxiliaryLLMManager(",
        "detail": "apps.core.reasoning.reasoning_executor",
        "documentation": {}
    },
    {
        "label": "MySQLExecutor",
        "kind": 6,
        "importPath": "apps.core.sql.sql_executor.mysql_executor",
        "description": "apps.core.sql.sql_executor.mysql_executor",
        "peekOfCode": "class MySQLExecutor:\n    def __init__(self, connection: SQLDatabaseConnection):\n        before_execute_sql_query(connection)\n        self.conn_params = {\n            'user': connection.username, 'password': connection.password, 'host': connection.host,\n            'database': connection.database_name, 'port': connection.port\n        }\n        self.connection_object = connection\n    def execute_read(self, query, parameters=None):\n        from apps.core.generative_ai.utils import GPT_DEFAULT_ENCODING_ENGINE",
        "detail": "apps.core.sql.sql_executor.mysql_executor",
        "documentation": {}
    },
    {
        "label": "PostgresSQLExecutor",
        "kind": 6,
        "importPath": "apps.core.sql.sql_executor.postgresql_executor",
        "description": "apps.core.sql.sql_executor.postgresql_executor",
        "peekOfCode": "class PostgresSQLExecutor:\n    def __init__(self, connection: SQLDatabaseConnection):\n        before_execute_sql_query(connection)\n        self.conn_params = {\n            'dbname': connection.database_name, 'user': connection.username, 'password': connection.password,\n            'host': connection.host, 'port': connection.port\n        }\n        self.connection_object = connection\n    def execute_read(self, query, parameters=None):\n        from apps.core.generative_ai.utils import GPT_DEFAULT_ENCODING_ENGINE",
        "detail": "apps.core.sql.sql_executor.postgresql_executor",
        "documentation": {}
    },
    {
        "label": "fixture_sql_init",
        "kind": 2,
        "importPath": "apps.core.sql.tests.conftest",
        "description": "apps.core.sql.tests.conftest",
        "peekOfCode": "def fixture_sql_init():\n    return True",
        "detail": "apps.core.sql.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_sql_test_services",
        "kind": 2,
        "importPath": "apps.core.sql.tests.test_services",
        "description": "apps.core.sql.tests.test_services",
        "peekOfCode": "def test_init_sql_test_services():\n    assert True",
        "detail": "apps.core.sql.tests.test_services",
        "documentation": {}
    },
    {
        "label": "SQLKeywords",
        "kind": 6,
        "importPath": "apps.core.sql.utils.constant_utils",
        "description": "apps.core.sql.utils.constant_utils",
        "peekOfCode": "class SQLKeywords:\n    LIMIT = \"LIMIT\"",
        "detail": "apps.core.sql.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "INTRINSIC_MAXIMUM_QUERY_RECORD_LIMIT",
        "kind": 5,
        "importPath": "apps.core.sql.utils.constant_utils",
        "description": "apps.core.sql.utils.constant_utils",
        "peekOfCode": "INTRINSIC_MAXIMUM_QUERY_RECORD_LIMIT = 1000\nclass SQLKeywords:\n    LIMIT = \"LIMIT\"",
        "detail": "apps.core.sql.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "before_execute_sql_query",
        "kind": 2,
        "importPath": "apps.core.sql.utils.function_utils",
        "description": "apps.core.sql.utils.function_utils",
        "peekOfCode": "def before_execute_sql_query(connection: SQLDatabaseConnection):\n    old_schema_json = connection.schema_data_json\n    new_schema = {}\n    if connection.dbms_type == DBMSChoicesNames.POSTGRESQL:\n        new_schema = connection.retrieve_postgresql_schema()\n    elif connection.dbms_type == DBMSChoicesNames.MYSQL:\n        new_schema = connection.retrieve_mysql_schema()\n    if new_schema != old_schema_json:\n        connection.schema_data_json = new_schema\n        connection.save()",
        "detail": "apps.core.sql.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "can_write_to_database",
        "kind": 2,
        "importPath": "apps.core.sql.utils.function_utils",
        "description": "apps.core.sql.utils.function_utils",
        "peekOfCode": "def can_write_to_database(connection: SQLDatabaseConnection):\n    return not connection.is_read_only",
        "detail": "apps.core.sql.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "InternalSQLClient",
        "kind": 6,
        "importPath": "apps.core.sql.sql_decoder",
        "description": "apps.core.sql.sql_decoder",
        "peekOfCode": "class InternalSQLClient:\n    SQL_DBMS_PROVIDERS = {\n        \"POSTGRESQL\": {\"code\": \"postgresql\", \"name\": \"PostgreSQL\"},\n        \"MYSQL\": {\"code\": \"mysql\", \"name\": \"MySQL\"},\n    }\n    @staticmethod\n    def get(connection: SQLDatabaseConnection):\n        if connection.dbms_type == InternalSQLClient.SQL_DBMS_PROVIDERS[\"POSTGRESQL\"][\"code\"]:\n            return PostgresSQLExecutor(connection)\n        elif connection.dbms_type == InternalSQLClient.SQL_DBMS_PROVIDERS[\"MYSQL\"][\"code\"]:",
        "detail": "apps.core.sql.sql_decoder",
        "documentation": {}
    },
    {
        "label": "build_agent_nickname_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.agent_configuration.agent_nickname_prompt_manager",
        "description": "apps.core.system_prompts.agent_configuration.agent_nickname_prompt_manager",
        "peekOfCode": "def build_agent_nickname_prompt(name: str, chat_name: str):\n    return f\"\"\"\n        ### **YOUR NAME:**\n        '''\n        {name}\n        '''\n        **NAME OF THE CHAT YOU ARE INTERACTING WITH:**\n        '''\n        {chat_name}\n        '''",
        "detail": "apps.core.system_prompts.agent_configuration.agent_nickname_prompt_manager",
        "documentation": {}
    },
    {
        "label": "build_agent_personality_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.agent_configuration.agent_personality_prompt_manager",
        "description": "apps.core.system_prompts.agent_configuration.agent_personality_prompt_manager",
        "peekOfCode": "def build_agent_personality_prompt(tone: str):\n    return f\"\"\"\n        ### **YOUR TONE:**\n        '''\n        {tone}\n        '''\n        **NOTE**: This is the tone that you have while responding to the user's messages. Your use of language,\n        the way you respond, and the way you interact will be based on this tone. Make sure to keep this in mind\n        while responding to the user's messages. If this part is EMPTY, you can use a standard tone.\n    \"\"\"",
        "detail": "apps.core.system_prompts.agent_configuration.agent_personality_prompt_manager",
        "documentation": {}
    },
    {
        "label": "build_communication_language_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.agent_configuration.communication_language_prompt_manager",
        "description": "apps.core.system_prompts.agent_configuration.communication_language_prompt_manager",
        "peekOfCode": "def build_communication_language_prompt(response_language: str):\n    return f\"\"\"\n        ### **YOUR RESPONSE LANGUAGE:**\n        '''\n        {response_language}\n        '''\n        **NOTE**: This is the language that you will be using while responding to the messages. If this\n        part is named {AGENT_SPEECH_LANGUAGES[0]}, you MUST respond in the language the user is asking\n        you the questions. If this part is EMPTY, your default language to respond will be English.\n    \"\"\"",
        "detail": "apps.core.system_prompts.agent_configuration.communication_language_prompt_manager",
        "documentation": {}
    },
    {
        "label": "build_user_tenant_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.agent_configuration.communication_user_tenant_prompt_manager",
        "description": "apps.core.system_prompts.agent_configuration.communication_user_tenant_prompt_manager",
        "peekOfCode": "def build_user_tenant_prompt(user: User):\n    return f\"\"\"\n        ### **USER INFORMATION:**\n        '''\n        User's Full Name: {user.profile.first_name} {user.profile.last_name}\n               Email: {user.email}\n               City: {user.profile.city}\n               Country: {user.profile.country}\n               Birthday: {user.profile.birthdate}\n        '''",
        "detail": "apps.core.system_prompts.agent_configuration.communication_user_tenant_prompt_manager",
        "documentation": {}
    },
    {
        "label": "build_internal_principles_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.agent_configuration.internal_principles_prompt_manager",
        "description": "apps.core.system_prompts.agent_configuration.internal_principles_prompt_manager",
        "peekOfCode": "def build_internal_principles_prompt():\n    return f\"\"\"\n            ### **PRIMARY GUIDELINES:**\n            - Until further instructions are provided, assume the role of an AI assistant of Bimod.io. You are\n                responsible for delivering the best possible user experience for the user you are interacting with.\n                Bimod.io is a platform that offers diverse AI services, enabling users to create AI assistants,\n                chatbots, and services including:\n              - AI assistant orchestration via Mixture of Experts techniques.\n              - Data source integration, API and function integration.\n              - Retrieval-augmented generation.",
        "detail": "apps.core.system_prompts.agent_configuration.internal_principles_prompt_manager",
        "documentation": {}
    },
    {
        "label": "build_intra_context_memory_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.agent_configuration.intra_context_memory_prompt_manager",
        "description": "apps.core.system_prompts.agent_configuration.intra_context_memory_prompt_manager",
        "peekOfCode": "def build_intra_context_memory_prompt(assistant: Assistant):\n    return f\"\"\"\n        ### **CONTEXT OVERFLOW MANAGEMENT**\n        To prevent overload in your context window, a strategy has been set for managing the number of messages\n            you store and determining actions when the limit is reached. The current strategy is as follows:\n        ---\n        **Strategy**: `{assistant.context_overflow_strategy}`\n        **Maximum Messages**: `{assistant.max_context_messages}`\n        ---\n        #### **Actions When Limit Is Reached:**",
        "detail": "apps.core.system_prompts.agent_configuration.intra_context_memory_prompt_manager",
        "documentation": {}
    },
    {
        "label": "build_spatial_awareness_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.agent_configuration.spatial_awareness_prompt_manager",
        "description": "apps.core.system_prompts.agent_configuration.spatial_awareness_prompt_manager",
        "peekOfCode": "def build_spatial_awareness_prompt(user: User):\n    response_prompt = \"\"\"\n        ### **PLACE AND TIME AWARENESS:**\n        '''\n        \"\"\"\n    user_location = f\"\"\"\n        - Registered Address: {user.profile.address}\n        - City: {user.profile.city}\n        - Country: {user.profile.country}\n        - Postal Code: {user.profile.postal_code}",
        "detail": "apps.core.system_prompts.agent_configuration.spatial_awareness_prompt_manager",
        "documentation": {}
    },
    {
        "label": "build_standard_memory_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.agent_configuration.standard_memory_prompt_manager",
        "description": "apps.core.system_prompts.agent_configuration.standard_memory_prompt_manager",
        "peekOfCode": "def build_standard_memory_prompt(assistant: Assistant, user: User):\n    assistant_memories = assistant.memories.filter(memory_type=\"assistant-specific\")\n    user_memories = assistant.memories.filter(memory_type=\"user-specific\", user=user)\n    memories = list(assistant_memories) + list(user_memories)\n    response_prompt = \"\"\"\n        ### **MEMORIES:**\n        '''\n        \"\"\"\n    for i, memory in enumerate(memories):\n        response_prompt += f\"[Index: {i}]: '{memory.memory_text_content}\\n'\"",
        "detail": "apps.core.system_prompts.agent_configuration.standard_memory_prompt_manager",
        "documentation": {}
    },
    {
        "label": "build_system_internal_instructions_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.agent_configuration.system_internal_instructions_prompt_manager",
        "description": "apps.core.system_prompts.agent_configuration.system_internal_instructions_prompt_manager",
        "peekOfCode": "def build_system_internal_instructions_prompt(assistant: Assistant):\n    return f\"\"\"\n        ### **YOUR INSTRUCTIONS:**\n        '''\n        {assistant.instructions}\n        '''\n        **NOTE**: Please make sure to follow these instructions VERY carefully, and never neglect them\n        under any circumstances, as you are responsible for providing the best user experience. If this part is empty,\n        your instructions are simply \"You are a helpful assistant.\"\n        ### **INFORMATION ABOUT YOUR CONFIGURATIONS & SYSTEM:**",
        "detail": "apps.core.system_prompts.agent_configuration.system_internal_instructions_prompt_manager",
        "documentation": {}
    },
    {
        "label": "build_target_audience_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.agent_configuration.target_audience_prompt_manager",
        "description": "apps.core.system_prompts.agent_configuration.target_audience_prompt_manager",
        "peekOfCode": "def build_target_audience_prompt(audience: str):\n    return f\"\"\"\n        ### **YOUR AUDIENCE:**\n        '''\n        {audience}\n        '''\n        **NOTE**: This is the audience that you will be targeting with your responses. Make sure to keep\n        this in mind while responding for to the messages. If this part is EMPTY, you can target a general audience,\n        without any specific target.\n    \"\"\"",
        "detail": "apps.core.system_prompts.agent_configuration.target_audience_prompt_manager",
        "documentation": {}
    },
    {
        "label": "build_technical_dictionary_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.agent_configuration.technical_dictionary_prompt_manager",
        "description": "apps.core.system_prompts.agent_configuration.technical_dictionary_prompt_manager",
        "peekOfCode": "def build_technical_dictionary_prompt(glossary: str):\n    return f\"\"\"\n        ### **YOUR GLOSSARY & TERMINOLOGY DICTIONARY:**\n        '''\n        {glossary}\n        '''\n        **NOTE**: This is the glossary and terminology that you will be aware of to understand the internal\n        language and jargon of the organizations. Make sure to keep this in mind while responding to messages. If this\n        part is EMPTY, you can use the common public terminology.\n    \"\"\"",
        "detail": "apps.core.system_prompts.agent_configuration.technical_dictionary_prompt_manager",
        "documentation": {}
    },
    {
        "label": "build_templated_response_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.agent_configuration.templated_response_prompt_manager",
        "description": "apps.core.system_prompts.agent_configuration.templated_response_prompt_manager",
        "peekOfCode": "def build_templated_response_prompt(response_template: str):\n    return f\"\"\"\n        ### **YOUR RESPONSE TEMPLATE:**\n        '''\n        {response_template}\n        '''\n        **NOTE**: This is the template that you will use to respond to the user's messages. Make sure to\n        follow this template under any circumstances and do not deviate from it. If this part is EMPTY,\n        you can respond to the user's messages in any way you want.\n    \"\"\"",
        "detail": "apps.core.system_prompts.agent_configuration.templated_response_prompt_manager",
        "documentation": {}
    },
    {
        "label": "build_chat_history_memory_handling_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.chat_history_memory.build_chat_history_memory_instruction",
        "description": "apps.core.system_prompts.chat_history_memory.build_chat_history_memory_instruction",
        "peekOfCode": "def build_chat_history_memory_handling_prompt():\n    context_memory_instructions = f\"\"\"\n        ---\n        ### **SYSTEM MESSAGE:**\n        - This conversation might have MORE messages than you are able to see. Some of the messages might have been\n        deleted from the history, as the context window limit determined by the user has been reached. Thus, please\n        be aware of the fact that you might not be remembering some of the things the user said. If you don't remember\n        something, you can let the user know about the strategy you follow and ask them to repeat.\n        ---\n    \"\"\"",
        "detail": "apps.core.system_prompts.chat_history_memory.build_chat_history_memory_instruction",
        "documentation": {}
    },
    {
        "label": "build_chat_history_memory_stop_communication_handler_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.chat_history_memory.build_chat_history_memory_instruction",
        "description": "apps.core.system_prompts.chat_history_memory.build_chat_history_memory_instruction",
        "peekOfCode": "def build_chat_history_memory_stop_communication_handler_prompt():\n    stop_conversation_prompt = f\"\"\"\n        ---\n        ### **SYSTEM MESSAGE:**\n        - The conversation needs to be stopped. Please let the user know about the overflow and respectfully\n        end the conversation.\n        ---\n    \"\"\"\n    return stop_conversation_prompt",
        "detail": "apps.core.system_prompts.chat_history_memory.build_chat_history_memory_instruction",
        "documentation": {}
    },
    {
        "label": "build_dashboard_statistics_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.dashboard_analysis.dashboard_statistics_prompt",
        "description": "apps.core.system_prompts.dashboard_analysis.dashboard_statistics_prompt",
        "peekOfCode": "def build_dashboard_statistics_prompt(statistics):\n    main_instructions = f\"\"\"\n        ### **INSTRUCTIONS:**\n        You are an assistant tasked to provide insights & recommendations based on the statistics provided to you\n        within this prompt. You need to provide concrete insights based on the data shared and never tell\n        user to ask if there is anything in their mind, since the users WON'T be able to RESPOND.\n        - NEVER ask the user if they have any questions or if there is anything else you can help with.\n        - NEVER ask the user to provide more information or data.\n        - NEVER ask the user to clarify their question.\n        - NEVER ask the user to provide more context.",
        "detail": "apps.core.system_prompts.dashboard_analysis.dashboard_statistics_prompt",
        "documentation": {}
    },
    {
        "label": "build_scripts_multi_modality_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.flexible_modalities.bash_script_modality_instructions",
        "description": "apps.core.system_prompts.flexible_modalities.bash_script_modality_instructions",
        "peekOfCode": "def build_scripts_multi_modality_prompt(assistant: Assistant):\n    script_refs = CustomScriptReference.objects.filter(assistant=assistant)\n    response_prompt = \"\"\"\n            ### **CUSTOM SCRIPTS:**\n            '''\n            \"\"\"\n    for i, custom_script_reference in enumerate(script_refs):\n        custom_script = custom_script_reference.custom_script\n        response_prompt += f\"\"\"\n                [Custom Script Reference ID: {custom_script_reference.id}]",
        "detail": "apps.core.system_prompts.flexible_modalities.bash_script_modality_instructions",
        "documentation": {}
    },
    {
        "label": "build_lean_scripts_multi_modality_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.flexible_modalities.bash_script_modality_instructions",
        "description": "apps.core.system_prompts.flexible_modalities.bash_script_modality_instructions",
        "peekOfCode": "def build_lean_scripts_multi_modality_prompt():\n    response_prompt = \"\"\"\n            ### **CUSTOM SCRIPTS:**\n            '''\n            <This information is redacted as you won't need it to serve your goal.>\n            '''\n            #### **THE NOTE ABOUT THE FORMAT OF THE AVAILABLE SOURCES:**\n            - This information is shared with you for you to have a more clear understanding about the custom scripts\n            given in the system. You can use this information to execute the custom scripts properly by providing the\n            necessary input data and the script ID more easily.",
        "detail": "apps.core.system_prompts.flexible_modalities.bash_script_modality_instructions",
        "documentation": {}
    },
    {
        "label": "build_functions_multi_modality_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.flexible_modalities.py_function_modality_instructions",
        "description": "apps.core.system_prompts.flexible_modalities.py_function_modality_instructions",
        "peekOfCode": "def build_functions_multi_modality_prompt(assistant: Assistant):\n    custom_function_refs = CustomFunctionReference.objects.filter(assistant=assistant)\n    response_prompt = \"\"\"\n            ### **CUSTOM FUNCTIONS:**\n            '''\n            \"\"\"\n    for i, func_ref in enumerate(custom_function_refs):\n        custom_function = func_ref.custom_function\n        response_prompt += f\"\"\"\n                [Custom Function Reference ID: {func_ref.id}]",
        "detail": "apps.core.system_prompts.flexible_modalities.py_function_modality_instructions",
        "documentation": {}
    },
    {
        "label": "build_lean_functions_multi_modality_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.flexible_modalities.py_function_modality_instructions",
        "description": "apps.core.system_prompts.flexible_modalities.py_function_modality_instructions",
        "peekOfCode": "def build_lean_functions_multi_modality_prompt():\n    # Build the prompt\n    response_prompt = \"\"\"\n            **CUSTOM FUNCTIONS:**\n            '''\n            <This information is redacted because you won't need it to serve your instructions.>\n            '''\n             #### **THE NOTE ABOUT THE AVAILABLE SOURCE FORMATS:**\n            - This information is shared with you for you to have a clear understanding about the custom functions.\n            You can use this information to execute the custom functions by providing the necessary inputs and the",
        "detail": "apps.core.system_prompts.flexible_modalities.py_function_modality_instructions",
        "documentation": {}
    },
    {
        "label": "build_apis_multi_modality_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.flexible_modalities.restful_api_modality_instructions",
        "description": "apps.core.system_prompts.flexible_modalities.restful_api_modality_instructions",
        "peekOfCode": "def build_apis_multi_modality_prompt(assistant: Assistant):\n    custom_api_references = CustomAPIReference.objects.filter(assistant=assistant)\n    response_prompt = \"\"\"\n            ### **CUSTOM APIS:**\n            '''\n            \"\"\"\n    for i, custom_api_reference in enumerate(custom_api_references):\n        custom_api = custom_api_reference.custom_api\n        response_prompt += f\"\"\"\n                [Custom API Reference ID: {custom_api_reference.id}]",
        "detail": "apps.core.system_prompts.flexible_modalities.restful_api_modality_instructions",
        "documentation": {}
    },
    {
        "label": "build_lean_apis_multi_modality_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.flexible_modalities.restful_api_modality_instructions",
        "description": "apps.core.system_prompts.flexible_modalities.restful_api_modality_instructions",
        "peekOfCode": "def build_lean_apis_multi_modality_prompt():\n    # Build the prompt\n    response_prompt = \"\"\"\n            **CUSTOM API CONNECTIONS:**\n            '''\n            <This information is redacted because you won't need it to serve your instructions.>\n            '''\n            **INFORMATION ABOUT THE AVAILABLE SOURCES AND FORMATS:**\n            - This information is shared with you for you to have a clear understanding about the custom APIs. You can\n            use this info to execute the custom APIs properly by providing the necessary input data and the API ID.",
        "detail": "apps.core.system_prompts.flexible_modalities.restful_api_modality_instructions",
        "documentation": {}
    },
    {
        "label": "build_browsing_data_source_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.information_feeds.browser.build_browser_data_source_prompt",
        "description": "apps.core.system_prompts.information_feeds.browser.build_browser_data_source_prompt",
        "peekOfCode": "def build_browsing_data_source_prompt(assistant: Assistant):\n    browsing_data_sources = DataSourceBrowserConnection.objects.filter(assistant=assistant)\n    response_prompt = \"\"\"\n            ### **BROWSING CONNECTIONS:**\n            '''\n            \"\"\"\n    for i, browsing_datasource in enumerate(browsing_data_sources):\n        response_prompt += f\"\"\"\n                [Browsing Datasource ID: {browsing_datasource.id}]\n                    Browser Type: {browsing_datasource.browser_type}",
        "detail": "apps.core.system_prompts.information_feeds.browser.build_browser_data_source_prompt",
        "documentation": {}
    },
    {
        "label": "build_lean_browsing_data_source_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.information_feeds.browser.build_browser_data_source_prompt",
        "description": "apps.core.system_prompts.information_feeds.browser.build_browser_data_source_prompt",
        "peekOfCode": "def build_lean_browsing_data_source_prompt():\n    response_prompt = \"\"\"\n            ### **BROWSING CONNECTIONS:**\n            '''\n            <This information is redacted because you won't need it to serve your instructions.>\n            '''\n            #### **NOTE**: These are the browsing tools available for you to use. You can use these connections\n            to execute browsing operations on web. You can connect to a browser, close a browser, search for\n            info on web, and click on URLs in searches. Make sure you are using the correct browsing datasource\n            connection ID when executing browsing.",
        "detail": "apps.core.system_prompts.information_feeds.browser.build_browser_data_source_prompt",
        "documentation": {}
    },
    {
        "label": "build_code_base_data_source_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.information_feeds.code_base.build_code_base_data_source_prompt",
        "description": "apps.core.system_prompts.information_feeds.code_base.build_code_base_data_source_prompt",
        "peekOfCode": "def build_code_base_data_source_prompt(assistant: Assistant):\n    code_base_data_sources = CodeRepositoryStorageConnection.objects.filter(assistant=assistant)\n    response_prompt = \"\"\"\n            ### **CODE BASE STORAGE CONNECTIONS:**\n            '''\n            \"\"\"\n    for i, code_base_info_feed in enumerate(code_base_data_sources):\n        kb: CodeRepositoryStorageConnection = code_base_info_feed\n        response_prompt += f\"\"\"\n                [Code Base Storage ID: {kb.id}]",
        "detail": "apps.core.system_prompts.information_feeds.code_base.build_code_base_data_source_prompt",
        "documentation": {}
    },
    {
        "label": "build_lean_code_base_data_source_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.information_feeds.code_base.build_code_base_data_source_prompt",
        "description": "apps.core.system_prompts.information_feeds.code_base.build_code_base_data_source_prompt",
        "peekOfCode": "def build_lean_code_base_data_source_prompt():\n    response_prompt = \"\"\"\n            ### **CODE BASE STORAGE CONNECTIONS:**\n            '''\n            <This information is redacted because you won't need it to serve your instructions.>\n            '''\n            ---\n            #### **NOTE**: These are the Code Base Storage Connections you have access. Keep these in mind\n            while responding to the user's messages. If this part is EMPTY, it means that the user has\n            not provided any Code Base Storage Connections (yet), so neglect this part.",
        "detail": "apps.core.system_prompts.information_feeds.code_base.build_code_base_data_source_prompt",
        "documentation": {}
    },
    {
        "label": "build_media_manager_data_source_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.information_feeds.media_manager.build_media_manager_data_source_prompt",
        "description": "apps.core.system_prompts.information_feeds.media_manager.build_media_manager_data_source_prompt",
        "peekOfCode": "def build_media_manager_data_source_prompt(assistant: Assistant):\n    media_manager_data_sources = DataSourceMediaStorageConnection.objects.filter(assistant=assistant)\n    response_prompt = \"\"\"\n            ### **MEDIA STORAGE RESOURCE CONNECTIONS:**\n            '''\n            \"\"\"\n    for i, media_storage_data_source in enumerate(media_manager_data_sources):\n        response_prompt += f\"\"\"\n                [Media Storage Data Source ID: {media_storage_data_source.id}]\n                    Storage Name: {media_storage_data_source.name}",
        "detail": "apps.core.system_prompts.information_feeds.media_manager.build_media_manager_data_source_prompt",
        "documentation": {}
    },
    {
        "label": "build_lean_media_manager_data_source_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.information_feeds.media_manager.build_media_manager_data_source_prompt",
        "description": "apps.core.system_prompts.information_feeds.media_manager.build_media_manager_data_source_prompt",
        "peekOfCode": "def build_lean_media_manager_data_source_prompt():\n    response_prompt = \"\"\"\n            ### **MEDIA STORAGE RESOURCE CONNECTIONS:**\n            '''\n            <This information is redacted because you won't need it to serve your instructions.>\n            '''\n            ---\n            #### **NOTE**: These are the Media Storage Resource Connections you have access. Keep these in mind while\n            responding to the user. If this part is EMPTY, it means that the user has not provided any Media Storage\n            Resource Connections (yet), so neglect this part.",
        "detail": "apps.core.system_prompts.information_feeds.media_manager.build_media_manager_data_source_prompt",
        "documentation": {}
    },
    {
        "label": "build_ml_models_data_source_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.information_feeds.ml_manager.build_ml_models_data_source_prompt",
        "description": "apps.core.system_prompts.information_feeds.ml_manager.build_ml_models_data_source_prompt",
        "peekOfCode": "def build_ml_models_data_source_prompt(assistant: Assistant):\n    ml_model_data_sources = DataSourceMLModelConnection.objects.filter(assistant=assistant)\n    response_prompt = \"\"\"\n            ### **ML MODELS RESOURCE CONNECTIONS:**\n            '''\n            \"\"\"\n    for i, ml_model_data_source in enumerate(ml_model_data_sources):\n        response_prompt += f\"\"\"\n                [ML Data Source ID: {ml_model_data_source.id}]\n                    Source Name: {ml_model_data_source.name}",
        "detail": "apps.core.system_prompts.information_feeds.ml_manager.build_ml_models_data_source_prompt",
        "documentation": {}
    },
    {
        "label": "build_lean_ml_models_data_source_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.information_feeds.ml_manager.build_ml_models_data_source_prompt",
        "description": "apps.core.system_prompts.information_feeds.ml_manager.build_ml_models_data_source_prompt",
        "peekOfCode": "def build_lean_ml_models_data_source_prompt():\n    response_prompt = \"\"\"\n            ### **ML MODELS RESOURCE CONNECTIONS:**\n            '''\n            <This information is redacted because you won't need it to serve your instructions.>\n            '''\n            ---\n            #### **VERY IMPORTANT NOTE ABOUT THE ''URL DOWNLOADER TOOL''**\n            - When the user sends you an image content through CHAT, this content is automatically processed and\n            saved, so you DON'T NEED to use your 'URL RETRIEVER' tool to download the content, as it is already saved",
        "detail": "apps.core.system_prompts.information_feeds.ml_manager.build_ml_models_data_source_prompt",
        "documentation": {}
    },
    {
        "label": "build_sql_data_source_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.information_feeds.sql.build_sql_data_source_prompt",
        "description": "apps.core.system_prompts.information_feeds.sql.build_sql_data_source_prompt",
        "peekOfCode": "def build_sql_data_source_prompt(assistant: Assistant):\n    sql_data_sources = SQLDatabaseConnection.objects.filter(assistant=assistant)\n    response_prompt = \"\"\"\n        ### **SQL DATABASE CONNECTIONS:**\n        '''\n        \"\"\"\n    for i, sql_data_source in enumerate(sql_data_sources):\n        custom_queries_of_datasource = sql_data_source.custom_queries.all()\n        response_prompt += f\"\"\"\n        [SQL Data Source ID: {sql_data_source.id}]",
        "detail": "apps.core.system_prompts.information_feeds.sql.build_sql_data_source_prompt",
        "documentation": {}
    },
    {
        "label": "build_lean_sql_data_source_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.information_feeds.sql.build_sql_data_source_prompt",
        "description": "apps.core.system_prompts.information_feeds.sql.build_sql_data_source_prompt",
        "peekOfCode": "def build_lean_sql_data_source_prompt():\n    response_prompt = \"\"\"\n        ### **SQL DATABASE CONNECTIONS:**\n        '''\n        <This data is redacted because you won't need it to serve your instructions.>\n        '''\n        ---\n        #### **NOTE**: These are the SQL Database Connections that you have access. Keep these in mind while responding to\n        user. Custom queries are also provided for each SQL Connection, which you can use to fetch data from the\n        respective database or if you have the write permissions, you can use them to write data as well. If this part",
        "detail": "apps.core.system_prompts.information_feeds.sql.build_sql_data_source_prompt",
        "documentation": {}
    },
    {
        "label": "build_file_system_data_source_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.information_feeds.ssh_file_system.build_file_system_data_source_prompt",
        "description": "apps.core.system_prompts.information_feeds.ssh_file_system.build_file_system_data_source_prompt",
        "peekOfCode": "def build_file_system_data_source_prompt(assistant: Assistant):\n    file_system_data_sources = DataSourceFileSystem.objects.filter(assistant=assistant)\n    response_prompt = \"\"\"\n            ### **FILE SYSTEM CONNECTIONS (via SSH):**\n            '''\n            \"\"\"\n    for i, file_system_data_source in enumerate(file_system_data_sources):\n        response_prompt += f\"\"\"\n                [File System Data Source ID: {file_system_data_source.id}]\n                    OS Type: {file_system_data_source.os_type}",
        "detail": "apps.core.system_prompts.information_feeds.ssh_file_system.build_file_system_data_source_prompt",
        "documentation": {}
    },
    {
        "label": "build_lean_file_system_data_source_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.information_feeds.ssh_file_system.build_file_system_data_source_prompt",
        "description": "apps.core.system_prompts.information_feeds.ssh_file_system.build_file_system_data_source_prompt",
        "peekOfCode": "def build_lean_file_system_data_source_prompt():\n    response_prompt = \"\"\"\n            ### **FILE SYSTEM CONNECTIONS (via SSH):**\n            '''\n            <This information is redacted because you won't need it to serve your instructions.>\n            '''\n            ---\n            #### **NOTE**: These are the File System Connections you have access. Keep these in mind while responding\n            to user. If this part is EMPTY, it means that the user has not provided any File System Connections (yet),\n            so neglect this part.",
        "detail": "apps.core.system_prompts.information_feeds.ssh_file_system.build_file_system_data_source_prompt",
        "documentation": {}
    },
    {
        "label": "build_vector_store_data_source_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.information_feeds.vector_store.build_vector_store_data_source_prompt",
        "description": "apps.core.system_prompts.information_feeds.vector_store.build_vector_store_data_source_prompt",
        "peekOfCode": "def build_vector_store_data_source_prompt(assistant: Assistant):\n    knowledge_base_data_sources = DocumentKnowledgeBaseConnection.objects.filter(assistant=assistant)\n    response_prompt = \"\"\"\n            ### **KNOWLEDGE BASE CONNECTIONS:**\n            '''\n            \"\"\"\n    for i, knowledge_base_data_source in enumerate(knowledge_base_data_sources):\n        kb: DocumentKnowledgeBaseConnection = knowledge_base_data_source\n        response_prompt += f\"\"\"\n                [Knowledge Base Data Source ID: {kb.id}]",
        "detail": "apps.core.system_prompts.information_feeds.vector_store.build_vector_store_data_source_prompt",
        "documentation": {}
    },
    {
        "label": "build_lean_vector_store_data_source_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.information_feeds.vector_store.build_vector_store_data_source_prompt",
        "description": "apps.core.system_prompts.information_feeds.vector_store.build_vector_store_data_source_prompt",
        "peekOfCode": "def build_lean_vector_store_data_source_prompt():\n    response_prompt = \"\"\"\n            ### **KNOWLEDGE BASE CONNECTIONS:**\n            '''\n            <This information is redacted because you won't need it to serve your instructions.>\n            '''\n            ---\n            #### **NOTE**: These are the Knowledge Base Connections you have access. Keep these in mind while\n            responding  to user. If this part is EMPTY, it means that the user has not provided any Knowledge Base\n            Connections (yet), so neglect this part.",
        "detail": "apps.core.system_prompts.information_feeds.vector_store.build_vector_store_data_source_prompt",
        "documentation": {}
    },
    {
        "label": "build_expert_networks_multi_modality_prompt_leanmod",
        "kind": 2,
        "importPath": "apps.core.system_prompts.leanmod.multimodality.leanmod_multimodality_expert_network_prompt",
        "description": "apps.core.system_prompts.leanmod.multimodality.leanmod_multimodality_expert_network_prompt",
        "peekOfCode": "def build_expert_networks_multi_modality_prompt_leanmod(lean_assistant: LeanAssistant):\n    expert_networks = lean_assistant.expert_networks.all()\n    response_prompt = \"\"\"\n    ### *EXPERT NETWORKS*\n    '''\n    \"\"\"\n    for i, expert_network in enumerate(expert_networks):\n        expert_network: ExpertNetwork\n        response_prompt += f\"\"\"\n                    [Network Name: {expert_network.name}]",
        "detail": "apps.core.system_prompts.leanmod.multimodality.leanmod_multimodality_expert_network_prompt",
        "documentation": {}
    },
    {
        "label": "build_structured_tool_prompt__expert_network_query_execution_leanmod",
        "kind": 2,
        "importPath": "apps.core.system_prompts.leanmod.tools.leanmod_tools_expert_networks_query_prompt",
        "description": "apps.core.system_prompts.leanmod.tools.leanmod_tools_expert_networks_query_prompt",
        "peekOfCode": "def build_structured_tool_prompt__expert_network_query_execution_leanmod():\n    response_prompt = f\"\"\"\n                ### **TOOL: Expert Network Query Call**\n                - This allows consulting to expert networks. If data is not enough to respond, you can check network\n                descriptions + instructions of assistants to see if they can answer.\n                - The format of dict to use:\n                '''\n                    {{\n                        \"tool\": \"{ToolCallDescriptorNames.EXECUTE_EXPERT_NETWORK_QUERY}\",\n                        \"parameters\": {{",
        "detail": "apps.core.system_prompts.leanmod.tools.leanmod_tools_expert_networks_query_prompt",
        "documentation": {}
    },
    {
        "label": "build_structured_tool_usage_instructions_prompt_leanmod",
        "kind": 2,
        "importPath": "apps.core.system_prompts.leanmod.tools.leanmod_tools_instructions_prompt",
        "description": "apps.core.system_prompts.leanmod.tools.leanmod_tools_instructions_prompt",
        "peekOfCode": "def build_structured_tool_usage_instructions_prompt_leanmod():\n    response_prompt = \"\"\"\n            ### **TOOL USAGE**\n            - As assistant, you can use tools to provide accurate responses.\n            - You have 2 option:\n                - [1] You can provide response to question: Do it if having enough data. Response is delivered in\n                natural language.\n                - [2] You can output JSON, to request using a 'TOOL'.\n                    - Based on tool, system executes, and provides output in new message with role 'assistant'.\n                    - It is yours to decide if response is enough, or if need to use tools again.",
        "detail": "apps.core.system_prompts.leanmod.tools.leanmod_tools_instructions_prompt",
        "documentation": {}
    },
    {
        "label": "build_structured_primary_guidelines_leanmod",
        "kind": 2,
        "importPath": "apps.core.system_prompts.leanmod.leanmod_guidelines_prompt",
        "description": "apps.core.system_prompts.leanmod.leanmod_guidelines_prompt",
        "peekOfCode": "def build_structured_primary_guidelines_leanmod():\n    return f\"\"\"\n            ---\n            ### **PRIMARY GUIDELINES**\n            1. NEVER use \"'\" in JSON tool calls. ALWAYS use '\"' and use only for JSON keys/values as other usage of\n             '\"' will break JSON.\n            2. NEVER tell that you can do it, and then stop chat before doing that or using tool to provide\n            information to user.\n            3. IF USING TOOLS, DO NOT SHARE ANYTHING other than JSON for using tools.\n            ---",
        "detail": "apps.core.system_prompts.leanmod.leanmod_guidelines_prompt",
        "documentation": {}
    },
    {
        "label": "build_structured_instructions_prompt_leanmod",
        "kind": 2,
        "importPath": "apps.core.system_prompts.leanmod.leanmod_instructions_prompt",
        "description": "apps.core.system_prompts.leanmod.leanmod_instructions_prompt",
        "peekOfCode": "def build_structured_instructions_prompt_leanmod(assistant: LeanAssistant):\n    return f\"\"\"\n            ---\n            ### **INSTRUCTIONS**\n            '''\n            {assistant.instructions}\n            '''\n            *NOTE:*\n                - Follow instructions carefully, never neglect them.\n            #### **ADDITIONAL INFORMATION**",
        "detail": "apps.core.system_prompts.leanmod.leanmod_instructions_prompt",
        "documentation": {}
    },
    {
        "label": "build_structured_name_prompt_leanmod",
        "kind": 2,
        "importPath": "apps.core.system_prompts.leanmod.leanmod_name_prompt",
        "description": "apps.core.system_prompts.leanmod.leanmod_name_prompt",
        "peekOfCode": "def build_structured_name_prompt_leanmod(assistant_name, chat_name):\n    return f\"\"\"\n        ### **YOUR NAME:**\n        '''\n        {assistant_name}\n        '''\n        ---\n        ### **NAME OF THE ACTIVE CHAT:**\n        '''\n        {chat_name}",
        "detail": "apps.core.system_prompts.leanmod.leanmod_name_prompt",
        "documentation": {}
    },
    {
        "label": "build_structured_place_and_time_prompt_leanmod",
        "kind": 2,
        "importPath": "apps.core.system_prompts.leanmod.leanmod_place_and_time_prompt",
        "description": "apps.core.system_prompts.leanmod.leanmod_place_and_time_prompt",
        "peekOfCode": "def build_structured_place_and_time_prompt_leanmod(user: User):\n    response_prompt = \"\"\"\n            ### **PLACE AND TIME**\n            '''\n            \"\"\"\n    user_location = f\"\"\"\n            User Address: {user.profile.address}\n                City: {user.profile.city}\n                Country: {user.profile.country}\n                Postal Code: {user.profile.postal_code}",
        "detail": "apps.core.system_prompts.leanmod.leanmod_place_and_time_prompt",
        "documentation": {}
    },
    {
        "label": "build_structured_user_information_prompt_leanmod",
        "kind": 2,
        "importPath": "apps.core.system_prompts.leanmod.leanmod_user_information_prompt",
        "description": "apps.core.system_prompts.leanmod.leanmod_user_information_prompt",
        "peekOfCode": "def build_structured_user_information_prompt_leanmod(user: User):\n    return f\"\"\"\n            ### **USER:**\n            '''\n            Name: {user.profile.first_name} {user.profile.last_name}\n                Mail: {user.email}\n                City: {user.profile.city}\n                Country: {user.profile.country}\n                B.Day: {user.profile.birthdate}\n            '''",
        "detail": "apps.core.system_prompts.leanmod.leanmod_user_information_prompt",
        "documentation": {}
    },
    {
        "label": "build_reasoning_system_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.reasoning.reasoning_prompt",
        "description": "apps.core.system_prompts.reasoning.reasoning_prompt",
        "peekOfCode": "def build_reasoning_system_prompt():\n    main_instructions = f\"\"\"\n        ### **INSTRUCTIONS:**\n        You are an agent tasked to provide answers based on the query you receive, for you to perform a logical or\n        complex thought-requiring operation. You need to provide concrete analyses based on the query & operation\n        shared with you and never tell user to ask \"if there is anything in their mind\", as the users WON'T BE ABLE\n        TO RESPOND to your messages. Thus, never ask the user to provide more info, or to clarify the question,\n        instead,  do your best to analyze the data you have and provide analyses and recommendations.\n            - NEVER ask user if they have questions or if there is anything you can help with.\n            - NEVER ask user to provide more information.",
        "detail": "apps.core.system_prompts.reasoning.reasoning_prompt",
        "documentation": {}
    },
    {
        "label": "build_tool_prompt__dream_image",
        "kind": 2,
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.dream_image_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.dream_image_tool_prompt",
        "peekOfCode": "def build_tool_prompt__dream_image():\n    response_prompt = f\"\"\"\n            ### **TOOL**: Image Variation Tool\n            - The Image Variation Tool is a tool that allows you to create variations of images based on the image you\n            provide. The tool assistant will create these image variations for you.\n            - The format for the dictionary you will output to use the Image Variation Tool is as follows:\n            '''\n                {{\n                    \"tool\": \"{ToolCallDescriptorNames.EXECUTE_DREAM_IMAGE}\",\n                    \"parameters\": {{",
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.dream_image_tool_prompt",
        "documentation": {}
    },
    {
        "label": "build_tool_prompt__edit_image",
        "kind": 2,
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.edit_image_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.edit_image_tool_prompt",
        "peekOfCode": "def build_tool_prompt__edit_image():\n    response_prompt = f\"\"\"\n            ### **TOOL**: Image Modification Tool\n            - The Image Modification Tool is a tool allows you to modify images based on the prompts you provide.\n            You can use this to modify images based on prompts, and the assistant will modify the images based on them.\n            You can use this to modify images for various use cases such as for creative use cases, for content\n            generations, and more.\n            - The format for the dictionary you will output to use the Image Modification Tool is as follows:\n            '''\n                {{",
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.edit_image_tool_prompt",
        "documentation": {}
    },
    {
        "label": "build_tool_prompt__execute_audio",
        "kind": 2,
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_audio_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_audio_tool_prompt",
        "peekOfCode": "def build_tool_prompt__execute_audio():\n    response_prompt = f\"\"\"\n            ### **TOOL**: Audio Processing Tool\n            - The Audio Processing Tool is a tool allows you to execute audio processing operations on audio files.\n            You can use this to do text to speech (TTS), speech to text (STT) operations on either texts within the\n            context of conversations with users, or for specific, valid files users have in their storages or other\n            possible data sources. For example, the user can ask you to convert a certain text into an audio file, or\n            can share a text file to be converted to an audio file. Or, user might ask to convert an audio file they\n            have shared into a transcription. Or, the users can send their own recorded voice in form of audio files\n            for you to convert them into textual transcriptions.",
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_audio_tool_prompt",
        "documentation": {}
    },
    {
        "label": "build_tool_prompt__execute_bash_script",
        "kind": 2,
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_bash_script_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_bash_script_tool_prompt",
        "peekOfCode": "def build_tool_prompt__execute_bash_script():\n    response_prompt = f\"\"\"\n            ### **TOOL**: Custom Script Content Retrieval Tool\n            - The Custom Script Content Retrieval Tool is a tool allows you to retrieve content of custom scripts\n            that are defined. This tool helps you retrieve the content of the scripts that are available for you, and\n            then, you can utilize these by putting them in a file within e.g. SSH file systems, or by running them\n            in the sandbox, or by using them in other ways you need to use them. The scripts you can retrieve using\n            this tool are defined by system administrators and are available for retrieval, and you only need to call\n            these scripts properly by providing their unique script ID.\n            - The format for the dictionary you will output to use Custom Script Content Retrieval Tool is as follows:",
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_bash_script_tool_prompt",
        "documentation": {}
    },
    {
        "label": "build_tool_prompt__browsing",
        "kind": 2,
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_browsing_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_browsing_tool_prompt",
        "peekOfCode": "def build_tool_prompt__browsing():\n    response_prompt = f\"\"\"\n            ### **TOOL**: Browsing Executor Tool\n            - The Browsing Executor Tool is a tool allows you to execute browsing operations on web using browsing\n            datasource connections available for you to use. You can use this to search for information online, and\n            click on URLs in search results to understand contents to provide better answers to the users. You can\n            use browsing datasource connections available for use to execute these browsing operations.\n            - The format for the dict you will output to use Browsing Executor Tool is as follows:\n            '''\n                {{",
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_browsing_tool_prompt",
        "documentation": {}
    },
    {
        "label": "build_tool_prompt__analyze_code",
        "kind": 2,
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_code_analysis_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_code_analysis_tool_prompt",
        "peekOfCode": "def build_tool_prompt__analyze_code():\n    response_prompt = f\"\"\"\n            ### **TOOL**: Code Interpreter Tool\n            - The Code Interpreter Tool is a tool allows you to write and execute code operations in an integrated\n            Python environment. You can use this to write code operations you want to execute, and the tool assistant\n            will execute them and provide you the results. You can also use this to write code operations you want\n            to execute on a \"specific file\". Unlike Media Storage Query Execution Tool, Code Interpreter Tool is a\n            dedicated tool for writing & executing code operations for various use cases such as arithmetics, unit\n            conversions, sensitive mathematical calculations, and more.\n            - The format for dictionary you will output to use Code Interpreter Tool is as follows:",
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_code_analysis_tool_prompt",
        "documentation": {}
    },
    {
        "label": "build_tool_prompt__execute_code",
        "kind": 2,
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_code_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_code_tool_prompt",
        "peekOfCode": "def build_tool_prompt__execute_code():\n    response_prompt = f\"\"\"\n            ### **TOOL**: Custom Function Execution Tool\n            - The Custom Function Execution Tool is a tool allows you to execute custom functions that are\n            defined in the system. These custom functions can be used to perform various operations such as\n            data processing, data analysis, data transformation, and more. You can use this to execute custom\n            functions and receive the results of the execution. The custom functions you can execute using this tool\n            are defined by system administrators and are available for execution, and you only need to call these\n            functions properly by providing the necessary input data and function ID.\n            - The format for dictionary you will output to use Custom Function Execution Tool is as follows:",
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_code_tool_prompt",
        "documentation": {}
    },
    {
        "label": "build_tool_prompt__execute_codebase_query",
        "kind": 2,
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_codebase_query_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_codebase_query_tool_prompt",
        "peekOfCode": "def build_tool_prompt__execute_codebase_query():\n    response_prompt = f\"\"\"\n            ### **TOOL**: Code Base Search Query Execution\n            - The Code Base Query Execution Tool is a tool you can use to search within the connected code base\n            repositories of user to provide more accurate responses to their questions. You can try to reach any of the\n            specified code bases defined within the \"Code Base Storage Connections\" section.\n            - The format for the dictionary you will output to use Code Base Query Execution Tool is as follows:\n            '''\n                {{\n                    \"tool\": \"{ToolCallDescriptorNames.EXECUTE_CODE_BASE_QUERY}\",",
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_codebase_query_tool_prompt",
        "documentation": {}
    },
    {
        "label": "build_tool_prompt__media_manager_query",
        "kind": 2,
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_media_manager_query_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_media_manager_query_tool_prompt",
        "peekOfCode": "def build_tool_prompt__media_manager_query():\n    response_prompt = f\"\"\"\n            ### **TOOL**: Media Storage Query Execution Tool\n            - The Media Storage Query Execution Tool is a tool allows you to execute queries on a media storage\n            connection. You can use this to execute queries on a media storage to retrieve info from media storage\n            connection. You can use this to describe a code operation to be executed, or an analysis to be performed\n            on a media item, which will be processed by a distinct LLM agent. For example, if you want a chart to be\n            generated based on a data file, the code will be written and ran by a distinct assistant and you will\n            retrieve the result in terms of text, files, and images. Another example is you can ask for the agent to\n            provide a summary or analysis based on a certain image/media, and assistant will provide you with analysis",
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_media_manager_query_tool_prompt",
        "documentation": {}
    },
    {
        "label": "build_tool_prompt__intra_context_memory",
        "kind": 2,
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_query_intra_context_memory_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_query_intra_context_memory_tool_prompt",
        "peekOfCode": "def build_tool_prompt__intra_context_memory():\n    response_prompt = f\"\"\"\n        ### **TOOL**: Vector Chat History (Long Term Memory) Query Execution\n        - The Vector Chat History Query Execution Tool is a tool you can use to search within your chat history\n        with user, as this is a vector-based tool, it has almost infinite capacity for you to bypass the limits of\n        your 'context window'.\n        - The format for dictionary you will output to use Vector Chat History Query Execution Tool is as follows:\n        '''\n            {{\n                \"tool\": \"{ToolCallDescriptorNames.EXECUTE_INTRA_MEMORY_QUERY}\",",
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_query_intra_context_memory_tool_prompt",
        "documentation": {}
    },
    {
        "label": "build_tool_prompt__execute_restful_api",
        "kind": 2,
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_restful_api_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_restful_api_tool_prompt",
        "peekOfCode": "def build_tool_prompt__execute_restful_api():\n    response_prompt = f\"\"\"\n            ### **TOOL**: Custom API Execution Tool\n            - The Custom API Execution Tool is a tool allows you to execute custom APIs that are defined for you.\n            These custom APIs can be used to perform various operations such as data retrieval, data processing, and\n            other use cases that the use of the API can help answering users questions. You can use this to execute\n            custom APIs and receive the results of the execution. The custom APIs you can execute using this tool\n            are defined by the system administrators, and you only need to call these APIs properly by providing\n            necessary input data and API ID.\n            - The format for dictionary you will output to use the Custom API Execution Tool is as follows:",
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_restful_api_tool_prompt",
        "documentation": {}
    },
    {
        "label": "build_tool_prompt__execute_sql_query",
        "kind": 2,
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_sql_query_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_sql_query_tool_prompt",
        "peekOfCode": "def build_tool_prompt__execute_sql_query():\n    response_prompt = f\"\"\"\n        ### **TOOL**: SQL Query Execution\n        - The SQL Query Execution Tool is a tool you can use to execute SQL queries on SQL Database Connections you\n        have access to. This tool is useful when you need to fetch data from SQL Database Connections to provide\n        more accurate responses to user's questions.\n        - The format for dictionary you will output to use SQL Query Execution Tool is as follows:\n        '''\n            {{\n                \"tool\": \"{ToolCallDescriptorNames.EXECUTE_SQL_QUERY}\",",
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_sql_query_tool_prompt",
        "documentation": {}
    },
    {
        "label": "build_tool_prompt__execute_ssh_file_system_command",
        "kind": 2,
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_ssh_file_system_command_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_ssh_file_system_command_tool_prompt",
        "peekOfCode": "def build_tool_prompt__execute_ssh_file_system_command():\n    response_prompt = f\"\"\"\n            ### **TOOL**: File System Command Execution\n            - The File System Command Execution Tool is a tool you can use to execute commands on file system\n            of servers. You can use this to execute commands on file systems, retrieve file system info, and retrieve\n            the schema of file systems. You can use this to retrieve info about files, directories, and other file\n            system-related info; as well as execute commands on file systems to update, delete, or create files and\n            directories, or develop and run scripts.\n            - The format for the dictionary you will output to use File System Command Execution Tool is as follows:\n            '''",
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_ssh_file_system_command_tool_prompt",
        "documentation": {}
    },
    {
        "label": "build_tool_prompt__query_vector_store",
        "kind": 2,
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_vector_store_query_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_vector_store_query_tool_prompt",
        "peekOfCode": "def build_tool_prompt__query_vector_store():\n    response_prompt = f\"\"\"\n            ### **TOOL**: Knowledge Base Document Search Query Execution\n            - The Knowledge Base Query Execution Tool is a tool you can use to search within the uploaded documents\n            of user to provide more accurate responses to user's questions. You can try to reach any of the\n            specified knowledge bases defined within the \"Knowledge Base Connections\" section.\n            - The format for the dictionary you will output to use Knowledge Base Query Execution Tool is as follows:\n            '''\n                {{\n                    \"tool\": \"{ToolCallDescriptorNames.EXECUTE_VECTOR_STORE_QUERY}\",",
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.execute_vector_store_query_tool_prompt",
        "documentation": {}
    },
    {
        "label": "build_tool_prompt__generate_image",
        "kind": 2,
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.generate_image_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.generate_image_tool_prompt",
        "peekOfCode": "def build_tool_prompt__generate_image():\n    response_prompt = f\"\"\"\n            ### **TOOL**: Image Generation Tool\n            - The Image Generation Tool is a tool allows you to generate images based on prompts you provide.\n            You can use this to generate images based on prompts, and tool assistant will generate images based on\n            them. You can use this to generate images for various use cases such as for creative use cases, for\n            contents, and more.\n            - The format for the dictionary you will output to use Image Generation Tool is as follows:\n            '''\n                {{",
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.generate_image_tool_prompt",
        "documentation": {}
    },
    {
        "label": "build_tool_prompt__generate_video",
        "kind": 2,
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.generate_video_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.generate_video_tool_prompt",
        "peekOfCode": "def build_tool_prompt__generate_video(assistant_id: int):\n    agent = Assistant.objects.get(id=assistant_id)\n    conns = VideoGeneratorConnection.objects.filter(assistant=agent)\n    video_generator_connections_text = \"\"\n    for connection in conns:\n        video_generator_connections_text += f\"\"\"\n            --------------------------------------------------\n            - ID: {connection.id}\n            - Connection Nickname: {connection.name}\n            - Connection Description: {connection.description}",
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.generate_video_tool_prompt",
        "documentation": {}
    },
    {
        "label": "build_lean_tool_prompt__generate_video",
        "kind": 2,
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.generate_video_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.generate_video_tool_prompt",
        "peekOfCode": "def build_lean_tool_prompt__generate_video():\n    response_prompt = f\"\"\"\n            ### **TOOL**: Video Generation Tool\n            - The Video Generation Tool is a tool allows you to generate videos based on prompts you provide.\n            You can use this to generate videos based on prompts, and the tool assistant will generate\n            a video based on prompt you provided. You can use this to generate videos for various use cases\n            such as for creative use cases, for contents, and much more.\n            - You CAN ONLY generate videos by using Video Generator Connections, and you will not be able to generate\n            videos unless there is a valid connection available for you to use, since your JSON call requires the input\n            of a connection_id field. If you don't have valid connections, don't attempt to generate videos. Below is",
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.generate_video_tool_prompt",
        "documentation": {}
    },
    {
        "label": "build_tool_prompt__infer_with_machine_learning",
        "kind": 2,
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.infer_with_machine_learning_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.infer_with_machine_learning_tool_prompt",
        "peekOfCode": "def build_tool_prompt__infer_with_machine_learning():\n    response_prompt = f\"\"\"\n            ### **TOOL**: Predict with ML Model Execution Tool\n            - The Predict with ML Model Execution Tool is a tool allows you to execute predictions on a machine\n            learning model. You can use this to execute operations on a machine learning model to retrieve\n            predictions from it. You can use this to describe a code operation to be executed, or an analysis to be\n            performed on an ML model, which will be processed by a distinct LLM agent. For example, if you want a\n            prediction to be generated based on a data file, the code will be written and ran by a distinct LLM agent\n            and you will retrieve the result in terms of text, files, and images. You can ask for the agent to provide\n            a summary or analysis based on prediction, and the agent will provide you with the analysis or summary",
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.infer_with_machine_learning_tool_prompt",
        "documentation": {}
    },
    {
        "label": "build_tool_prompt__reasoning",
        "kind": 2,
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.reasoning_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.reasoning_tool_prompt",
        "peekOfCode": "def build_tool_prompt__reasoning():\n    response_prompt = f\"\"\"\n            ### **TOOL**: Reasoning Tool\n            - The Reasoning Tool is a tool containing a special assistant trained with reinforcement learning to\n            perform complex reasoning. These models specialize in thinking before they answer, and can produce a\n            long internal chain of thought before responding. This assistant use internal thinking, breaking down\n            their understanding of given prompt and considering multiple approaches to generating a response.\n            After generating results, model produces an answer as visible completions, and discards internal reasoning\n            tokens from its context.\n                - [i] You must ONLY use this when you have a complex reasoning task you would like to perform since",
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.reasoning_tool_prompt",
        "documentation": {}
    },
    {
        "label": "build_tool_prompt__retrieval_via_http_client",
        "kind": 2,
        "importPath": "apps.core.system_prompts.tool_call_prompts.per_tool.retrieval_via_http_client_tool_prompt",
        "description": "apps.core.system_prompts.tool_call_prompts.per_tool.retrieval_via_http_client_tool_prompt",
        "peekOfCode": "def build_tool_prompt__retrieval_via_http_client():\n    response_prompt = f\"\"\"\n            ### **TOOL**: URL File Downloader\n            - The URL File Downloader Tool is a tool you can use to download files from internet by providing\n            URL of the file that you need to download. This URL can either be provided by user in terms of a direct\n            link to file within your conversation, or it could be a URL that you found on the internet you would like\n            to download the file from (if you have a browsing tool to connect to the internet).\n            - The format for dictionary you will output to use URL File Downloader Tool is as follows:\n            '''\n                {{",
        "detail": "apps.core.system_prompts.tool_call_prompts.per_tool.retrieval_via_http_client_tool_prompt",
        "documentation": {}
    },
    {
        "label": "build_generic_instructions_tool_call_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.tool_call_prompts.generic_instructions_tool_call",
        "description": "apps.core.system_prompts.tool_call_prompts.generic_instructions_tool_call",
        "peekOfCode": "def build_generic_instructions_tool_call_prompt(assistant: Assistant):\n    response_prompt = \"\"\"\n        ### **TOOL USAGE ABILITY:** (Very important! - Make sure to UNDERSTAND this part well)\n        - As an assistant, you are able to use custom tools to provide better and more accurate responses to user's\n        questions when you believe there would be a benefit in doing so.\n        - While you are answering user's questions, you have 2 options:\n            - [1] You can directly provide a response to question by text:\n                - Do this if you think you have enough info to provide an answer to user's question with the data\n                you currently have. These responses must be delivered in natural language.\n            - [2] You can output a JSON file, which will be interpreted by system as a request to use a 'TOOL'.",
        "detail": "apps.core.system_prompts.tool_call_prompts.generic_instructions_tool_call",
        "documentation": {}
    },
    {
        "label": "build_lean_structured_tool_usage_instructions_prompt",
        "kind": 2,
        "importPath": "apps.core.system_prompts.tool_call_prompts.generic_instructions_tool_call",
        "description": "apps.core.system_prompts.tool_call_prompts.generic_instructions_tool_call",
        "peekOfCode": "def build_lean_structured_tool_usage_instructions_prompt():\n    response_prompt = \"\"\"\n        **TOOL USAGE ABILITY:** (Very important! - Make sure to UNDERSTAND this part well)\n        - As an assistant, you are able to use custom tools to provide better and more accurate responses to the\n        user's questions when you believe that there would be a benefit in doing so.\n        - While you are answering user's questions, you have two options:\n            1. You can directly provide a response to the question by text: Do this if you think you have enough\n            information to provide an answer to the user's question with the data you currently have. These\n            responses must be delivered in natural language.\n            2. You can output a JSON file, which will be interpreted by the system as a request to use a 'TOOL'.",
        "detail": "apps.core.system_prompts.tool_call_prompts.generic_instructions_tool_call",
        "documentation": {}
    },
    {
        "label": "HistoryBuilder",
        "kind": 6,
        "importPath": "apps.core.system_prompts.chat_history_factory_builder",
        "description": "apps.core.system_prompts.chat_history_factory_builder",
        "peekOfCode": "class HistoryBuilder:\n    class ChatRoles:\n        SYSTEM = \"SYSTEM\"\n        USER = \"USER\"\n        ASSISTANT = \"ASSISTANT\"\n        TOOL = \"TOOL\"\n    @staticmethod\n    def build_chat_history(chat: MultimodalChat, ner_executor: NERExecutor = None):\n        from apps.core.generative_ai.utils import GPT_DEFAULT_ENCODING_ENGINE\n        msgs = chat.chat_messages.all().order_by(\"sent_at\")",
        "detail": "apps.core.system_prompts.chat_history_factory_builder",
        "documentation": {}
    },
    {
        "label": "SystemPromptFactoryBuilder",
        "kind": 6,
        "importPath": "apps.core.system_prompts.system_prompt_factory_builder",
        "description": "apps.core.system_prompts.system_prompt_factory_builder",
        "peekOfCode": "class SystemPromptFactoryBuilder:\n    @staticmethod\n    def build_system_prompts(chat: MultimodalChat, assistant: Assistant, user: User, role: str):\n        from apps.core.generative_ai.utils import GPT_DEFAULT_ENCODING_ENGINE\n        from apps.core.generative_ai.utils import ChatRoles\n        agent_nickname = assistant.name\n        templated_response = assistant.response_template\n        target_audience = assistant.audience\n        agent_personality_tone = assistant.tone\n        output_language = assistant.response_language",
        "detail": "apps.core.system_prompts.system_prompt_factory_builder",
        "documentation": {}
    },
    {
        "label": "run_analyze_code",
        "kind": 2,
        "importPath": "apps.core.tool_calls.core_services.core_service_analyze_code",
        "description": "apps.core.tool_calls.core_services.core_service_analyze_code",
        "peekOfCode": "def run_analyze_code(agent_id, chat_id, f_uris, query_content_str):\n    agent = Assistant.objects.get(id=agent_id)\n    chat = MultimodalChat.objects.get(id=chat_id)\n    xc = CodeAnalystExecutionManager(assistant=agent, chat=chat)\n    try:\n        output = xc.analyze_code_script(full_file_paths=f_uris, query_string=query_content_str)\n    except Exception as e:\n        return None, None, None\n    f_uris = output.get(\"file_uris\")\n    img_uris = output.get(\"image_uris\")",
        "detail": "apps.core.tool_calls.core_services.core_service_analyze_code",
        "documentation": {}
    },
    {
        "label": "run_query_code_base",
        "kind": 2,
        "importPath": "apps.core.tool_calls.core_services.core_service_code_base_query",
        "description": "apps.core.tool_calls.core_services.core_service_code_base_query",
        "peekOfCode": "def run_query_code_base(c_id: int, query_content_str: str, semantic_alpha: float):\n    conn = CodeRepositoryStorageConnection.objects.get(id=c_id)\n    try:\n        cli = CodeBaseDecoder().get(connection=conn)\n        output = cli.search_hybrid(query=query_content_str, alpha=semantic_alpha)\n    except Exception as e:\n        error = f\"There has been an unexpected error on running the codebase query.\"\n        return error\n    return output",
        "detail": "apps.core.tool_calls.core_services.core_service_code_base_query",
        "documentation": {}
    },
    {
        "label": "run_dream_image",
        "kind": 2,
        "importPath": "apps.core.tool_calls.core_services.core_service_dream_image",
        "description": "apps.core.tool_calls.core_services.core_service_dream_image",
        "peekOfCode": "def run_dream_image(agent_id, chat_id, img_uri, img_dimension):\n    agent = Assistant.objects.get(id=agent_id)\n    chat = MultimodalChat.objects.get(id=chat_id)\n    xc = DreamManager(assistant=agent, chat=chat)\n    if agent.image_generation_capability is False:\n        return VISUALIZATION_TOOL_ERROR_LOG\n    try:\n        output = xc.dream_image_execution_manager(image_uri=img_uri, image_size=img_dimension)\n    except Exception as e:\n        error = VISUALIZATION_TOOL_STANDARD_ERROR_LOG",
        "detail": "apps.core.tool_calls.core_services.core_service_dream_image",
        "documentation": {}
    },
    {
        "label": "run_edit_image",
        "kind": 2,
        "importPath": "apps.core.tool_calls.core_services.core_service_edit_image",
        "description": "apps.core.tool_calls.core_services.core_service_edit_image",
        "peekOfCode": "def run_edit_image(agent_id, chat_id, edit_prompt, edit_img_uri, edit_img_uri_mask, img_dimensions):\n    agent = Assistant.objects.get(id=agent_id)\n    chat = MultimodalChat.objects.get(id=chat_id)\n    xc = EditManager(assistant=agent, chat=chat)\n    if agent.image_generation_capability is False:\n        error = VISUALIZATION_TOOL_ERROR_LOG\n        return error\n    try:\n        output = xc.edit_image_execution_manager(prompt=edit_prompt, edit_image_uri=edit_img_uri,\n                                                 edit_image_mask_uri=edit_img_uri_mask, image_size=img_dimensions)",
        "detail": "apps.core.tool_calls.core_services.core_service_edit_image",
        "documentation": {}
    },
    {
        "label": "run_execute_browsing",
        "kind": 2,
        "importPath": "apps.core.tool_calls.core_services.core_service_execute_browser",
        "description": "apps.core.tool_calls.core_services.core_service_execute_browser",
        "peekOfCode": "def run_execute_browsing(connection_id, browsing_action, browsing_query, page_definition, search_results, click_url):\n    from apps.core.browsers.browser_executor import BrowsingExecutor\n    from apps.core.browsers.utils import BrowserActionsNames\n    from apps.datasource_browsers.models import DataSourceBrowserConnection\n    conn = DataSourceBrowserConnection.objects.get(id=connection_id)\n    xc = BrowsingExecutor(connection=conn)\n    if browsing_action == BrowserActionsNames.BROWSER_SEARCH:\n        return xc.act(BrowserActionsNames.BROWSER_SEARCH, query=browsing_query, page=page_definition)\n    elif browsing_action == BrowserActionsNames.CLICK_URL_IN_SEARCH:\n        return xc.act(BrowserActionsNames.CLICK_URL_IN_SEARCH, search_results=search_results, click_url=click_url)",
        "detail": "apps.core.tool_calls.core_services.core_service_execute_browser",
        "documentation": {}
    },
    {
        "label": "run_execute_custom_api",
        "kind": 2,
        "importPath": "apps.core.tool_calls.core_services.core_service_execute_custom_api",
        "description": "apps.core.tool_calls.core_services.core_service_execute_custom_api",
        "peekOfCode": "def run_execute_custom_api(ref_id, api_endpoint_str: str, header_path_vals=None, header_query_vals=None,\n                           header_body_vals=None):\n    ref = CustomAPIReference.objects.filter(id=ref_id).first()\n    xc = CustomAPIExecutor(api=ref.custom_api,\n                           context_organization=ref.assistant.organization,\n                           context_assistant=ref.assistant)\n    try:\n        output = xc.execute_custom_api(endpoint_name=api_endpoint_str,\n                                       path_values=header_path_vals,\n                                       query_values=header_query_vals,",
        "detail": "apps.core.tool_calls.core_services.core_service_execute_custom_api",
        "documentation": {}
    },
    {
        "label": "run_execute_custom_code",
        "kind": 2,
        "importPath": "apps.core.tool_calls.core_services.core_service_execute_custom_function",
        "description": "apps.core.tool_calls.core_services.core_service_execute_custom_function",
        "peekOfCode": "def run_execute_custom_code(ref_id, function_input_values: dict):\n    ref = CustomFunctionReference.objects.filter(id=ref_id).first()\n    try:\n        xc = CustomFunctionExecutor(function=ref.custom_function,\n                                    context_organization=ref.assistant.organization,\n                                    context_assistant=ref.assistant)\n        output = xc.execute_custom_function(input_data=function_input_values)\n    except Exception as e:\n        error_msg = f\"Error occurred while executing the function: {str(e)}\"\n        return error_msg",
        "detail": "apps.core.tool_calls.core_services.core_service_execute_custom_function",
        "documentation": {}
    },
    {
        "label": "run_execute_custom_script",
        "kind": 2,
        "importPath": "apps.core.tool_calls.core_services.core_service_execute_custom_script",
        "description": "apps.core.tool_calls.core_services.core_service_execute_custom_script",
        "peekOfCode": "def run_execute_custom_script(ref_id):\n    ref = CustomScriptReference.objects.filter(id=ref_id).first()\n    try:\n        xc = CustomScriptsContentRetriever(script=ref.custom_script, context_organization=ref.assistant.organization,\n                                           context_assistant=ref.assistant)\n        output = xc.retrieve_custom_script_content()\n    except Exception as e:\n        error_msg = f\"Error occurred while retrieving the script content: {str(e)}\"\n        return error_msg\n    return output",
        "detail": "apps.core.tool_calls.core_services.core_service_execute_custom_script",
        "documentation": {}
    },
    {
        "label": "run_execute_ssh_system_commands",
        "kind": 2,
        "importPath": "apps.core.tool_calls.core_services.core_service_execute_ssh_system_command",
        "description": "apps.core.tool_calls.core_services.core_service_execute_ssh_system_command",
        "peekOfCode": "def run_execute_ssh_system_commands(c_id: int, bash_commands: list[str]):\n    conn = DataSourceFileSystem.objects.get(id=c_id)\n    try:\n        cli = FileSystemsExecutor(connection=conn)\n        output = cli.execute_file_system_command_set(commands=bash_commands)\n    except Exception as e:\n        error_msg = f\"Error occurred while executing the file system commands: {str(e)}\"\n        return error_msg\n    return output",
        "detail": "apps.core.tool_calls.core_services.core_service_execute_ssh_system_command",
        "documentation": {}
    },
    {
        "label": "run_generate_image",
        "kind": 2,
        "importPath": "apps.core.tool_calls.core_services.core_service_generate_image",
        "description": "apps.core.tool_calls.core_services.core_service_generate_image",
        "peekOfCode": "def run_generate_image(agent_id, chat_id, img_generation_prompt, img_dimensions, img_resolution):\n    agent = Assistant.objects.get(id=agent_id)\n    chat = MultimodalChat.objects.get(id=chat_id)\n    xc = GeneratorManager(assistant=agent, chat=chat)\n    if agent.image_generation_capability is False:\n        return VISUALIZATION_TOOL_ERROR_LOG\n    try:\n        output = xc.generate_image_execution_manager(prompt=img_generation_prompt, image_size=img_dimensions,\n                                                     quality=img_resolution)\n    except Exception as e:",
        "detail": "apps.core.tool_calls.core_services.core_service_generate_image",
        "documentation": {}
    },
    {
        "label": "run_generate_video",
        "kind": 2,
        "importPath": "apps.core.tool_calls.core_services.core_service_generate_video",
        "description": "apps.core.tool_calls.core_services.core_service_generate_video",
        "peekOfCode": "def run_generate_video(connection_id: int,\n                       video_generator_action_type: str,\n                       video_generator_query: str,\n                       aspect_ratio=None,\n                       start_frame_url=None,\n                       end_frame_url=None):\n    xc: VideoGenerationExecutor = VideoGeneratorDecoder.get(connection_id=connection_id)\n    try:\n        if video_generator_action_type == VideoGenerationActionTypes.TEXT_TO_VIDEO_WITH_LOOP_AND_ASPECT_RATIO:\n            response = xc.text_to_video(query=video_generator_query, loop=True, with_aspect_ratio=True,",
        "detail": "apps.core.tool_calls.core_services.core_service_generate_video",
        "documentation": {}
    },
    {
        "label": "run_http_retrieval",
        "kind": 2,
        "importPath": "apps.core.tool_calls.core_services.core_service_http_retrieval",
        "description": "apps.core.tool_calls.core_services.core_service_http_retrieval",
        "peekOfCode": "def run_http_retrieval(connection_id: int, url: str):\n    xc = HTTPClientDownloadExecutor(storage_id=connection_id)\n    try:\n        if not url.startswith(\"http\"):\n            url = f\"{MEDIA_URL}{url}\"\n        output = xc.retrieve(url=url)\n    except Exception as e:\n        error = f\"Error occurred while downloading the file from the URL: {str(e)}\"\n        return error\n    return output",
        "detail": "apps.core.tool_calls.core_services.core_service_http_retrieval",
        "documentation": {}
    },
    {
        "label": "run_predict_with_ml",
        "kind": 2,
        "importPath": "apps.core.tool_calls.core_services.core_service_infer_with_ml",
        "description": "apps.core.tool_calls.core_services.core_service_infer_with_ml",
        "peekOfCode": "def run_predict_with_ml(c_id, chat_id, model_item_url, input_data_uris, inference_query, no_chat=False):\n    conn = DataSourceMLModelConnection.objects.get(id=c_id)\n    chat = None\n    if no_chat is False:\n        chat = MultimodalChat.objects.get(id=chat_id)\n    try:\n        xc = MLModelExecutor(connection=conn, chat=chat)\n        output = xc.execute_predict_with_ml_model(model_url=model_item_url, file_urls=input_data_uris,\n                                                  input_data=inference_query)\n        f_uris = output.get(\"file_uris\")",
        "detail": "apps.core.tool_calls.core_services.core_service_infer_with_ml",
        "documentation": {}
    },
    {
        "label": "run_query_intra_memory",
        "kind": 2,
        "importPath": "apps.core.tool_calls.core_services.core_service_intra_memory_query",
        "description": "apps.core.tool_calls.core_services.core_service_intra_memory_query",
        "peekOfCode": "def run_query_intra_memory(c_id: int, intra_memory_query: str, semantic_alpha: float):\n    conn = ContextHistoryKnowledgeBaseConnection.objects.get(id=c_id)\n    try:\n        c = IntraContextMemoryExecutor(connection=conn)\n        output = c.search_hybrid(query=intra_memory_query, alpha=semantic_alpha)\n    except Exception as e:\n        error_msg = f\"Error occurred while executing the memory query: {str(e)}\"\n        return error_msg\n    return output",
        "detail": "apps.core.tool_calls.core_services.core_service_intra_memory_query",
        "documentation": {}
    },
    {
        "label": "run_process_audio",
        "kind": 2,
        "importPath": "apps.core.tool_calls.core_services.core_service_process_audio",
        "description": "apps.core.tool_calls.core_services.core_service_process_audio",
        "peekOfCode": "def run_process_audio(agent_id, chat_id, process_audio_action_type, audio_uri=None, txt_data=None,\n                      llm_voice_type=None):\n    agent = Assistant.objects.get(id=agent_id)\n    chat = MultimodalChat.objects.get(id=chat_id)\n    xc = AudioProcessingExecutor(assistant=agent, chat=chat)\n    if process_audio_action_type == RunAudioProcessingActionTypesNames.TTS:\n        output = xc.convert_text_to_audio_file(text_content=txt_data, voice_selection=llm_voice_type)\n    elif process_audio_action_type == RunAudioProcessingActionTypesNames.STT:\n        output = xc.convert_audio_to_text(audio_file_path=audio_uri)\n    else:",
        "detail": "apps.core.tool_calls.core_services.core_service_process_audio",
        "documentation": {}
    },
    {
        "label": "run_process_reasoning",
        "kind": 2,
        "importPath": "apps.core.tool_calls.core_services.core_service_process_reasoning",
        "description": "apps.core.tool_calls.core_services.core_service_process_reasoning",
        "peekOfCode": "def run_process_reasoning(agent_id, chat_id, reasoning_query):\n    agent = Assistant.objects.get(id=agent_id)\n    chat = MultimodalChat.objects.get(id=chat_id)\n    xc = ReasoningExecutor(assistant=agent, chat=chat)\n    output = None\n    try:\n        output = xc.execute_process_reasoning(query_string=reasoning_query)\n    except Exception as e:\n        return f\"Failed to process the reasoning. The cause of the error is as follows: {str(e)}\"\n    return output",
        "detail": "apps.core.tool_calls.core_services.core_service_process_reasoning",
        "documentation": {}
    },
    {
        "label": "run_query_media_manager",
        "kind": 2,
        "importPath": "apps.core.tool_calls.core_services.core_service_query_media_manager",
        "description": "apps.core.tool_calls.core_services.core_service_query_media_manager",
        "peekOfCode": "def run_query_media_manager(c_id, chat_id, manager_file_type, f_uris, manager_query, no_chat=False):\n    conn = DataSourceMediaStorageConnection.objects.get(id=c_id)\n    chat = None\n    if no_chat is False:\n        chat = MultimodalChat.objects.get(id=chat_id)\n    try:\n        xc = MediaManager(connection=conn, chat=chat)\n        output, f_uris, img_uris = \"\", [], []\n        if manager_file_type == AnalysisToolCallExecutionTypesNames.FILE_INTERPRETATION:\n            output = xc.interpretation_handler_method(full_file_paths=f_uris, query_string=manager_query)",
        "detail": "apps.core.tool_calls.core_services.core_service_query_media_manager",
        "documentation": {}
    },
    {
        "label": "run_sql_query",
        "kind": 2,
        "importPath": "apps.core.tool_calls.core_services.core_service_sql_query",
        "description": "apps.core.tool_calls.core_services.core_service_sql_query",
        "peekOfCode": "def run_sql_query(c_id: int, sql_query_type: str, query_content: str):\n    sql_response = None\n    sql_connection = SQLDatabaseConnection.objects.get(id=c_id)\n    try:\n        client = InternalSQLClient().get(\n            connection=sql_connection\n        )\n        if sql_query_type == \"write\":\n            sql_response = client.execute_write(query=query_content)\n        elif sql_query_type == \"read\":",
        "detail": "apps.core.tool_calls.core_services.core_service_sql_query",
        "documentation": {}
    },
    {
        "label": "run_query_vector_store",
        "kind": 2,
        "importPath": "apps.core.tool_calls.core_services.core_service_vector_store_query",
        "description": "apps.core.tool_calls.core_services.core_service_vector_store_query",
        "peekOfCode": "def run_query_vector_store(c_id: int, vector_store_query: str, semantic_alpha: float):\n    conn = DocumentKnowledgeBaseConnection.objects.get(id=c_id)\n    try:\n        client = KnowledgeBaseSystemDecoder().get(connection=conn)\n        output = client.search_hybrid(query=vector_store_query, alpha=semantic_alpha)\n    except Exception as e:\n        error_msg = f\"Error occurred while executing the knowledge base query: {str(e)}\"\n        return error_msg\n    return output",
        "detail": "apps.core.tool_calls.core_services.core_service_vector_store_query",
        "documentation": {}
    },
    {
        "label": "verify_analyze_code_content",
        "kind": 2,
        "importPath": "apps.core.tool_calls.input_verifiers.verify_analyze_code",
        "description": "apps.core.tool_calls.input_verifiers.verify_analyze_code",
        "peekOfCode": "def verify_analyze_code_content(content: dict):\n    if \"parameters\" not in content:\n        return \"\"\"\n            The 'parameters' field is missing from the tool_usage_json. This field is mandatory for using the Code\n            Interpreter Execution tool. Please make sure you are defining the 'parameters' field in the tool_usage_json.\n        \"\"\"\n    ps = content.get(\"parameters\")\n    if \"query\" not in ps:\n        return \"\"\"\n            The 'query' field is missing from the 'parameters' field in the tool_usage_json. This field is mandatory for",
        "detail": "apps.core.tool_calls.input_verifiers.verify_analyze_code",
        "documentation": {}
    },
    {
        "label": "verify_audio_processing_query",
        "kind": 2,
        "importPath": "apps.core.tool_calls.input_verifiers.verify_audio_processing_query",
        "description": "apps.core.tool_calls.input_verifiers.verify_audio_processing_query",
        "peekOfCode": "def verify_audio_processing_query(content: dict):\n    if \"parameters\" not in content:\n        return \"\"\"\n            The 'parameters' field is missing from the tool_usage_json. This field is mandatory for using the Audio\n            Processing Execution tool. Please make sure you are defining the 'parameters' field in the tool_usage_json.\n        \"\"\"\n    ps = content.get(\"parameters\")\n    if \"action\" not in ps:\n        return \"\"\"\n            The 'action' field is missing from the 'parameters' field in the tool_usage_json. This field is mandatory for",
        "detail": "apps.core.tool_calls.input_verifiers.verify_audio_processing_query",
        "documentation": {}
    },
    {
        "label": "verify_browser_query_content",
        "kind": 2,
        "importPath": "apps.core.tool_calls.input_verifiers.verify_browser_query",
        "description": "apps.core.tool_calls.input_verifiers.verify_browser_query",
        "peekOfCode": "def verify_browser_query_content(content: dict):\n    if \"parameters\" not in content:\n        return \"\"\"\n            The 'parameters' field is missing from the tool_usage_json. This field is mandatory for using the Browser Execution tool.\n            Please make sure you are defining the 'parameters' field in the tool_usage_json.\n        \"\"\"\n    ps = content.get(\"parameters\")\n    if \"browser_connection_id\" not in ps:\n        return \"\"\"\n            The 'browser_connection_id' field is missing from the 'parameters' field in the tool_usage_json. This field is mandatory for",
        "detail": "apps.core.tool_calls.input_verifiers.verify_browser_query",
        "documentation": {}
    },
    {
        "label": "verify_dream_image_content",
        "kind": 2,
        "importPath": "apps.core.tool_calls.input_verifiers.verify_dream_image",
        "description": "apps.core.tool_calls.input_verifiers.verify_dream_image",
        "peekOfCode": "def verify_dream_image_content(content: dict):\n    if \"parameters\" not in content:\n        return \"\"\"\n            The 'parameters' field is missing from the tool_usage_json. This field is mandatory for using the Image\n            Variation tool. Please make sure you are defining the 'parameters' field in the tool_usage_json.\n        \"\"\"\n    parameters = content.get(\"parameters\")\n    if \"image_uri\" not in parameters:\n        return \"\"\"\n            The 'image_uri' field is missing from the 'parameters' field in the tool_usage_json. This field is mandatory",
        "detail": "apps.core.tool_calls.input_verifiers.verify_dream_image",
        "documentation": {}
    },
    {
        "label": "verify_edit_image_content",
        "kind": 2,
        "importPath": "apps.core.tool_calls.input_verifiers.verify_edit_image",
        "description": "apps.core.tool_calls.input_verifiers.verify_edit_image",
        "peekOfCode": "def verify_edit_image_content(content: dict):\n    if \"parameters\" not in content:\n        return \"\"\"\n            The 'parameters' field is missing from the tool_usage_json. This field is mandatory for using the Image\n            Modification tool. Please make sure you are defining the 'parameters' field in the tool_usage_json.\n        \"\"\"\n    ps = content.get(\"parameters\")\n    if \"prompt\" not in ps:\n        return \"\"\"\n            The 'prompt' field is missing from the 'parameters' field in the tool_usage_json. This field is mandatory for",
        "detail": "apps.core.tool_calls.input_verifiers.verify_edit_image",
        "documentation": {}
    },
    {
        "label": "verify_generate_image_content",
        "kind": 2,
        "importPath": "apps.core.tool_calls.input_verifiers.verify_generate_image",
        "description": "apps.core.tool_calls.input_verifiers.verify_generate_image",
        "peekOfCode": "def verify_generate_image_content(content: dict):\n    if \"parameters\" not in content:\n        return \"\"\"\n            The 'parameters' field is missing from the tool_usage_json. This field is mandatory for using the Image\n            Generation tool. Please make sure you are defining the 'parameters' field in the tool_usage_json.\n        \"\"\"\n    ps = content.get(\"parameters\")\n    if \"prompt\" not in ps:\n        return \"\"\"\n            The 'prompt' field is missing from the 'parameters' field in the tool_usage_json. This field is mandatory for",
        "detail": "apps.core.tool_calls.input_verifiers.verify_generate_image",
        "documentation": {}
    },
    {
        "label": "verify_generate_video_content",
        "kind": 2,
        "importPath": "apps.core.tool_calls.input_verifiers.verify_generate_video",
        "description": "apps.core.tool_calls.input_verifiers.verify_generate_video",
        "peekOfCode": "def verify_generate_video_content(content: dict):\n    if \"parameters\" not in content:\n        return \"\"\"\n            The 'parameters' field is missing from the tool_usage_json. This field is mandatory for using the Video\n            Generation tool. Please make sure you are defining the 'parameters' field in the tool_usage_json.\n        \"\"\"\n    ps = content.get(\"parameters\")\n    if \"connection_id\" not in ps:\n        return \"\"\"\n            The 'connection_id' field is missing from the 'parameters' field in the tool_usage_json. This field is mandatory for",
        "detail": "apps.core.tool_calls.input_verifiers.verify_generate_video",
        "documentation": {}
    },
    {
        "label": "verify_http_retrieval_query_content",
        "kind": 2,
        "importPath": "apps.core.tool_calls.input_verifiers.verify_http_retrieval_query",
        "description": "apps.core.tool_calls.input_verifiers.verify_http_retrieval_query",
        "peekOfCode": "def verify_http_retrieval_query_content(content: dict):\n    if \"parameters\" not in content:\n        return \"\"\"\n            The 'parameters' field is missing from the tool_usage_json. This field is mandatory for using the URL File\n            Downloader tool. Please make sure you are defining the 'parameters' field in the tool_usage_json.\n        \"\"\"\n    ps = content.get(\"parameters\")\n    if \"media_storage_connection_id\" not in ps:\n        return \"\"\"\n            The 'media_storage_connection_id' field is missing from the 'parameters' field in the tool_usage_json. This",
        "detail": "apps.core.tool_calls.input_verifiers.verify_http_retrieval_query",
        "documentation": {}
    },
    {
        "label": "verify_infer_ml_query_content",
        "kind": 2,
        "importPath": "apps.core.tool_calls.input_verifiers.verify_infer_ml_query",
        "description": "apps.core.tool_calls.input_verifiers.verify_infer_ml_query",
        "peekOfCode": "def verify_infer_ml_query_content(content: dict):\n    if \"parameters\" not in content:\n        return \"\"\"\n            The 'parameters' field is missing from the tool_usage_json. This field is mandatory for using the Prediction\n            with ML Model tool. Please make sure you are defining the 'parameters' field in the tool_usage_json.\n        \"\"\"\n    ps = content.get(\"parameters\")\n    if \"ml_base_connection_id\" not in ps:\n        return \"\"\"\n            The 'ml_base_connection_id' field is missing from the 'parameters' field in the tool_usage_json. This",
        "detail": "apps.core.tool_calls.input_verifiers.verify_infer_ml_query",
        "documentation": {}
    },
    {
        "label": "verify_main_call_or_query_content",
        "kind": 2,
        "importPath": "apps.core.tool_calls.input_verifiers.verify_main_query_or_run_call",
        "description": "apps.core.tool_calls.input_verifiers.verify_main_query_or_run_call",
        "peekOfCode": "def verify_main_call_or_query_content(content: dict):\n    if not content:\n        return \"\"\"\n                    The JSON is empty. Please make sure you are passing the correct JSON object to the\n                    ToolDecoder class.\n                \"\"\"\n    if not content.get(\"tool\"):\n        return \"\"\"\n                    The 'tool' field is missing from the tool_usage_json. Please make sure you are defining the tool\n                    name in the tool_usage_json.",
        "detail": "apps.core.tool_calls.input_verifiers.verify_main_query_or_run_call",
        "documentation": {}
    },
    {
        "label": "verify_media_manager_query_content",
        "kind": 2,
        "importPath": "apps.core.tool_calls.input_verifiers.verify_media_manager_query",
        "description": "apps.core.tool_calls.input_verifiers.verify_media_manager_query",
        "peekOfCode": "def verify_media_manager_query_content(content: dict):\n    if \"parameters\" not in content:\n        return \"\"\"\n            The 'parameters' field is missing from the tool_usage_json. This field is mandatory for using the Media Storage\n            Query Execution tool. Please make sure you are defining the 'parameters' field in the tool_usage_json.\n        \"\"\"\n    ps = content.get(\"parameters\")\n    if \"media_storage_connection_id\" not in ps:\n        return \"\"\"\n            The 'media_storage_connection_id' field is missing from the 'parameters' field in the tool_usage_json. This",
        "detail": "apps.core.tool_calls.input_verifiers.verify_media_manager_query",
        "documentation": {}
    },
    {
        "label": "verify_process_reasoning_query_content",
        "kind": 2,
        "importPath": "apps.core.tool_calls.input_verifiers.verify_process_reasoning_query",
        "description": "apps.core.tool_calls.input_verifiers.verify_process_reasoning_query",
        "peekOfCode": "def verify_process_reasoning_query_content(content: dict):\n    if \"parameters\" not in content:\n        return \"\"\"\n            The 'parameters' field is missing from the tool_usage_json. This field is mandatory for using the\n            Reasoning Process Execution tool. Please make sure you are defining the 'parameters' field in\n            the tool_usage_json.\n        \"\"\"\n    ps = content.get(\"parameters\")\n    if \"query\" not in ps:\n        return \"\"\"",
        "detail": "apps.core.tool_calls.input_verifiers.verify_process_reasoning_query",
        "documentation": {}
    },
    {
        "label": "verify_code_base_query_content",
        "kind": 2,
        "importPath": "apps.core.tool_calls.input_verifiers.verify_query_code_base",
        "description": "apps.core.tool_calls.input_verifiers.verify_query_code_base",
        "peekOfCode": "def verify_code_base_query_content(content: dict):\n    if \"parameters\" not in content:\n        return \"\"\"\n            The 'parameters' field is missing from the tool_usage_json. This field is mandatory for using the Code\n            Base Query Execution tool. Please make sure you are defining the 'parameters' field in the tool_usage_json.\n        \"\"\"\n    ps = content.get(\"parameters\")\n    if \"query\" not in ps:\n        return \"\"\"\n            The 'query' field is missing from the 'parameters' field in the tool_usage_json. This field is mandatory for",
        "detail": "apps.core.tool_calls.input_verifiers.verify_query_code_base",
        "documentation": {}
    },
    {
        "label": "verify_intra_memory_query_content",
        "kind": 2,
        "importPath": "apps.core.tool_calls.input_verifiers.verify_query_intra_memory",
        "description": "apps.core.tool_calls.input_verifiers.verify_query_intra_memory",
        "peekOfCode": "def verify_intra_memory_query_content(content: dict):\n    if \"parameters\" not in content:\n        return \"\"\"\n            The 'parameters' field is missing from the tool_usage_json. This field is mandatory for using the Context\n            History Query Execution tool. Please make sure you are defining the 'parameters' field in the tool_usage_json.\n        \"\"\"\n    ps = content.get(\"parameters\")\n    if \"query\" not in ps:\n        return \"\"\"\n            The 'query' field is missing from the 'parameters' field in the tool_usage_json. This field is mandatory for",
        "detail": "apps.core.tool_calls.input_verifiers.verify_query_intra_memory",
        "documentation": {}
    },
    {
        "label": "verify_run_custom_api_content",
        "kind": 2,
        "importPath": "apps.core.tool_calls.input_verifiers.verify_run_custom_api",
        "description": "apps.core.tool_calls.input_verifiers.verify_run_custom_api",
        "peekOfCode": "def verify_run_custom_api_content(content: dict):\n    if \"parameters\" not in content:\n        return \"\"\"\n            The 'parameters' field is missing from the tool_usage_json. This field is mandatory for using the\n            Custom API Execution tool. Please make sure you are defining the 'parameters' field in the tool_usage_json.\n        \"\"\"\n    ps = content.get(\"parameters\")\n    if \"custom_api_reference_id\" not in ps:\n        return \"\"\"\n            The 'custom_api_reference_id' field is missing from the 'parameters' field in the tool_usage_json. This field is",
        "detail": "apps.core.tool_calls.input_verifiers.verify_run_custom_api",
        "documentation": {}
    },
    {
        "label": "verify_run_custom_function_content",
        "kind": 2,
        "importPath": "apps.core.tool_calls.input_verifiers.verify_run_custom_function",
        "description": "apps.core.tool_calls.input_verifiers.verify_run_custom_function",
        "peekOfCode": "def verify_run_custom_function_content(content: dict):\n    if \"parameters\" not in content:\n        return \"\"\"\n            The 'parameters' field is missing from the tool_usage_json. This field is mandatory for using the Custom\n            Function Execution tool. Please make sure you are defining the 'parameters' field in the tool_usage_json.\n        \"\"\"\n    ps = content.get(\"parameters\")\n    if \"custom_function_reference_id\" not in ps:\n        return \"\"\"\n            The 'custom_function_reference_id' field is missing from the 'parameters' field in the tool_usage_json. This field is",
        "detail": "apps.core.tool_calls.input_verifiers.verify_run_custom_function",
        "documentation": {}
    },
    {
        "label": "verify_run_custom_script_content",
        "kind": 2,
        "importPath": "apps.core.tool_calls.input_verifiers.verify_run_custom_script",
        "description": "apps.core.tool_calls.input_verifiers.verify_run_custom_script",
        "peekOfCode": "def verify_run_custom_script_content(content: dict):\n    if \"parameters\" not in content:\n        return \"\"\"\n            The 'parameters' field is missing from the tool_usage_json. This field is mandatory for using the\n            Custom Script Content Retriever tool. Please make sure you are defining the 'parameters' field in the tool_usage_json.\n        \"\"\"\n    ps = content.get(\"parameters\")\n    if \"custom_script_reference_id\" not in ps:\n        return \"\"\"\n            The 'custom_script_reference_id' field is missing from the 'parameters' field in the tool_usage_json. This field is",
        "detail": "apps.core.tool_calls.input_verifiers.verify_run_custom_script",
        "documentation": {}
    },
    {
        "label": "verify_run_sql_query_content",
        "kind": 2,
        "importPath": "apps.core.tool_calls.input_verifiers.verify_run_sql_query",
        "description": "apps.core.tool_calls.input_verifiers.verify_run_sql_query",
        "peekOfCode": "def verify_run_sql_query_content(content: dict):\n    if \"parameters\" not in content:\n        return \"\"\"\n            The 'parameters' field is missing from the tool_usage_json. This field is mandatory for using the SQL Query\n            Execution tool. Please make sure you are defining the 'parameters' field in the tool_usage_json.\n        \"\"\"\n    ps = content.get(\"parameters\")\n    if \"sql_query\" not in ps:\n        return \"\"\"\n            The 'sql_query' field is missing from the 'parameters' field in the tool_usage_json. This field is",
        "detail": "apps.core.tool_calls.input_verifiers.verify_run_sql_query",
        "documentation": {}
    },
    {
        "label": "verify_ssh_system_command_content",
        "kind": 2,
        "importPath": "apps.core.tool_calls.input_verifiers.verify_ssh_system_command",
        "description": "apps.core.tool_calls.input_verifiers.verify_ssh_system_command",
        "peekOfCode": "def verify_ssh_system_command_content(content: dict):\n    if \"parameters\" not in content:\n        return \"\"\"\n            The 'parameters' field is missing from the tool_usage_json. This field is mandatory for using the File System\n            Command Execution tool. Please make sure you are defining the 'parameters' field in the tool_usage_json.\n        \"\"\"\n    ps = content.get(\"parameters\")\n    if \"file_system_connection_id\" not in ps:\n        return \"\"\"\n            The 'file_system_connection_id' field is missing from the 'parameters' field in the tool_usage_json. This field is mandatory for",
        "detail": "apps.core.tool_calls.input_verifiers.verify_ssh_system_command",
        "documentation": {}
    },
    {
        "label": "verify_vector_store_query_content",
        "kind": 2,
        "importPath": "apps.core.tool_calls.input_verifiers.verify_vector_store_query",
        "description": "apps.core.tool_calls.input_verifiers.verify_vector_store_query",
        "peekOfCode": "def verify_vector_store_query_content(content: dict):\n    if \"parameters\" not in content:\n        return \"\"\"\n            The 'parameters' field is missing from the tool_usage_json. This field is mandatory for using the Knowledge\n            Base Query Execution tool. Please make sure you are defining the 'parameters' field in the tool_usage_json.\n        \"\"\"\n    ps = content.get(\"parameters\")\n    if \"query\" not in ps:\n        return \"\"\"\n            The 'query' field is missing from the 'parameters' field in the tool_usage_json. This field is mandatory for",
        "detail": "apps.core.tool_calls.input_verifiers.verify_vector_store_query",
        "documentation": {}
    },
    {
        "label": "execute_expert_network_query",
        "kind": 2,
        "importPath": "apps.core.tool_calls.leanmod.core_services.core_service_query_expert_network",
        "description": "apps.core.tool_calls.leanmod.core_services.core_service_query_expert_network",
        "peekOfCode": "def execute_expert_network_query(agent_id, xn_query, img_uris, f_uris):\n    ref = ExpertNetworkAssistantReference.objects.filter(id=agent_id).first()\n    if not ref:\n        return \"The assistant-network reference with the given ID does not exist.\"\n    nx_obj = ref.network\n    try:\n        xc = ExpertNetworkExecutor(network=nx_obj)\n        output = xc.consult_by_query(reference=ref, query=xn_query, image_urls=img_uris,\n                                             file_urls=f_uris)\n    except Exception as e:",
        "detail": "apps.core.tool_calls.leanmod.core_services.core_service_query_expert_network",
        "documentation": {}
    },
    {
        "label": "verify_expert_network_query_content",
        "kind": 2,
        "importPath": "apps.core.tool_calls.leanmod.input_verifiers.verify_expert_network_query",
        "description": "apps.core.tool_calls.leanmod.input_verifiers.verify_expert_network_query",
        "peekOfCode": "def verify_expert_network_query_content(content):\n    if \"parameters\" not in content:\n        return \"\"\"\n            The 'parameters' is missing from tool_usage_json. This field is mandatory to use Expert Network Query\n            Execution tool.\n        \"\"\"\n    ps = content.get(\"parameters\")\n    if \"assistant_id\" not in ps:\n        return \"\"\"\n            The 'alpha' field is missing from 'parameters' field in tool_usage_json. This field is mandatory for",
        "detail": "apps.core.tool_calls.leanmod.input_verifiers.verify_expert_network_query",
        "documentation": {}
    },
    {
        "label": "fixture_execution_handlers_init",
        "kind": 2,
        "importPath": "apps.core.tool_calls.tests.conftest",
        "description": "apps.core.tool_calls.tests.conftest",
        "peekOfCode": "def fixture_execution_handlers_init():\n    return True\n@pytest.fixture\ndef fixture_validation_handlers_init():\n    return True\n@pytest.fixture\ndef fixture_tool_executor_init():\n    return True",
        "detail": "apps.core.tool_calls.tests.conftest",
        "documentation": {}
    },
    {
        "label": "fixture_validation_handlers_init",
        "kind": 2,
        "importPath": "apps.core.tool_calls.tests.conftest",
        "description": "apps.core.tool_calls.tests.conftest",
        "peekOfCode": "def fixture_validation_handlers_init():\n    return True\n@pytest.fixture\ndef fixture_tool_executor_init():\n    return True",
        "detail": "apps.core.tool_calls.tests.conftest",
        "documentation": {}
    },
    {
        "label": "fixture_tool_executor_init",
        "kind": 2,
        "importPath": "apps.core.tool_calls.tests.conftest",
        "description": "apps.core.tool_calls.tests.conftest",
        "peekOfCode": "def fixture_tool_executor_init():\n    return True",
        "detail": "apps.core.tool_calls.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_execution_handlers_test_services",
        "kind": 2,
        "importPath": "apps.core.tool_calls.tests.test_services",
        "description": "apps.core.tool_calls.tests.test_services",
        "peekOfCode": "def test_init_execution_handlers_test_services(fixture_execution_handlers_init):\n    assert True\ndef test_init_validation_handlers_test_services(fixture_validation_handlers_init):\n    assert True\ndef test_init_tool_executor_test_services():\n    assert True",
        "detail": "apps.core.tool_calls.tests.test_services",
        "documentation": {}
    },
    {
        "label": "test_init_validation_handlers_test_services",
        "kind": 2,
        "importPath": "apps.core.tool_calls.tests.test_services",
        "description": "apps.core.tool_calls.tests.test_services",
        "peekOfCode": "def test_init_validation_handlers_test_services(fixture_validation_handlers_init):\n    assert True\ndef test_init_tool_executor_test_services():\n    assert True",
        "detail": "apps.core.tool_calls.tests.test_services",
        "documentation": {}
    },
    {
        "label": "test_init_tool_executor_test_services",
        "kind": 2,
        "importPath": "apps.core.tool_calls.tests.test_services",
        "description": "apps.core.tool_calls.tests.test_services",
        "peekOfCode": "def test_init_tool_executor_test_services():\n    assert True",
        "detail": "apps.core.tool_calls.tests.test_services",
        "documentation": {}
    },
    {
        "label": "AnalysisToolCallExecutionTypesNames",
        "kind": 6,
        "importPath": "apps.core.tool_calls.utils.constant_utils",
        "description": "apps.core.tool_calls.utils.constant_utils",
        "peekOfCode": "class AnalysisToolCallExecutionTypesNames:\n    FILE_INTERPRETATION = \"file_interpretation\"\n    IMAGE_INTERPRETATION = \"image_interpretation\"\nclass ToolCallDescriptorNames:\n    EXECUTE_SQL_QUERY = 'SQL Query Execution'\n    EXECUTE_NOSQL_QUERY = 'NoSQL Query Execution'\n    EXECUTE_VECTOR_STORE_QUERY = 'Knowledge Base Query Execution'\n    EXECUTE_CODE_BASE_QUERY = 'Code Base Query Execution'\n    EXECUTE_INTRA_MEMORY_QUERY = 'Vector Chat History Query Execution'\n    EXECUTE_SSH_SYSTEM_QUERY = 'File System Command Execution'",
        "detail": "apps.core.tool_calls.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "ToolCallDescriptorNames",
        "kind": 6,
        "importPath": "apps.core.tool_calls.utils.constant_utils",
        "description": "apps.core.tool_calls.utils.constant_utils",
        "peekOfCode": "class ToolCallDescriptorNames:\n    EXECUTE_SQL_QUERY = 'SQL Query Execution'\n    EXECUTE_NOSQL_QUERY = 'NoSQL Query Execution'\n    EXECUTE_VECTOR_STORE_QUERY = 'Knowledge Base Query Execution'\n    EXECUTE_CODE_BASE_QUERY = 'Code Base Query Execution'\n    EXECUTE_INTRA_MEMORY_QUERY = 'Vector Chat History Query Execution'\n    EXECUTE_SSH_SYSTEM_QUERY = 'File System Command Execution'\n    EXECUTE_MEDIA_MANAGER_QUERY = 'Media Storage Query Execution'\n    EXECUTE_BROWSING = 'Browsing'\n    EXECUTE_HTTP_DELIVERY = 'URL File Uploader'",
        "detail": "apps.core.tool_calls.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "IMAGE_GENERATION_AFFIRMATION_PROMPT",
        "kind": 5,
        "importPath": "apps.core.tool_calls.utils.constant_utils",
        "description": "apps.core.tool_calls.utils.constant_utils",
        "peekOfCode": "IMAGE_GENERATION_AFFIRMATION_PROMPT = f\"\"\"\n    **Important Note:**\n    Always include the generated image's URL in your\n    response's image_uris list or the equivalent.\n\"\"\"\nVISUALIZATION_TOOL_ERROR_LOG = (\"This assistant is not authorized to do visualization tool operations. The assistant \"\n                                \"must first be edited to allow image generation capabilities to be able to use \"\n                                \"this tool.\")\nVISUALIZATION_TOOL_STANDARD_ERROR_LOG = f\"Error occurred while working on visualization capability tool.\"",
        "detail": "apps.core.tool_calls.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "VISUALIZATION_TOOL_ERROR_LOG",
        "kind": 5,
        "importPath": "apps.core.tool_calls.utils.constant_utils",
        "description": "apps.core.tool_calls.utils.constant_utils",
        "peekOfCode": "VISUALIZATION_TOOL_ERROR_LOG = (\"This assistant is not authorized to do visualization tool operations. The assistant \"\n                                \"must first be edited to allow image generation capabilities to be able to use \"\n                                \"this tool.\")\nVISUALIZATION_TOOL_STANDARD_ERROR_LOG = f\"Error occurred while working on visualization capability tool.\"",
        "detail": "apps.core.tool_calls.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "VISUALIZATION_TOOL_STANDARD_ERROR_LOG",
        "kind": 5,
        "importPath": "apps.core.tool_calls.utils.constant_utils",
        "description": "apps.core.tool_calls.utils.constant_utils",
        "peekOfCode": "VISUALIZATION_TOOL_STANDARD_ERROR_LOG = f\"Error occurred while working on visualization capability tool.\"",
        "detail": "apps.core.tool_calls.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "get_no_connection_vector_store_error_message",
        "kind": 2,
        "importPath": "apps.core.tool_calls.utils.function_utils",
        "description": "apps.core.tool_calls.utils.function_utils",
        "peekOfCode": "def get_no_connection_vector_store_error_message(assistant_name, chat_name):\n    return f\"\"\"\n        The Context History Knowledge Base Connection for the chat: {chat_name} and assistant: {assistant_name}\n        does not exist in the system. Please make sure you have the connection setup in the system.\n    \"\"\"\ndef get_no_tool_found_error_log(query_name):\n    return f\"\"\"\n        There is no tool with the name: {query_name} in the system. Please make sure you are defining\n        the correct tool name in the tool_usage_json.\n    \"\"\"",
        "detail": "apps.core.tool_calls.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "get_no_tool_found_error_log",
        "kind": 2,
        "importPath": "apps.core.tool_calls.utils.function_utils",
        "description": "apps.core.tool_calls.utils.function_utils",
        "peekOfCode": "def get_no_tool_found_error_log(query_name):\n    return f\"\"\"\n        There is no tool with the name: {query_name} in the system. Please make sure you are defining\n        the correct tool name in the tool_usage_json.\n    \"\"\"",
        "detail": "apps.core.tool_calls.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "ToolCallManager",
        "kind": 6,
        "importPath": "apps.core.tool_calls.tool_call_manager",
        "description": "apps.core.tool_calls.tool_call_manager",
        "peekOfCode": "class ToolCallManager:\n    def __init__(self, assistant: Assistant, chat: MultimodalChat, tool_usage_json_str: dict):\n        self.assistant = assistant\n        self.chat = chat\n        self.tool_usage_dict_stringified = tool_usage_json_str\n        self.tool_usage_dict = {}\n    def call_internal_tool_service(self):\n        try:\n            if isinstance(self.tool_usage_dict_stringified, dict):\n                self.tool_usage_dict = self.tool_usage_dict_stringified",
        "detail": "apps.core.tool_calls.tool_call_manager",
        "documentation": {}
    },
    {
        "label": "UserPermissionManager",
        "kind": 6,
        "importPath": "apps.core.user_permissions.permission_manager",
        "description": "apps.core.user_permissions.permission_manager",
        "peekOfCode": "class UserPermissionManager:\n    @staticmethod\n    def is_authorized(user: User, operation: str):\n        user_permissions = UserPermission.active_permissions.filter(\n            user=user\n        ).all().values_list('permission_type', flat=True)\n        if operation not in user_permissions:\n            return False\n        return True",
        "detail": "apps.core.user_permissions.permission_manager",
        "documentation": {}
    },
    {
        "label": "WEAVIATE_INITIALIZATION_TIMEOUT",
        "kind": 5,
        "importPath": "apps.core.vector_operations.intra_context_memory.utils.constant_utils",
        "description": "apps.core.vector_operations.intra_context_memory.utils.constant_utils",
        "peekOfCode": "WEAVIATE_INITIALIZATION_TIMEOUT = 60\nWEAVIATE_QUERY_TIMEOUT = 120\nWEAVIATE_INSERT_TIMEOUT = 240\nDEFAULT_GENERATIVE_SEARCH_MODEL = \"gpt-4\"\nKNOWLEDGE_BASE_PROVIDERS = {\n        \"WEAVIATE\": {\n            \"code\": \"weaviate\",\n            \"name\": \"Weaviate\"\n        },\n    }",
        "detail": "apps.core.vector_operations.intra_context_memory.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "WEAVIATE_QUERY_TIMEOUT",
        "kind": 5,
        "importPath": "apps.core.vector_operations.intra_context_memory.utils.constant_utils",
        "description": "apps.core.vector_operations.intra_context_memory.utils.constant_utils",
        "peekOfCode": "WEAVIATE_QUERY_TIMEOUT = 120\nWEAVIATE_INSERT_TIMEOUT = 240\nDEFAULT_GENERATIVE_SEARCH_MODEL = \"gpt-4\"\nKNOWLEDGE_BASE_PROVIDERS = {\n        \"WEAVIATE\": {\n            \"code\": \"weaviate\",\n            \"name\": \"Weaviate\"\n        },\n    }",
        "detail": "apps.core.vector_operations.intra_context_memory.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "WEAVIATE_INSERT_TIMEOUT",
        "kind": 5,
        "importPath": "apps.core.vector_operations.intra_context_memory.utils.constant_utils",
        "description": "apps.core.vector_operations.intra_context_memory.utils.constant_utils",
        "peekOfCode": "WEAVIATE_INSERT_TIMEOUT = 240\nDEFAULT_GENERATIVE_SEARCH_MODEL = \"gpt-4\"\nKNOWLEDGE_BASE_PROVIDERS = {\n        \"WEAVIATE\": {\n            \"code\": \"weaviate\",\n            \"name\": \"Weaviate\"\n        },\n    }",
        "detail": "apps.core.vector_operations.intra_context_memory.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DEFAULT_GENERATIVE_SEARCH_MODEL",
        "kind": 5,
        "importPath": "apps.core.vector_operations.intra_context_memory.utils.constant_utils",
        "description": "apps.core.vector_operations.intra_context_memory.utils.constant_utils",
        "peekOfCode": "DEFAULT_GENERATIVE_SEARCH_MODEL = \"gpt-4\"\nKNOWLEDGE_BASE_PROVIDERS = {\n        \"WEAVIATE\": {\n            \"code\": \"weaviate\",\n            \"name\": \"Weaviate\"\n        },\n    }",
        "detail": "apps.core.vector_operations.intra_context_memory.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "KNOWLEDGE_BASE_PROVIDERS",
        "kind": 5,
        "importPath": "apps.core.vector_operations.intra_context_memory.utils.constant_utils",
        "description": "apps.core.vector_operations.intra_context_memory.utils.constant_utils",
        "peekOfCode": "KNOWLEDGE_BASE_PROVIDERS = {\n        \"WEAVIATE\": {\n            \"code\": \"weaviate\",\n            \"name\": \"Weaviate\"\n        },\n    }",
        "detail": "apps.core.vector_operations.intra_context_memory.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "document_loader",
        "kind": 2,
        "importPath": "apps.core.vector_operations.intra_context_memory.utils.function_utils",
        "description": "apps.core.vector_operations.intra_context_memory.utils.function_utils",
        "peekOfCode": "def document_loader(self, file_path, file_type):\n    d = None\n    if file_type == SupportedDocumentTypesNames.PDF:\n        d = load_pdf_content(path=file_path)\n    elif file_type == SupportedDocumentTypesNames.HTML:\n        d = load_html_content(path=file_path)\n    elif file_type == SupportedDocumentTypesNames.CSV:\n        d = load_csv_content(uri=file_path)\n    elif file_type == SupportedDocumentTypesNames.DOCX:\n        d = load_docx_content(path=file_path)",
        "detail": "apps.core.vector_operations.intra_context_memory.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "IntraContextMemoryExecutor",
        "kind": 6,
        "importPath": "apps.core.vector_operations.intra_context_memory.memory_executor",
        "description": "apps.core.vector_operations.intra_context_memory.memory_executor",
        "peekOfCode": "class IntraContextMemoryExecutor:\n    def __init__(self, connection):\n        self.connection_object = connection\n        self.client = None\n    def connect_c(self):\n        try:\n            c = weaviate.connect_to_weaviate_cloud(\n                cluster_url=WEAVIATE_CLUSTER_URL,\n                auth_credentials=weaviate.auth.AuthApiKey(api_key=WEAVIATE_API_KEY),\n                headers={\"X-OpenAI-Api-Key\": self.connection_object.vectorizer_api_key},",
        "detail": "apps.core.vector_operations.intra_context_memory.memory_executor",
        "documentation": {}
    },
    {
        "label": "fixture_knowledge_base_init",
        "kind": 2,
        "importPath": "apps.core.vector_operations.tests.conftest",
        "description": "apps.core.vector_operations.tests.conftest",
        "peekOfCode": "def fixture_knowledge_base_init():\n    return True",
        "detail": "apps.core.vector_operations.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_knowledge_base_test_services",
        "kind": 2,
        "importPath": "apps.core.vector_operations.tests.test_services",
        "description": "apps.core.vector_operations.tests.test_services",
        "peekOfCode": "def test_init_knowledge_base_test_services():\n    assert True\ndef test_init_context_memory_test_services():\n    assert True",
        "detail": "apps.core.vector_operations.tests.test_services",
        "documentation": {}
    },
    {
        "label": "test_init_context_memory_test_services",
        "kind": 2,
        "importPath": "apps.core.vector_operations.tests.test_services",
        "description": "apps.core.vector_operations.tests.test_services",
        "peekOfCode": "def test_init_context_memory_test_services():\n    assert True",
        "detail": "apps.core.vector_operations.tests.test_services",
        "documentation": {}
    },
    {
        "label": "create_weaviate_classes_handler",
        "kind": 2,
        "importPath": "apps.core.vector_operations.vector_document.handler_methods.creation_handler",
        "description": "apps.core.vector_operations.vector_document.handler_methods.creation_handler",
        "peekOfCode": "def create_weaviate_classes_handler(executor):\n    output = {\"status\": True, \"error\": \"\"}\n    connection = executor.connection_object\n    c = executor.connect_c()\n    try:\n        _ = c.collections.create(\n            name=connection.class_name,\n            vectorizer_config=executor.decode_vectorizer(connection.vectorizer),\n            generative_config=wvc.config.Configure.Generative.openai(\n                model=DEFAULT_GENERATIVE_SEARCH_MODEL, temperature=connection.assistant.llm_model.temperature,",
        "detail": "apps.core.vector_operations.vector_document.handler_methods.creation_handler",
        "documentation": {}
    },
    {
        "label": "create_intra_context_history_classes_helper",
        "kind": 2,
        "importPath": "apps.core.vector_operations.vector_document.handler_methods.creation_handler",
        "description": "apps.core.vector_operations.vector_document.handler_methods.creation_handler",
        "peekOfCode": "def create_intra_context_history_classes_helper(executor):\n    output = {\"status\": True, \"error\": \"\"}\n    connection = executor.connection_object\n    c = executor.connect_c()\n    try:\n        _ = c.collections.create(\n            name=connection.class_name,\n            vectorizer_config=executor.decode_vectorizer(connection.vectorizer),\n            generative_config=wvc.config.Configure.Generative.openai(\n                model=DEFAULT_GENERATIVE_SEARCH_MODEL, temperature=connection.assistant.llm_model.temperature,",
        "detail": "apps.core.vector_operations.vector_document.handler_methods.creation_handler",
        "documentation": {}
    },
    {
        "label": "factory_chunk_orm_build",
        "kind": 2,
        "importPath": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_chunk",
        "description": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_chunk",
        "peekOfCode": "def factory_chunk_orm_build(chunk: dict,\n                            knowledge_base,\n                            document_id: int,\n                            document_uuid: str,\n                            path: str,\n                            chunk_index: int):\n    from apps.datasource_knowledge_base.models import KnowledgeBaseDocumentChunk\n    from apps.datasource_knowledge_base.models import KnowledgeBaseDocument\n    _id, error = None, None\n    try:",
        "detail": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_chunk",
        "documentation": {}
    },
    {
        "label": "factory_intra_context_memory_chunk_orm_build",
        "kind": 2,
        "importPath": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_chunk",
        "description": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_chunk",
        "peekOfCode": "def factory_intra_context_memory_chunk_orm_build(chunk: str, knowledge_base, memory_id: int, memory_uuid: str,\n                                                 chunk_index: int):\n    from apps.datasource_knowledge_base.models import ContextHistoryMemoryChunk\n    from apps.datasource_knowledge_base.models import ContextHistoryMemory\n    _id, error = None, None\n    try:\n        vector_store = knowledge_base\n        memory_instance = ContextHistoryMemory.objects.filter(id=memory_id).first()\n        intra_context_memory_uuid = memory_uuid\n        chunk_orm_object = ContextHistoryMemoryChunk.objects.create(",
        "detail": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_chunk",
        "documentation": {}
    },
    {
        "label": "factory_chunk_weaviate_build",
        "kind": 2,
        "importPath": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_chunk",
        "description": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_chunk",
        "peekOfCode": "def factory_chunk_weaviate_build(chunk: dict, path: str,\n                                 chunk_index: int,\n                                 document_uuid: str):\n    weaviate_object_instance_chunk, error = None, None\n    try:\n        weaviate_chunk_doc_file_name = str(path)\n        weaviate_chunk_doc_type = path.split(\".\")[-1]\n        weaviate_chunk_no = chunk_index\n        weaviate_chunk_ingredient = chunk[\"page_content\"]\n        weaviate_chunk_metadata = json.dumps(chunk[\"metadata\"], default=str, sort_keys=True)",
        "detail": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_chunk",
        "documentation": {}
    },
    {
        "label": "factory_intra_context_memory_chunk_weaviate_build",
        "kind": 2,
        "importPath": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_chunk",
        "description": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_chunk",
        "peekOfCode": "def factory_intra_context_memory_chunk_weaviate_build(memory, chunk: str, chunk_index: int, memory_uuid: str):\n    weaviate_memory_instance_chunk, error = None, None\n    try:\n        weaviate_chunk_no = chunk_index\n        weaviate_chunk_igredient = chunk\n        weaviate_chunk_created_at = datetime.datetime.now(datetime.UTC).strftime(\"%Y-%m-%dT%H:%M:%S.%fZ\")\n        weaviate_memory_instance_chunk = {\n            \"memory_uuid\": memory_uuid, \"memory_name\": memory.memory_name, \"chunk_number\": weaviate_chunk_no,\n            \"chunk_content\": weaviate_chunk_igredient, \"created_at\": weaviate_chunk_created_at\n        }",
        "detail": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_chunk",
        "documentation": {}
    },
    {
        "label": "factory_embed_document_chunk_synchronized",
        "kind": 2,
        "importPath": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_chunk",
        "description": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_chunk",
        "peekOfCode": "def factory_embed_document_chunk_synchronized(executor_params, chunk_id, chunk_weaviate_object: dict):\n    from apps.core.vector_operations.vector_document.vector_store_decoder import KnowledgeBaseSystemDecoder\n    from apps.datasource_knowledge_base.models import (DocumentKnowledgeBaseConnection, KnowledgeBaseDocumentChunk)\n    c_id = executor_params[\"connection_id\"]\n    c_orm = DocumentKnowledgeBaseConnection.objects.get(id=c_id)\n    x = KnowledgeBaseSystemDecoder.get(connection=c_orm)\n    c = x.connect_c()\n    if not c:\n        pass\n    pass",
        "detail": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_chunk",
        "documentation": {}
    },
    {
        "label": "factory_embed_memory_chunk_synchronized",
        "kind": 2,
        "importPath": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_chunk",
        "description": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_chunk",
        "peekOfCode": "def factory_embed_memory_chunk_synchronized(executor_params, chunk_id, chunk_weaviate_object: dict):\n    from apps.datasource_knowledge_base.models import ContextHistoryKnowledgeBaseConnection, ContextHistoryMemoryChunk\n    from apps.core.vector_operations.intra_context_memory.memory_executor import IntraContextMemoryExecutor\n    c_id = executor_params[\"connection_id\"]\n    c_orm = ContextHistoryKnowledgeBaseConnection.objects.get(id=c_id)\n    x = IntraContextMemoryExecutor(connection=c_orm)\n    c = x.connect_c()\n    if not c:\n        pass\n    pass",
        "detail": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_chunk",
        "documentation": {}
    },
    {
        "label": "factory_embed_document_chunks_handler",
        "kind": 2,
        "importPath": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_chunk",
        "description": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_chunk",
        "peekOfCode": "def factory_embed_document_chunks_handler(executor_params, chunks: list, path: str, document_id: int,\n                                          document_uuid: str):\n    from apps.datasource_knowledge_base.models import DocumentKnowledgeBaseConnection\n    from apps.datasource_knowledge_base.tasks import add_vector_store_doc_loaded_log\n    errors = []\n    c_id = executor_params[\"connection_id\"]\n    c_orm = DocumentKnowledgeBaseConnection.objects.get(id=c_id)\n    try:\n        for i, ch in enumerate(chunks):\n            ch_id, error = factory_chunk_orm_build(",
        "detail": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_chunk",
        "documentation": {}
    },
    {
        "label": "factory_embed_memory_chunks_handler",
        "kind": 2,
        "importPath": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_chunk",
        "description": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_chunk",
        "peekOfCode": "def factory_embed_memory_chunks_handler(executor_params, chunks: list, memory_id: int, memory_uuid: str):\n    from apps.datasource_knowledge_base.models import ContextHistoryKnowledgeBaseConnection\n    from apps.datasource_knowledge_base.models import ContextHistoryMemory\n    errors = []\n    c_id = executor_params[\"connection_id\"]\n    c_orm = ContextHistoryKnowledgeBaseConnection.objects.get(id=c_id)\n    memory = ContextHistoryMemory.objects.filter(id=memory_id).first()\n    try:\n        for i, ch in enumerate(chunks):\n            ch_id, error = factory_intra_context_memory_chunk_orm_build(",
        "detail": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_chunk",
        "documentation": {}
    },
    {
        "label": "build_document_orm_structure",
        "kind": 2,
        "importPath": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_document",
        "description": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_document",
        "peekOfCode": "def build_document_orm_structure(document: dict, knowledge_base, path: str):\n    from apps.datasource_knowledge_base.models import KnowledgeBaseDocument\n    id, error = None, None\n    try:\n        doc_knowledge_base = knowledge_base\n        doc_file_type = path.split(\".\")[-1]\n        doc_file_name = path.split(\"/\")[-1]\n        doc_document_uri = path\n        doc_description = \"\"  # empty for now\n        doc_document_content_temporary = \"\"  # empty for now",
        "detail": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_document",
        "documentation": {}
    },
    {
        "label": "build_memory_orm_structure",
        "kind": 2,
        "importPath": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_document",
        "description": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_document",
        "peekOfCode": "def build_memory_orm_structure(memory_name: str, knowledge_base):\n    from apps.datasource_knowledge_base.models import ContextHistoryMemory\n    id, error = None, None\n    try:\n        memory_orm_object = ContextHistoryMemory.objects.create(\n            context_history_base=knowledge_base,\n            memory_name=memory_name\n        )\n        memory_orm_object.save()\n        id = memory_orm_object.id",
        "detail": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_document",
        "documentation": {}
    },
    {
        "label": "build_document_weaviate_structure",
        "kind": 2,
        "importPath": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_document",
        "description": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_document",
        "peekOfCode": "def build_document_weaviate_structure(document: dict, path: str,\n                                      number_of_chunks: int):\n    document_weaviate_object, error = None, None\n    try:\n        weav_document_file_name = path.split(\"/\")[-1]\n        weav_document_description = \"\"  # empty for now\n        weav_document_type = path.split(\".\")[-1]\n        weav_document_metadata = json.dumps(document[\"metadata\"], default=str, sort_keys=True)\n        weave_document_number_of_chunks = number_of_chunks\n        weave_document_created_at = \"\"  # empty for now",
        "detail": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_document",
        "documentation": {}
    },
    {
        "label": "build_memory_weaviate_structure",
        "kind": 2,
        "importPath": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_document",
        "description": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_document",
        "peekOfCode": "def build_memory_weaviate_structure(memory_name: str, number_of_chunks: int):\n    memory_weaviate_object, error = None, None\n    try:\n        weave_memory_name = memory_name\n        weave_memory_created_at = \"\"  # empty for now\n        memory_weaviate_object = {\n            \"memory_name\": weave_memory_name,\n            \"created_at\": weave_memory_created_at,\n            \"number_of_chunks\": number_of_chunks\n        }",
        "detail": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_document",
        "documentation": {}
    },
    {
        "label": "embed_document_sync",
        "kind": 2,
        "importPath": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_document",
        "description": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_document",
        "peekOfCode": "def embed_document_sync(executor_params, document_id, document_weaviate_object: dict, path: str):\n    from apps.core.vector_operations.vector_document.vector_store_decoder import KnowledgeBaseSystemDecoder\n    from apps.datasource_knowledge_base.models import (DocumentKnowledgeBaseConnection, KnowledgeBaseDocument)\n    from apps.datasource_knowledge_base.tasks import add_vector_store_doc_loaded_log\n    connection_id = executor_params[\"connection_id\"]\n    connection_orm_object = DocumentKnowledgeBaseConnection.objects.get(id=connection_id)\n    executor = KnowledgeBaseSystemDecoder.get(connection=connection_orm_object)\n    c = executor.connect_c()\n    if not c:\n        print(f\"[document_embedder.embed_document_sync] Error while connecting to Weaviate\")",
        "detail": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_document",
        "documentation": {}
    },
    {
        "label": "embed_memory_sync",
        "kind": 2,
        "importPath": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_document",
        "description": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_document",
        "peekOfCode": "def embed_memory_sync(executor_params, memory_id, memory_weaviate_object: dict):\n    from apps.datasource_knowledge_base.models import (ContextHistoryKnowledgeBaseConnection, ContextHistoryMemory)\n    from apps.core.vector_operations.intra_context_memory.memory_executor import IntraContextMemoryExecutor\n    connection_id = executor_params[\"connection_id\"]\n    connection_orm_object = ContextHistoryKnowledgeBaseConnection.objects.get(id=connection_id)\n    executor = IntraContextMemoryExecutor(connection=connection_orm_object)\n    c = executor.connect_c()\n    if not c:\n        print(f\"[document_embedder.embed_memory_sync]: Error while connecting to Weaviate\")\n    error, uuid = None, None",
        "detail": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_document",
        "documentation": {}
    },
    {
        "label": "embed_document_helper",
        "kind": 2,
        "importPath": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_document",
        "description": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_document",
        "peekOfCode": "def embed_document_helper(executor_params: dict, document: dict, path: str, number_of_chunks: int):\n    from apps.datasource_knowledge_base.models import DocumentKnowledgeBaseConnection\n    document_id, document_uuid = None, None\n    connection_id = executor_params[\"connection_id\"]\n    connection_orm_object = DocumentKnowledgeBaseConnection.objects.get(id=connection_id)\n    try:\n        document_id, error = build_document_orm_structure(\n            knowledge_base=connection_orm_object,\n            document=document,\n            path=path",
        "detail": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_document",
        "documentation": {}
    },
    {
        "label": "embed_memory_helper",
        "kind": 2,
        "importPath": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_document",
        "description": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_document",
        "peekOfCode": "def embed_memory_helper(executor_params: dict, number_of_chunks: int):\n    from apps.datasource_knowledge_base.models import ContextHistoryKnowledgeBaseConnection\n    memory_id, memory_uuid = None, None\n    connection_id = executor_params[\"connection_id\"]\n    connection_orm_object = ContextHistoryKnowledgeBaseConnection.objects.get(id=connection_id)\n    from apps.datasource_knowledge_base.utils import build_random_alphanumeric_string\n    memory_name = build_random_alphanumeric_string(numeric_component=False)\n    print(f\"[document_embedder.embed_memory_helper] Memory name: {memory_name}\")\n    try:\n        memory_id, error = build_memory_orm_structure(",
        "detail": "apps.core.vector_operations.vector_document.handler_methods.embedding_handler_document",
        "documentation": {}
    },
    {
        "label": "delete_weaviate_class_handler",
        "kind": 2,
        "importPath": "apps.core.vector_operations.vector_document.handler_methods.removal_handler_context_memory",
        "description": "apps.core.vector_operations.vector_document.handler_methods.removal_handler_context_memory",
        "peekOfCode": "def delete_weaviate_class_handler(executor, class_name):\n    c = executor.connect_c()\n    output = {\"status\": True, \"error\": \"\"}\n    try:\n        _ = c.collections.delete(class_name)\n        _ = c.collections.delete(f\"{class_name}Chunks\")\n    except Exception as e:\n        output[\"status\"] = False\n        output[\"error\"] = f\"Error removing classes: {e}\"\n    return output",
        "detail": "apps.core.vector_operations.vector_document.handler_methods.removal_handler_context_memory",
        "documentation": {}
    },
    {
        "label": "delete_intra_context_history_class_helper",
        "kind": 2,
        "importPath": "apps.core.vector_operations.vector_document.handler_methods.removal_handler_context_memory",
        "description": "apps.core.vector_operations.vector_document.handler_methods.removal_handler_context_memory",
        "peekOfCode": "def delete_intra_context_history_class_helper(executor, class_name):\n    c = executor.connect_c()\n    output = {\"status\": True, \"error\": \"\"}\n    try:\n        _ = c.collections.delete(class_name)\n        _ = c.collections.delete(f\"{class_name}Chunks\")\n    except Exception as e:\n        output[\"status\"] = False\n        output[\"error\"] = f\"Error deleting chat history classes: {e}\"\n    return output",
        "detail": "apps.core.vector_operations.vector_document.handler_methods.removal_handler_context_memory",
        "documentation": {}
    },
    {
        "label": "delete_document_helper",
        "kind": 2,
        "importPath": "apps.core.vector_operations.vector_document.handler_methods.removal_handler_document",
        "description": "apps.core.vector_operations.vector_document.handler_methods.removal_handler_document",
        "peekOfCode": "def delete_document_helper(executor, class_name: str, document_uuid):\n    c = executor.connect_c()\n    output = {\"status\": True, \"error\": \"\"}\n    try:\n        # Delete the document\n        _ = c.collections.get(class_name).data.delete_by_id(document_uuid)\n        # Delete the chunks of document\n        _ = c.collections.get(f\"{class_name}Chunks\").data.delete_many(\n            where=Filter.by_property(\"document_uuid\").equal(document_uuid)\n        )",
        "detail": "apps.core.vector_operations.vector_document.handler_methods.removal_handler_document",
        "documentation": {}
    },
    {
        "label": "delete_chat_history_document_helper",
        "kind": 2,
        "importPath": "apps.core.vector_operations.vector_document.handler_methods.removal_handler_document",
        "description": "apps.core.vector_operations.vector_document.handler_methods.removal_handler_document",
        "peekOfCode": "def delete_chat_history_document_helper(executor, class_name: str, document_uuid):\n    c = executor.connect_c()\n    output = {\"status\": True, \"error\": \"\"}\n    try:\n        # Delete the document\n        _ = c.collections.get(class_name).data.delete_by_id(document_uuid)\n        # Delete the chunks of the document\n        _ = c.collections.get(f\"{class_name}Chunks\").data.delete_many(\n            where=Filter.by_property(\"document_uuid\").equal(document_uuid)\n        )",
        "detail": "apps.core.vector_operations.vector_document.handler_methods.removal_handler_document",
        "documentation": {}
    },
    {
        "label": "SupportedDocumentTypesNames",
        "kind": 6,
        "importPath": "apps.core.vector_operations.vector_document.utils.constant_utils",
        "description": "apps.core.vector_operations.vector_document.utils.constant_utils",
        "peekOfCode": "class SupportedDocumentTypesNames:\n    PDF = 'pdf'\n    HTML = 'html'\n    CSV = 'csv'\n    DOCX = 'docx'\n    IPYNB = 'ipynb'\n    JSON = 'json'\n    XML = 'xml'\n    TXT = 'txt'\n    MD = 'md'",
        "detail": "apps.core.vector_operations.vector_document.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "WEAVIATE_INITIALIZATION_TIMEOUT",
        "kind": 5,
        "importPath": "apps.core.vector_operations.vector_document.utils.constant_utils",
        "description": "apps.core.vector_operations.vector_document.utils.constant_utils",
        "peekOfCode": "WEAVIATE_INITIALIZATION_TIMEOUT = 60\nWEAVIATE_QUERY_TIMEOUT = 120\nWEAVIATE_INSERT_TIMEOUT = 240\nclass SupportedDocumentTypesNames:\n    PDF = 'pdf'\n    HTML = 'html'\n    CSV = 'csv'\n    DOCX = 'docx'\n    IPYNB = 'ipynb'\n    JSON = 'json'",
        "detail": "apps.core.vector_operations.vector_document.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "WEAVIATE_QUERY_TIMEOUT",
        "kind": 5,
        "importPath": "apps.core.vector_operations.vector_document.utils.constant_utils",
        "description": "apps.core.vector_operations.vector_document.utils.constant_utils",
        "peekOfCode": "WEAVIATE_QUERY_TIMEOUT = 120\nWEAVIATE_INSERT_TIMEOUT = 240\nclass SupportedDocumentTypesNames:\n    PDF = 'pdf'\n    HTML = 'html'\n    CSV = 'csv'\n    DOCX = 'docx'\n    IPYNB = 'ipynb'\n    JSON = 'json'\n    XML = 'xml'",
        "detail": "apps.core.vector_operations.vector_document.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "WEAVIATE_INSERT_TIMEOUT",
        "kind": 5,
        "importPath": "apps.core.vector_operations.vector_document.utils.constant_utils",
        "description": "apps.core.vector_operations.vector_document.utils.constant_utils",
        "peekOfCode": "WEAVIATE_INSERT_TIMEOUT = 240\nclass SupportedDocumentTypesNames:\n    PDF = 'pdf'\n    HTML = 'html'\n    CSV = 'csv'\n    DOCX = 'docx'\n    IPYNB = 'ipynb'\n    JSON = 'json'\n    XML = 'xml'\n    TXT = 'txt'",
        "detail": "apps.core.vector_operations.vector_document.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "VECTOR_STORE_DOCUMENT_WEAVIATE_FIELDS_CONFIG",
        "kind": 5,
        "importPath": "apps.core.vector_operations.vector_document.utils.constant_utils",
        "description": "apps.core.vector_operations.vector_document.utils.constant_utils",
        "peekOfCode": "VECTOR_STORE_DOCUMENT_WEAVIATE_FIELDS_CONFIG = [\n    wvc.config.Property(\n        name=\"document_file_name\",\n        data_type=wvc.config.DataType.TEXT,\n        vectorize_property_name=True,\n        tokenization=wvc.config.Tokenization.LOWERCASE\n    ),\n    wvc.config.Property(\n        name=\"document_description\",\n        data_type=wvc.config.DataType.TEXT,",
        "detail": "apps.core.vector_operations.vector_document.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "VECTOR_STORE_DOCUMENT_CHUNK_WEAVIATE_FIELDS_CONFIG",
        "kind": 5,
        "importPath": "apps.core.vector_operations.vector_document.utils.constant_utils",
        "description": "apps.core.vector_operations.vector_document.utils.constant_utils",
        "peekOfCode": "VECTOR_STORE_DOCUMENT_CHUNK_WEAVIATE_FIELDS_CONFIG = [\n    wvc.config.Property(\n        name=\"chunk_document_file_name\",\n        data_type=wvc.config.DataType.TEXT,\n        vectorize_property_name=True,\n        tokenization=wvc.config.Tokenization.LOWERCASE\n    ),\n    wvc.config.Property(\n        name=\"chunk_document_type\",\n        data_type=wvc.config.DataType.TEXT,",
        "detail": "apps.core.vector_operations.vector_document.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CONTEXT_MEMORY_OBJECT_WEAVIATE_FIELDS_CONFIG",
        "kind": 5,
        "importPath": "apps.core.vector_operations.vector_document.utils.constant_utils",
        "description": "apps.core.vector_operations.vector_document.utils.constant_utils",
        "peekOfCode": "CONTEXT_MEMORY_OBJECT_WEAVIATE_FIELDS_CONFIG = [\n    wvc.config.Property(\n        name=\"memory_name\",\n        data_type=wvc.config.DataType.TEXT,\n        vectorize_property_name=True,\n    ),\n    wvc.config.Property(\n        name=\"number_of_chunks\",\n        data_type=wvc.config.DataType.INT,\n        vectorize_property_name=False,",
        "detail": "apps.core.vector_operations.vector_document.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CONTEXT_MEMORY_CHUNKS_WEAVIATE_FIELDS_CONFIG",
        "kind": 5,
        "importPath": "apps.core.vector_operations.vector_document.utils.constant_utils",
        "description": "apps.core.vector_operations.vector_document.utils.constant_utils",
        "peekOfCode": "CONTEXT_MEMORY_CHUNKS_WEAVIATE_FIELDS_CONFIG = [\n    wvc.config.Property(\n        name=\"memory_name\",\n        data_type=wvc.config.DataType.TEXT,\n        vectorize_property_name=False,\n    ),\n    wvc.config.Property(\n        name=\"chunk_number\",\n        data_type=wvc.config.DataType.INT,\n        vectorize_property_name=False,",
        "detail": "apps.core.vector_operations.vector_document.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "KnowledgeBaseSystemDecoder",
        "kind": 6,
        "importPath": "apps.core.vector_operations.vector_document.vector_store_decoder",
        "description": "apps.core.vector_operations.vector_document.vector_store_decoder",
        "peekOfCode": "class KnowledgeBaseSystemDecoder:\n    @staticmethod\n    def get(connection):\n        if connection.provider == KNOWLEDGE_BASE_PROVIDERS[\"WEAVIATE\"][\"code\"]:\n            return WeaviateExecutor(connection)",
        "detail": "apps.core.vector_operations.vector_document.vector_store_decoder",
        "documentation": {}
    },
    {
        "label": "WeaviateExecutor",
        "kind": 6,
        "importPath": "apps.core.vector_operations.vector_document.vector_store_executor",
        "description": "apps.core.vector_operations.vector_document.vector_store_executor",
        "peekOfCode": "class WeaviateExecutor:\n    def __init__(self, connection):\n        self.connection_object = connection\n        self.client = None\n    def connect_c(self):\n        try:\n            c = weaviate.connect_to_weaviate_cloud(\n                cluster_url=self.connection_object.host_url,\n                auth_credentials=weaviate.auth.AuthApiKey(api_key=self.connection_object.provider_api_key),\n                headers={\"X-OpenAI-Api-Key\": self.connection_object.vectorizer_api_key},",
        "detail": "apps.core.vector_operations.vector_document.vector_store_executor",
        "documentation": {}
    },
    {
        "label": "VideoGeneratorProviderTypesNames",
        "kind": 6,
        "importPath": "apps.core.video_generation.utils.constant_utils",
        "description": "apps.core.video_generation.utils.constant_utils",
        "peekOfCode": "class VideoGeneratorProviderTypesNames:\n    LUMA_AI = 'luma-ai'\n    @staticmethod\n    def as_list():\n        return [VideoGeneratorProviderTypesNames.LUMA_AI]\nclass VideoGeneratorFrameTypes:\n    START = \"start\"\n    END = \"end\"\n    START_AND_END = \"start_and_end\"\nclass LumaAIGenerationStates:",
        "detail": "apps.core.video_generation.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "VideoGeneratorFrameTypes",
        "kind": 6,
        "importPath": "apps.core.video_generation.utils.constant_utils",
        "description": "apps.core.video_generation.utils.constant_utils",
        "peekOfCode": "class VideoGeneratorFrameTypes:\n    START = \"start\"\n    END = \"end\"\n    START_AND_END = \"start_and_end\"\nclass LumaAIGenerationStates:\n    COMPLETED = \"completed\"\n    FAILED = \"failed\"\nVIDEO_GENERATOR_PING_INTERVAL_SECONDS = 2\nUNCLASSIFIED_FILE_EXTENSION = \".bin\"\nclass VideoGenerationActionTypes:",
        "detail": "apps.core.video_generation.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "LumaAIGenerationStates",
        "kind": 6,
        "importPath": "apps.core.video_generation.utils.constant_utils",
        "description": "apps.core.video_generation.utils.constant_utils",
        "peekOfCode": "class LumaAIGenerationStates:\n    COMPLETED = \"completed\"\n    FAILED = \"failed\"\nVIDEO_GENERATOR_PING_INTERVAL_SECONDS = 2\nUNCLASSIFIED_FILE_EXTENSION = \".bin\"\nclass VideoGenerationActionTypes:\n    TEXT_TO_VIDEO_WITH_LOOP_AND_ASPECT_RATIO = \"text_to_video_with_loop_and_aspect_ratio\"\n    TEXT_TO_VIDEO_WITH_LOOP = \"text_to_video_with_loop\"\n    TEXT_TO_VIDEO_WITH_ASPECT_RATIO = \"text_to_video_with_aspect_ratio\"\n    TEXT_TO_VIDEO = \"text_to_video\"",
        "detail": "apps.core.video_generation.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "VideoGenerationActionTypes",
        "kind": 6,
        "importPath": "apps.core.video_generation.utils.constant_utils",
        "description": "apps.core.video_generation.utils.constant_utils",
        "peekOfCode": "class VideoGenerationActionTypes:\n    TEXT_TO_VIDEO_WITH_LOOP_AND_ASPECT_RATIO = \"text_to_video_with_loop_and_aspect_ratio\"\n    TEXT_TO_VIDEO_WITH_LOOP = \"text_to_video_with_loop\"\n    TEXT_TO_VIDEO_WITH_ASPECT_RATIO = \"text_to_video_with_aspect_ratio\"\n    TEXT_TO_VIDEO = \"text_to_video\"\n    TEXT_AND_IMAGE_TO_VIDEO_WITH_LOOP_AND_WITH_START_FRAME = \"text_and_image_to_video_with_loop_and_with_start_frame\"\n    TEXT_AND_IMAGE_TO_VIDEO_WITH_START_FRAME = \"text_and_image_to_video_with_start_frame\"\n    TEXT_AND_IMAGE_TO_VIDEO_WITH_END_FRAME = \"text_and_image_to_video_with_end_frame\"\n    TEXT_AND_IMAGE_TO_VIDEO_WITH_START_AND_END_FRAME = \"text_and_image_to_video_with_start_and_end_frame\"\n    @staticmethod",
        "detail": "apps.core.video_generation.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "VIDEO_GENERATOR_PROVIDER_TYPES",
        "kind": 5,
        "importPath": "apps.core.video_generation.utils.constant_utils",
        "description": "apps.core.video_generation.utils.constant_utils",
        "peekOfCode": "VIDEO_GENERATOR_PROVIDER_TYPES = [\n    ('luma-ai', 'Luma AI'),\n]\nclass VideoGeneratorProviderTypesNames:\n    LUMA_AI = 'luma-ai'\n    @staticmethod\n    def as_list():\n        return [VideoGeneratorProviderTypesNames.LUMA_AI]\nclass VideoGeneratorFrameTypes:\n    START = \"start\"",
        "detail": "apps.core.video_generation.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "VIDEO_GENERATOR_PING_INTERVAL_SECONDS",
        "kind": 5,
        "importPath": "apps.core.video_generation.utils.constant_utils",
        "description": "apps.core.video_generation.utils.constant_utils",
        "peekOfCode": "VIDEO_GENERATOR_PING_INTERVAL_SECONDS = 2\nUNCLASSIFIED_FILE_EXTENSION = \".bin\"\nclass VideoGenerationActionTypes:\n    TEXT_TO_VIDEO_WITH_LOOP_AND_ASPECT_RATIO = \"text_to_video_with_loop_and_aspect_ratio\"\n    TEXT_TO_VIDEO_WITH_LOOP = \"text_to_video_with_loop\"\n    TEXT_TO_VIDEO_WITH_ASPECT_RATIO = \"text_to_video_with_aspect_ratio\"\n    TEXT_TO_VIDEO = \"text_to_video\"\n    TEXT_AND_IMAGE_TO_VIDEO_WITH_LOOP_AND_WITH_START_FRAME = \"text_and_image_to_video_with_loop_and_with_start_frame\"\n    TEXT_AND_IMAGE_TO_VIDEO_WITH_START_FRAME = \"text_and_image_to_video_with_start_frame\"\n    TEXT_AND_IMAGE_TO_VIDEO_WITH_END_FRAME = \"text_and_image_to_video_with_end_frame\"",
        "detail": "apps.core.video_generation.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "UNCLASSIFIED_FILE_EXTENSION",
        "kind": 5,
        "importPath": "apps.core.video_generation.utils.constant_utils",
        "description": "apps.core.video_generation.utils.constant_utils",
        "peekOfCode": "UNCLASSIFIED_FILE_EXTENSION = \".bin\"\nclass VideoGenerationActionTypes:\n    TEXT_TO_VIDEO_WITH_LOOP_AND_ASPECT_RATIO = \"text_to_video_with_loop_and_aspect_ratio\"\n    TEXT_TO_VIDEO_WITH_LOOP = \"text_to_video_with_loop\"\n    TEXT_TO_VIDEO_WITH_ASPECT_RATIO = \"text_to_video_with_aspect_ratio\"\n    TEXT_TO_VIDEO = \"text_to_video\"\n    TEXT_AND_IMAGE_TO_VIDEO_WITH_LOOP_AND_WITH_START_FRAME = \"text_and_image_to_video_with_loop_and_with_start_frame\"\n    TEXT_AND_IMAGE_TO_VIDEO_WITH_START_FRAME = \"text_and_image_to_video_with_start_frame\"\n    TEXT_AND_IMAGE_TO_VIDEO_WITH_END_FRAME = \"text_and_image_to_video_with_end_frame\"\n    TEXT_AND_IMAGE_TO_VIDEO_WITH_START_AND_END_FRAME = \"text_and_image_to_video_with_start_and_end_frame\"",
        "detail": "apps.core.video_generation.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "generate_save_name",
        "kind": 2,
        "importPath": "apps.core.video_generation.utils.function_utils",
        "description": "apps.core.video_generation.utils.function_utils",
        "peekOfCode": "def generate_save_name(extension):\n    try:\n        generated_uuid = str(uuid4())\n        additional_uuid = str(uuid4())\n    except Exception as e:\n        return None\n    return f\"{generated_uuid}_{additional_uuid}.{extension}\"",
        "detail": "apps.core.video_generation.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "VideoGenerationExecutor",
        "kind": 6,
        "importPath": "apps.core.video_generation.video_generation_executor",
        "description": "apps.core.video_generation.video_generation_executor",
        "peekOfCode": "class VideoGenerationExecutor:\n    def __init__(self, connection: VideoGeneratorConnection):\n        self.connection = connection\n        try:\n            self.client = LumaAI(auth_token=connection.provider_api_key)\n        except Exception as e:\n            print(\"[VideoGenerationExecutor.__init__]: There was an error while initializing the LumaAI client: \", e)\n    def _download_and_save_video(self, generation, video_url: str):\n        try:\n            tx = LLMTransaction(",
        "detail": "apps.core.video_generation.video_generation_executor",
        "documentation": {}
    },
    {
        "label": "VideoGeneratorDecoder",
        "kind": 6,
        "importPath": "apps.core.video_generation.video_generator_decoder",
        "description": "apps.core.video_generation.video_generator_decoder",
        "peekOfCode": "class VideoGeneratorDecoder:\n    @staticmethod\n    def get(connection_id: int):\n        try:\n            connection: VideoGeneratorConnection = VideoGeneratorConnection.objects.get(id=connection_id)\n        except VideoGeneratorConnection.DoesNotExist:\n            return None\n        if connection.provider == VideoGeneratorProviderTypesNames.LUMA_AI:\n            return VideoGenerationExecutor(connection=connection)",
        "detail": "apps.core.video_generation.video_generator_decoder",
        "documentation": {}
    },
    {
        "label": "DreamManager",
        "kind": 6,
        "importPath": "apps.core.visual_client.operations.dream.dream_manager",
        "description": "apps.core.visual_client.operations.dream.dream_manager",
        "peekOfCode": "class DreamManager:\n    def __init__(self, assistant, chat):\n        self.assistant = assistant\n        self.chat = chat\n    def dream_image_execution_manager(self, image_uri, image_size):\n        from apps.core.generative_ai.auxiliary_clients.auxiliary_llm_visual_client import AuxiliaryLLMVisualClient\n        from apps.core.generative_ai.utils import GPT_DEFAULT_ENCODING_ENGINE\n        from apps.core.generative_ai.utils import ChatRoles\n        try:\n            llm_c = AuxiliaryLLMVisualClient(assistant=self.assistant, chat_object=self.chat)",
        "detail": "apps.core.visual_client.operations.dream.dream_manager",
        "documentation": {}
    },
    {
        "label": "EditManager",
        "kind": 6,
        "importPath": "apps.core.visual_client.operations.edit.edit_manager",
        "description": "apps.core.visual_client.operations.edit.edit_manager",
        "peekOfCode": "class EditManager:\n    def __init__(self, assistant, chat):\n        self.assistant = assistant\n        self.chat = chat\n    def edit_image_execution_manager(self, prompt, edit_image_uri, edit_image_mask_uri, image_size):\n        from apps.core.generative_ai.auxiliary_clients.auxiliary_llm_visual_client import AuxiliaryLLMVisualClient\n        from apps.core.generative_ai.utils import GPT_DEFAULT_ENCODING_ENGINE\n        from apps.core.generative_ai.utils import ChatRoles\n        try:\n            llm_c = AuxiliaryLLMVisualClient(assistant=self.assistant, chat_object=self.chat)",
        "detail": "apps.core.visual_client.operations.edit.edit_manager",
        "documentation": {}
    },
    {
        "label": "GeneratorManager",
        "kind": 6,
        "importPath": "apps.core.visual_client.operations.generate.generator_manager",
        "description": "apps.core.visual_client.operations.generate.generator_manager",
        "peekOfCode": "class GeneratorManager:\n    def __init__(self, assistant, chat):\n        self.assistant = assistant\n        self.chat = chat\n    def generate_image_execution_manager(self, prompt, image_size, quality):\n        from apps.core.generative_ai.auxiliary_clients.auxiliary_llm_visual_client import AuxiliaryLLMVisualClient\n        from apps.core.generative_ai.utils import GPT_DEFAULT_ENCODING_ENGINE\n        from apps.core.generative_ai.utils import ChatRoles\n        try:\n            llm_c = AuxiliaryLLMVisualClient(",
        "detail": "apps.core.visual_client.operations.generate.generator_manager",
        "documentation": {}
    },
    {
        "label": "fixture_image_generation_init",
        "kind": 2,
        "importPath": "apps.core.visual_client.tests.conftest",
        "description": "apps.core.visual_client.tests.conftest",
        "peekOfCode": "def fixture_image_generation_init():\n    return True",
        "detail": "apps.core.visual_client.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_image_generation_test_services",
        "kind": 2,
        "importPath": "apps.core.visual_client.tests.test_services",
        "description": "apps.core.visual_client.tests.test_services",
        "peekOfCode": "def test_init_image_generation_test_services():\n    assert True\ndef test_init_image_modification_test_services():\n    assert True\ndef test_init_image_variation_test_services():\n    assert True",
        "detail": "apps.core.visual_client.tests.test_services",
        "documentation": {}
    },
    {
        "label": "test_init_image_modification_test_services",
        "kind": 2,
        "importPath": "apps.core.visual_client.tests.test_services",
        "description": "apps.core.visual_client.tests.test_services",
        "peekOfCode": "def test_init_image_modification_test_services():\n    assert True\ndef test_init_image_variation_test_services():\n    assert True",
        "detail": "apps.core.visual_client.tests.test_services",
        "documentation": {}
    },
    {
        "label": "test_init_image_variation_test_services",
        "kind": 2,
        "importPath": "apps.core.visual_client.tests.test_services",
        "description": "apps.core.visual_client.tests.test_services",
        "peekOfCode": "def test_init_image_variation_test_services():\n    assert True",
        "detail": "apps.core.visual_client.tests.test_services",
        "documentation": {}
    },
    {
        "label": "FILE_FORMAT_BIN",
        "kind": 5,
        "importPath": "apps.core.visual_client.utils.constant_utils",
        "description": "apps.core.visual_client.utils.constant_utils",
        "peekOfCode": "FILE_FORMAT_BIN = \".bin\"",
        "detail": "apps.core.visual_client.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "generator_save_images_and_return_uris",
        "kind": 2,
        "importPath": "apps.core.visual_client.utils.function_utils",
        "description": "apps.core.visual_client.utils.function_utils",
        "peekOfCode": "def generator_save_images_and_return_uris(datas):\n    uris = []\n    for data in datas:\n        try:\n            uri = generator_save_image_and_return_uri(data)\n            if uri is not None:\n                uris.append(uri)\n        except Exception as e:\n            continue\n    return uris",
        "detail": "apps.core.visual_client.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "generator_save_image_and_return_uri",
        "kind": 2,
        "importPath": "apps.core.visual_client.utils.function_utils",
        "description": "apps.core.visual_client.utils.function_utils",
        "peekOfCode": "def generator_save_image_and_return_uri(img_data):\n    estimate_format = filetype.guess(img_data)\n    if estimate_format is None:\n        estimate_format = FILE_FORMAT_BIN\n    file_format = estimate_format.extension\n    file_name = generator_generate_save_name(extension=file_format)\n    bucket_path = f\"{GENERATED_IMAGES_ROOT_MEDIA_PATH}{file_name}\"\n    uri = f\"{MEDIA_URL}{bucket_path}\"\n    try:\n        s3c = boto3.client('s3')",
        "detail": "apps.core.visual_client.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "generator_generate_save_name",
        "kind": 2,
        "importPath": "apps.core.visual_client.utils.function_utils",
        "description": "apps.core.visual_client.utils.function_utils",
        "peekOfCode": "def generator_generate_save_name(extension):\n    try:\n        uuid_1 = str(uuid4())\n        uuid_2 = str(uuid4())\n    except Exception as e:\n        return None\n    return f\"{uuid_1}_{uuid_2}.{extension}\"\ndef edit_save_images_and_return_uris(datas):\n    uris = []\n    for data in datas:",
        "detail": "apps.core.visual_client.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "edit_save_images_and_return_uris",
        "kind": 2,
        "importPath": "apps.core.visual_client.utils.function_utils",
        "description": "apps.core.visual_client.utils.function_utils",
        "peekOfCode": "def edit_save_images_and_return_uris(datas):\n    uris = []\n    for data in datas:\n        try:\n            uri = edit_save_image_and_return_uri(data)\n            if uri is not None:\n                uris.append(uri)\n        except Exception as e:\n            continue\n    return uris",
        "detail": "apps.core.visual_client.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "edit_save_image_and_return_uri",
        "kind": 2,
        "importPath": "apps.core.visual_client.utils.function_utils",
        "description": "apps.core.visual_client.utils.function_utils",
        "peekOfCode": "def edit_save_image_and_return_uri(img_data):\n    estimate_format = filetype.guess(img_data)\n    if estimate_format is None:\n        estimate_format = FILE_FORMAT_BIN\n    file_format = estimate_format.extension\n    file_name = edit_generate_save_name(extension=file_format)\n    bucket_path = f\"{GENERATED_IMAGES_ROOT_MEDIA_PATH}{file_name}\"\n    uri = f\"{MEDIA_URL}{bucket_path}\"\n    try:\n        s3c = boto3.client(\"s3\")",
        "detail": "apps.core.visual_client.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "edit_generate_save_name",
        "kind": 2,
        "importPath": "apps.core.visual_client.utils.function_utils",
        "description": "apps.core.visual_client.utils.function_utils",
        "peekOfCode": "def edit_generate_save_name(extension):\n    try:\n        uuid_1 = str(uuid4())\n        uuid_2 = str(uuid4())\n    except Exception as e:\n        return None\n    return f\"{uuid_1}_{uuid_2}.{extension}\"\ndef dream_save_images_and_return_uris(datas):\n    uris = []\n    for data in datas:",
        "detail": "apps.core.visual_client.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "dream_save_images_and_return_uris",
        "kind": 2,
        "importPath": "apps.core.visual_client.utils.function_utils",
        "description": "apps.core.visual_client.utils.function_utils",
        "peekOfCode": "def dream_save_images_and_return_uris(datas):\n    uris = []\n    for data in datas:\n        try:\n            uri = dream_save_image_and_return_uri(data)\n            if uri is not None:\n                uris.append(uri)\n        except Exception as e:\n            return None\n    return uris",
        "detail": "apps.core.visual_client.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "dream_save_image_and_return_uri",
        "kind": 2,
        "importPath": "apps.core.visual_client.utils.function_utils",
        "description": "apps.core.visual_client.utils.function_utils",
        "peekOfCode": "def dream_save_image_and_return_uri(img_data):\n    estimate_format = filetype.guess(img_data)\n    if estimate_format is None:\n        estimate_format = FILE_FORMAT_BIN\n    file_format = estimate_format.extension\n    file_name = dream_generate_save_name(extension=file_format)\n    bucket_path = f\"{GENERATED_IMAGES_ROOT_MEDIA_PATH}{file_name}\"\n    uri = f\"{MEDIA_URL}{bucket_path}\"\n    try:\n        s3c = boto3.client('s3')",
        "detail": "apps.core.visual_client.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "dream_generate_save_name",
        "kind": 2,
        "importPath": "apps.core.visual_client.utils.function_utils",
        "description": "apps.core.visual_client.utils.function_utils",
        "peekOfCode": "def dream_generate_save_name(extension):\n    try:\n        uuid_1 = str(uuid4())\n        uuid_2 = str(uuid4())\n    except Exception as e:\n        return None\n    return f\"{uuid_1}_{uuid_2}.{extension}\"",
        "detail": "apps.core.visual_client.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "AuxiliaryAnalyzeCodeManager",
        "kind": 6,
        "importPath": "apps.dashboard.auxiliary_calculators.auxiliary_analyze_code_manager",
        "description": "apps.dashboard.auxiliary_calculators.auxiliary_analyze_code_manager",
        "peekOfCode": "class AuxiliaryAnalyzeCodeManager:\n    @staticmethod\n    def calculate_total_document_interpretations_per_assistants(agents, txs, n_days):\n        result = {}\n        for a in agents:\n            txs = txs.filter(\n                responsible_assistant=a, created_at__gte=timezone.now() - timezone.timedelta(days=n_days)\n            )\n            total = 0\n            for tx in txs:",
        "detail": "apps.dashboard.auxiliary_calculators.auxiliary_analyze_code_manager",
        "documentation": {}
    },
    {
        "label": "AuxiliaryAPICallsManager",
        "kind": 6,
        "importPath": "apps.dashboard.auxiliary_calculators.auxiliary_api_calls_manager",
        "description": "apps.dashboard.auxiliary_calculators.auxiliary_api_calls_manager",
        "peekOfCode": "class AuxiliaryAPICallsManager:\n    @staticmethod\n    def calculate_total_internal_api_calls_per_assistants(agents, txs, n_days):\n        result = {}\n        for a in agents:\n            txs = txs.filter(\n                responsible_assistant=a, created_at__gte=timezone.now() - timezone.timedelta(days=n_days)\n            )\n            total = 0\n            for tx in txs:",
        "detail": "apps.dashboard.auxiliary_calculators.auxiliary_api_calls_manager",
        "documentation": {}
    },
    {
        "label": "AuxiliaryCalculateMLManager",
        "kind": 6,
        "importPath": "apps.dashboard.auxiliary_calculators.auxiliary_calculate_ml_manager",
        "description": "apps.dashboard.auxiliary_calculators.auxiliary_calculate_ml_manager",
        "peekOfCode": "class AuxiliaryCalculateMLManager:\n    @staticmethod\n    def calculate_total_ml_predictions_per_assistants(agents, txs, n_days):\n        result = {}\n        for a in agents:\n            txs = txs.filter(\n                responsible_assistant=a,\n                created_at__gte=timezone.now() - timezone.timedelta(days=n_days)\n            )\n            total = 0",
        "detail": "apps.dashboard.auxiliary_calculators.auxiliary_calculate_ml_manager",
        "documentation": {}
    },
    {
        "label": "AuxiliaryCostsManager",
        "kind": 6,
        "importPath": "apps.dashboard.auxiliary_calculators.auxiliary_costs_manager",
        "description": "apps.dashboard.auxiliary_calculators.auxiliary_costs_manager",
        "peekOfCode": "class AuxiliaryCostsManager:\n    @staticmethod\n    def calculate_costs_per_organizations(orgs, txs, n_days):\n        result = {}\n        for org in orgs:\n            txs = txs.filter(\n                organization=org, created_at__gte=timezone.now() - timezone.timedelta(days=n_days)\n            )\n            total = 0\n            for tx in txs:",
        "detail": "apps.dashboard.auxiliary_calculators.auxiliary_costs_manager",
        "documentation": {}
    },
    {
        "label": "AuxiliaryFunctionCallsManager",
        "kind": 6,
        "importPath": "apps.dashboard.auxiliary_calculators.auxiliary_function_calls_manager",
        "description": "apps.dashboard.auxiliary_calculators.auxiliary_function_calls_manager",
        "peekOfCode": "class AuxiliaryFunctionCallsManager:\n    @staticmethod\n    def calculate_total_internal_function_calls_per_assistants(agents, txs, n_days):\n        result = {}\n        for a in agents:\n            txs = txs.filter(\n                responsible_assistant=a, created_at__gte=timezone.now() - timezone.timedelta(days=n_days)\n            )\n            total = 0\n            for tx in txs:",
        "detail": "apps.dashboard.auxiliary_calculators.auxiliary_function_calls_manager",
        "documentation": {}
    },
    {
        "label": "AuxiliaryInformationFeedsManager",
        "kind": 6,
        "importPath": "apps.dashboard.auxiliary_calculators.auxiliary_information_feeds_manager",
        "description": "apps.dashboard.auxiliary_calculators.auxiliary_information_feeds_manager",
        "peekOfCode": "class AuxiliaryInformationFeedsManager:\n    @staticmethod\n    def calculate_total_sql_read_queries_per_assistants(agents, txs, n_days):\n        result = {}\n        for a in agents:\n            txs = txs.filter(\n                responsible_assistant=a, created_at__gte=timezone.now() - timezone.timedelta(days=n_days)\n            )\n            total = 0\n            for tx in txs:",
        "detail": "apps.dashboard.auxiliary_calculators.auxiliary_information_feeds_manager",
        "documentation": {}
    },
    {
        "label": "AuxiliaryInteractionsManager",
        "kind": 6,
        "importPath": "apps.dashboard.auxiliary_calculators.auxiliary_interactions_manager",
        "description": "apps.dashboard.auxiliary_calculators.auxiliary_interactions_manager",
        "peekOfCode": "class AuxiliaryInteractionsManager:\n    @staticmethod\n    def calculate_total_chats_per_organizations(orgs, n_days):\n        result = {}\n        for org in orgs:\n            chats = ChatCreationLog.objects.filter(\n                organization=org, created_at__gte=timezone.now() - timezone.timedelta(days=n_days)\n            )\n            total = chats.count()\n            if total > 0:",
        "detail": "apps.dashboard.auxiliary_calculators.auxiliary_interactions_manager",
        "documentation": {}
    },
    {
        "label": "AuxiliaryMediaManager",
        "kind": 6,
        "importPath": "apps.dashboard.auxiliary_calculators.auxiliary_media_manager",
        "description": "apps.dashboard.auxiliary_calculators.auxiliary_media_manager",
        "peekOfCode": "class AuxiliaryMediaManager:\n    @staticmethod\n    def calculate_total_file_downloads_per_assistants(agents, txs, n_days):\n        result = {}\n        for a in agents:\n            txs = txs.filter(\n                responsible_assistant=a, created_at__gte=timezone.now() - timezone.timedelta(days=n_days)\n            )\n            total = 0\n            for tx in txs:",
        "detail": "apps.dashboard.auxiliary_calculators.auxiliary_media_manager",
        "documentation": {}
    },
    {
        "label": "AuxiliaryMemoryManager",
        "kind": 6,
        "importPath": "apps.dashboard.auxiliary_calculators.auxiliary_memory_manager",
        "description": "apps.dashboard.auxiliary_calculators.auxiliary_memory_manager",
        "peekOfCode": "class AuxiliaryMemoryManager:\n    @staticmethod\n    def calculate_total_memory_saves_per_assistants(agents, txs, n_days):\n        result = {}\n        for a in agents:\n            txs = txs.filter(\n                responsible_assistant=a, created_at__gte=timezone.now() - timezone.timedelta(days=n_days)\n            )\n            total = 0\n            for tx in txs:",
        "detail": "apps.dashboard.auxiliary_calculators.auxiliary_memory_manager",
        "documentation": {}
    },
    {
        "label": "AuxiliaryOrganizationUsersManager",
        "kind": 6,
        "importPath": "apps.dashboard.auxiliary_calculators.auxiliary_organization_users_manager",
        "description": "apps.dashboard.auxiliary_calculators.auxiliary_organization_users_manager",
        "peekOfCode": "class AuxiliaryOrganizationUsersManager:\n    @staticmethod\n    def calculate_total_users_per_organizations(orgs):\n        org_users = {}\n        for org in orgs:\n            org_users[org.name] = org.users.count()\n        return org_users\n    @staticmethod\n    def calculate_latest_registered_users_per_organizations(orgs, n_days):\n        org_users = {}",
        "detail": "apps.dashboard.auxiliary_calculators.auxiliary_organization_users_manager",
        "documentation": {}
    },
    {
        "label": "AuxiliaryScriptCallsManager",
        "kind": 6,
        "importPath": "apps.dashboard.auxiliary_calculators.auxiliary_script_calls_manager",
        "description": "apps.dashboard.auxiliary_calculators.auxiliary_script_calls_manager",
        "peekOfCode": "class AuxiliaryScriptCallsManager:\n    @staticmethod\n    def calculate_total_script_calls_per_assistants(agents, txs, n_days):\n        result = {}\n        for a in agents:\n            txs = txs.filter(\n                responsible_assistant=a,\n                created_at__gte=timezone.now() - timezone.timedelta(days=n_days)\n            )\n            total = 0",
        "detail": "apps.dashboard.auxiliary_calculators.auxiliary_script_calls_manager",
        "documentation": {}
    },
    {
        "label": "AuxiliaryTasksManager",
        "kind": 6,
        "importPath": "apps.dashboard.auxiliary_calculators.auxiliary_tasks_manager",
        "description": "apps.dashboard.auxiliary_calculators.auxiliary_tasks_manager",
        "peekOfCode": "class AuxiliaryTasksManager:\n    @staticmethod\n    def calculate_total_triggered_jobs_per_assistants(agents, trg_jobs, n_days):\n        result = {}\n        for a in agents:\n            a_jobs = 0\n            for jb in trg_jobs:\n                trg_insts = TriggeredJobInstance.objects.filter(\n                    triggered_job=jb, started_at__gte=timezone.now() - timezone.timedelta(days=n_days)\n                )",
        "detail": "apps.dashboard.auxiliary_calculators.auxiliary_tasks_manager",
        "documentation": {}
    },
    {
        "label": "AuxiliaryTokensManager",
        "kind": 6,
        "importPath": "apps.dashboard.auxiliary_calculators.auxiliary_tokens_manager",
        "description": "apps.dashboard.auxiliary_calculators.auxiliary_tokens_manager",
        "peekOfCode": "class AuxiliaryTokensManager:\n    @staticmethod\n    def calculate_tokens_per_organizations(orgs, txs, n_days):\n        org_tokens = {}\n        for org in orgs:\n            txs = txs.filter(organization=org, created_at__gte=timezone.now() - timezone.timedelta(days=n_days))\n            total = 0\n            for tx in txs:\n                total += tx.number_of_tokens if tx.number_of_tokens else 0\n            if total > 0:",
        "detail": "apps.dashboard.auxiliary_calculators.auxiliary_tokens_manager",
        "documentation": {}
    },
    {
        "label": "AuxiliaryVectorStoreManager",
        "kind": 6,
        "importPath": "apps.dashboard.auxiliary_calculators.auxiliary_vector_store_manager",
        "description": "apps.dashboard.auxiliary_calculators.auxiliary_vector_store_manager",
        "peekOfCode": "class AuxiliaryVectorStoreManager:\n    @staticmethod\n    def calculate_total_knowledge_base_searches_per_assistants(agents, txs, n_days):\n        result = {}\n        for a in agents:\n            txs = txs.filter(responsible_assistant=a, created_at__gte=timezone.now() - timezone.timedelta(days=n_days))\n            total = 0\n            for tx in txs:\n                if tx.transaction_source in [LLMTransactionSourcesTypesNames.KNOWLEDGE_BASE_SEARCH]:\n                    total += 1",
        "detail": "apps.dashboard.auxiliary_calculators.auxiliary_vector_store_manager",
        "documentation": {}
    },
    {
        "label": "fixture_test_dashboards",
        "kind": 2,
        "importPath": "apps.dashboard.tests.conftest",
        "description": "apps.dashboard.tests.conftest",
        "peekOfCode": "def fixture_test_dashboards():\n    return True",
        "detail": "apps.dashboard.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_dashboard_test_forms",
        "kind": 2,
        "importPath": "apps.dashboard.tests.test_forms",
        "description": "apps.dashboard.tests.test_forms",
        "peekOfCode": "def test_init_dashboard_test_forms():\n    assert True",
        "detail": "apps.dashboard.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_dashboard_test_models",
        "kind": 2,
        "importPath": "apps.dashboard.tests.test_models",
        "description": "apps.dashboard.tests.test_models",
        "peekOfCode": "def test_init_dashboard_test_models():\n    assert True",
        "detail": "apps.dashboard.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_dashboard_test_utils",
        "kind": 2,
        "importPath": "apps.dashboard.tests.test_utils",
        "description": "apps.dashboard.tests.test_utils",
        "peekOfCode": "def test_init_dashboard_test_utils():\n    assert True",
        "detail": "apps.dashboard.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_dashboard_test_views",
        "kind": 2,
        "importPath": "apps.dashboard.tests.test_views",
        "description": "apps.dashboard.tests.test_views",
        "peekOfCode": "def test_init_dashboard_test_views():\n    assert True",
        "detail": "apps.dashboard.tests.test_views",
        "documentation": {}
    },
    {
        "label": "TransactionStatisticsManager",
        "kind": 6,
        "importPath": "apps.dashboard.utils.class_utils",
        "description": "apps.dashboard.utils.class_utils",
        "peekOfCode": "class TransactionStatisticsManager:\n    def __init__(self, user, last_days=30):\n        self.user = user\n        self.last_days = last_days\n        self.organizations = Organization.objects.filter(users__in=[self.user])\n        self.organization_users = []\n        for organization in self.organizations:\n            self.organization_users += organization.users.all()\n        self.organization_users = list(set(self.organization_users))\n        self.assistants = Assistant.objects.filter(organization__in=self.organizations)",
        "detail": "apps.dashboard.utils.class_utils",
        "documentation": {}
    },
    {
        "label": "CONST_MINUTES",
        "kind": 5,
        "importPath": "apps.dashboard.utils.constant_utils",
        "description": "apps.dashboard.utils.constant_utils",
        "peekOfCode": "CONST_MINUTES = 60\nCONST_HOURS = 60 * CONST_MINUTES\nINITIAL_STATISTICS_N_DAYS_BACK = 1",
        "detail": "apps.dashboard.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CONST_HOURS",
        "kind": 5,
        "importPath": "apps.dashboard.utils.constant_utils",
        "description": "apps.dashboard.utils.constant_utils",
        "peekOfCode": "CONST_HOURS = 60 * CONST_MINUTES\nINITIAL_STATISTICS_N_DAYS_BACK = 1",
        "detail": "apps.dashboard.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "INITIAL_STATISTICS_N_DAYS_BACK",
        "kind": 5,
        "importPath": "apps.dashboard.utils.constant_utils",
        "description": "apps.dashboard.utils.constant_utils",
        "peekOfCode": "INITIAL_STATISTICS_N_DAYS_BACK = 1",
        "detail": "apps.dashboard.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "build_statistics_for_graph",
        "kind": 2,
        "importPath": "apps.dashboard.utils.function_utils",
        "description": "apps.dashboard.utils.function_utils",
        "peekOfCode": "def build_statistics_for_graph(statistics, context):\n    org_costs = statistics.get(\"costs\", {}).get(\"costs_per_organizations\", {})\n    agent_costs = statistics.get(\"costs\", {}).get(\"costs_per_assistants\", {})\n    user_costs = statistics.get(\"costs\", {}).get(\"costs_per_users\", {})\n    src_costs = statistics.get(\"costs\", {}).get(\"costs_per_sources\", {})\n    src_costs_generic = src_costs.get(\"main\", {})\n    src_costs_tool_calls = src_costs.get(\"tool\", {})\n    org_tokens = statistics.get(\"tokens\", {}).get(\"tokens_per_organizations\", {})\n    agent_tokens = statistics.get(\"tokens\", {}).get(\"tokens_per_assistants\", {})\n    user_tokens = statistics.get(\"tokens\", {}).get(\"tokens_per_users\", {})",
        "detail": "apps.dashboard.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "DashboardView_ChangeStatisticsInterval",
        "kind": 6,
        "importPath": "apps.dashboard.views.change_statistics_interval_views",
        "description": "apps.dashboard.views.change_statistics_interval_views",
        "peekOfCode": "class DashboardView_ChangeStatisticsInterval(LoginRequiredMixin, TemplateView):\n    @method_decorator(cache_page(30 * CONST_MINUTES))  # 30 minutes\n    def dispatch(self, *args, **kwargs):\n        return super().dispatch(*args, **kwargs)\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context\n    def get(self, request, *args, **kwargs):\n        context = self.get_context_data()\n        user = self.request.user",
        "detail": "apps.dashboard.views.change_statistics_interval_views",
        "documentation": {}
    },
    {
        "label": "DashboardView_Main",
        "kind": 6,
        "importPath": "apps.dashboard.views.main_dashboard_views",
        "description": "apps.dashboard.views.main_dashboard_views",
        "peekOfCode": "class DashboardView_Main(LoginRequiredMixin, TemplateView):\n    @method_decorator(cache_page(30 * CONST_MINUTES))  # 30 minutes\n    def dispatch(self, *args, **kwargs):\n        return super().dispatch(*args, **kwargs)\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        user = self.request.user\n        orgs = Organization.objects.filter(users__in=[user])\n        manager = TransactionStatisticsManager(user=user)\n        data_statistics = manager.statistics",
        "detail": "apps.dashboard.views.main_dashboard_views",
        "documentation": {}
    },
    {
        "label": "DashboardView_Refresh",
        "kind": 6,
        "importPath": "apps.dashboard.views.refresh_dashboard_views",
        "description": "apps.dashboard.views.refresh_dashboard_views",
        "peekOfCode": "class DashboardView_Refresh(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context\n    def get(self, request, *args, **kwargs):\n        context = self.get_context_data()\n        user = self.request.user\n        orgs = Organization.objects.filter(users__in=[user])\n        ai_models = LLMCore.objects.filter(organization__in=orgs)\n        context[\"llm_models\"] = ai_models",
        "detail": "apps.dashboard.views.refresh_dashboard_views",
        "documentation": {}
    },
    {
        "label": "DashboardConfig",
        "kind": 6,
        "importPath": "apps.dashboard.apps",
        "description": "apps.dashboard.apps",
        "peekOfCode": "class DashboardConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.dashboard'",
        "detail": "apps.dashboard.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.dashboard.urls",
        "description": "apps.dashboard.urls",
        "peekOfCode": "app_name = \"dashboard\"\nurlpatterns = [\n    path(\"\", DashboardView_Main.as_view(template_name=\"dashboard/dashboard_main.html\"), name=\"main-dashboard\"),\n    path(\"refresh/<str:days>/\", DashboardView_Refresh.as_view(\n        template_name=\"dashboard/dashboard_main.html\"\n    ), name=\"refresh\"),\n    path(\"adjust_interval/<int:days>/\", DashboardView_ChangeStatisticsInterval.as_view(\n        template_name=\"dashboard/dashboard_main.html\"\n    ), name=\"adjust-interval\"),\n]",
        "detail": "apps.dashboard.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.dashboard.urls",
        "description": "apps.dashboard.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", DashboardView_Main.as_view(template_name=\"dashboard/dashboard_main.html\"), name=\"main-dashboard\"),\n    path(\"refresh/<str:days>/\", DashboardView_Refresh.as_view(\n        template_name=\"dashboard/dashboard_main.html\"\n    ), name=\"refresh\"),\n    path(\"adjust_interval/<int:days>/\", DashboardView_ChangeStatisticsInterval.as_view(\n        template_name=\"dashboard/dashboard_main.html\"\n    ), name=\"adjust-interval\"),\n]",
        "detail": "apps.dashboard.urls",
        "documentation": {}
    },
    {
        "label": "DataBackupAdmin",
        "kind": 6,
        "importPath": "apps.data_backups.admin.data_backup_admin",
        "description": "apps.data_backups.admin.data_backup_admin",
        "peekOfCode": "class DataBackupAdmin(admin.ModelAdmin):\n    list_display = DATA_BACKUP_ADMIN_LIST\n    list_filter = DATA_BACKUP_ADMIN_FILTER\n    search_fields = DATA_BACKUP_ADMIN_SEARCH\n    readonly_fields = ['created_at']\n    ordering = ['-created_at']\n    actions = ['delete_selected']",
        "detail": "apps.data_backups.admin.data_backup_admin",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.data_backups.migrations.0001_initial",
        "description": "apps.data_backups.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='DataBackup',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "apps.data_backups.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.data_backups.migrations.0002_alter_databackup_serialized_data",
        "description": "apps.data_backups.migrations.0002_alter_databackup_serialized_data",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('data_backups', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='databackup',\n            name='serialized_data',\n            field=models.TextField(blank=True, null=True),\n        ),",
        "detail": "apps.data_backups.migrations.0002_alter_databackup_serialized_data",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.data_backups.migrations.0003_databackup_organization_and_more",
        "description": "apps.data_backups.migrations.0003_databackup_organization_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('data_backups', '0002_alter_databackup_serialized_data'),\n        ('organization', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='databackup',\n            name='organization',",
        "detail": "apps.data_backups.migrations.0003_databackup_organization_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.data_backups.migrations.0004_databackup_backup_uuid",
        "description": "apps.data_backups.migrations.0004_databackup_backup_uuid",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('data_backups', '0003_databackup_organization_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='databackup',\n            name='backup_uuid',\n            field=models.CharField(blank=True, max_length=255, null=True),\n        ),",
        "detail": "apps.data_backups.migrations.0004_databackup_backup_uuid",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.data_backups.migrations.0005_databackup_backup_type_and_more",
        "description": "apps.data_backups.migrations.0005_databackup_backup_type_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('data_backups', '0004_databackup_backup_uuid'),\n        ('organization', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='databackup',\n            name='backup_type',",
        "detail": "apps.data_backups.migrations.0005_databackup_backup_type_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.data_backups.migrations.0006_alter_databackup_responsible_user",
        "description": "apps.data_backups.migrations.0006_alter_databackup_responsible_user",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('data_backups', '0005_databackup_backup_type_and_more'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='databackup',\n            name='responsible_user',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),",
        "detail": "apps.data_backups.migrations.0006_alter_databackup_responsible_user",
        "documentation": {}
    },
    {
        "label": "DataBackup",
        "kind": 6,
        "importPath": "apps.data_backups.models.data_backup_models",
        "description": "apps.data_backups.models.data_backup_models",
        "peekOfCode": "class DataBackup(models.Model):\n    responsible_user = models.ForeignKey('auth.User', on_delete=models.CASCADE, null=True, blank=True)\n    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE, null=True, blank=True)\n    backup_name = models.CharField(max_length=255)\n    backup_type = models.CharField(max_length=255, choices=BACKUP_TYPES, null=True, blank=True)\n    backup_uuid = models.CharField(max_length=255, null=True, blank=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    serialized_data = models.TextField(null=True, blank=True)\n    encryption_password = models.CharField(max_length=255)\n    def __str__(self):",
        "detail": "apps.data_backups.models.data_backup_models",
        "documentation": {}
    },
    {
        "label": "fixture_data_backups_init",
        "kind": 2,
        "importPath": "apps.data_backups.tests.conftest",
        "description": "apps.data_backups.tests.conftest",
        "peekOfCode": "def fixture_data_backups_init():\n    return True",
        "detail": "apps.data_backups.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_data_backups_test_forms",
        "kind": 2,
        "importPath": "apps.data_backups.tests.test_forms",
        "description": "apps.data_backups.tests.test_forms",
        "peekOfCode": "def test_init_data_backups_test_forms():\n    assert True",
        "detail": "apps.data_backups.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_data_backups_test_models",
        "kind": 2,
        "importPath": "apps.data_backups.tests.test_models",
        "description": "apps.data_backups.tests.test_models",
        "peekOfCode": "def test_init_data_backups_test_models():\n    assert True",
        "detail": "apps.data_backups.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_data_backups_test_utils",
        "kind": 2,
        "importPath": "apps.data_backups.tests.test_utils",
        "description": "apps.data_backups.tests.test_utils",
        "peekOfCode": "def test_init_data_backups_test_utils():\n    assert True",
        "detail": "apps.data_backups.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_data_backups_test_views",
        "kind": 2,
        "importPath": "apps.data_backups.tests.test_views",
        "description": "apps.data_backups.tests.test_views",
        "peekOfCode": "def test_init_data_backups_test_views():\n    assert True",
        "detail": "apps.data_backups.tests.test_views",
        "documentation": {}
    },
    {
        "label": "BackupTypesNames",
        "kind": 6,
        "importPath": "apps.data_backups.utils.constant_utils",
        "description": "apps.data_backups.utils.constant_utils",
        "peekOfCode": "class BackupTypesNames:\n    ASSISTANTS = 'assistants'\n    LLM_MODELS = 'llm_models'\n    NER_INSTANCES = 'ner_instances'\n    CUSTOM_FUNCTIONS = 'custom_functions'\n    CUSTOM_APIS = 'custom_apis'\n    CUSTOM_SCRIPTS = 'custom_scripts'\n    @staticmethod\n    def as_list():\n        return [",
        "detail": "apps.data_backups.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BACKUP_TYPES",
        "kind": 5,
        "importPath": "apps.data_backups.utils.constant_utils",
        "description": "apps.data_backups.utils.constant_utils",
        "peekOfCode": "BACKUP_TYPES = [\n    ('assistants', 'Assistants'),\n    ('llm_models', 'LLM Models'),\n    ('ner_instances', 'NER Instances'),\n    ('custom_functions', 'Custom Functions'),\n    ('custom_apis', 'Custom APIs'),\n    ('custom_scripts', 'Custom Scripts'),\n]\nclass BackupTypesNames:\n    ASSISTANTS = 'assistants'",
        "detail": "apps.data_backups.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DATA_BACKUP_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.data_backups.utils.constant_utils",
        "description": "apps.data_backups.utils.constant_utils",
        "peekOfCode": "DATA_BACKUP_ADMIN_LIST = ['organization', 'responsible_user', 'backup_name', 'backup_type', 'created_at']\nDATA_BACKUP_ADMIN_SEARCH = ['organization', 'responsible_user__username', 'backup_name', 'backup_type']\nDATA_BACKUP_ADMIN_FILTER = ['organization', 'responsible_user', 'backup_name', 'backup_type', 'created_at']",
        "detail": "apps.data_backups.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DATA_BACKUP_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.data_backups.utils.constant_utils",
        "description": "apps.data_backups.utils.constant_utils",
        "peekOfCode": "DATA_BACKUP_ADMIN_SEARCH = ['organization', 'responsible_user__username', 'backup_name', 'backup_type']\nDATA_BACKUP_ADMIN_FILTER = ['organization', 'responsible_user', 'backup_name', 'backup_type', 'created_at']",
        "detail": "apps.data_backups.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DATA_BACKUP_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.data_backups.utils.constant_utils",
        "description": "apps.data_backups.utils.constant_utils",
        "peekOfCode": "DATA_BACKUP_ADMIN_FILTER = ['organization', 'responsible_user', 'backup_name', 'backup_type', 'created_at']",
        "detail": "apps.data_backups.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DataBackupView_BackupDelete",
        "kind": 6,
        "importPath": "apps.data_backups.views.delete_data_backup_views",
        "description": "apps.data_backups.views.delete_data_backup_views",
        "peekOfCode": "class DataBackupView_BackupDelete(LoginRequiredMixin, View):\n    def post(self, request, backup_id, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - DELETE_DATA_BACKUPS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.DELETE_DATA_BACKUPS):\n            messages.error(request, \"You do not have permission to delete backups.\")\n            return redirect('data_backups:manage')\n        ##############################\n        backup = get_object_or_404(DataBackup, id=backup_id)",
        "detail": "apps.data_backups.views.delete_data_backup_views",
        "documentation": {}
    },
    {
        "label": "DataBackupView_BackupManage",
        "kind": 6,
        "importPath": "apps.data_backups.views.manage_backups_views",
        "description": "apps.data_backups.views.manage_backups_views",
        "peekOfCode": "class DataBackupView_BackupManage(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_DATA_BACKUPS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_DATA_BACKUPS):\n            messages.error(self.request, \"You do not have permission to list backups.\")\n            return context\n        ##############################",
        "detail": "apps.data_backups.views.manage_backups_views",
        "documentation": {}
    },
    {
        "label": "DataBackupView_ReloadBackup",
        "kind": 6,
        "importPath": "apps.data_backups.views.reload_backup_views",
        "description": "apps.data_backups.views.reload_backup_views",
        "peekOfCode": "class DataBackupView_ReloadBackup(LoginRequiredMixin, View):\n    def post(self, request, backup_id, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - RESTORE_DATA_BACKUPS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.RESTORE_DATA_BACKUPS):\n            messages.error(self.request, \"You do not have permission to restore backups.\")\n            return redirect('data_backups:manage')\n        ##############################\n        backup = get_object_or_404(DataBackup, id=backup_id)",
        "detail": "apps.data_backups.views.reload_backup_views",
        "documentation": {}
    },
    {
        "label": "DataBackupsConfig",
        "kind": 6,
        "importPath": "apps.data_backups.apps",
        "description": "apps.data_backups.apps",
        "peekOfCode": "class DataBackupsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.data_backups'",
        "detail": "apps.data_backups.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.data_backups.urls",
        "description": "apps.data_backups.urls",
        "peekOfCode": "app_name = 'data_backups'\nurlpatterns = [\n    path('manage/', DataBackupView_BackupManage.as_view(template_name='data_backups/manage_backups.html'), name='manage'),\n    path('delete/<int:backup_id>/', DataBackupView_BackupDelete.as_view(), name='delete'),\n    path('reload/<int:backup_id>/', DataBackupView_ReloadBackup.as_view(), name='reload'),\n]",
        "detail": "apps.data_backups.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.data_backups.urls",
        "description": "apps.data_backups.urls",
        "peekOfCode": "urlpatterns = [\n    path('manage/', DataBackupView_BackupManage.as_view(template_name='data_backups/manage_backups.html'), name='manage'),\n    path('delete/<int:backup_id>/', DataBackupView_BackupDelete.as_view(), name='delete'),\n    path('reload/<int:backup_id>/', DataBackupView_ReloadBackup.as_view(), name='reload'),\n]",
        "detail": "apps.data_backups.urls",
        "documentation": {}
    },
    {
        "label": "NERIntegrationAdmin",
        "kind": 6,
        "importPath": "apps.data_security.admin.ner_integration_admin",
        "description": "apps.data_security.admin.ner_integration_admin",
        "peekOfCode": "class NERIntegrationAdmin(admin.ModelAdmin):\n    list_display = NER_INTEGRATION_ADMIN_LIST\n    list_filter = NER_INTEGRATION_ADMIN_FILTER\n    search_fields = NER_INTEGRATION_ADMIN_SEARCH\n    readonly_fields = ('created_at', 'updated_at')",
        "detail": "apps.data_security.admin.ner_integration_admin",
        "documentation": {}
    },
    {
        "label": "NERIntegrationForm",
        "kind": 6,
        "importPath": "apps.data_security.forms.ner_integration_forms",
        "description": "apps.data_security.forms.ner_integration_forms",
        "peekOfCode": "class NERIntegrationForm(forms.ModelForm):\n    class Meta:\n        model = NERIntegration\n        fields = [\n            'organization', 'name', 'description', 'language',\n            'encrypt_persons', 'encrypt_orgs', 'encrypt_nationality_religion_political', 'encrypt_facilities',\n            'encrypt_countries_cities_states', 'encrypt_locations', 'encrypt_products', 'encrypt_events',\n            'encrypt_artworks', 'encrypt_laws', 'encrypt_languages', 'encrypt_dates', 'encrypt_times',\n            'encrypt_percentages', 'encrypt_money', 'encrypt_quantities', 'encrypt_ordinal_numbers',\n            'encrypt_cardinal_numbers', 'created_by_user'",
        "detail": "apps.data_security.forms.ner_integration_forms",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.data_security.migrations.0001_initial",
        "description": "apps.data_security.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='NERIntegration',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "apps.data_security.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.data_security.migrations.0002_initial",
        "description": "apps.data_security.migrations.0002_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('data_security', '0001_initial'),\n        ('organization', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='nerintegration',\n            name='organization',",
        "detail": "apps.data_security.migrations.0002_initial",
        "documentation": {}
    },
    {
        "label": "NERIntegration",
        "kind": 6,
        "importPath": "apps.data_security.models.ner_integration_models",
        "description": "apps.data_security.models.ner_integration_models",
        "peekOfCode": "class NERIntegration(models.Model):\n    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE)\n    name = models.CharField(max_length=255)\n    description = models.TextField()\n    language = models.CharField(max_length=2, choices=NER_LANGUAGES, default='en')\n    encrypt_persons = models.BooleanField(default=False)  # PERSON\n    encrypt_orgs = models.BooleanField(default=False)  # ORG\n    encrypt_nationality_religion_political = models.BooleanField(default=False)  # NORP\n    encrypt_facilities = models.BooleanField(default=False)  # FAC\n    encrypt_countries_cities_states = models.BooleanField(default=False)  # GPE",
        "detail": "apps.data_security.models.ner_integration_models",
        "documentation": {}
    },
    {
        "label": "fixture_data_security_init",
        "kind": 2,
        "importPath": "apps.data_security.tests.conftest",
        "description": "apps.data_security.tests.conftest",
        "peekOfCode": "def fixture_data_security_init():\n    return True",
        "detail": "apps.data_security.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_data_security_test_forms",
        "kind": 2,
        "importPath": "apps.data_security.tests.test_forms",
        "description": "apps.data_security.tests.test_forms",
        "peekOfCode": "def test_init_data_security_test_forms():\n    assert True",
        "detail": "apps.data_security.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_data_security_test_models",
        "kind": 2,
        "importPath": "apps.data_security.tests.test_models",
        "description": "apps.data_security.tests.test_models",
        "peekOfCode": "def test_init_data_security_test_models():\n    assert True",
        "detail": "apps.data_security.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_data_security_test_utils",
        "kind": 2,
        "importPath": "apps.data_security.tests.test_utils",
        "description": "apps.data_security.tests.test_utils",
        "peekOfCode": "def test_init_data_security_test_utils():\n    assert True",
        "detail": "apps.data_security.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_data_security_test_views",
        "kind": 2,
        "importPath": "apps.data_security.tests.test_views",
        "description": "apps.data_security.tests.test_views",
        "peekOfCode": "def test_init_data_security_test_views():\n    assert True",
        "detail": "apps.data_security.tests.test_views",
        "documentation": {}
    },
    {
        "label": "NER_LANGUAGES",
        "kind": 5,
        "importPath": "apps.data_security.utils.constant_utils",
        "description": "apps.data_security.utils.constant_utils",
        "peekOfCode": "NER_LANGUAGES = [\n    ('en', 'English'),\n]\nNER_INTEGRATION_ADMIN_LIST = ('name', 'organization', 'language', 'created_by_user', 'created_at', 'updated_at')\nNER_INTEGRATION_ADMIN_SEARCH = ('name', 'description')\nNER_INTEGRATION_ADMIN_FILTER = ('organization', 'language', 'created_by_user')",
        "detail": "apps.data_security.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "NER_INTEGRATION_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.data_security.utils.constant_utils",
        "description": "apps.data_security.utils.constant_utils",
        "peekOfCode": "NER_INTEGRATION_ADMIN_LIST = ('name', 'organization', 'language', 'created_by_user', 'created_at', 'updated_at')\nNER_INTEGRATION_ADMIN_SEARCH = ('name', 'description')\nNER_INTEGRATION_ADMIN_FILTER = ('organization', 'language', 'created_by_user')",
        "detail": "apps.data_security.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "NER_INTEGRATION_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.data_security.utils.constant_utils",
        "description": "apps.data_security.utils.constant_utils",
        "peekOfCode": "NER_INTEGRATION_ADMIN_SEARCH = ('name', 'description')\nNER_INTEGRATION_ADMIN_FILTER = ('organization', 'language', 'created_by_user')",
        "detail": "apps.data_security.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "NER_INTEGRATION_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.data_security.utils.constant_utils",
        "description": "apps.data_security.utils.constant_utils",
        "peekOfCode": "NER_INTEGRATION_ADMIN_FILTER = ('organization', 'language', 'created_by_user')",
        "detail": "apps.data_security.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "NERView_IntegrationCreate",
        "kind": 6,
        "importPath": "apps.data_security.views.create_ner_integration_views",
        "description": "apps.data_security.views.create_ner_integration_views",
        "peekOfCode": "class NERView_IntegrationCreate(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['form'] = NERIntegrationForm()\n        context['organizations'] = Organization.objects.filter(users__in=[self.request.user])\n        context['boolean_fields'] = [\n            {'name': 'encrypt_persons', 'label': 'Encrypt Persons (PERSON)'},\n            {'name': 'encrypt_orgs', 'label': 'Encrypt Organizations (ORG)'},\n            {'name': 'encrypt_nationality_religion_political', 'label': 'Encrypt NORP'},\n            {'name': 'encrypt_facilities', 'label': 'Encrypt Facilities (FAC)'},",
        "detail": "apps.data_security.views.create_ner_integration_views",
        "documentation": {}
    },
    {
        "label": "NERView_IntegrationDelete",
        "kind": 6,
        "importPath": "apps.data_security.views.delete_ner_integration_views",
        "description": "apps.data_security.views.delete_ner_integration_views",
        "peekOfCode": "class NERView_IntegrationDelete(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ner_integration = get_object_or_404(NERIntegration, id=self.kwargs['pk'])\n        context['ner_integration'] = ner_integration\n        return context\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - DELETE_DATA_SECURITY\n        if not UserPermissionManager.is_authorized(user=self.request.user,",
        "detail": "apps.data_security.views.delete_ner_integration_views",
        "documentation": {}
    },
    {
        "label": "NERView_IntegrationList",
        "kind": 6,
        "importPath": "apps.data_security.views.list_ner_integration_views",
        "description": "apps.data_security.views.list_ner_integration_views",
        "peekOfCode": "class NERView_IntegrationList(TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - ADD_DATA_SECURITY\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_DATA_SECURITY):\n            messages.error(self.request, \"You do not have permission to list data security layers.\")\n            return context\n        ##############################",
        "detail": "apps.data_security.views.list_ner_integration_views",
        "documentation": {}
    },
    {
        "label": "NERView_IntegrationUpdate",
        "kind": 6,
        "importPath": "apps.data_security.views.update_ner_integration_views",
        "description": "apps.data_security.views.update_ner_integration_views",
        "peekOfCode": "class NERView_IntegrationUpdate(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ner_integration = NERIntegration.objects.get(id=self.kwargs['pk'])\n        context['ner_integration'] = ner_integration\n        context['organizations'] = Organization.objects.filter(users__in=[self.request.user])\n        context['boolean_fields'] = [\n            {'name': 'encrypt_persons', 'label': 'Encrypt Persons (PERSON)',\n             'value': ner_integration.encrypt_persons},\n            {'name': 'encrypt_orgs', 'label': 'Encrypt Organizations (ORG)',",
        "detail": "apps.data_security.views.update_ner_integration_views",
        "documentation": {}
    },
    {
        "label": "DataSecurityConfig",
        "kind": 6,
        "importPath": "apps.data_security.apps",
        "description": "apps.data_security.apps",
        "peekOfCode": "class DataSecurityConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.data_security'",
        "detail": "apps.data_security.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.data_security.urls",
        "description": "apps.data_security.urls",
        "peekOfCode": "app_name = \"data_security\"\nurlpatterns = [\n    path(\"ner/create/\", NERView_IntegrationCreate.as_view(\n        template_name=\"data_security/ner/create_ner_integration.html\"\n    ), name=\"create_ner_integration\"),\n    path(\"ner/list/\", NERView_IntegrationList.as_view(\n        template_name=\"data_security/ner/list_ner_integrations.html\"\n    ), name=\"list_ner_integrations\"),\n    path(\"ner/update/<int:pk>/\", NERView_IntegrationUpdate.as_view(\n        template_name=\"data_security/ner/update_ner_integration.html\"",
        "detail": "apps.data_security.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.data_security.urls",
        "description": "apps.data_security.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"ner/create/\", NERView_IntegrationCreate.as_view(\n        template_name=\"data_security/ner/create_ner_integration.html\"\n    ), name=\"create_ner_integration\"),\n    path(\"ner/list/\", NERView_IntegrationList.as_view(\n        template_name=\"data_security/ner/list_ner_integrations.html\"\n    ), name=\"list_ner_integrations\"),\n    path(\"ner/update/<int:pk>/\", NERView_IntegrationUpdate.as_view(\n        template_name=\"data_security/ner/update_ner_integration.html\"\n    ), name=\"update_ner_integration\"),",
        "detail": "apps.data_security.urls",
        "documentation": {}
    },
    {
        "label": "DataSourceBrowserConnectionAdmin",
        "kind": 6,
        "importPath": "apps.datasource_browsers.admin.browser_connection_admin",
        "description": "apps.datasource_browsers.admin.browser_connection_admin",
        "peekOfCode": "class DataSourceBrowserConnectionAdmin(admin.ModelAdmin):\n    list_display = BROWSER_ADMIN_LIST\n    list_filter = BROWSER_ADMIN_FILTER\n    search_fields = BROWSER_ADMIN_SEARCH",
        "detail": "apps.datasource_browsers.admin.browser_connection_admin",
        "documentation": {}
    },
    {
        "label": "DataSourceBrowserBrowsingLogAdmin",
        "kind": 6,
        "importPath": "apps.datasource_browsers.admin.browsing_log_admin",
        "description": "apps.datasource_browsers.admin.browsing_log_admin",
        "peekOfCode": "class DataSourceBrowserBrowsingLogAdmin(admin.ModelAdmin):\n    list_display = BROWSING_LOG_ADMIN_LIST\n    list_filter = BROWSING_LOG_ADMIN_FILTER\n    search_fields = BROWSING_LOG_ADMIN_SEARCH\n    list_per_page = 20\n    list_max_show_all = 100",
        "detail": "apps.datasource_browsers.admin.browsing_log_admin",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.datasource_browsers.migrations.0001_initial",
        "description": "apps.datasource_browsers.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('assistants', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='DataSourceBrowserConnection',\n            fields=[",
        "detail": "apps.datasource_browsers.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "DataSourceBrowserConnection",
        "kind": 6,
        "importPath": "apps.datasource_browsers.models.browser_connection_models",
        "description": "apps.datasource_browsers.models.browser_connection_models",
        "peekOfCode": "class DataSourceBrowserConnection(models.Model):\n    name = models.CharField(max_length=1000)\n    description = models.TextField(blank=True, null=True)\n    browser_type = models.CharField(max_length=100, choices=BROWSER_TYPES)\n    assistant = models.ForeignKey(\"assistants.Assistant\", on_delete=models.CASCADE)\n    data_selectivity = models.FloatField(default=0.5)\n    whitelisted_extensions = models.JSONField(default=list, blank=True, null=True)\n    blacklisted_extensions = models.JSONField(default=list, blank=True, null=True)\n    reading_abilities = models.JSONField(default=list, blank=True, null=True)\n    minimum_investigation_sites = models.IntegerField(default=2)",
        "detail": "apps.datasource_browsers.models.browser_connection_models",
        "documentation": {}
    },
    {
        "label": "DataSourceBrowserBrowsingLog",
        "kind": 6,
        "importPath": "apps.datasource_browsers.models.browsing_log_models",
        "description": "apps.datasource_browsers.models.browsing_log_models",
        "peekOfCode": "class DataSourceBrowserBrowsingLog(models.Model):\n    connection = models.ForeignKey(DataSourceBrowserConnection, on_delete=models.CASCADE, related_name=\"logs\")\n    action = models.CharField(max_length=1000)\n    context_url = models.CharField(max_length=1000, blank=True, null=True)\n    html_content = models.TextField(blank=True, null=True)\n    context_content = models.TextField(blank=True, null=True)\n    log_content = models.TextField(blank=True, null=True)\n    screenshot = models.ImageField(upload_to=\"datasource_browser_screenshots/%Y/%m/%d\", blank=True, null=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    def __str__(self):",
        "detail": "apps.datasource_browsers.models.browsing_log_models",
        "documentation": {}
    },
    {
        "label": "fixture_test_datasource_browsers",
        "kind": 2,
        "importPath": "apps.datasource_browsers.tests.conftest",
        "description": "apps.datasource_browsers.tests.conftest",
        "peekOfCode": "def fixture_test_datasource_browsers():\n    return True",
        "detail": "apps.datasource_browsers.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_datasource_browsers_test_forms",
        "kind": 2,
        "importPath": "apps.datasource_browsers.tests.test_forms",
        "description": "apps.datasource_browsers.tests.test_forms",
        "peekOfCode": "def test_init_datasource_browsers_test_forms():\n    assert True",
        "detail": "apps.datasource_browsers.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_datasource_browsers_test_models",
        "kind": 2,
        "importPath": "apps.datasource_browsers.tests.test_models",
        "description": "apps.datasource_browsers.tests.test_models",
        "peekOfCode": "def test_init_datasource_browsers_test_models():\n    assert True",
        "detail": "apps.datasource_browsers.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_datasource_browsers_test_utils",
        "kind": 2,
        "importPath": "apps.datasource_browsers.tests.test_utils",
        "description": "apps.datasource_browsers.tests.test_utils",
        "peekOfCode": "def test_init_datasource_browsers_test_utils():\n    assert True",
        "detail": "apps.datasource_browsers.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_datasource_browsers_test_views",
        "kind": 2,
        "importPath": "apps.datasource_browsers.tests.test_views",
        "description": "apps.datasource_browsers.tests.test_views",
        "peekOfCode": "def test_init_datasource_browsers_test_views():\n    assert True",
        "detail": "apps.datasource_browsers.tests.test_views",
        "documentation": {}
    },
    {
        "label": "BrowsingReadingAbilitiesNames",
        "kind": 6,
        "importPath": "apps.datasource_browsers.utils.constant_utils",
        "description": "apps.datasource_browsers.utils.constant_utils",
        "peekOfCode": "class BrowsingReadingAbilitiesNames:\n    JAVASCRIPT = \"javascript\"\n    STYLE = \"style\"\n    INLINE_STYLE = \"inline_style\"\n    COMMENTS = \"comments\"\n    LINKS = \"links\"\n    META = \"meta\"\n    PAGE_STRUCTURE = \"page_structure\"\n    PROCESSING_INSTRUCTIONS = \"processing_instructions\"\n    EMBEDDED = \"embedded\"",
        "detail": "apps.datasource_browsers.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BROWSER_TYPES",
        "kind": 5,
        "importPath": "apps.datasource_browsers.utils.constant_utils",
        "description": "apps.datasource_browsers.utils.constant_utils",
        "peekOfCode": "BROWSER_TYPES = [\n    (\"google\", \"Google\"),\n]\nBROWSER_READING_ABILITIES = [\n    (\"javascript\", \"JavaScript\"), (\"style\", \"Style\"), (\"inline_style\", \"Inline Style\"), (\"comments\", \"Comments\"),\n    (\"links\", \"Links\"), (\"meta\", \"Meta\"), (\"page_structure\", \"Page Structure\"),\n    (\"processing_instructions\", \"Processing Instructions\"), (\"embedded\", \"Embedded\"), (\"frames\", \"Frames\"),\n    (\"forms\", \"Forms\"), (\"keep_tags\", \"Keep Tags\"),\n]\nclass BrowsingReadingAbilitiesNames:",
        "detail": "apps.datasource_browsers.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BROWSER_READING_ABILITIES",
        "kind": 5,
        "importPath": "apps.datasource_browsers.utils.constant_utils",
        "description": "apps.datasource_browsers.utils.constant_utils",
        "peekOfCode": "BROWSER_READING_ABILITIES = [\n    (\"javascript\", \"JavaScript\"), (\"style\", \"Style\"), (\"inline_style\", \"Inline Style\"), (\"comments\", \"Comments\"),\n    (\"links\", \"Links\"), (\"meta\", \"Meta\"), (\"page_structure\", \"Page Structure\"),\n    (\"processing_instructions\", \"Processing Instructions\"), (\"embedded\", \"Embedded\"), (\"frames\", \"Frames\"),\n    (\"forms\", \"Forms\"), (\"keep_tags\", \"Keep Tags\"),\n]\nclass BrowsingReadingAbilitiesNames:\n    JAVASCRIPT = \"javascript\"\n    STYLE = \"style\"\n    INLINE_STYLE = \"inline_style\"",
        "detail": "apps.datasource_browsers.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BROWSER_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.datasource_browsers.utils.constant_utils",
        "description": "apps.datasource_browsers.utils.constant_utils",
        "peekOfCode": "BROWSER_ADMIN_LIST = ['assistant', 'browser_type', 'name', 'data_selectivity', 'created_at', 'updated_at']\nBROWSER_ADMIN_SEARCH = ['assistant', 'name', 'description', 'created_at', 'updated_at']\nBROWSER_ADMIN_FILTER = ['assistant', 'browser_type', 'data_selectivity']\nBROWSING_LOG_ADMIN_LIST = ['id', 'connection', 'action', 'created_at']\nBROWSING_LOG_ADMIN_SEARCH = ['connection', 'action', 'html_content', 'log_content', 'created_at']\nBROWSING_LOG_ADMIN_FILTER = ['connection', 'action', 'created_at']",
        "detail": "apps.datasource_browsers.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BROWSER_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.datasource_browsers.utils.constant_utils",
        "description": "apps.datasource_browsers.utils.constant_utils",
        "peekOfCode": "BROWSER_ADMIN_SEARCH = ['assistant', 'name', 'description', 'created_at', 'updated_at']\nBROWSER_ADMIN_FILTER = ['assistant', 'browser_type', 'data_selectivity']\nBROWSING_LOG_ADMIN_LIST = ['id', 'connection', 'action', 'created_at']\nBROWSING_LOG_ADMIN_SEARCH = ['connection', 'action', 'html_content', 'log_content', 'created_at']\nBROWSING_LOG_ADMIN_FILTER = ['connection', 'action', 'created_at']",
        "detail": "apps.datasource_browsers.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BROWSER_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.datasource_browsers.utils.constant_utils",
        "description": "apps.datasource_browsers.utils.constant_utils",
        "peekOfCode": "BROWSER_ADMIN_FILTER = ['assistant', 'browser_type', 'data_selectivity']\nBROWSING_LOG_ADMIN_LIST = ['id', 'connection', 'action', 'created_at']\nBROWSING_LOG_ADMIN_SEARCH = ['connection', 'action', 'html_content', 'log_content', 'created_at']\nBROWSING_LOG_ADMIN_FILTER = ['connection', 'action', 'created_at']",
        "detail": "apps.datasource_browsers.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BROWSING_LOG_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.datasource_browsers.utils.constant_utils",
        "description": "apps.datasource_browsers.utils.constant_utils",
        "peekOfCode": "BROWSING_LOG_ADMIN_LIST = ['id', 'connection', 'action', 'created_at']\nBROWSING_LOG_ADMIN_SEARCH = ['connection', 'action', 'html_content', 'log_content', 'created_at']\nBROWSING_LOG_ADMIN_FILTER = ['connection', 'action', 'created_at']",
        "detail": "apps.datasource_browsers.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BROWSING_LOG_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.datasource_browsers.utils.constant_utils",
        "description": "apps.datasource_browsers.utils.constant_utils",
        "peekOfCode": "BROWSING_LOG_ADMIN_SEARCH = ['connection', 'action', 'html_content', 'log_content', 'created_at']\nBROWSING_LOG_ADMIN_FILTER = ['connection', 'action', 'created_at']",
        "detail": "apps.datasource_browsers.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BROWSING_LOG_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.datasource_browsers.utils.constant_utils",
        "description": "apps.datasource_browsers.utils.constant_utils",
        "peekOfCode": "BROWSING_LOG_ADMIN_FILTER = ['connection', 'action', 'created_at']",
        "detail": "apps.datasource_browsers.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BrowserView_BrowserCreate",
        "kind": 6,
        "importPath": "apps.datasource_browsers.views.browser.create_browser_connection_views",
        "description": "apps.datasource_browsers.views.browser.create_browser_connection_views",
        "peekOfCode": "class BrowserView_BrowserCreate(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context_user = self.request.user\n        orgs = context_user.organizations.filter(users__in=[context_user])\n        context['assistants'] = Assistant.objects.filter(organization__in=orgs)\n        context['browser_types'] = BROWSER_TYPES\n        context['user'] = context_user\n        return context\n    def post(self, request, *args, **kwargs):",
        "detail": "apps.datasource_browsers.views.browser.create_browser_connection_views",
        "documentation": {}
    },
    {
        "label": "BrowserView_BrowserDelete",
        "kind": 6,
        "importPath": "apps.datasource_browsers.views.browser.delete_browser_connection_views",
        "description": "apps.datasource_browsers.views.browser.delete_browser_connection_views",
        "peekOfCode": "class BrowserView_BrowserDelete(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['browser_connection'] = get_object_or_404(DataSourceBrowserConnection, pk=self.kwargs['pk'])\n        return context\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - DELETE_WEB_BROWSERS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.DELETE_WEB_BROWSERS):",
        "detail": "apps.datasource_browsers.views.browser.delete_browser_connection_views",
        "documentation": {}
    },
    {
        "label": "BrowserView_BrowserList",
        "kind": 6,
        "importPath": "apps.datasource_browsers.views.browser.list_browser_connections_views",
        "description": "apps.datasource_browsers.views.browser.list_browser_connections_views",
        "peekOfCode": "class BrowserView_BrowserList(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context_user = self.request.user\n        ##############################\n        # PERMISSION CHECK FOR - LIST_WEB_BROWSERS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_WEB_BROWSERS):\n            messages.error(self.request, \"You do not have permission to list web browsers.\")\n            return context",
        "detail": "apps.datasource_browsers.views.browser.list_browser_connections_views",
        "documentation": {}
    },
    {
        "label": "BrowserView_BrowserUpdate",
        "kind": 6,
        "importPath": "apps.datasource_browsers.views.browser.update_browser_connection_views",
        "description": "apps.datasource_browsers.views.browser.update_browser_connection_views",
        "peekOfCode": "class BrowserView_BrowserUpdate(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context_user = self.request.user\n        organizations = context_user.organizations.filter(users__in=[context_user])\n        context['assistants'] = Assistant.objects.filter(organization__in=organizations)\n        context['browser_types'] = BROWSER_TYPES\n        context['user'] = context_user\n        connection_id = kwargs.get('pk')\n        context['browser_connection'] = get_object_or_404(DataSourceBrowserConnection, pk=connection_id)",
        "detail": "apps.datasource_browsers.views.browser.update_browser_connection_views",
        "documentation": {}
    },
    {
        "label": "BrowserView_BrowserLogDownload",
        "kind": 6,
        "importPath": "apps.datasource_browsers.views.browser_log.download_context_data_views",
        "description": "apps.datasource_browsers.views.browser_log.download_context_data_views",
        "peekOfCode": "class BrowserView_BrowserLogDownload(LoginRequiredMixin, View):\n    def get(self, request, pk, *args, **kwargs):\n        log = get_object_or_404(DataSourceBrowserBrowsingLog, pk=pk)\n        context_data = json.dumps(log.context_content, indent=4)\n        response = HttpResponse(context_data, content_type='application/json')\n        response[\n            'Content-Disposition'] = f'attachment; filename=\"{log.connection.name}_context_data_{log.created_at.strftime(\"%Y%m%d%H%M%S\")}.json\"'\n        return response",
        "detail": "apps.datasource_browsers.views.browser_log.download_context_data_views",
        "documentation": {}
    },
    {
        "label": "BrowserView_BrowserLogDownloadHTML",
        "kind": 6,
        "importPath": "apps.datasource_browsers.views.browser_log.download_html_content_views",
        "description": "apps.datasource_browsers.views.browser_log.download_html_content_views",
        "peekOfCode": "class BrowserView_BrowserLogDownloadHTML(LoginRequiredMixin, View):\n    def get(self, request, pk, *args, **kwargs):\n        log = get_object_or_404(DataSourceBrowserBrowsingLog, pk=pk)\n        response = HttpResponse(log.html_content, content_type='text/html')\n        response[\n            'Content-Disposition'] = f'attachment; filename=\"{log.connection.name}_html_content_{log.created_at.strftime(\"%Y%m%d%H%M%S\")}.html\"'\n        return response",
        "detail": "apps.datasource_browsers.views.browser_log.download_html_content_views",
        "documentation": {}
    },
    {
        "label": "BrowserView_BrowserLogList",
        "kind": 6,
        "importPath": "apps.datasource_browsers.views.browser_log.list_browsing_logs_views",
        "description": "apps.datasource_browsers.views.browser_log.list_browsing_logs_views",
        "peekOfCode": "class BrowserView_BrowserLogList(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_WEB_BROWSERS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_WEB_BROWSERS):\n            messages.error(self.request, \"You do not have permission to list web browsers.\")\n            return context\n        ##############################",
        "detail": "apps.datasource_browsers.views.browser_log.list_browsing_logs_views",
        "documentation": {}
    },
    {
        "label": "DatasourceBrowsersConfig",
        "kind": 6,
        "importPath": "apps.datasource_browsers.apps",
        "description": "apps.datasource_browsers.apps",
        "peekOfCode": "class DatasourceBrowsersConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.datasource_browsers'",
        "detail": "apps.datasource_browsers.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.datasource_browsers.urls",
        "description": "apps.datasource_browsers.urls",
        "peekOfCode": "app_name = \"datasource_browsers\"\nurlpatterns = [\n    path(\"create/\", BrowserView_BrowserCreate.as_view(\n        template_name=\"datasource_browsers/connections/create_browser_connection.html\"\n    ), name=\"create\"),\n    path(\"update/<int:pk>/\", BrowserView_BrowserUpdate.as_view(\n        template_name=\"datasource_browsers/connections/update_browser_connection.html\"\n    ), name=\"update\"),\n    path(\"delete/<int:pk>/\", BrowserView_BrowserDelete.as_view(\n        template_name=\"datasource_browsers/connections/confirm_delete_browser_connection.html\"",
        "detail": "apps.datasource_browsers.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.datasource_browsers.urls",
        "description": "apps.datasource_browsers.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"create/\", BrowserView_BrowserCreate.as_view(\n        template_name=\"datasource_browsers/connections/create_browser_connection.html\"\n    ), name=\"create\"),\n    path(\"update/<int:pk>/\", BrowserView_BrowserUpdate.as_view(\n        template_name=\"datasource_browsers/connections/update_browser_connection.html\"\n    ), name=\"update\"),\n    path(\"delete/<int:pk>/\", BrowserView_BrowserDelete.as_view(\n        template_name=\"datasource_browsers/connections/confirm_delete_browser_connection.html\"\n    ), name=\"delete\"),",
        "detail": "apps.datasource_browsers.urls",
        "documentation": {}
    },
    {
        "label": "CodeBaseRepositoryAdmin",
        "kind": 6,
        "importPath": "apps.datasource_codebase.admin.code_repository_admin",
        "description": "apps.datasource_codebase.admin.code_repository_admin",
        "peekOfCode": "class CodeBaseRepositoryAdmin(admin.ModelAdmin):\n    list_display = CODEBASE_REPOSITORY_ADMIN_LIST\n    list_filter = CODEBASE_REPOSITORY_ADMIN_FILTER\n    search_fields = CODEBASE_REPOSITORY_ADMIN_SEARCH\n    readonly_fields = ['created_at', 'updated_at']\n    list_per_page = 20\n    list_max_show_all = 100\n    def delete_selected(self, request, queryset):\n        for obj in queryset:\n            client = CodeBaseDecoder.get(obj.knowledge_base)",
        "detail": "apps.datasource_codebase.admin.code_repository_admin",
        "documentation": {}
    },
    {
        "label": "CodeBaseRepositoryChunkAdmin",
        "kind": 6,
        "importPath": "apps.datasource_codebase.admin.code_repository_chunk_admin",
        "description": "apps.datasource_codebase.admin.code_repository_chunk_admin",
        "peekOfCode": "class CodeBaseRepositoryChunkAdmin(admin.ModelAdmin):\n    list_display = CODE_REPOSITORY_CHUNK_ADMIN_LIST\n    list_filter = CODE_REPOSITORY_CHUNK_ADMIN_FILTER\n    search_fields = CODE_REPOSITORY_CHUNK_ADMIN_SEARCH\n    readonly_fields = ['created_at']\n    list_per_page = 20\n    list_max_show_all = 100",
        "detail": "apps.datasource_codebase.admin.code_repository_chunk_admin",
        "documentation": {}
    },
    {
        "label": "RepositoryProcessingLogAdmin",
        "kind": 6,
        "importPath": "apps.datasource_codebase.admin.code_repository_processing_log_admin",
        "description": "apps.datasource_codebase.admin.code_repository_processing_log_admin",
        "peekOfCode": "class RepositoryProcessingLogAdmin(admin.ModelAdmin):\n    list_display = CODE_REPOSITORY_LOG_ADMIN_LIST\n    list_filter = CODE_REPOSITORY_LOG_ADMIN_FILTER\n    search_fields = CODE_REPOSITORY_LOG_ADMIN_SEARCH\n    readonly_fields = ['created_at']\n    list_per_page = 20\n    list_max_show_all = 100",
        "detail": "apps.datasource_codebase.admin.code_repository_processing_log_admin",
        "documentation": {}
    },
    {
        "label": "CodeRepositoryStorageConnectionAdmin",
        "kind": 6,
        "importPath": "apps.datasource_codebase.admin.code_repository_storage_admin",
        "description": "apps.datasource_codebase.admin.code_repository_storage_admin",
        "peekOfCode": "class CodeRepositoryStorageConnectionAdmin(admin.ModelAdmin):\n    list_display = CODE_REPOSITORY_STORAGE_ADMIN_LIST\n    list_filter = CODE_REPOSITORY_STORAGE_ADMIN_FILTER\n    search_fields = CODE_REPOSITORY_STORAGE_ADMIN_SEARCH\n    readonly_fields = ['created_at', 'updated_at']\n    list_per_page = 20\n    list_max_show_all = 100\n    def save_model(self, request, obj, form, change):\n        if obj.vectorizer is None:\n            obj.vectorizer = \"text2vec-openai\"",
        "detail": "apps.datasource_codebase.admin.code_repository_storage_admin",
        "documentation": {}
    },
    {
        "label": "CodeRepositoryStorageForm",
        "kind": 6,
        "importPath": "apps.datasource_codebase.forms.code_repository_storage_forms",
        "description": "apps.datasource_codebase.forms.code_repository_storage_forms",
        "peekOfCode": "class CodeRepositoryStorageForm(forms.ModelForm):\n    class Meta:\n        model = CodeRepositoryStorageConnection\n        fields = [\n            'provider', 'host_url', 'provider_api_key', 'assistant', 'name', 'description', 'vectorizer',\n            'vectorizer_api_key', 'embedding_chunk_size', 'embedding_chunk_overlap', 'search_instance_retrieval_limit'\n        ]\n        widgets = {'description': forms.Textarea(attrs={'rows': 3})}",
        "detail": "apps.datasource_codebase.forms.code_repository_storage_forms",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.datasource_codebase.migrations.0001_initial",
        "description": "apps.datasource_codebase.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('assistants', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='CodeBaseRepository',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "apps.datasource_codebase.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "CodeBaseRepositoryChunk",
        "kind": 6,
        "importPath": "apps.datasource_codebase.models.code_repository_chunk_models",
        "description": "apps.datasource_codebase.models.code_repository_chunk_models",
        "peekOfCode": "class CodeBaseRepositoryChunk(models.Model):\n    knowledge_base = models.ForeignKey(\"CodeRepositoryStorageConnection\", on_delete=models.CASCADE)\n    repository = models.ForeignKey(\"CodeBaseRepository\", on_delete=models.CASCADE, related_name=\"repository_chunks\")\n    chunk_number = models.IntegerField()\n    chunk_content = models.TextField()  # This will be the text content of the chunk\n    chunk_metadata = models.TextField()\n    chunk_repository_uri = models.CharField(max_length=1000, null=True, blank=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    knowledge_base_uuid = models.CharField(max_length=1000, null=True, blank=True)",
        "detail": "apps.datasource_codebase.models.code_repository_chunk_models",
        "documentation": {}
    },
    {
        "label": "CodeBaseRepository",
        "kind": 6,
        "importPath": "apps.datasource_codebase.models.code_repository_models",
        "description": "apps.datasource_codebase.models.code_repository_models",
        "peekOfCode": "class CodeBaseRepository(models.Model):\n    knowledge_base = models.ForeignKey(\"CodeRepositoryStorageConnection\", on_delete=models.CASCADE,\n                                       related_name=\"code_base_repositories\")\n    repository_name = models.CharField(max_length=1000)\n    repository_description = models.TextField()\n    repository_metadata = models.JSONField()\n    repository_uri = models.CharField(max_length=1000, null=True, blank=True)\n    knowledge_base_uuid = models.CharField(max_length=1000, null=True, blank=True)\n    repository_content_temporary = models.TextField(blank=True, null=True)  # This will be emptied before indexing\n    created_at = models.DateTimeField(auto_now_add=True)",
        "detail": "apps.datasource_codebase.models.code_repository_models",
        "documentation": {}
    },
    {
        "label": "RepositoryProcessingLog",
        "kind": 6,
        "importPath": "apps.datasource_codebase.models.code_repository_processing_log_models",
        "description": "apps.datasource_codebase.models.code_repository_processing_log_models",
        "peekOfCode": "class RepositoryProcessingLog(models.Model):\n    repository_full_uri = models.CharField(max_length=1000)\n    log_message = models.TextField()\n    created_at = models.DateTimeField(auto_now_add=True)\n    def __str__(self):\n        return self.repository_full_uri + \" - \" + self.created_at.strftime(\"%Y%m%d%H%M%S\")\n    class Meta:\n        verbose_name = \"Repository Processing Log\"\n        verbose_name_plural = \"Repository Processing Logs\"\n        ordering = [\"-created_at\"]",
        "detail": "apps.datasource_codebase.models.code_repository_processing_log_models",
        "documentation": {}
    },
    {
        "label": "CodeRepositoryStorageConnection",
        "kind": 6,
        "importPath": "apps.datasource_codebase.models.code_repository_storage_models",
        "description": "apps.datasource_codebase.models.code_repository_storage_models",
        "peekOfCode": "class CodeRepositoryStorageConnection(models.Model):\n    provider = models.CharField(max_length=100, choices=KNOWLEDGE_BASE_SYSTEMS)\n    host_url = models.CharField(max_length=1000)\n    provider_api_key = models.CharField(max_length=1000, null=True, blank=True)\n    assistant = models.ForeignKey('assistants.Assistant', on_delete=models.CASCADE)\n    name = models.CharField(max_length=1000)\n    class_name = models.CharField(max_length=1000, null=True, blank=True)\n    description = models.TextField()\n    vectorizer = models.CharField(max_length=100, choices=VECTORIZERS, default=\"text2vec-openai\", null=True,\n                                  blank=True)",
        "detail": "apps.datasource_codebase.models.code_repository_storage_models",
        "documentation": {}
    },
    {
        "label": "add_repository_upload_log",
        "kind": 2,
        "importPath": "apps.datasource_codebase.tasks.create_repository_upload_log_tasks",
        "description": "apps.datasource_codebase.tasks.create_repository_upload_log_tasks",
        "peekOfCode": "def add_repository_upload_log(document_full_uri, log_name):\n    from apps.datasource_codebase.models import RepositoryProcessingLog\n    RepositoryProcessingLog.objects.create(\n        repository_full_uri=document_full_uri,\n        log_message=log_name\n    )",
        "detail": "apps.datasource_codebase.tasks.create_repository_upload_log_tasks",
        "documentation": {}
    },
    {
        "label": "embed_repository_chunks",
        "kind": 2,
        "importPath": "apps.datasource_codebase.tasks.embed_repository_chunks_tasks",
        "description": "apps.datasource_codebase.tasks.embed_repository_chunks_tasks",
        "peekOfCode": "def embed_repository_chunks(executor_params, chunks, path, document_id, document_uuid):\n    try:\n        error = embed_repository_chunks_helper(\n            executor_params=executor_params,\n            chunks=chunks,\n            path=path,\n            document_id=document_id,\n            document_uuid=document_uuid\n        )\n    except Exception as e:",
        "detail": "apps.datasource_codebase.tasks.embed_repository_chunks_tasks",
        "documentation": {}
    },
    {
        "label": "embed_repository_data",
        "kind": 2,
        "importPath": "apps.datasource_codebase.tasks.embed_repository_data_tasks",
        "description": "apps.datasource_codebase.tasks.embed_repository_data_tasks",
        "peekOfCode": "def embed_repository_data(executor_params, document, path, number_of_chunks):\n    doc_id, doc_uuid = None, None\n    try:\n        doc_id, doc_uuid, error = embed_repository_helper(\n            executor_params=executor_params,\n            document=document,\n            path=path,\n            number_of_chunks=number_of_chunks\n        )\n    except Exception as e:",
        "detail": "apps.datasource_codebase.tasks.embed_repository_data_tasks",
        "documentation": {}
    },
    {
        "label": "index_repository_helper",
        "kind": 2,
        "importPath": "apps.datasource_codebase.tasks.index_repository_helper_tasks",
        "description": "apps.datasource_codebase.tasks.index_repository_helper_tasks",
        "peekOfCode": "def index_repository_helper(connection_id, document_paths):\n    from apps.datasource_codebase.models import CodeRepositoryStorageConnection\n    from apps.core.codebase.codebase_decoder import CodeBaseDecoder\n    conn = CodeRepositoryStorageConnection.objects.get(id=connection_id)\n    xc = CodeBaseDecoder.get(connection=conn)\n    if isinstance(document_paths, str):\n        document_paths = [document_paths]\n    for i, path in enumerate(document_paths):\n        try:\n            acc_doc = xc.repository_loader(file_path=path)",
        "detail": "apps.datasource_codebase.tasks.index_repository_helper_tasks",
        "documentation": {}
    },
    {
        "label": "split_repository_into_chunks",
        "kind": 2,
        "importPath": "apps.datasource_codebase.tasks.split_repository_into_chunks_tasks",
        "description": "apps.datasource_codebase.tasks.split_repository_into_chunks_tasks",
        "peekOfCode": "def split_repository_into_chunks(connection_id, doc):\n    from apps.datasource_codebase.models import CodeRepositoryStorageConnection\n    conn = CodeRepositoryStorageConnection.objects.get(id=connection_id)\n    splitter = RecursiveCharacterTextSplitter.from_tiktoken_encoder(\n        chunk_size=conn.embedding_chunk_size, chunk_overlap=conn.embedding_chunk_overlap\n    )\n    chks = splitter.split_text(doc[\"page_content\"])\n    chks_cleaned = []\n    for i, chk in enumerate(chks):\n        doc[\"metadata\"][\"chunk_index\"] = i",
        "detail": "apps.datasource_codebase.tasks.split_repository_into_chunks_tasks",
        "documentation": {}
    },
    {
        "label": "fixture_datasource_codebase_init",
        "kind": 2,
        "importPath": "apps.datasource_codebase.tests.conftest",
        "description": "apps.datasource_codebase.tests.conftest",
        "peekOfCode": "def fixture_datasource_codebase_init():\n    return True",
        "detail": "apps.datasource_codebase.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_datasource_codebase_test_forms",
        "kind": 2,
        "importPath": "apps.datasource_codebase.tests.test_forms",
        "description": "apps.datasource_codebase.tests.test_forms",
        "peekOfCode": "def test_init_datasource_codebase_test_forms():\n    assert True",
        "detail": "apps.datasource_codebase.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_datasource_codebase_test_models",
        "kind": 2,
        "importPath": "apps.datasource_codebase.tests.test_models",
        "description": "apps.datasource_codebase.tests.test_models",
        "peekOfCode": "def test_init_datasource_codebase_test_models():\n    assert True",
        "detail": "apps.datasource_codebase.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_datasource_codebase_test_utils",
        "kind": 2,
        "importPath": "apps.datasource_codebase.tests.test_utils",
        "description": "apps.datasource_codebase.tests.test_utils",
        "peekOfCode": "def test_init_datasource_codebase_test_utils():\n    assert True",
        "detail": "apps.datasource_codebase.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_datasource_codebase_test_views",
        "kind": 2,
        "importPath": "apps.datasource_codebase.tests.test_views",
        "description": "apps.datasource_codebase.tests.test_views",
        "peekOfCode": "def test_init_datasource_codebase_test_views():\n    assert True",
        "detail": "apps.datasource_codebase.tests.test_views",
        "documentation": {}
    },
    {
        "label": "KnowledgeBaseSystemNames",
        "kind": 6,
        "importPath": "apps.datasource_codebase.utils.constant_utils",
        "description": "apps.datasource_codebase.utils.constant_utils",
        "peekOfCode": "class KnowledgeBaseSystemNames:\n    WEAVIATE = 'weaviate'\nSUPPORTED_CODE_FILE_TYPES = [\n    ('.py', 'Python'),\n    ('.ipynb', 'Jupyter Notebook'),\n    ('.rmd', 'R Markdown'),\n    ('.java', 'Java'),\n    ('.js', 'JavaScript'),\n    ('.jsx', 'JSX'),\n    ('.ts', 'TypeScript'),",
        "detail": "apps.datasource_codebase.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "SupportedCodeFileTypes",
        "kind": 6,
        "importPath": "apps.datasource_codebase.utils.constant_utils",
        "description": "apps.datasource_codebase.utils.constant_utils",
        "peekOfCode": "class SupportedCodeFileTypes:\n    PYTHON = '.py'\n    JUPYTER_NOTEBOOK = '.ipynb'\n    R_MARKDOWN = '.rmd'\n    JAVA = '.java'\n    JAVASCRIPT = '.js'\n    JSX = '.jsx'\n    TYPESCRIPT = '.ts'\n    TSX = '.tsx'\n    HTML = '.html'",
        "detail": "apps.datasource_codebase.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "RepositoryUploadStatusNames",
        "kind": 6,
        "importPath": "apps.datasource_codebase.utils.constant_utils",
        "description": "apps.datasource_codebase.utils.constant_utils",
        "peekOfCode": "class RepositoryUploadStatusNames:\n    STAGED = 'staged'\n    UPLOADED = 'uploaded'\n    LOADED = 'loaded'\n    CHUNKED = 'chunked'\n    EMBEDDED_DOCUMENT = 'embedded_document'\n    SAVED_DOCUMENT = 'saved_document'\n    PROCESSED_DOCUMENT = 'processed_document'\n    EMBEDDED_CHUNKS = 'embedded_chunks'\n    SAVED_CHUNKS = 'saved_chunks'",
        "detail": "apps.datasource_codebase.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "KNOWLEDGE_BASE_SYSTEMS",
        "kind": 5,
        "importPath": "apps.datasource_codebase.utils.constant_utils",
        "description": "apps.datasource_codebase.utils.constant_utils",
        "peekOfCode": "KNOWLEDGE_BASE_SYSTEMS = [\n    ('weaviate', 'Weaviate'),\n]\nVECTORIZERS = [\n    (\"text2vec-openai\", \"Text2Vec (OpenAI)\"),\n]\nclass KnowledgeBaseSystemNames:\n    WEAVIATE = 'weaviate'\nSUPPORTED_CODE_FILE_TYPES = [\n    ('.py', 'Python'),",
        "detail": "apps.datasource_codebase.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "VECTORIZERS",
        "kind": 5,
        "importPath": "apps.datasource_codebase.utils.constant_utils",
        "description": "apps.datasource_codebase.utils.constant_utils",
        "peekOfCode": "VECTORIZERS = [\n    (\"text2vec-openai\", \"Text2Vec (OpenAI)\"),\n]\nclass KnowledgeBaseSystemNames:\n    WEAVIATE = 'weaviate'\nSUPPORTED_CODE_FILE_TYPES = [\n    ('.py', 'Python'),\n    ('.ipynb', 'Jupyter Notebook'),\n    ('.rmd', 'R Markdown'),\n    ('.java', 'Java'),",
        "detail": "apps.datasource_codebase.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "SUPPORTED_CODE_FILE_TYPES",
        "kind": 5,
        "importPath": "apps.datasource_codebase.utils.constant_utils",
        "description": "apps.datasource_codebase.utils.constant_utils",
        "peekOfCode": "SUPPORTED_CODE_FILE_TYPES = [\n    ('.py', 'Python'),\n    ('.ipynb', 'Jupyter Notebook'),\n    ('.rmd', 'R Markdown'),\n    ('.java', 'Java'),\n    ('.js', 'JavaScript'),\n    ('.jsx', 'JSX'),\n    ('.ts', 'TypeScript'),\n    ('.tsx', 'TSX'),\n    ('.html', 'HTML'),",
        "detail": "apps.datasource_codebase.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CODEBASE_REPOSITORY_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.datasource_codebase.utils.constant_utils",
        "description": "apps.datasource_codebase.utils.constant_utils",
        "peekOfCode": "CODEBASE_REPOSITORY_ADMIN_LIST = ['knowledge_base', 'repository_name', 'repository_description',\n                                    'repository_metadata', 'repository_uri', 'created_at', 'updated_at']\nCODEBASE_REPOSITORY_ADMIN_FILTER = ['knowledge_base', 'repository_name', 'repository_description',\n                                    'repository_metadata', 'repository_uri', 'created_at', 'updated_at']\nCODEBASE_REPOSITORY_ADMIN_SEARCH = ['knowledge_base', 'repository_name', 'repository_description',\n                                    'repository_metadata', 'repository_uri', 'created_at', 'updated_at']\nCODE_REPOSITORY_CHUNK_ADMIN_LIST = ['knowledge_base', 'repository', 'chunk_repository_uri', 'knowledge_base_uuid',\n                                    'repository_uuid', 'created_at']\nCODE_REPOSITORY_CHUNK_ADMIN_FILTER = ['repository', 'knowledge_base_uuid', 'repository_uuid', 'created_at']\nCODE_REPOSITORY_CHUNK_ADMIN_SEARCH = ['repository', 'chunk_content', 'chunk_metadata', 'chunk_repository_uri',",
        "detail": "apps.datasource_codebase.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CODEBASE_REPOSITORY_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.datasource_codebase.utils.constant_utils",
        "description": "apps.datasource_codebase.utils.constant_utils",
        "peekOfCode": "CODEBASE_REPOSITORY_ADMIN_FILTER = ['knowledge_base', 'repository_name', 'repository_description',\n                                    'repository_metadata', 'repository_uri', 'created_at', 'updated_at']\nCODEBASE_REPOSITORY_ADMIN_SEARCH = ['knowledge_base', 'repository_name', 'repository_description',\n                                    'repository_metadata', 'repository_uri', 'created_at', 'updated_at']\nCODE_REPOSITORY_CHUNK_ADMIN_LIST = ['knowledge_base', 'repository', 'chunk_repository_uri', 'knowledge_base_uuid',\n                                    'repository_uuid', 'created_at']\nCODE_REPOSITORY_CHUNK_ADMIN_FILTER = ['repository', 'knowledge_base_uuid', 'repository_uuid', 'created_at']\nCODE_REPOSITORY_CHUNK_ADMIN_SEARCH = ['repository', 'chunk_content', 'chunk_metadata', 'chunk_repository_uri',\n                                      'knowledge_base_uuid', 'created_at']\nCODE_REPOSITORY_LOG_ADMIN_LIST = ['repository_full_uri', 'log_message', 'created_at']",
        "detail": "apps.datasource_codebase.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CODEBASE_REPOSITORY_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.datasource_codebase.utils.constant_utils",
        "description": "apps.datasource_codebase.utils.constant_utils",
        "peekOfCode": "CODEBASE_REPOSITORY_ADMIN_SEARCH = ['knowledge_base', 'repository_name', 'repository_description',\n                                    'repository_metadata', 'repository_uri', 'created_at', 'updated_at']\nCODE_REPOSITORY_CHUNK_ADMIN_LIST = ['knowledge_base', 'repository', 'chunk_repository_uri', 'knowledge_base_uuid',\n                                    'repository_uuid', 'created_at']\nCODE_REPOSITORY_CHUNK_ADMIN_FILTER = ['repository', 'knowledge_base_uuid', 'repository_uuid', 'created_at']\nCODE_REPOSITORY_CHUNK_ADMIN_SEARCH = ['repository', 'chunk_content', 'chunk_metadata', 'chunk_repository_uri',\n                                      'knowledge_base_uuid', 'created_at']\nCODE_REPOSITORY_LOG_ADMIN_LIST = ['repository_full_uri', 'log_message', 'created_at']\nCODE_REPOSITORY_LOG_ADMIN_FILTER = ['repository_full_uri', 'log_message', 'created_at']\nCODE_REPOSITORY_LOG_ADMIN_SEARCH = ['repository_full_uri', 'log_message']",
        "detail": "apps.datasource_codebase.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CODE_REPOSITORY_CHUNK_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.datasource_codebase.utils.constant_utils",
        "description": "apps.datasource_codebase.utils.constant_utils",
        "peekOfCode": "CODE_REPOSITORY_CHUNK_ADMIN_LIST = ['knowledge_base', 'repository', 'chunk_repository_uri', 'knowledge_base_uuid',\n                                    'repository_uuid', 'created_at']\nCODE_REPOSITORY_CHUNK_ADMIN_FILTER = ['repository', 'knowledge_base_uuid', 'repository_uuid', 'created_at']\nCODE_REPOSITORY_CHUNK_ADMIN_SEARCH = ['repository', 'chunk_content', 'chunk_metadata', 'chunk_repository_uri',\n                                      'knowledge_base_uuid', 'created_at']\nCODE_REPOSITORY_LOG_ADMIN_LIST = ['repository_full_uri', 'log_message', 'created_at']\nCODE_REPOSITORY_LOG_ADMIN_FILTER = ['repository_full_uri', 'log_message', 'created_at']\nCODE_REPOSITORY_LOG_ADMIN_SEARCH = ['repository_full_uri', 'log_message']\nCODE_REPOSITORY_STORAGE_ADMIN_LIST = ['provider', 'host_url', 'provider_api_key', 'assistant', 'name', 'class_name',\n                                      'description', 'vectorizer', 'vectorizer_api_key', 'embedding_chunk_size',",
        "detail": "apps.datasource_codebase.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CODE_REPOSITORY_CHUNK_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.datasource_codebase.utils.constant_utils",
        "description": "apps.datasource_codebase.utils.constant_utils",
        "peekOfCode": "CODE_REPOSITORY_CHUNK_ADMIN_FILTER = ['repository', 'knowledge_base_uuid', 'repository_uuid', 'created_at']\nCODE_REPOSITORY_CHUNK_ADMIN_SEARCH = ['repository', 'chunk_content', 'chunk_metadata', 'chunk_repository_uri',\n                                      'knowledge_base_uuid', 'created_at']\nCODE_REPOSITORY_LOG_ADMIN_LIST = ['repository_full_uri', 'log_message', 'created_at']\nCODE_REPOSITORY_LOG_ADMIN_FILTER = ['repository_full_uri', 'log_message', 'created_at']\nCODE_REPOSITORY_LOG_ADMIN_SEARCH = ['repository_full_uri', 'log_message']\nCODE_REPOSITORY_STORAGE_ADMIN_LIST = ['provider', 'host_url', 'provider_api_key', 'assistant', 'name', 'class_name',\n                                      'description', 'vectorizer', 'vectorizer_api_key', 'embedding_chunk_size',\n                                      'embedding_chunk_overlap', 'search_instance_retrieval_limit',\n                                      'created_at', 'updated_at']",
        "detail": "apps.datasource_codebase.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CODE_REPOSITORY_CHUNK_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.datasource_codebase.utils.constant_utils",
        "description": "apps.datasource_codebase.utils.constant_utils",
        "peekOfCode": "CODE_REPOSITORY_CHUNK_ADMIN_SEARCH = ['repository', 'chunk_content', 'chunk_metadata', 'chunk_repository_uri',\n                                      'knowledge_base_uuid', 'created_at']\nCODE_REPOSITORY_LOG_ADMIN_LIST = ['repository_full_uri', 'log_message', 'created_at']\nCODE_REPOSITORY_LOG_ADMIN_FILTER = ['repository_full_uri', 'log_message', 'created_at']\nCODE_REPOSITORY_LOG_ADMIN_SEARCH = ['repository_full_uri', 'log_message']\nCODE_REPOSITORY_STORAGE_ADMIN_LIST = ['provider', 'host_url', 'provider_api_key', 'assistant', 'name', 'class_name',\n                                      'description', 'vectorizer', 'vectorizer_api_key', 'embedding_chunk_size',\n                                      'embedding_chunk_overlap', 'search_instance_retrieval_limit',\n                                      'created_at', 'updated_at']\nCODE_REPOSITORY_STORAGE_ADMIN_FILTER = ['provider', 'host_url', 'provider_api_key', 'assistant', 'name', 'class_name',",
        "detail": "apps.datasource_codebase.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CODE_REPOSITORY_LOG_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.datasource_codebase.utils.constant_utils",
        "description": "apps.datasource_codebase.utils.constant_utils",
        "peekOfCode": "CODE_REPOSITORY_LOG_ADMIN_LIST = ['repository_full_uri', 'log_message', 'created_at']\nCODE_REPOSITORY_LOG_ADMIN_FILTER = ['repository_full_uri', 'log_message', 'created_at']\nCODE_REPOSITORY_LOG_ADMIN_SEARCH = ['repository_full_uri', 'log_message']\nCODE_REPOSITORY_STORAGE_ADMIN_LIST = ['provider', 'host_url', 'provider_api_key', 'assistant', 'name', 'class_name',\n                                      'description', 'vectorizer', 'vectorizer_api_key', 'embedding_chunk_size',\n                                      'embedding_chunk_overlap', 'search_instance_retrieval_limit',\n                                      'created_at', 'updated_at']\nCODE_REPOSITORY_STORAGE_ADMIN_FILTER = ['provider', 'host_url', 'provider_api_key', 'assistant', 'name', 'class_name',\n                                        'description', 'vectorizer', 'vectorizer_api_key', 'embedding_chunk_size',\n                                        'embedding_chunk_overlap', 'created_at', 'updated_at']",
        "detail": "apps.datasource_codebase.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CODE_REPOSITORY_LOG_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.datasource_codebase.utils.constant_utils",
        "description": "apps.datasource_codebase.utils.constant_utils",
        "peekOfCode": "CODE_REPOSITORY_LOG_ADMIN_FILTER = ['repository_full_uri', 'log_message', 'created_at']\nCODE_REPOSITORY_LOG_ADMIN_SEARCH = ['repository_full_uri', 'log_message']\nCODE_REPOSITORY_STORAGE_ADMIN_LIST = ['provider', 'host_url', 'provider_api_key', 'assistant', 'name', 'class_name',\n                                      'description', 'vectorizer', 'vectorizer_api_key', 'embedding_chunk_size',\n                                      'embedding_chunk_overlap', 'search_instance_retrieval_limit',\n                                      'created_at', 'updated_at']\nCODE_REPOSITORY_STORAGE_ADMIN_FILTER = ['provider', 'host_url', 'provider_api_key', 'assistant', 'name', 'class_name',\n                                        'description', 'vectorizer', 'vectorizer_api_key', 'embedding_chunk_size',\n                                        'embedding_chunk_overlap', 'created_at', 'updated_at']\nCODE_REPOSITORY_STORAGE_ADMIN_SEARCH = ['provider', 'host_url', 'provider_api_key', 'assistant', 'name', 'class_name',",
        "detail": "apps.datasource_codebase.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CODE_REPOSITORY_LOG_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.datasource_codebase.utils.constant_utils",
        "description": "apps.datasource_codebase.utils.constant_utils",
        "peekOfCode": "CODE_REPOSITORY_LOG_ADMIN_SEARCH = ['repository_full_uri', 'log_message']\nCODE_REPOSITORY_STORAGE_ADMIN_LIST = ['provider', 'host_url', 'provider_api_key', 'assistant', 'name', 'class_name',\n                                      'description', 'vectorizer', 'vectorizer_api_key', 'embedding_chunk_size',\n                                      'embedding_chunk_overlap', 'search_instance_retrieval_limit',\n                                      'created_at', 'updated_at']\nCODE_REPOSITORY_STORAGE_ADMIN_FILTER = ['provider', 'host_url', 'provider_api_key', 'assistant', 'name', 'class_name',\n                                        'description', 'vectorizer', 'vectorizer_api_key', 'embedding_chunk_size',\n                                        'embedding_chunk_overlap', 'created_at', 'updated_at']\nCODE_REPOSITORY_STORAGE_ADMIN_SEARCH = ['provider', 'host_url', 'provider_api_key', 'assistant', 'name', 'class_name',\n                                        'description', 'vectorizer', 'vectorizer_api_key', 'embedding_chunk_size',",
        "detail": "apps.datasource_codebase.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CODE_REPOSITORY_STORAGE_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.datasource_codebase.utils.constant_utils",
        "description": "apps.datasource_codebase.utils.constant_utils",
        "peekOfCode": "CODE_REPOSITORY_STORAGE_ADMIN_LIST = ['provider', 'host_url', 'provider_api_key', 'assistant', 'name', 'class_name',\n                                      'description', 'vectorizer', 'vectorizer_api_key', 'embedding_chunk_size',\n                                      'embedding_chunk_overlap', 'search_instance_retrieval_limit',\n                                      'created_at', 'updated_at']\nCODE_REPOSITORY_STORAGE_ADMIN_FILTER = ['provider', 'host_url', 'provider_api_key', 'assistant', 'name', 'class_name',\n                                        'description', 'vectorizer', 'vectorizer_api_key', 'embedding_chunk_size',\n                                        'embedding_chunk_overlap', 'created_at', 'updated_at']\nCODE_REPOSITORY_STORAGE_ADMIN_SEARCH = ['provider', 'host_url', 'provider_api_key', 'assistant', 'name', 'class_name',\n                                        'description', 'vectorizer', 'vectorizer_api_key', 'embedding_chunk_size',\n                                        'embedding_chunk_overlap', 'search_instance_retrieval_limit', 'created_at',",
        "detail": "apps.datasource_codebase.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CODE_REPOSITORY_STORAGE_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.datasource_codebase.utils.constant_utils",
        "description": "apps.datasource_codebase.utils.constant_utils",
        "peekOfCode": "CODE_REPOSITORY_STORAGE_ADMIN_FILTER = ['provider', 'host_url', 'provider_api_key', 'assistant', 'name', 'class_name',\n                                        'description', 'vectorizer', 'vectorizer_api_key', 'embedding_chunk_size',\n                                        'embedding_chunk_overlap', 'created_at', 'updated_at']\nCODE_REPOSITORY_STORAGE_ADMIN_SEARCH = ['provider', 'host_url', 'provider_api_key', 'assistant', 'name', 'class_name',\n                                        'description', 'vectorizer', 'vectorizer_api_key', 'embedding_chunk_size',\n                                        'embedding_chunk_overlap', 'search_instance_retrieval_limit', 'created_at',\n                                        'updated_at']",
        "detail": "apps.datasource_codebase.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CODE_REPOSITORY_STORAGE_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.datasource_codebase.utils.constant_utils",
        "description": "apps.datasource_codebase.utils.constant_utils",
        "peekOfCode": "CODE_REPOSITORY_STORAGE_ADMIN_SEARCH = ['provider', 'host_url', 'provider_api_key', 'assistant', 'name', 'class_name',\n                                        'description', 'vectorizer', 'vectorizer_api_key', 'embedding_chunk_size',\n                                        'embedding_chunk_overlap', 'search_instance_retrieval_limit', 'created_at',\n                                        'updated_at']",
        "detail": "apps.datasource_codebase.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "build_random_word_string",
        "kind": 2,
        "importPath": "apps.datasource_codebase.utils.function_utils",
        "description": "apps.datasource_codebase.utils.function_utils",
        "peekOfCode": "def build_random_word_string():\n    chat_name_1 = wonderwords.RandomWord().word(\n        word_min_length=4, word_max_length=32, include_categories=[\"noun\"], regex=r\"^[a-zA-Z]+$\"\n    )\n    chat_name_2 = wonderwords.RandomWord().word(\n        word_min_length=4, word_max_length=32, include_categories=[\"noun\"], regex=r\"^[a-zA-Z]+$\"\n    )\n    chat_name_3 = wonderwords.RandomWord().word(\n        word_min_length=4, word_max_length=32, include_categories=[\"noun\"], regex=r\"^[a-zA-Z]+$\"\n    )",
        "detail": "apps.datasource_codebase.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "convert_given_name_to_class_name",
        "kind": 2,
        "importPath": "apps.datasource_codebase.utils.function_utils",
        "description": "apps.datasource_codebase.utils.function_utils",
        "peekOfCode": "def convert_given_name_to_class_name(given_name: str):\n    o = \"\"\n    for char in given_name:\n        if char.isalnum() and char not in [\" \", \"_\", \"-\", \".\", \":\", \";\", \",\", \"'\", '\"', \"!\", \"@\", \"#\", \"$\", \"%\", \"^\",\n                                           \"&\", \"*\", \"(\", \")\", \"+\", \"=\", \"{\", \"}\", \"[\", \"]\", \"<\", \">\", \"?\", \"/\", \"\\\\\",\n                                           \"|\", \"`\", \"~\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"]:\n            o += char\n    given_name_alnum_list = o.lower().capitalize()\n    return given_name_alnum_list\ndef build_weaviate_class_name_with_random(connection):",
        "detail": "apps.datasource_codebase.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "build_weaviate_class_name_with_random",
        "kind": 2,
        "importPath": "apps.datasource_codebase.utils.function_utils",
        "description": "apps.datasource_codebase.utils.function_utils",
        "peekOfCode": "def build_weaviate_class_name_with_random(connection):\n    o = convert_given_name_to_class_name(connection.name)\n    randoms = build_random_word_string()\n    return f\"{o}{randoms}\"\ndef generate_repository_uri(base_dir, document_name, file_type):\n    return f\"{base_dir}{document_name.split('.')[0]}_{str(random.randint(1_000_000, 9_999_999))}.{file_type}\"",
        "detail": "apps.datasource_codebase.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "generate_repository_uri",
        "kind": 2,
        "importPath": "apps.datasource_codebase.utils.function_utils",
        "description": "apps.datasource_codebase.utils.function_utils",
        "peekOfCode": "def generate_repository_uri(base_dir, document_name, file_type):\n    return f\"{base_dir}{document_name.split('.')[0]}_{str(random.randint(1_000_000, 9_999_999))}.{file_type}\"",
        "detail": "apps.datasource_codebase.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "CodeBaseView_StorageCreate",
        "kind": 6,
        "importPath": "apps.datasource_codebase.views.code_base_storage.create_code_base_storage_views",
        "description": "apps.datasource_codebase.views.code_base_storage.create_code_base_storage_views",
        "peekOfCode": "class CodeBaseView_StorageCreate(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context_user = self.request.user\n        context['user'] = context_user\n        context['knowledge_base_systems'] = KNOWLEDGE_BASE_SYSTEMS\n        context['vectorizers'] = VECTORIZERS\n        user_orgs = context_user.organizations.all()\n        agents_of_orgs = Assistant.objects.filter(organization__in=user_orgs)\n        context['assistants'] = agents_of_orgs",
        "detail": "apps.datasource_codebase.views.code_base_storage.create_code_base_storage_views",
        "documentation": {}
    },
    {
        "label": "CodeBaseView_StorageDelete",
        "kind": 6,
        "importPath": "apps.datasource_codebase.views.code_base_storage.delete_code_base_storage_views",
        "description": "apps.datasource_codebase.views.code_base_storage.delete_code_base_storage_views",
        "peekOfCode": "class CodeBaseView_StorageDelete(LoginRequiredMixin, DeleteView):\n    model = CodeRepositoryStorageConnection\n    success_url = '/app/datasource_codebase/list/'\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['knowledge_base'] = self.get_object()\n        return context\n    def post(self, request, *args, **kwargs):\n        self.object = self.get_object()\n        ##############################",
        "detail": "apps.datasource_codebase.views.code_base_storage.delete_code_base_storage_views",
        "documentation": {}
    },
    {
        "label": "CodeBaseView_StorageList",
        "kind": 6,
        "importPath": "apps.datasource_codebase.views.code_base_storage.list_code_base_storages_views",
        "description": "apps.datasource_codebase.views.code_base_storage.list_code_base_storages_views",
        "peekOfCode": "class CodeBaseView_StorageList(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_CODE_BASE\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_CODE_BASE):\n            messages.error(self.request, \"You do not have permission to list code base storages.\")\n            return context\n        ##############################",
        "detail": "apps.datasource_codebase.views.code_base_storage.list_code_base_storages_views",
        "documentation": {}
    },
    {
        "label": "CodeBaseView_StorageUpdate",
        "kind": 6,
        "importPath": "apps.datasource_codebase.views.code_base_storage.update_code_base_storage_views",
        "description": "apps.datasource_codebase.views.code_base_storage.update_code_base_storage_views",
        "peekOfCode": "class CodeBaseView_StorageUpdate(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context_user = self.request.user\n        vector_store = get_object_or_404(CodeRepositoryStorageConnection, pk=kwargs['pk'])\n        context['user'] = context_user\n        context['knowledge_base_systems'] = KNOWLEDGE_BASE_SYSTEMS\n        context['vectorizers'] = VECTORIZERS\n        user_orgs = context_user.organizations.all()\n        agents_of_orgs = Assistant.objects.filter(organization__in=user_orgs)",
        "detail": "apps.datasource_codebase.views.code_base_storage.update_code_base_storage_views",
        "documentation": {}
    },
    {
        "label": "CodeBaseView_RepositoryCreate",
        "kind": 6,
        "importPath": "apps.datasource_codebase.views.code_repository.create_code_repository_views",
        "description": "apps.datasource_codebase.views.code_repository.create_code_repository_views",
        "peekOfCode": "class CodeBaseView_RepositoryCreate(LoginRequiredMixin, TemplateView):\n    def get(self, request, *args, **kwargs):\n        user_agents = Assistant.objects.filter(organization__users__in=[request.user])\n        vector_stores = CodeRepositoryStorageConnection.objects.filter(assistant__in=user_agents)\n        orgs = Organization.objects.filter(users__in=[request.user])\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['organizations'] = list(orgs.values('id', 'name'))\n        context['assistants'] = list(user_agents.values('id', 'name', 'organization_id'))\n        context['knowledge_bases'] = list(vector_stores.values('id', 'name', 'assistant_id'))\n        return self.render_to_response(context)",
        "detail": "apps.datasource_codebase.views.code_repository.create_code_repository_views",
        "documentation": {}
    },
    {
        "label": "CodeBaseView_RepositoryDeleteAll",
        "kind": 6,
        "importPath": "apps.datasource_codebase.views.code_repository.delete_all_code_repositories_views",
        "description": "apps.datasource_codebase.views.code_repository.delete_all_code_repositories_views",
        "peekOfCode": "class CodeBaseView_RepositoryDeleteAll(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context\n    def get(self, request, *args, **kwargs):\n        context = self.post(request, *args, **kwargs)\n        return self.render_to_response(context)\n    def post(self, request, *args, **kwargs):\n        vs_id = kwargs.get('kb_id')\n        ##############################",
        "detail": "apps.datasource_codebase.views.code_repository.delete_all_code_repositories_views",
        "documentation": {}
    },
    {
        "label": "CodeBaseView_RepositoryList",
        "kind": 6,
        "importPath": "apps.datasource_codebase.views.code_repository.list_code_repositories_views",
        "description": "apps.datasource_codebase.views.code_repository.list_code_repositories_views",
        "peekOfCode": "class CodeBaseView_RepositoryList(LoginRequiredMixin, TemplateView):\n    def get(self, request, *args, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_CODE_REPOSITORY\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_CODE_REPOSITORY):\n            messages.error(self.request, \"You do not have permission to list code repositories.\")\n            return context\n        ##############################",
        "detail": "apps.datasource_codebase.views.code_repository.list_code_repositories_views",
        "documentation": {}
    },
    {
        "label": "DatasourceCodebaseConfig",
        "kind": 6,
        "importPath": "apps.datasource_codebase.apps",
        "description": "apps.datasource_codebase.apps",
        "peekOfCode": "class DatasourceCodebaseConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.datasource_codebase'",
        "detail": "apps.datasource_codebase.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.datasource_codebase.urls",
        "description": "apps.datasource_codebase.urls",
        "peekOfCode": "app_name = 'datasource_codebase'\nurlpatterns = [\n    path('create/', CodeBaseView_StorageCreate.as_view(\n        template_name='datasource_codebase/storage/create_codebase_storage.html'\n    ), name='create'),\n    path('list/', CodeBaseView_StorageList.as_view(\n        template_name='datasource_codebase/storage/list_codebase_storages.html'\n    ), name='list'),\n    path('update/<int:pk>/', CodeBaseView_StorageUpdate.as_view(\n        template_name='datasource_codebase/storage/update_codebase_storage.html'",
        "detail": "apps.datasource_codebase.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.datasource_codebase.urls",
        "description": "apps.datasource_codebase.urls",
        "peekOfCode": "urlpatterns = [\n    path('create/', CodeBaseView_StorageCreate.as_view(\n        template_name='datasource_codebase/storage/create_codebase_storage.html'\n    ), name='create'),\n    path('list/', CodeBaseView_StorageList.as_view(\n        template_name='datasource_codebase/storage/list_codebase_storages.html'\n    ), name='list'),\n    path('update/<int:pk>/', CodeBaseView_StorageUpdate.as_view(\n        template_name='datasource_codebase/storage/update_codebase_storage.html'\n    ), name='update'),",
        "detail": "apps.datasource_codebase.urls",
        "documentation": {}
    },
    {
        "label": "DataSourceFileSystemAdmin",
        "kind": 6,
        "importPath": "apps.datasource_file_systems.admin.file_system_admin",
        "description": "apps.datasource_file_systems.admin.file_system_admin",
        "peekOfCode": "class DataSourceFileSystemAdmin(admin.ModelAdmin):\n    list_display = FILE_SYSTEM_ADMIN_LIST\n    list_filter = FILE_SYSTEM_ADMIN_FILTER\n    search_fields = FILE_SYSTEM_ADMIN_SEARCH\n    ordering = ('-created_at',)\n    readonly_fields = ('created_at', 'updated_at')\n    date_hierarchy = 'created_at'\n    save_on_top = True",
        "detail": "apps.datasource_file_systems.admin.file_system_admin",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.datasource_file_systems.migrations.0001_initial",
        "description": "apps.datasource_file_systems.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('assistants', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='DataSourceFileSystem',\n            fields=[",
        "detail": "apps.datasource_file_systems.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "DataSourceFileSystem",
        "kind": 6,
        "importPath": "apps.datasource_file_systems.models.file_system_models",
        "description": "apps.datasource_file_systems.models.file_system_models",
        "peekOfCode": "class DataSourceFileSystem(models.Model):\n    assistant = models.ForeignKey('assistants.Assistant', on_delete=models.CASCADE,\n                                  related_name='data_source_file_systems',\n                                  default=None, null=True)\n    os_type = models.CharField(max_length=50, choices=DATASOURCE_FILE_SYSTEMS_OS_TYPES)\n    name = models.CharField(max_length=255)\n    description = models.TextField(blank=True, null=True)\n    host_url = models.CharField(max_length=255)\n    port = models.IntegerField(default=22)\n    username = models.CharField(max_length=255)",
        "detail": "apps.datasource_file_systems.models.file_system_models",
        "documentation": {}
    },
    {
        "label": "fixture_datasource_file_systems_dashboards",
        "kind": 2,
        "importPath": "apps.datasource_file_systems.tests.conftest",
        "description": "apps.datasource_file_systems.tests.conftest",
        "peekOfCode": "def fixture_datasource_file_systems_dashboards():\n    return True",
        "detail": "apps.datasource_file_systems.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_datasource_file_systems_test_forms",
        "kind": 2,
        "importPath": "apps.datasource_file_systems.tests.test_forms",
        "description": "apps.datasource_file_systems.tests.test_forms",
        "peekOfCode": "def test_init_datasource_file_systems_test_forms():\n    assert True",
        "detail": "apps.datasource_file_systems.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_datasource_file_systems_test_models",
        "kind": 2,
        "importPath": "apps.datasource_file_systems.tests.test_models",
        "description": "apps.datasource_file_systems.tests.test_models",
        "peekOfCode": "def test_init_datasource_file_systems_test_models():\n    assert True",
        "detail": "apps.datasource_file_systems.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_datasource_file_systems_test_utils",
        "kind": 2,
        "importPath": "apps.datasource_file_systems.tests.test_utils",
        "description": "apps.datasource_file_systems.tests.test_utils",
        "peekOfCode": "def test_init_datasource_file_systems_test_utils():\n    assert True",
        "detail": "apps.datasource_file_systems.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_datasource_file_systems_test_views",
        "kind": 2,
        "importPath": "apps.datasource_file_systems.tests.test_views",
        "description": "apps.datasource_file_systems.tests.test_views",
        "peekOfCode": "def test_init_datasource_file_systems_test_views():\n    assert True",
        "detail": "apps.datasource_file_systems.tests.test_views",
        "documentation": {}
    },
    {
        "label": "DataSourceFileSystemsOsTypeNames",
        "kind": 6,
        "importPath": "apps.datasource_file_systems.utils.constant_utils",
        "description": "apps.datasource_file_systems.utils.constant_utils",
        "peekOfCode": "class DataSourceFileSystemsOsTypeNames:\n    LINUX = 'linux'\n    MACOS = 'macos'\nFILE_SYSTEM_ADMIN_LIST = ('name', 'os_type', 'host_url', 'port', 'username', 'is_read_only')\nFILE_SYSTEM_ADMIN_FILTER = ('os_type', 'is_read_only')\nFILE_SYSTEM_ADMIN_SEARCH = ('name', 'host_url', 'username', 'ssh_connection_uri')",
        "detail": "apps.datasource_file_systems.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "SSH_CONNECTION_DEFAULT_BANNER_TIMEOUT",
        "kind": 5,
        "importPath": "apps.datasource_file_systems.utils.constant_utils",
        "description": "apps.datasource_file_systems.utils.constant_utils",
        "peekOfCode": "SSH_CONNECTION_DEFAULT_BANNER_TIMEOUT = 200\nDATASOURCE_FILE_SYSTEMS_OS_TYPES = [\n    ('linux', 'Linux'),\n    ('macos', 'MacOS'),\n]\nclass DataSourceFileSystemsOsTypeNames:\n    LINUX = 'linux'\n    MACOS = 'macos'\nFILE_SYSTEM_ADMIN_LIST = ('name', 'os_type', 'host_url', 'port', 'username', 'is_read_only')\nFILE_SYSTEM_ADMIN_FILTER = ('os_type', 'is_read_only')",
        "detail": "apps.datasource_file_systems.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DATASOURCE_FILE_SYSTEMS_OS_TYPES",
        "kind": 5,
        "importPath": "apps.datasource_file_systems.utils.constant_utils",
        "description": "apps.datasource_file_systems.utils.constant_utils",
        "peekOfCode": "DATASOURCE_FILE_SYSTEMS_OS_TYPES = [\n    ('linux', 'Linux'),\n    ('macos', 'MacOS'),\n]\nclass DataSourceFileSystemsOsTypeNames:\n    LINUX = 'linux'\n    MACOS = 'macos'\nFILE_SYSTEM_ADMIN_LIST = ('name', 'os_type', 'host_url', 'port', 'username', 'is_read_only')\nFILE_SYSTEM_ADMIN_FILTER = ('os_type', 'is_read_only')\nFILE_SYSTEM_ADMIN_SEARCH = ('name', 'host_url', 'username', 'ssh_connection_uri')",
        "detail": "apps.datasource_file_systems.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "FILE_SYSTEM_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.datasource_file_systems.utils.constant_utils",
        "description": "apps.datasource_file_systems.utils.constant_utils",
        "peekOfCode": "FILE_SYSTEM_ADMIN_LIST = ('name', 'os_type', 'host_url', 'port', 'username', 'is_read_only')\nFILE_SYSTEM_ADMIN_FILTER = ('os_type', 'is_read_only')\nFILE_SYSTEM_ADMIN_SEARCH = ('name', 'host_url', 'username', 'ssh_connection_uri')",
        "detail": "apps.datasource_file_systems.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "FILE_SYSTEM_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.datasource_file_systems.utils.constant_utils",
        "description": "apps.datasource_file_systems.utils.constant_utils",
        "peekOfCode": "FILE_SYSTEM_ADMIN_FILTER = ('os_type', 'is_read_only')\nFILE_SYSTEM_ADMIN_SEARCH = ('name', 'host_url', 'username', 'ssh_connection_uri')",
        "detail": "apps.datasource_file_systems.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "FILE_SYSTEM_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.datasource_file_systems.utils.constant_utils",
        "description": "apps.datasource_file_systems.utils.constant_utils",
        "peekOfCode": "FILE_SYSTEM_ADMIN_SEARCH = ('name', 'host_url', 'username', 'ssh_connection_uri')",
        "detail": "apps.datasource_file_systems.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "FileSystemView_Create",
        "kind": 6,
        "importPath": "apps.datasource_file_systems.views.create_file_system_views",
        "description": "apps.datasource_file_systems.views.create_file_system_views",
        "peekOfCode": "class FileSystemView_Create(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context_user = self.request.user\n        orgs = context_user.organizations.filter(users__in=[context_user])\n        context['assistants'] = Assistant.objects.filter(organization__in=orgs)\n        context['os_choices'] = DATASOURCE_FILE_SYSTEMS_OS_TYPES\n        context['user'] = context_user\n        return context\n    def post(self, request, *args, **kwargs):",
        "detail": "apps.datasource_file_systems.views.create_file_system_views",
        "documentation": {}
    },
    {
        "label": "FileSystemView_Delete",
        "kind": 6,
        "importPath": "apps.datasource_file_systems.views.delete_file_system_views",
        "description": "apps.datasource_file_systems.views.delete_file_system_views",
        "peekOfCode": "class FileSystemView_Delete(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context\n    def get(self, request, *args, **kwargs):\n        return self.post(request, *args, **kwargs)\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - DELETE_FILE_SYSTEMS\n        if not UserPermissionManager.is_authorized(user=self.request.user,",
        "detail": "apps.datasource_file_systems.views.delete_file_system_views",
        "documentation": {}
    },
    {
        "label": "FileSystemView_List",
        "kind": 6,
        "importPath": "apps.datasource_file_systems.views.list_file_systems_views",
        "description": "apps.datasource_file_systems.views.list_file_systems_views",
        "peekOfCode": "class FileSystemView_List(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_FILE_SYSTEMS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_FILE_SYSTEMS):\n            messages.error(self.request, \"You do not have permission to list file system connections.\")\n            return context\n        ##############################",
        "detail": "apps.datasource_file_systems.views.list_file_systems_views",
        "documentation": {}
    },
    {
        "label": "FileSystemView_Update",
        "kind": 6,
        "importPath": "apps.datasource_file_systems.views.update_file_system_views",
        "description": "apps.datasource_file_systems.views.update_file_system_views",
        "peekOfCode": "class FileSystemView_Update(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context_user = self.request.user\n        orgs = context_user.organizations.filter(users__in=[context_user])\n        context['assistants'] = Assistant.objects.filter(organization__in=orgs)\n        context['os_choices'] = DATASOURCE_FILE_SYSTEMS_OS_TYPES\n        context['user'] = context_user\n        try:\n            conn = DataSourceFileSystem.objects.get(pk=kwargs['pk'])",
        "detail": "apps.datasource_file_systems.views.update_file_system_views",
        "documentation": {}
    },
    {
        "label": "DatasourceFileSystemsConfig",
        "kind": 6,
        "importPath": "apps.datasource_file_systems.apps",
        "description": "apps.datasource_file_systems.apps",
        "peekOfCode": "class DatasourceFileSystemsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.datasource_file_systems'",
        "detail": "apps.datasource_file_systems.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.datasource_file_systems.urls",
        "description": "apps.datasource_file_systems.urls",
        "peekOfCode": "app_name = 'datasource_file_systems'\nurlpatterns = [\n    path('create/', views.FileSystemView_Create.as_view(\n        template_name='datasource_file_systems/create_datasource_file_system.html'), name='create'),\n    path('update/<int:pk>/', views.FileSystemView_Update.as_view(\n        template_name='datasource_file_systems/update_datasource_file_system.html'), name='update'),\n    path('list/', views.FileSystemView_List.as_view(\n        template_name='datasource_file_systems/list_datasource_file_systems.html'), name='list'),\n    path('delete/<int:pk>/', views.FileSystemView_Delete.as_view(), name='delete'),\n]",
        "detail": "apps.datasource_file_systems.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.datasource_file_systems.urls",
        "description": "apps.datasource_file_systems.urls",
        "peekOfCode": "urlpatterns = [\n    path('create/', views.FileSystemView_Create.as_view(\n        template_name='datasource_file_systems/create_datasource_file_system.html'), name='create'),\n    path('update/<int:pk>/', views.FileSystemView_Update.as_view(\n        template_name='datasource_file_systems/update_datasource_file_system.html'), name='update'),\n    path('list/', views.FileSystemView_List.as_view(\n        template_name='datasource_file_systems/list_datasource_file_systems.html'), name='list'),\n    path('delete/<int:pk>/', views.FileSystemView_Delete.as_view(), name='delete'),\n]",
        "detail": "apps.datasource_file_systems.urls",
        "documentation": {}
    },
    {
        "label": "ContextHistoryKnowledgeBaseConnectionAdmin",
        "kind": 6,
        "importPath": "apps.datasource_knowledge_base.admin.context_history.context_history_base_admin",
        "description": "apps.datasource_knowledge_base.admin.context_history.context_history_base_admin",
        "peekOfCode": "class ContextHistoryKnowledgeBaseConnectionAdmin(admin.ModelAdmin):\n    list_display = INTRA_MEMORY_ADMIN_LIST\n    list_filter = INTRA_MEMORY_ADMIN_FILTER\n    search_fields = INTRA_MEMORY_ADMIN_SEARCH\n    readonly_fields = ['created_at', 'updated_at']\n    def save_model(self, request, obj, form, change):\n        if obj.vectorizer is None:\n            obj.vectorizer = \"text2vec-openai\"\n        if obj.class_name is None:\n            obj.class_name = build_weaviate_intra_memory_class_name()",
        "detail": "apps.datasource_knowledge_base.admin.context_history.context_history_base_admin",
        "documentation": {}
    },
    {
        "label": "ContextHistoryMemoryAdmin",
        "kind": 6,
        "importPath": "apps.datasource_knowledge_base.admin.context_history.context_history_memory_admin",
        "description": "apps.datasource_knowledge_base.admin.context_history.context_history_memory_admin",
        "peekOfCode": "class ContextHistoryMemoryAdmin(admin.ModelAdmin):\n    list_display = INTRA_MEMORY_MEMORY_ADMIN_LIST\n    list_filter = INTRA_MEMORY_MEMORY_ADMIN_FILTER\n    search_fields = INTRA_MEMORY_MEMORY_ADMIN_SEARCH\n    readonly_fields = ['created_at', 'updated_at']\n    def delete_selected(self, request, queryset):\n        for obj in queryset:\n            c = IntraContextMemoryExecutor(connection=obj.context_history_base)\n            if c is not None:\n                o = c.delete_chat_history_document(",
        "detail": "apps.datasource_knowledge_base.admin.context_history.context_history_memory_admin",
        "documentation": {}
    },
    {
        "label": "ContextHistoryMemoryChunkAdmin",
        "kind": 6,
        "importPath": "apps.datasource_knowledge_base.admin.context_history.context_history_memory_chunk_admin",
        "description": "apps.datasource_knowledge_base.admin.context_history.context_history_memory_chunk_admin",
        "peekOfCode": "class ContextHistoryMemoryChunkAdmin(admin.ModelAdmin):\n    list_display = INTRA_MEMORY_MEMORY_CHUNK_ADMIN_LIST\n    list_filter = INTRA_MEMORY_MEMORY_CHUNK_ADMIN_FILTER\n    search_fields = INTRA_MEMORY_MEMORY_CHUNK_ADMIN_SEARCH\n    readonly_fields = ['created_at', 'updated_at']",
        "detail": "apps.datasource_knowledge_base.admin.context_history.context_history_memory_chunk_admin",
        "documentation": {}
    },
    {
        "label": "KnowledgeBaseDocumentAdmin",
        "kind": 6,
        "importPath": "apps.datasource_knowledge_base.admin.document.document_admin",
        "description": "apps.datasource_knowledge_base.admin.document.document_admin",
        "peekOfCode": "class KnowledgeBaseDocumentAdmin(admin.ModelAdmin):\n    list_display = DOCUMENT_ADMIN_LIST\n    list_filter = DOCUMENT_ADMIN_FILTER\n    search_fields = DOCUMENT_ADMIN_SEARCH\n    readonly_fields = ['created_at', 'updated_at']\n    def delete_selected(self, request, queryset):\n        for obj in queryset:\n            c = KnowledgeBaseSystemDecoder.get(obj.knowledge_base)\n            if c is not None:\n                o = c.delete_weaviate_document(",
        "detail": "apps.datasource_knowledge_base.admin.document.document_admin",
        "documentation": {}
    },
    {
        "label": "KnowledgeBaseDocumentChunkAdmin",
        "kind": 6,
        "importPath": "apps.datasource_knowledge_base.admin.document.document_chunk_admin",
        "description": "apps.datasource_knowledge_base.admin.document.document_chunk_admin",
        "peekOfCode": "class KnowledgeBaseDocumentChunkAdmin(admin.ModelAdmin):\n    list_display = DOCUMENT_CHUNK_ADMIN_LIST\n    list_filter = DOCUMENT_CHUNK_ADMIN_FILTER\n    search_fields = DOCUMENT_CHUNK_ADMIN_SEARCH\n    readonly_fields = ['created_at']",
        "detail": "apps.datasource_knowledge_base.admin.document.document_chunk_admin",
        "documentation": {}
    },
    {
        "label": "DocumentProcessingLogAdmin",
        "kind": 6,
        "importPath": "apps.datasource_knowledge_base.admin.document.document_processing_log_admin",
        "description": "apps.datasource_knowledge_base.admin.document.document_processing_log_admin",
        "peekOfCode": "class DocumentProcessingLogAdmin(admin.ModelAdmin):\n    list_display = DOCUMENT_PROCESSING_LOG_ADMIN_LIST\n    list_filter = DOCUMENT_PROCESSING_LOG_ADMIN_FILTER\n    search_fields = DOCUMENT_PROCESSING_LOG_ADMIN_SEARCH\n    readonly_fields = ['created_at']",
        "detail": "apps.datasource_knowledge_base.admin.document.document_processing_log_admin",
        "documentation": {}
    },
    {
        "label": "DocumentKnowledgeBaseConnectionAdmin",
        "kind": 6,
        "importPath": "apps.datasource_knowledge_base.admin.document.knowledge_base_admin",
        "description": "apps.datasource_knowledge_base.admin.document.knowledge_base_admin",
        "peekOfCode": "class DocumentKnowledgeBaseConnectionAdmin(admin.ModelAdmin):\n    list_display = DOCUMENT_VECTOR_STORE_CONNECTION_ADMIN_LIST\n    list_filter = DOCUMENT_VECTOR_STORE_CONNECTION_ADMIN_FILTER\n    search_fields = DOCUMENT_VECTOR_STORE_CONNECTION_ADMIN_SEARCH\n    readonly_fields = ['created_at', 'updated_at']\n    def save_model(self, request, obj, form, change):\n        if obj.vectorizer is None:\n            obj.vectorizer = \"text2vec-openai\"\n        if obj.class_name is None:\n            obj.class_name = build_weaviate_class_name(obj)",
        "detail": "apps.datasource_knowledge_base.admin.document.knowledge_base_admin",
        "documentation": {}
    },
    {
        "label": "MultipleFileInput",
        "kind": 6,
        "importPath": "apps.datasource_knowledge_base.forms.document_upload_forms",
        "description": "apps.datasource_knowledge_base.forms.document_upload_forms",
        "peekOfCode": "class MultipleFileInput(forms.ClearableFileInput):\n    allow_multiple_selected = True\nclass MultipleFileField(forms.FileField):\n    def __init__(self, *args, **kwargs):\n        kwargs.setdefault(\"widget\", MultipleFileInput())\n        super().__init__(*args, **kwargs)\n    def clean(self, data, initial=None):\n        single_file_clean = super().clean\n        if isinstance(data, (list, tuple)):\n            result = [single_file_clean(d, initial) for d in data]",
        "detail": "apps.datasource_knowledge_base.forms.document_upload_forms",
        "documentation": {}
    },
    {
        "label": "MultipleFileField",
        "kind": 6,
        "importPath": "apps.datasource_knowledge_base.forms.document_upload_forms",
        "description": "apps.datasource_knowledge_base.forms.document_upload_forms",
        "peekOfCode": "class MultipleFileField(forms.FileField):\n    def __init__(self, *args, **kwargs):\n        kwargs.setdefault(\"widget\", MultipleFileInput())\n        super().__init__(*args, **kwargs)\n    def clean(self, data, initial=None):\n        single_file_clean = super().clean\n        if isinstance(data, (list, tuple)):\n            result = [single_file_clean(d, initial) for d in data]\n        else:\n            result = single_file_clean(data, initial)",
        "detail": "apps.datasource_knowledge_base.forms.document_upload_forms",
        "documentation": {}
    },
    {
        "label": "DocumentUploadForm",
        "kind": 6,
        "importPath": "apps.datasource_knowledge_base.forms.document_upload_forms",
        "description": "apps.datasource_knowledge_base.forms.document_upload_forms",
        "peekOfCode": "class DocumentUploadForm(forms.Form):\n    document_files = MultipleFileField(label='Select Documents to Upload', required=True)\n    class Meta:\n        pass",
        "detail": "apps.datasource_knowledge_base.forms.document_upload_forms",
        "documentation": {}
    },
    {
        "label": "DocumentKnowledgeBaseForm",
        "kind": 6,
        "importPath": "apps.datasource_knowledge_base.forms.knowledge_base_forms",
        "description": "apps.datasource_knowledge_base.forms.knowledge_base_forms",
        "peekOfCode": "class DocumentKnowledgeBaseForm(forms.ModelForm):\n    class Meta:\n        model = DocumentKnowledgeBaseConnection\n        fields = [\n            'provider', 'host_url', 'provider_api_key', 'assistant', 'name', 'description', 'vectorizer',\n            'vectorizer_api_key', 'embedding_chunk_size', 'embedding_chunk_overlap', 'search_instance_retrieval_limit'\n        ]\n        widgets = {'description': forms.Textarea(attrs={'rows': 3})}",
        "detail": "apps.datasource_knowledge_base.forms.knowledge_base_forms",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.datasource_knowledge_base.migrations.0001_initial",
        "description": "apps.datasource_knowledge_base.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('assistants', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='ContextHistoryMemory',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "apps.datasource_knowledge_base.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.datasource_knowledge_base.migrations.0002_initial",
        "description": "apps.datasource_knowledge_base.migrations.0002_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('assistants', '0003_initial'),\n        ('datasource_knowledge_base', '0001_initial'),\n        ('multimodal_chat', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='contexthistoryknowledgebaseconnection',",
        "detail": "apps.datasource_knowledge_base.migrations.0002_initial",
        "documentation": {}
    },
    {
        "label": "ContextHistoryKnowledgeBaseConnection",
        "kind": 6,
        "importPath": "apps.datasource_knowledge_base.models.context_history.context_history_base_models",
        "description": "apps.datasource_knowledge_base.models.context_history.context_history_base_models",
        "peekOfCode": "class ContextHistoryKnowledgeBaseConnection(models.Model):\n    assistant = models.ForeignKey('assistants.Assistant', on_delete=models.CASCADE, default=1)\n    chat = models.ForeignKey('multimodal_chat.MultimodalChat', on_delete=models.CASCADE, default=1)\n    class_name = models.CharField(max_length=1000, null=True, blank=True)\n    vectorizer = models.CharField(max_length=100, choices=EMBEDDING_VECTORIZER_MODELS, default=\"text2vec-openai\")\n    vectorizer_api_key = models.CharField(max_length=1000, null=True, blank=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    def __str__(self):\n        return self.assistant.name + \" - \" + self.created_at.strftime(\"%Y%m%d%H%M%S\")",
        "detail": "apps.datasource_knowledge_base.models.context_history.context_history_base_models",
        "documentation": {}
    },
    {
        "label": "ContextHistoryMemoryChunk",
        "kind": 6,
        "importPath": "apps.datasource_knowledge_base.models.context_history.context_history_memory_chunk_models",
        "description": "apps.datasource_knowledge_base.models.context_history.context_history_memory_chunk_models",
        "peekOfCode": "class ContextHistoryMemoryChunk(models.Model):\n    context_history_base = models.ForeignKey(\"ContextHistoryKnowledgeBaseConnection\", on_delete=models.CASCADE)\n    memory = models.ForeignKey(\"ContextHistoryMemory\", on_delete=models.CASCADE, related_name='memory_chunks')\n    chunk_number = models.IntegerField()\n    chunk_content = models.TextField()\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    knowledge_base_memory_uuid = models.CharField(max_length=1000, null=True, blank=True)\n    chunk_uuid = models.CharField(max_length=1000, null=True, blank=True)\n    def __str__(self):",
        "detail": "apps.datasource_knowledge_base.models.context_history.context_history_memory_chunk_models",
        "documentation": {}
    },
    {
        "label": "ContextHistoryMemory",
        "kind": 6,
        "importPath": "apps.datasource_knowledge_base.models.context_history.context_history_memory_models",
        "description": "apps.datasource_knowledge_base.models.context_history.context_history_memory_models",
        "peekOfCode": "class ContextHistoryMemory(models.Model):\n    context_history_base = models.ForeignKey(\"ContextHistoryKnowledgeBaseConnection\", on_delete=models.CASCADE,\n                                             related_name='context_history_memories')\n    memory_name = models.CharField(max_length=1000, null=True, blank=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    knowledge_base_memory_uuid = models.CharField(max_length=1000, null=True, blank=True)\n    def __str__(self):\n        return self.context_history_base.assistant.name + \" - \" + self.created_at.strftime(\"%Y%m%d%H%M%S\")\n    class Meta:",
        "detail": "apps.datasource_knowledge_base.models.context_history.context_history_memory_models",
        "documentation": {}
    },
    {
        "label": "KnowledgeBaseDocumentChunk",
        "kind": 6,
        "importPath": "apps.datasource_knowledge_base.models.document.document_chunk_models",
        "description": "apps.datasource_knowledge_base.models.document.document_chunk_models",
        "peekOfCode": "class KnowledgeBaseDocumentChunk(models.Model):\n    knowledge_base = models.ForeignKey(\"DocumentKnowledgeBaseConnection\", on_delete=models.CASCADE)\n    document = models.ForeignKey(\"KnowledgeBaseDocument\", on_delete=models.CASCADE, related_name='document_chunks')\n    chunk_document_type = models.CharField(max_length=100, choices=UPLOAD_FILES_SUPPORTED_FORMATS, blank=True, null=True)\n    chunk_number = models.IntegerField()\n    chunk_content = models.TextField()\n    chunk_metadata = models.TextField()\n    chunk_document_uri = models.CharField(max_length=1000, null=True, blank=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)",
        "detail": "apps.datasource_knowledge_base.models.document.document_chunk_models",
        "documentation": {}
    },
    {
        "label": "KnowledgeBaseDocument",
        "kind": 6,
        "importPath": "apps.datasource_knowledge_base.models.document.document_models",
        "description": "apps.datasource_knowledge_base.models.document.document_models",
        "peekOfCode": "class KnowledgeBaseDocument(models.Model):\n    knowledge_base = models.ForeignKey(\"DocumentKnowledgeBaseConnection\", on_delete=models.CASCADE,\n                                       related_name='knowledge_base_documents')\n    document_type = models.CharField(max_length=100, choices=UPLOAD_FILES_SUPPORTED_FORMATS)\n    document_file_name = models.CharField(max_length=1000)\n    document_description = models.TextField()  # null for now\n    document_metadata = models.JSONField()  # auto\n    document_uri = models.CharField(max_length=1000, null=True, blank=True)\n    knowledge_base_uuid = models.CharField(max_length=1000, null=True, blank=True)\n    document_content_temporary = models.TextField(blank=True, null=True)",
        "detail": "apps.datasource_knowledge_base.models.document.document_models",
        "documentation": {}
    },
    {
        "label": "DocumentProcessingLog",
        "kind": 6,
        "importPath": "apps.datasource_knowledge_base.models.document.document_processing_log_models",
        "description": "apps.datasource_knowledge_base.models.document.document_processing_log_models",
        "peekOfCode": "class DocumentProcessingLog(models.Model):\n    document_full_uri = models.CharField(max_length=1000)\n    log_message = models.TextField()\n    created_at = models.DateTimeField(auto_now_add=True)\n    def __str__(self):\n        return self.document_full_uri + \" - \" + self.created_at.strftime(\"%Y%m%d%H%M%S\")\n    class Meta:\n        verbose_name = \"Document Processing Log\"\n        verbose_name_plural = \"Document Processing Logs\"\n        ordering = [\"-created_at\"]",
        "detail": "apps.datasource_knowledge_base.models.document.document_processing_log_models",
        "documentation": {}
    },
    {
        "label": "DocumentKnowledgeBaseConnection",
        "kind": 6,
        "importPath": "apps.datasource_knowledge_base.models.document.knowledge_base_models",
        "description": "apps.datasource_knowledge_base.models.document.knowledge_base_models",
        "peekOfCode": "class DocumentKnowledgeBaseConnection(models.Model):\n    provider = models.CharField(max_length=100, choices=VECTORSTORE_SYSTEMS)\n    host_url = models.CharField(max_length=1000)\n    provider_api_key = models.CharField(max_length=1000, null=True, blank=True)\n    assistant = models.ForeignKey('assistants.Assistant', on_delete=models.CASCADE)\n    name = models.CharField(max_length=1000)\n    class_name = models.CharField(max_length=1000, null=True, blank=True)\n    description = models.TextField()\n    vectorizer = models.CharField(max_length=100, choices=EMBEDDING_VECTORIZER_MODELS, default=\"text2vec-openai\", null=True,\n                                  blank=True)",
        "detail": "apps.datasource_knowledge_base.models.document.knowledge_base_models",
        "documentation": {}
    },
    {
        "label": "add_vector_store_doc_loaded_log",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.tasks.document.add_document_upload_log_tasks",
        "description": "apps.datasource_knowledge_base.tasks.document.add_document_upload_log_tasks",
        "peekOfCode": "def add_vector_store_doc_loaded_log(document_full_uri, log_name):\n    from apps.datasource_knowledge_base.models import DocumentProcessingLog\n    DocumentProcessingLog.objects.create(\n        document_full_uri=document_full_uri, log_message=log_name\n    )",
        "detail": "apps.datasource_knowledge_base.tasks.document.add_document_upload_log_tasks",
        "documentation": {}
    },
    {
        "label": "embed_document_chunks",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.tasks.document.embed_document_chunks_tasks",
        "description": "apps.datasource_knowledge_base.tasks.document.embed_document_chunks_tasks",
        "peekOfCode": "def embed_document_chunks(executor_params, chunks, path, document_id, document_uuid):\n    try:\n        error = factory_embed_document_chunks_handler(\n            executor_params=executor_params, chunks=chunks, path=path, document_id=document_id,\n            document_uuid=document_uuid\n        )\n    except Exception as e:\n        error = f\"[tasks.embed_document_chunks] Error embedding the document chunks: {e}\"\n    return error",
        "detail": "apps.datasource_knowledge_base.tasks.document.embed_document_chunks_tasks",
        "documentation": {}
    },
    {
        "label": "embed_document_data",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.tasks.document.embed_document_data_tasks",
        "description": "apps.datasource_knowledge_base.tasks.document.embed_document_data_tasks",
        "peekOfCode": "def embed_document_data(executor_params, document, path, number_of_chunks):\n    doc_id, doc_uuid = None, None\n    try:\n        doc_id, doc_uuid, error = embed_document_helper(\n            executor_params=executor_params, document=document, path=path, number_of_chunks=number_of_chunks\n        )\n    except Exception as e:\n        error = f\"[tasks.embed_document_data] Error embedding the document: {e}\"\n    return doc_id, doc_uuid, error",
        "detail": "apps.datasource_knowledge_base.tasks.document.embed_document_data_tasks",
        "documentation": {}
    },
    {
        "label": "index_document_helper",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.tasks.document.index_document_helper_tasks",
        "description": "apps.datasource_knowledge_base.tasks.document.index_document_helper_tasks",
        "peekOfCode": "def index_document_helper(connection_id, document_paths):\n    from apps.datasource_knowledge_base.models import DocumentKnowledgeBaseConnection\n    from apps.core.vector_operations.vector_document.vector_store_decoder import KnowledgeBaseSystemDecoder\n    from apps.datasource_knowledge_base.utils import VectorStoreDocProcessingStatusNames\n    from apps.datasource_knowledge_base.tasks import add_vector_store_doc_loaded_log\n    conn = DocumentKnowledgeBaseConnection.objects.get(id=connection_id)\n    xc = KnowledgeBaseSystemDecoder.get(connection=conn)\n    if isinstance(document_paths, str):\n        document_paths = [document_paths]\n    for i, path in enumerate(document_paths):",
        "detail": "apps.datasource_knowledge_base.tasks.document.index_document_helper_tasks",
        "documentation": {}
    },
    {
        "label": "split_document_into_chunks",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.tasks.document.split_document_into_chunks_tasks",
        "description": "apps.datasource_knowledge_base.tasks.document.split_document_into_chunks_tasks",
        "peekOfCode": "def split_document_into_chunks(connection_id, doc):\n    from apps.datasource_knowledge_base.models import DocumentKnowledgeBaseConnection\n    conn = DocumentKnowledgeBaseConnection.objects.get(id=connection_id)\n    splitter = RecursiveCharacterTextSplitter.from_tiktoken_encoder(\n        chunk_size=conn.embedding_chunk_size, chunk_overlap=conn.embedding_chunk_overlap\n    )\n    chks = splitter.split_text(doc[\"page_content\"])\n    chks_cleaned = []\n    for i, chk in enumerate(chks):\n        doc[\"metadata\"][\"chunk_index\"] = i",
        "detail": "apps.datasource_knowledge_base.tasks.document.split_document_into_chunks_tasks",
        "documentation": {}
    },
    {
        "label": "load_csv_content",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.tasks.file_loader.csv_file_loader",
        "description": "apps.datasource_knowledge_base.tasks.file_loader.csv_file_loader",
        "peekOfCode": "def load_csv_content(uri: str):\n    loader = UnstructuredCSVLoader(file_path=uri, mode=\"single\")\n    docs = loader.load()\n    clean_doc = {\n        \"page_content\": \"\",\n        \"metadata\": {}\n    }\n    if docs:\n        for doc in docs:\n            try:",
        "detail": "apps.datasource_knowledge_base.tasks.file_loader.csv_file_loader",
        "documentation": {}
    },
    {
        "label": "load_docx_content",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.tasks.file_loader.docx_file_loader",
        "description": "apps.datasource_knowledge_base.tasks.file_loader.docx_file_loader",
        "peekOfCode": "def load_docx_content(path: str):\n    loader = Docx2txtLoader(file_path=path)\n    docs = loader.load()\n    clean_doc = {\n        \"page_content\": \"\",\n        \"metadata\": {}\n    }\n    if docs:\n        for doc in docs:\n            try:",
        "detail": "apps.datasource_knowledge_base.tasks.file_loader.docx_file_loader",
        "documentation": {}
    },
    {
        "label": "load_html_content",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.tasks.file_loader.html_file_loader",
        "description": "apps.datasource_knowledge_base.tasks.file_loader.html_file_loader",
        "peekOfCode": "def load_html_content(path: str):\n    loader = UnstructuredHTMLLoader(file_path=path)\n    docs = loader.load()\n    clean_doc = {\n        \"page_content\": \"\",\n        \"metadata\": {}\n    }\n    if docs:\n        for doc in docs:\n            try:",
        "detail": "apps.datasource_knowledge_base.tasks.file_loader.html_file_loader",
        "documentation": {}
    },
    {
        "label": "load_ipynb_content",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.tasks.file_loader.ipynb_file_loader",
        "description": "apps.datasource_knowledge_base.tasks.file_loader.ipynb_file_loader",
        "peekOfCode": "def load_ipynb_content(path: str):\n    loader = NotebookLoader(path=path)\n    docs = loader.load()\n    clean_doc = {\n        \"page_content\": \"\",\n        \"metadata\": {}\n    }\n    if docs:\n        for doc in docs:\n            try:",
        "detail": "apps.datasource_knowledge_base.tasks.file_loader.ipynb_file_loader",
        "documentation": {}
    },
    {
        "label": "load_json_content",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.tasks.file_loader.json_file_loader",
        "description": "apps.datasource_knowledge_base.tasks.file_loader.json_file_loader",
        "peekOfCode": "def load_json_content(path: str):\n    loader = JSONLoader(file_path=path, jq_schema=\".\", text_content=False)\n    docs = loader.load()\n    clean_doc = {\n        \"page_content\": \"\",\n        \"metadata\": {}\n    }\n    if docs:\n        for doc in docs:\n            try:",
        "detail": "apps.datasource_knowledge_base.tasks.file_loader.json_file_loader",
        "documentation": {}
    },
    {
        "label": "load_md_content",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.tasks.file_loader.md_file_loader",
        "description": "apps.datasource_knowledge_base.tasks.file_loader.md_file_loader",
        "peekOfCode": "def load_md_content(path: str):\n    loader = UnstructuredMarkdownLoader(file_path=path)\n    docs = loader.load()\n    clean_doc = {\n        \"page_content\": \"\",\n        \"metadata\": {}\n    }\n    if docs:\n        for doc in docs:\n            try:",
        "detail": "apps.datasource_knowledge_base.tasks.file_loader.md_file_loader",
        "documentation": {}
    },
    {
        "label": "load_odt_content",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.tasks.file_loader.odt_file_loader",
        "description": "apps.datasource_knowledge_base.tasks.file_loader.odt_file_loader",
        "peekOfCode": "def load_odt_content(path: str):\n    loader = UnstructuredODTLoader(file_path=path)\n    docs = loader.load()\n    clean_doc = {\n        \"page_content\": \"\",\n        \"metadata\": {}\n    }\n    if docs:\n        for doc in docs:\n            try:",
        "detail": "apps.datasource_knowledge_base.tasks.file_loader.odt_file_loader",
        "documentation": {}
    },
    {
        "label": "load_pdf_content",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.tasks.file_loader.pdf_file_loader",
        "description": "apps.datasource_knowledge_base.tasks.file_loader.pdf_file_loader",
        "peekOfCode": "def load_pdf_content(path: str):\n    loader = PyPDFLoader(file_path=path)\n    docs = loader.load()\n    clean_doc = {\n        \"page_content\": \"\",\n        \"metadata\": {}\n    }\n    if docs:\n        for doc in docs:\n            try:",
        "detail": "apps.datasource_knowledge_base.tasks.file_loader.pdf_file_loader",
        "documentation": {}
    },
    {
        "label": "load_pptx_content",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.tasks.file_loader.pptx_file_loader",
        "description": "apps.datasource_knowledge_base.tasks.file_loader.pptx_file_loader",
        "peekOfCode": "def load_pptx_content(path: str):\n    loader = UnstructuredPowerPointLoader(file_path=path)\n    docs = loader.load()\n    clean_doc = {\n        \"page_content\": \"\",\n        \"metadata\": {}\n    }\n    if docs:\n        for doc in docs:\n            try:",
        "detail": "apps.datasource_knowledge_base.tasks.file_loader.pptx_file_loader",
        "documentation": {}
    },
    {
        "label": "load_rtf_content",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.tasks.file_loader.rtf_file_loader",
        "description": "apps.datasource_knowledge_base.tasks.file_loader.rtf_file_loader",
        "peekOfCode": "def load_rtf_content(path: str):\n    loader = UnstructuredRTFLoader(file_path=path)\n    docs = loader.load()\n    clean_doc = {\n        \"page_content\": \"\",\n        \"metadata\": {}\n    }\n    if docs:\n        for doc in docs:\n            try:",
        "detail": "apps.datasource_knowledge_base.tasks.file_loader.rtf_file_loader",
        "documentation": {}
    },
    {
        "label": "load_txt_content",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.tasks.file_loader.txt_file_loader",
        "description": "apps.datasource_knowledge_base.tasks.file_loader.txt_file_loader",
        "peekOfCode": "def load_txt_content(path: str):\n    clean_doc = {\n        \"page_content\": \"\",\n        \"metadata\": {}\n    }\n    with open(path, \"r\") as f:\n        content = f.read()\n        clean_doc[\"page_content\"] = content\n        clean_doc[\"metadata\"] = {\n            \"file_name\": path.split(\"/\")[-1],",
        "detail": "apps.datasource_knowledge_base.tasks.file_loader.txt_file_loader",
        "documentation": {}
    },
    {
        "label": "load_xlsx_content",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.tasks.file_loader.xlsx_file_loader",
        "description": "apps.datasource_knowledge_base.tasks.file_loader.xlsx_file_loader",
        "peekOfCode": "def load_xlsx_content(path: str):\n    loader = UnstructuredExcelLoader(file_path=path)\n    docs = loader.load()\n    clean_doc = {\n        \"page_content\": \"\",\n        \"metadata\": {}\n    }\n    if docs:\n        for doc in docs:\n            try:",
        "detail": "apps.datasource_knowledge_base.tasks.file_loader.xlsx_file_loader",
        "documentation": {}
    },
    {
        "label": "load_xml_content",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.tasks.file_loader.xml_file_loader",
        "description": "apps.datasource_knowledge_base.tasks.file_loader.xml_file_loader",
        "peekOfCode": "def load_xml_content(path: str):\n    loader = UnstructuredXMLLoader(file_path=path)\n    docs = loader.load()\n    clean_doc = {\n        \"page_content\": \"\",\n        \"metadata\": {}\n    }\n    if docs:\n        for doc in docs:\n            try:",
        "detail": "apps.datasource_knowledge_base.tasks.file_loader.xml_file_loader",
        "documentation": {}
    },
    {
        "label": "chunk_memory",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.tasks.memory.chunk_memory_tasks",
        "description": "apps.datasource_knowledge_base.tasks.memory.chunk_memory_tasks",
        "peekOfCode": "def chunk_memory(message_text: str):\n    chks, error = [], None\n    splitter = RecursiveCharacterTextSplitter.from_tiktoken_encoder(\n        chunk_size=INTRA_MEMORY_INITIAL_CHUNK_SIZE, chunk_overlap=INTRA_MEMORY_INITIAL_CHUNK_OVERLAP\n    )\n    chks = splitter.split_text(message_text)\n    if chks:\n        pass\n    else:\n        error = \"[tasks.index_document_helper] Error chunking the message.\"",
        "detail": "apps.datasource_knowledge_base.tasks.memory.chunk_memory_tasks",
        "documentation": {}
    },
    {
        "label": "embed_memory_chunks",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.tasks.memory.embed_memory_chunks_tasks",
        "description": "apps.datasource_knowledge_base.tasks.memory.embed_memory_chunks_tasks",
        "peekOfCode": "def embed_memory_chunks(executor_params, chunks, memory_id, memory_uuid):\n    try:\n        error = factory_embed_memory_chunks_handler(\n            executor_params=executor_params, chunks=chunks, memory_id=memory_id, memory_uuid=memory_uuid\n        )\n    except Exception as e:\n        error = f\"[tasks.embed_memory_chunks] Error embedding the memory chunks: {e}\"\n    return error",
        "detail": "apps.datasource_knowledge_base.tasks.memory.embed_memory_chunks_tasks",
        "documentation": {}
    },
    {
        "label": "embed_memory_data",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.tasks.memory.embed_memory_data_tasks",
        "description": "apps.datasource_knowledge_base.tasks.memory.embed_memory_data_tasks",
        "peekOfCode": "def embed_memory_data(executor_params, number_of_chunks):\n    doc_id, doc_uuid = None, None\n    try:\n        doc_id, doc_uuid, error = embed_memory_helper(\n            executor_params=executor_params, number_of_chunks=number_of_chunks\n        )\n    except Exception as e:\n        error = f\"[tasks.embed_memory_data] Error embedding the memory: {e}\"\n    return doc_id, doc_uuid, error",
        "detail": "apps.datasource_knowledge_base.tasks.memory.embed_memory_data_tasks",
        "documentation": {}
    },
    {
        "label": "index_memory_helper",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.tasks.memory.index_memory_helper_tasks",
        "description": "apps.datasource_knowledge_base.tasks.memory.index_memory_helper_tasks",
        "peekOfCode": "def index_memory_helper(connection_id, message_text):\n    from apps.datasource_knowledge_base.models import ContextHistoryKnowledgeBaseConnection\n    from apps.core.vector_operations.intra_context_memory.memory_executor import IntraContextMemoryExecutor\n    from apps.datasource_knowledge_base.tasks import chunk_memory\n    output = {\n        \"status\": True,\n        \"error\": None\n    }\n    conn = ContextHistoryKnowledgeBaseConnection.objects.get(id=connection_id)\n    xc = IntraContextMemoryExecutor(connection=conn)",
        "detail": "apps.datasource_knowledge_base.tasks.memory.index_memory_helper_tasks",
        "documentation": {}
    },
    {
        "label": "fixture_datasource_knowledge_base_dashboards",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.tests.conftest",
        "description": "apps.datasource_knowledge_base.tests.conftest",
        "peekOfCode": "def fixture_datasource_knowledge_base_dashboards():\n    return True",
        "detail": "apps.datasource_knowledge_base.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_datasource_knowledge_base_test_forms",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.tests.test_forms",
        "description": "apps.datasource_knowledge_base.tests.test_forms",
        "peekOfCode": "def test_init_datasource_knowledge_base_test_forms():\n    assert True",
        "detail": "apps.datasource_knowledge_base.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_datasource_knowledge_base_test_models",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.tests.test_models",
        "description": "apps.datasource_knowledge_base.tests.test_models",
        "peekOfCode": "def test_init_datasource_knowledge_base_test_models():\n    assert True",
        "detail": "apps.datasource_knowledge_base.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_datasource_knowledge_base_test_utils",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.tests.test_utils",
        "description": "apps.datasource_knowledge_base.tests.test_utils",
        "peekOfCode": "def test_init_datasource_knowledge_base_test_utils():\n    assert True",
        "detail": "apps.datasource_knowledge_base.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_datasource_knowledge_base_test_views",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.tests.test_views",
        "description": "apps.datasource_knowledge_base.tests.test_views",
        "peekOfCode": "def test_init_datasource_knowledge_base_test_views():\n    assert True",
        "detail": "apps.datasource_knowledge_base.tests.test_views",
        "documentation": {}
    },
    {
        "label": "VectorStoreSystemsNames",
        "kind": 6,
        "importPath": "apps.datasource_knowledge_base.utils.constant_utils",
        "description": "apps.datasource_knowledge_base.utils.constant_utils",
        "peekOfCode": "class VectorStoreSystemsNames:\n    WEAVIATE = 'weaviate'\nUPLOAD_FILES_SUPPORTED_FORMATS = [\n    ('pdf', 'PDF'),\n    ('html', 'HTML'),\n    ('csv', 'CSV'),\n    ('docx', 'DOCX'),\n    ('ipynb', 'IPYNB'),\n    ('json', 'JSON'),\n    ('xml', 'XML'),",
        "detail": "apps.datasource_knowledge_base.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "UploadFilesSupportedFormatsNames",
        "kind": 6,
        "importPath": "apps.datasource_knowledge_base.utils.constant_utils",
        "description": "apps.datasource_knowledge_base.utils.constant_utils",
        "peekOfCode": "class UploadFilesSupportedFormatsNames:\n    PDF = 'pdf'\n    HTML = 'html'\n    CSV = 'csv'\n    DOCX = 'docx'\n    IPYNB = 'ipynb'\n    JSON = 'json'\n    XML = 'xml'\n    TXT = 'txt'\n    MD = 'md'",
        "detail": "apps.datasource_knowledge_base.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "VectorStoreDocProcessingStatusNames",
        "kind": 6,
        "importPath": "apps.datasource_knowledge_base.utils.constant_utils",
        "description": "apps.datasource_knowledge_base.utils.constant_utils",
        "peekOfCode": "class VectorStoreDocProcessingStatusNames:\n    STAGED = 'staged'\n    UPLOADED = 'uploaded'\n    LOADED = 'loaded'\n    CHUNKED = 'chunked'\n    EMBEDDED_DOCUMENT = 'embedded_document'\n    SAVED_DOCUMENT = 'saved_document'\n    PROCESSED_DOCUMENT = 'processed_document'\n    EMBEDDED_CHUNKS = 'embedded_chunks'\n    SAVED_CHUNKS = 'saved_chunks'",
        "detail": "apps.datasource_knowledge_base.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "INTRA_MEMORY_INITIAL_CHUNK_SIZE",
        "kind": 5,
        "importPath": "apps.datasource_knowledge_base.utils.constant_utils",
        "description": "apps.datasource_knowledge_base.utils.constant_utils",
        "peekOfCode": "INTRA_MEMORY_INITIAL_CHUNK_SIZE = 1000\nINTRA_MEMORY_INITIAL_CHUNK_OVERLAP = 200\nVECTORSTORE_SYSTEMS = [\n    ('weaviate', 'Weaviate'),\n]\nEMBEDDING_VECTORIZER_MODELS = [\n    (\"text2vec-openai\", \"Text2Vec (OpenAI)\"),\n]\nclass VectorStoreSystemsNames:\n    WEAVIATE = 'weaviate'",
        "detail": "apps.datasource_knowledge_base.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "INTRA_MEMORY_INITIAL_CHUNK_OVERLAP",
        "kind": 5,
        "importPath": "apps.datasource_knowledge_base.utils.constant_utils",
        "description": "apps.datasource_knowledge_base.utils.constant_utils",
        "peekOfCode": "INTRA_MEMORY_INITIAL_CHUNK_OVERLAP = 200\nVECTORSTORE_SYSTEMS = [\n    ('weaviate', 'Weaviate'),\n]\nEMBEDDING_VECTORIZER_MODELS = [\n    (\"text2vec-openai\", \"Text2Vec (OpenAI)\"),\n]\nclass VectorStoreSystemsNames:\n    WEAVIATE = 'weaviate'\nUPLOAD_FILES_SUPPORTED_FORMATS = [",
        "detail": "apps.datasource_knowledge_base.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "VECTORSTORE_SYSTEMS",
        "kind": 5,
        "importPath": "apps.datasource_knowledge_base.utils.constant_utils",
        "description": "apps.datasource_knowledge_base.utils.constant_utils",
        "peekOfCode": "VECTORSTORE_SYSTEMS = [\n    ('weaviate', 'Weaviate'),\n]\nEMBEDDING_VECTORIZER_MODELS = [\n    (\"text2vec-openai\", \"Text2Vec (OpenAI)\"),\n]\nclass VectorStoreSystemsNames:\n    WEAVIATE = 'weaviate'\nUPLOAD_FILES_SUPPORTED_FORMATS = [\n    ('pdf', 'PDF'),",
        "detail": "apps.datasource_knowledge_base.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "EMBEDDING_VECTORIZER_MODELS",
        "kind": 5,
        "importPath": "apps.datasource_knowledge_base.utils.constant_utils",
        "description": "apps.datasource_knowledge_base.utils.constant_utils",
        "peekOfCode": "EMBEDDING_VECTORIZER_MODELS = [\n    (\"text2vec-openai\", \"Text2Vec (OpenAI)\"),\n]\nclass VectorStoreSystemsNames:\n    WEAVIATE = 'weaviate'\nUPLOAD_FILES_SUPPORTED_FORMATS = [\n    ('pdf', 'PDF'),\n    ('html', 'HTML'),\n    ('csv', 'CSV'),\n    ('docx', 'DOCX'),",
        "detail": "apps.datasource_knowledge_base.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "UPLOAD_FILES_SUPPORTED_FORMATS",
        "kind": 5,
        "importPath": "apps.datasource_knowledge_base.utils.constant_utils",
        "description": "apps.datasource_knowledge_base.utils.constant_utils",
        "peekOfCode": "UPLOAD_FILES_SUPPORTED_FORMATS = [\n    ('pdf', 'PDF'),\n    ('html', 'HTML'),\n    ('csv', 'CSV'),\n    ('docx', 'DOCX'),\n    ('ipynb', 'IPYNB'),\n    ('json', 'JSON'),\n    ('xml', 'XML'),\n    ('txt', 'TXT'),\n    ('md', 'MD'),",
        "detail": "apps.datasource_knowledge_base.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DOCUMENT_UPLOAD_STATUS",
        "kind": 5,
        "importPath": "apps.datasource_knowledge_base.utils.constant_utils",
        "description": "apps.datasource_knowledge_base.utils.constant_utils",
        "peekOfCode": "DOCUMENT_UPLOAD_STATUS = [\n    ('staged', 'Staged'),\n    ('uploaded', 'Uploaded'),\n    ('loaded', 'Loaded'),\n    ('chunked', 'Chunked'),\n    ('embedded_document', 'Embedded Document'),\n    ('saved_document', 'Saved Document'),\n    ('processed_document', 'Processed Document'),\n    ('embedded_chunks', 'Embedded Chunks'),\n    ('saved_chunks', 'Saved Chunks'),",
        "detail": "apps.datasource_knowledge_base.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "INTRA_MEMORY_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.datasource_knowledge_base.utils.constant_utils",
        "description": "apps.datasource_knowledge_base.utils.constant_utils",
        "peekOfCode": "INTRA_MEMORY_ADMIN_LIST = ['class_name', 'vectorizer', 'vectorizer_api_key', 'created_at', 'updated_at']\nINTRA_MEMORY_ADMIN_FILTER = ['class_name', 'vectorizer']\nINTRA_MEMORY_ADMIN_SEARCH = ['class_name', 'vectorizer']\nINTRA_MEMORY_MEMORY_ADMIN_LIST = [\"knowledge_base_memory_uuid\", \"knowledge_base_memory_uuid\", \"created_at\",\n                                  \"updated_at\"]\nINTRA_MEMORY_MEMORY_ADMIN_FILTER = [\"knowledge_base_memory_uuid\", \"knowledge_base_memory_uuid\", \"created_at\",\n                                    \"updated_at\"]\nINTRA_MEMORY_MEMORY_ADMIN_SEARCH = [\"knowledge_base_memory_uuid\", \"knowledge_base_memory_uuid\", \"created_at\",\n                                    \"updated_at\"]\nINTRA_MEMORY_MEMORY_CHUNK_ADMIN_LIST = [\"chunk_number\", \"chunk_content\", \"knowledge_base_memory_uuid\", \"chunk_uuid\",",
        "detail": "apps.datasource_knowledge_base.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "INTRA_MEMORY_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.datasource_knowledge_base.utils.constant_utils",
        "description": "apps.datasource_knowledge_base.utils.constant_utils",
        "peekOfCode": "INTRA_MEMORY_ADMIN_FILTER = ['class_name', 'vectorizer']\nINTRA_MEMORY_ADMIN_SEARCH = ['class_name', 'vectorizer']\nINTRA_MEMORY_MEMORY_ADMIN_LIST = [\"knowledge_base_memory_uuid\", \"knowledge_base_memory_uuid\", \"created_at\",\n                                  \"updated_at\"]\nINTRA_MEMORY_MEMORY_ADMIN_FILTER = [\"knowledge_base_memory_uuid\", \"knowledge_base_memory_uuid\", \"created_at\",\n                                    \"updated_at\"]\nINTRA_MEMORY_MEMORY_ADMIN_SEARCH = [\"knowledge_base_memory_uuid\", \"knowledge_base_memory_uuid\", \"created_at\",\n                                    \"updated_at\"]\nINTRA_MEMORY_MEMORY_CHUNK_ADMIN_LIST = [\"chunk_number\", \"chunk_content\", \"knowledge_base_memory_uuid\", \"chunk_uuid\",\n                                        \"created_at\"]",
        "detail": "apps.datasource_knowledge_base.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "INTRA_MEMORY_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.datasource_knowledge_base.utils.constant_utils",
        "description": "apps.datasource_knowledge_base.utils.constant_utils",
        "peekOfCode": "INTRA_MEMORY_ADMIN_SEARCH = ['class_name', 'vectorizer']\nINTRA_MEMORY_MEMORY_ADMIN_LIST = [\"knowledge_base_memory_uuid\", \"knowledge_base_memory_uuid\", \"created_at\",\n                                  \"updated_at\"]\nINTRA_MEMORY_MEMORY_ADMIN_FILTER = [\"knowledge_base_memory_uuid\", \"knowledge_base_memory_uuid\", \"created_at\",\n                                    \"updated_at\"]\nINTRA_MEMORY_MEMORY_ADMIN_SEARCH = [\"knowledge_base_memory_uuid\", \"knowledge_base_memory_uuid\", \"created_at\",\n                                    \"updated_at\"]\nINTRA_MEMORY_MEMORY_CHUNK_ADMIN_LIST = [\"chunk_number\", \"chunk_content\", \"knowledge_base_memory_uuid\", \"chunk_uuid\",\n                                        \"created_at\"]\nINTRA_MEMORY_MEMORY_CHUNK_ADMIN_FILTER = [\"chunk_number\", \"chunk_content\", \"knowledge_base_memory_uuid\", \"chunk_uuid\"]",
        "detail": "apps.datasource_knowledge_base.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "INTRA_MEMORY_MEMORY_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.datasource_knowledge_base.utils.constant_utils",
        "description": "apps.datasource_knowledge_base.utils.constant_utils",
        "peekOfCode": "INTRA_MEMORY_MEMORY_ADMIN_LIST = [\"knowledge_base_memory_uuid\", \"knowledge_base_memory_uuid\", \"created_at\",\n                                  \"updated_at\"]\nINTRA_MEMORY_MEMORY_ADMIN_FILTER = [\"knowledge_base_memory_uuid\", \"knowledge_base_memory_uuid\", \"created_at\",\n                                    \"updated_at\"]\nINTRA_MEMORY_MEMORY_ADMIN_SEARCH = [\"knowledge_base_memory_uuid\", \"knowledge_base_memory_uuid\", \"created_at\",\n                                    \"updated_at\"]\nINTRA_MEMORY_MEMORY_CHUNK_ADMIN_LIST = [\"chunk_number\", \"chunk_content\", \"knowledge_base_memory_uuid\", \"chunk_uuid\",\n                                        \"created_at\"]\nINTRA_MEMORY_MEMORY_CHUNK_ADMIN_FILTER = [\"chunk_number\", \"chunk_content\", \"knowledge_base_memory_uuid\", \"chunk_uuid\"]\nINTRA_MEMORY_MEMORY_CHUNK_ADMIN_SEARCH = [\"chunk_number\", \"chunk_content\", \"knowledge_base_memory_uuid\", \"chunk_uuid\",",
        "detail": "apps.datasource_knowledge_base.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "INTRA_MEMORY_MEMORY_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.datasource_knowledge_base.utils.constant_utils",
        "description": "apps.datasource_knowledge_base.utils.constant_utils",
        "peekOfCode": "INTRA_MEMORY_MEMORY_ADMIN_FILTER = [\"knowledge_base_memory_uuid\", \"knowledge_base_memory_uuid\", \"created_at\",\n                                    \"updated_at\"]\nINTRA_MEMORY_MEMORY_ADMIN_SEARCH = [\"knowledge_base_memory_uuid\", \"knowledge_base_memory_uuid\", \"created_at\",\n                                    \"updated_at\"]\nINTRA_MEMORY_MEMORY_CHUNK_ADMIN_LIST = [\"chunk_number\", \"chunk_content\", \"knowledge_base_memory_uuid\", \"chunk_uuid\",\n                                        \"created_at\"]\nINTRA_MEMORY_MEMORY_CHUNK_ADMIN_FILTER = [\"chunk_number\", \"chunk_content\", \"knowledge_base_memory_uuid\", \"chunk_uuid\"]\nINTRA_MEMORY_MEMORY_CHUNK_ADMIN_SEARCH = [\"chunk_number\", \"chunk_content\", \"knowledge_base_memory_uuid\", \"chunk_uuid\",\n                                          \"created_at\"]\nDOCUMENT_ADMIN_LIST = ['knowledge_base', 'document_type', 'document_file_name', 'document_description',",
        "detail": "apps.datasource_knowledge_base.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "INTRA_MEMORY_MEMORY_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.datasource_knowledge_base.utils.constant_utils",
        "description": "apps.datasource_knowledge_base.utils.constant_utils",
        "peekOfCode": "INTRA_MEMORY_MEMORY_ADMIN_SEARCH = [\"knowledge_base_memory_uuid\", \"knowledge_base_memory_uuid\", \"created_at\",\n                                    \"updated_at\"]\nINTRA_MEMORY_MEMORY_CHUNK_ADMIN_LIST = [\"chunk_number\", \"chunk_content\", \"knowledge_base_memory_uuid\", \"chunk_uuid\",\n                                        \"created_at\"]\nINTRA_MEMORY_MEMORY_CHUNK_ADMIN_FILTER = [\"chunk_number\", \"chunk_content\", \"knowledge_base_memory_uuid\", \"chunk_uuid\"]\nINTRA_MEMORY_MEMORY_CHUNK_ADMIN_SEARCH = [\"chunk_number\", \"chunk_content\", \"knowledge_base_memory_uuid\", \"chunk_uuid\",\n                                          \"created_at\"]\nDOCUMENT_ADMIN_LIST = ['knowledge_base', 'document_type', 'document_file_name', 'document_description',\n                       'document_metadata', 'document_uri', 'created_at', 'updated_at']\nDOCUMENT_ADMIN_FILTER = ['knowledge_base', 'document_type', 'document_file_name', 'document_description',",
        "detail": "apps.datasource_knowledge_base.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "INTRA_MEMORY_MEMORY_CHUNK_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.datasource_knowledge_base.utils.constant_utils",
        "description": "apps.datasource_knowledge_base.utils.constant_utils",
        "peekOfCode": "INTRA_MEMORY_MEMORY_CHUNK_ADMIN_LIST = [\"chunk_number\", \"chunk_content\", \"knowledge_base_memory_uuid\", \"chunk_uuid\",\n                                        \"created_at\"]\nINTRA_MEMORY_MEMORY_CHUNK_ADMIN_FILTER = [\"chunk_number\", \"chunk_content\", \"knowledge_base_memory_uuid\", \"chunk_uuid\"]\nINTRA_MEMORY_MEMORY_CHUNK_ADMIN_SEARCH = [\"chunk_number\", \"chunk_content\", \"knowledge_base_memory_uuid\", \"chunk_uuid\",\n                                          \"created_at\"]\nDOCUMENT_ADMIN_LIST = ['knowledge_base', 'document_type', 'document_file_name', 'document_description',\n                       'document_metadata', 'document_uri', 'created_at', 'updated_at']\nDOCUMENT_ADMIN_FILTER = ['knowledge_base', 'document_type', 'document_file_name', 'document_description',\n                         'document_metadata', 'document_uri', 'created_at', 'updated_at']\nDOCUMENT_ADMIN_SEARCH = ['knowledge_base', 'document_type', 'document_file_name', 'document_description',",
        "detail": "apps.datasource_knowledge_base.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "INTRA_MEMORY_MEMORY_CHUNK_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.datasource_knowledge_base.utils.constant_utils",
        "description": "apps.datasource_knowledge_base.utils.constant_utils",
        "peekOfCode": "INTRA_MEMORY_MEMORY_CHUNK_ADMIN_FILTER = [\"chunk_number\", \"chunk_content\", \"knowledge_base_memory_uuid\", \"chunk_uuid\"]\nINTRA_MEMORY_MEMORY_CHUNK_ADMIN_SEARCH = [\"chunk_number\", \"chunk_content\", \"knowledge_base_memory_uuid\", \"chunk_uuid\",\n                                          \"created_at\"]\nDOCUMENT_ADMIN_LIST = ['knowledge_base', 'document_type', 'document_file_name', 'document_description',\n                       'document_metadata', 'document_uri', 'created_at', 'updated_at']\nDOCUMENT_ADMIN_FILTER = ['knowledge_base', 'document_type', 'document_file_name', 'document_description',\n                         'document_metadata', 'document_uri', 'created_at', 'updated_at']\nDOCUMENT_ADMIN_SEARCH = ['knowledge_base', 'document_type', 'document_file_name', 'document_description',\n                         'document_metadata', 'document_uri', 'created_at', 'updated_at']\nDOCUMENT_CHUNK_ADMIN_LIST = ['knowledge_base', 'document', 'chunk_document_type', 'chunk_document_uri',",
        "detail": "apps.datasource_knowledge_base.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "INTRA_MEMORY_MEMORY_CHUNK_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.datasource_knowledge_base.utils.constant_utils",
        "description": "apps.datasource_knowledge_base.utils.constant_utils",
        "peekOfCode": "INTRA_MEMORY_MEMORY_CHUNK_ADMIN_SEARCH = [\"chunk_number\", \"chunk_content\", \"knowledge_base_memory_uuid\", \"chunk_uuid\",\n                                          \"created_at\"]\nDOCUMENT_ADMIN_LIST = ['knowledge_base', 'document_type', 'document_file_name', 'document_description',\n                       'document_metadata', 'document_uri', 'created_at', 'updated_at']\nDOCUMENT_ADMIN_FILTER = ['knowledge_base', 'document_type', 'document_file_name', 'document_description',\n                         'document_metadata', 'document_uri', 'created_at', 'updated_at']\nDOCUMENT_ADMIN_SEARCH = ['knowledge_base', 'document_type', 'document_file_name', 'document_description',\n                         'document_metadata', 'document_uri', 'created_at', 'updated_at']\nDOCUMENT_CHUNK_ADMIN_LIST = ['knowledge_base', 'document', 'chunk_document_type', 'chunk_document_uri',\n                             'knowledge_base_uuid', 'document_uuid', 'created_at']",
        "detail": "apps.datasource_knowledge_base.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DOCUMENT_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.datasource_knowledge_base.utils.constant_utils",
        "description": "apps.datasource_knowledge_base.utils.constant_utils",
        "peekOfCode": "DOCUMENT_ADMIN_LIST = ['knowledge_base', 'document_type', 'document_file_name', 'document_description',\n                       'document_metadata', 'document_uri', 'created_at', 'updated_at']\nDOCUMENT_ADMIN_FILTER = ['knowledge_base', 'document_type', 'document_file_name', 'document_description',\n                         'document_metadata', 'document_uri', 'created_at', 'updated_at']\nDOCUMENT_ADMIN_SEARCH = ['knowledge_base', 'document_type', 'document_file_name', 'document_description',\n                         'document_metadata', 'document_uri', 'created_at', 'updated_at']\nDOCUMENT_CHUNK_ADMIN_LIST = ['knowledge_base', 'document', 'chunk_document_type', 'chunk_document_uri',\n                             'knowledge_base_uuid', 'document_uuid', 'created_at']\nDOCUMENT_CHUNK_ADMIN_FILTER = ['document', 'chunk_document_type', 'knowledge_base_uuid', 'document_uuid', 'created_at']\nDOCUMENT_CHUNK_ADMIN_SEARCH = ['document', 'chunk_document_type', 'chunk_content', 'chunk_metadata',",
        "detail": "apps.datasource_knowledge_base.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DOCUMENT_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.datasource_knowledge_base.utils.constant_utils",
        "description": "apps.datasource_knowledge_base.utils.constant_utils",
        "peekOfCode": "DOCUMENT_ADMIN_FILTER = ['knowledge_base', 'document_type', 'document_file_name', 'document_description',\n                         'document_metadata', 'document_uri', 'created_at', 'updated_at']\nDOCUMENT_ADMIN_SEARCH = ['knowledge_base', 'document_type', 'document_file_name', 'document_description',\n                         'document_metadata', 'document_uri', 'created_at', 'updated_at']\nDOCUMENT_CHUNK_ADMIN_LIST = ['knowledge_base', 'document', 'chunk_document_type', 'chunk_document_uri',\n                             'knowledge_base_uuid', 'document_uuid', 'created_at']\nDOCUMENT_CHUNK_ADMIN_FILTER = ['document', 'chunk_document_type', 'knowledge_base_uuid', 'document_uuid', 'created_at']\nDOCUMENT_CHUNK_ADMIN_SEARCH = ['document', 'chunk_document_type', 'chunk_content', 'chunk_metadata',\n                               'chunk_document_uri', 'knowledge_base_uuid', 'created_at']\nDOCUMENT_PROCESSING_LOG_ADMIN_LIST = ['document_full_uri', 'log_message', 'created_at']",
        "detail": "apps.datasource_knowledge_base.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DOCUMENT_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.datasource_knowledge_base.utils.constant_utils",
        "description": "apps.datasource_knowledge_base.utils.constant_utils",
        "peekOfCode": "DOCUMENT_ADMIN_SEARCH = ['knowledge_base', 'document_type', 'document_file_name', 'document_description',\n                         'document_metadata', 'document_uri', 'created_at', 'updated_at']\nDOCUMENT_CHUNK_ADMIN_LIST = ['knowledge_base', 'document', 'chunk_document_type', 'chunk_document_uri',\n                             'knowledge_base_uuid', 'document_uuid', 'created_at']\nDOCUMENT_CHUNK_ADMIN_FILTER = ['document', 'chunk_document_type', 'knowledge_base_uuid', 'document_uuid', 'created_at']\nDOCUMENT_CHUNK_ADMIN_SEARCH = ['document', 'chunk_document_type', 'chunk_content', 'chunk_metadata',\n                               'chunk_document_uri', 'knowledge_base_uuid', 'created_at']\nDOCUMENT_PROCESSING_LOG_ADMIN_LIST = ['document_full_uri', 'log_message', 'created_at']\nDOCUMENT_PROCESSING_LOG_ADMIN_FILTER = ['document_full_uri', 'log_message', 'created_at']\nDOCUMENT_PROCESSING_LOG_ADMIN_SEARCH = ['document_full_uri', 'log_message']",
        "detail": "apps.datasource_knowledge_base.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DOCUMENT_CHUNK_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.datasource_knowledge_base.utils.constant_utils",
        "description": "apps.datasource_knowledge_base.utils.constant_utils",
        "peekOfCode": "DOCUMENT_CHUNK_ADMIN_LIST = ['knowledge_base', 'document', 'chunk_document_type', 'chunk_document_uri',\n                             'knowledge_base_uuid', 'document_uuid', 'created_at']\nDOCUMENT_CHUNK_ADMIN_FILTER = ['document', 'chunk_document_type', 'knowledge_base_uuid', 'document_uuid', 'created_at']\nDOCUMENT_CHUNK_ADMIN_SEARCH = ['document', 'chunk_document_type', 'chunk_content', 'chunk_metadata',\n                               'chunk_document_uri', 'knowledge_base_uuid', 'created_at']\nDOCUMENT_PROCESSING_LOG_ADMIN_LIST = ['document_full_uri', 'log_message', 'created_at']\nDOCUMENT_PROCESSING_LOG_ADMIN_FILTER = ['document_full_uri', 'log_message', 'created_at']\nDOCUMENT_PROCESSING_LOG_ADMIN_SEARCH = ['document_full_uri', 'log_message']\nDOCUMENT_VECTOR_STORE_CONNECTION_ADMIN_LIST = ['provider', 'host_url', 'assistant', 'name', 'class_name',\n                                               'vectorizer', 'created_at', 'updated_at']",
        "detail": "apps.datasource_knowledge_base.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DOCUMENT_CHUNK_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.datasource_knowledge_base.utils.constant_utils",
        "description": "apps.datasource_knowledge_base.utils.constant_utils",
        "peekOfCode": "DOCUMENT_CHUNK_ADMIN_FILTER = ['document', 'chunk_document_type', 'knowledge_base_uuid', 'document_uuid', 'created_at']\nDOCUMENT_CHUNK_ADMIN_SEARCH = ['document', 'chunk_document_type', 'chunk_content', 'chunk_metadata',\n                               'chunk_document_uri', 'knowledge_base_uuid', 'created_at']\nDOCUMENT_PROCESSING_LOG_ADMIN_LIST = ['document_full_uri', 'log_message', 'created_at']\nDOCUMENT_PROCESSING_LOG_ADMIN_FILTER = ['document_full_uri', 'log_message', 'created_at']\nDOCUMENT_PROCESSING_LOG_ADMIN_SEARCH = ['document_full_uri', 'log_message']\nDOCUMENT_VECTOR_STORE_CONNECTION_ADMIN_LIST = ['provider', 'host_url', 'assistant', 'name', 'class_name',\n                                               'vectorizer', 'created_at', 'updated_at']\nDOCUMENT_VECTOR_STORE_CONNECTION_ADMIN_FILTER = ['provider', 'host_url', 'assistant', 'name', 'class_name',\n                                                 'vectorizer', 'created_at', 'updated_at']",
        "detail": "apps.datasource_knowledge_base.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DOCUMENT_CHUNK_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.datasource_knowledge_base.utils.constant_utils",
        "description": "apps.datasource_knowledge_base.utils.constant_utils",
        "peekOfCode": "DOCUMENT_CHUNK_ADMIN_SEARCH = ['document', 'chunk_document_type', 'chunk_content', 'chunk_metadata',\n                               'chunk_document_uri', 'knowledge_base_uuid', 'created_at']\nDOCUMENT_PROCESSING_LOG_ADMIN_LIST = ['document_full_uri', 'log_message', 'created_at']\nDOCUMENT_PROCESSING_LOG_ADMIN_FILTER = ['document_full_uri', 'log_message', 'created_at']\nDOCUMENT_PROCESSING_LOG_ADMIN_SEARCH = ['document_full_uri', 'log_message']\nDOCUMENT_VECTOR_STORE_CONNECTION_ADMIN_LIST = ['provider', 'host_url', 'assistant', 'name', 'class_name',\n                                               'vectorizer', 'created_at', 'updated_at']\nDOCUMENT_VECTOR_STORE_CONNECTION_ADMIN_FILTER = ['provider', 'host_url', 'assistant', 'name', 'class_name',\n                                                 'vectorizer', 'created_at', 'updated_at']\nDOCUMENT_VECTOR_STORE_CONNECTION_ADMIN_SEARCH = ['provider', 'host_url', 'assistant', 'name', 'class_name',",
        "detail": "apps.datasource_knowledge_base.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DOCUMENT_PROCESSING_LOG_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.datasource_knowledge_base.utils.constant_utils",
        "description": "apps.datasource_knowledge_base.utils.constant_utils",
        "peekOfCode": "DOCUMENT_PROCESSING_LOG_ADMIN_LIST = ['document_full_uri', 'log_message', 'created_at']\nDOCUMENT_PROCESSING_LOG_ADMIN_FILTER = ['document_full_uri', 'log_message', 'created_at']\nDOCUMENT_PROCESSING_LOG_ADMIN_SEARCH = ['document_full_uri', 'log_message']\nDOCUMENT_VECTOR_STORE_CONNECTION_ADMIN_LIST = ['provider', 'host_url', 'assistant', 'name', 'class_name',\n                                               'vectorizer', 'created_at', 'updated_at']\nDOCUMENT_VECTOR_STORE_CONNECTION_ADMIN_FILTER = ['provider', 'host_url', 'assistant', 'name', 'class_name',\n                                                 'vectorizer', 'created_at', 'updated_at']\nDOCUMENT_VECTOR_STORE_CONNECTION_ADMIN_SEARCH = ['provider', 'host_url', 'assistant', 'name', 'class_name',\n                                                 'description', 'vectorizer', 'created_at', 'updated_at']",
        "detail": "apps.datasource_knowledge_base.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DOCUMENT_PROCESSING_LOG_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.datasource_knowledge_base.utils.constant_utils",
        "description": "apps.datasource_knowledge_base.utils.constant_utils",
        "peekOfCode": "DOCUMENT_PROCESSING_LOG_ADMIN_FILTER = ['document_full_uri', 'log_message', 'created_at']\nDOCUMENT_PROCESSING_LOG_ADMIN_SEARCH = ['document_full_uri', 'log_message']\nDOCUMENT_VECTOR_STORE_CONNECTION_ADMIN_LIST = ['provider', 'host_url', 'assistant', 'name', 'class_name',\n                                               'vectorizer', 'created_at', 'updated_at']\nDOCUMENT_VECTOR_STORE_CONNECTION_ADMIN_FILTER = ['provider', 'host_url', 'assistant', 'name', 'class_name',\n                                                 'vectorizer', 'created_at', 'updated_at']\nDOCUMENT_VECTOR_STORE_CONNECTION_ADMIN_SEARCH = ['provider', 'host_url', 'assistant', 'name', 'class_name',\n                                                 'description', 'vectorizer', 'created_at', 'updated_at']",
        "detail": "apps.datasource_knowledge_base.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DOCUMENT_PROCESSING_LOG_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.datasource_knowledge_base.utils.constant_utils",
        "description": "apps.datasource_knowledge_base.utils.constant_utils",
        "peekOfCode": "DOCUMENT_PROCESSING_LOG_ADMIN_SEARCH = ['document_full_uri', 'log_message']\nDOCUMENT_VECTOR_STORE_CONNECTION_ADMIN_LIST = ['provider', 'host_url', 'assistant', 'name', 'class_name',\n                                               'vectorizer', 'created_at', 'updated_at']\nDOCUMENT_VECTOR_STORE_CONNECTION_ADMIN_FILTER = ['provider', 'host_url', 'assistant', 'name', 'class_name',\n                                                 'vectorizer', 'created_at', 'updated_at']\nDOCUMENT_VECTOR_STORE_CONNECTION_ADMIN_SEARCH = ['provider', 'host_url', 'assistant', 'name', 'class_name',\n                                                 'description', 'vectorizer', 'created_at', 'updated_at']",
        "detail": "apps.datasource_knowledge_base.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DOCUMENT_VECTOR_STORE_CONNECTION_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.datasource_knowledge_base.utils.constant_utils",
        "description": "apps.datasource_knowledge_base.utils.constant_utils",
        "peekOfCode": "DOCUMENT_VECTOR_STORE_CONNECTION_ADMIN_LIST = ['provider', 'host_url', 'assistant', 'name', 'class_name',\n                                               'vectorizer', 'created_at', 'updated_at']\nDOCUMENT_VECTOR_STORE_CONNECTION_ADMIN_FILTER = ['provider', 'host_url', 'assistant', 'name', 'class_name',\n                                                 'vectorizer', 'created_at', 'updated_at']\nDOCUMENT_VECTOR_STORE_CONNECTION_ADMIN_SEARCH = ['provider', 'host_url', 'assistant', 'name', 'class_name',\n                                                 'description', 'vectorizer', 'created_at', 'updated_at']",
        "detail": "apps.datasource_knowledge_base.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DOCUMENT_VECTOR_STORE_CONNECTION_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.datasource_knowledge_base.utils.constant_utils",
        "description": "apps.datasource_knowledge_base.utils.constant_utils",
        "peekOfCode": "DOCUMENT_VECTOR_STORE_CONNECTION_ADMIN_FILTER = ['provider', 'host_url', 'assistant', 'name', 'class_name',\n                                                 'vectorizer', 'created_at', 'updated_at']\nDOCUMENT_VECTOR_STORE_CONNECTION_ADMIN_SEARCH = ['provider', 'host_url', 'assistant', 'name', 'class_name',\n                                                 'description', 'vectorizer', 'created_at', 'updated_at']",
        "detail": "apps.datasource_knowledge_base.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DOCUMENT_VECTOR_STORE_CONNECTION_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.datasource_knowledge_base.utils.constant_utils",
        "description": "apps.datasource_knowledge_base.utils.constant_utils",
        "peekOfCode": "DOCUMENT_VECTOR_STORE_CONNECTION_ADMIN_SEARCH = ['provider', 'host_url', 'assistant', 'name', 'class_name',\n                                                 'description', 'vectorizer', 'created_at', 'updated_at']",
        "detail": "apps.datasource_knowledge_base.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "build_name_string_for_randomized",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.utils.function_utils",
        "description": "apps.datasource_knowledge_base.utils.function_utils",
        "peekOfCode": "def build_name_string_for_randomized():\n    chat_name_1 = wonderwords.RandomWord().word(\n        word_min_length=4, word_max_length=32, include_categories=[\"noun\"], regex=r\"^[a-zA-Z]+$\"\n    )\n    chat_name_2 = wonderwords.RandomWord().word(\n        word_min_length=4, word_max_length=32, include_categories=[\"noun\"], regex=r\"^[a-zA-Z]+$\"\n    )\n    chat_name_3 = wonderwords.RandomWord().word(\n        word_min_length=4, word_max_length=32, include_categories=[\"noun\"], regex=r\"^[a-zA-Z]+$\"\n    )",
        "detail": "apps.datasource_knowledge_base.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "convert_given_name_to_class_name",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.utils.function_utils",
        "description": "apps.datasource_knowledge_base.utils.function_utils",
        "peekOfCode": "def convert_given_name_to_class_name(given_name: str):\n    given_name_alnum = \"\"\n    for char in given_name:\n        if char.isalnum() and char not in [\" \", \"_\", \"-\", \".\", \":\", \";\", \",\", \"'\", '\"', \"!\", \"@\", \"#\", \"$\", \"%\", \"^\",\n                                           \"&\", \"*\", \"(\", \")\", \"+\", \"=\", \"{\", \"}\", \"[\", \"]\", \"<\", \">\", \"?\", \"/\", \"\\\\\",\n                                           \"|\", \"`\", \"~\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"]:\n            given_name_alnum += char\n    given_name_alnum_list = given_name_alnum.lower().capitalize()\n    return given_name_alnum_list\ndef build_weaviate_class_name(connection):",
        "detail": "apps.datasource_knowledge_base.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "build_weaviate_class_name",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.utils.function_utils",
        "description": "apps.datasource_knowledge_base.utils.function_utils",
        "peekOfCode": "def build_weaviate_class_name(connection):\n    given_class_name_generation = convert_given_name_to_class_name(connection.name)\n    randoms = build_name_string_for_randomized()\n    return f\"{given_class_name_generation}{randoms}\"\ndef build_weaviate_intra_memory_class_name():\n    randoms = build_random_alphanumeric_string()\n    return f\"ChatHistory{randoms}\"\ndef generate_document_uri(base_dir, document_name, file_type):\n    return f\"{base_dir}{document_name.split('.')[0]}_{str(random.randint(1_000_000, 9_999_999))}.{file_type}\"\ndef build_random_alphanumeric_string(numeric_component=True):",
        "detail": "apps.datasource_knowledge_base.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "build_weaviate_intra_memory_class_name",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.utils.function_utils",
        "description": "apps.datasource_knowledge_base.utils.function_utils",
        "peekOfCode": "def build_weaviate_intra_memory_class_name():\n    randoms = build_random_alphanumeric_string()\n    return f\"ChatHistory{randoms}\"\ndef generate_document_uri(base_dir, document_name, file_type):\n    return f\"{base_dir}{document_name.split('.')[0]}_{str(random.randint(1_000_000, 9_999_999))}.{file_type}\"\ndef build_random_alphanumeric_string(numeric_component=True):\n    chat_name_1 = wonderwords.RandomWord().word(\n        word_min_length=4, word_max_length=32, include_categories=[\"noun\"], regex=r\"^[a-zA-Z]+$\"\n    )\n    chat_name_2 = wonderwords.RandomWord().word(",
        "detail": "apps.datasource_knowledge_base.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "generate_document_uri",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.utils.function_utils",
        "description": "apps.datasource_knowledge_base.utils.function_utils",
        "peekOfCode": "def generate_document_uri(base_dir, document_name, file_type):\n    return f\"{base_dir}{document_name.split('.')[0]}_{str(random.randint(1_000_000, 9_999_999))}.{file_type}\"\ndef build_random_alphanumeric_string(numeric_component=True):\n    chat_name_1 = wonderwords.RandomWord().word(\n        word_min_length=4, word_max_length=32, include_categories=[\"noun\"], regex=r\"^[a-zA-Z]+$\"\n    )\n    chat_name_2 = wonderwords.RandomWord().word(\n        word_min_length=4, word_max_length=32, include_categories=[\"noun\"], regex=r\"^[a-zA-Z]+$\"\n    )\n    chat_name_3 = wonderwords.RandomWord().word(",
        "detail": "apps.datasource_knowledge_base.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "build_random_alphanumeric_string",
        "kind": 2,
        "importPath": "apps.datasource_knowledge_base.utils.function_utils",
        "description": "apps.datasource_knowledge_base.utils.function_utils",
        "peekOfCode": "def build_random_alphanumeric_string(numeric_component=True):\n    chat_name_1 = wonderwords.RandomWord().word(\n        word_min_length=4, word_max_length=32, include_categories=[\"noun\"], regex=r\"^[a-zA-Z]+$\"\n    )\n    chat_name_2 = wonderwords.RandomWord().word(\n        word_min_length=4, word_max_length=32, include_categories=[\"noun\"], regex=r\"^[a-zA-Z]+$\"\n    )\n    chat_name_3 = wonderwords.RandomWord().word(\n        word_min_length=4, word_max_length=32, include_categories=[\"noun\"], regex=r\"^[a-zA-Z]+$\"\n    )",
        "detail": "apps.datasource_knowledge_base.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "DocumentView_Create",
        "kind": 6,
        "importPath": "apps.datasource_knowledge_base.views.document.create_document_views",
        "description": "apps.datasource_knowledge_base.views.document.create_document_views",
        "peekOfCode": "class DocumentView_Create(LoginRequiredMixin, TemplateView):\n    def get(self, request, *args, **kwargs):\n        user_agents = Assistant.objects.filter(organization__users__in=[request.user])\n        vector_stores = DocumentKnowledgeBaseConnection.objects.filter(assistant__in=user_agents)\n        orgs = Organization.objects.filter(users__in=[request.user])\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['organizations'] = list(orgs.values('id', 'name'))\n        context['assistants'] = list(user_agents.values('id', 'name', 'organization_id'))\n        context['knowledge_bases'] = list(vector_stores.values('id', 'name', 'assistant_id'))\n        return self.render_to_response(context)",
        "detail": "apps.datasource_knowledge_base.views.document.create_document_views",
        "documentation": {}
    },
    {
        "label": "DocumentView_DeleteAll",
        "kind": 6,
        "importPath": "apps.datasource_knowledge_base.views.document.delete_all_documents_views",
        "description": "apps.datasource_knowledge_base.views.document.delete_all_documents_views",
        "peekOfCode": "class DocumentView_DeleteAll(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context\n    def get(self, request, *args, **kwargs):\n        context = self.post(request, *args, **kwargs)\n        return self.render_to_response(context)\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - DELETE_KNOWLEDGE_BASE_DOCS",
        "detail": "apps.datasource_knowledge_base.views.document.delete_all_documents_views",
        "documentation": {}
    },
    {
        "label": "DocumentView_List",
        "kind": 6,
        "importPath": "apps.datasource_knowledge_base.views.document.list_documents_views",
        "description": "apps.datasource_knowledge_base.views.document.list_documents_views",
        "peekOfCode": "class DocumentView_List(LoginRequiredMixin, TemplateView):\n    def get(self, request, *args, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_KNOWLEDGE_BASE_DOCS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_KNOWLEDGE_BASE_DOCS):\n            messages.error(self.request, \"You do not have permission to list Knowledge Base documents.\")\n            return context\n        ##############################",
        "detail": "apps.datasource_knowledge_base.views.document.list_documents_views",
        "documentation": {}
    },
    {
        "label": "VectorStoreView_Create",
        "kind": 6,
        "importPath": "apps.datasource_knowledge_base.views.knowledge_base.create_knowledge_base_views",
        "description": "apps.datasource_knowledge_base.views.knowledge_base.create_knowledge_base_views",
        "peekOfCode": "class VectorStoreView_Create(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context_user = self.request.user\n        context['user'] = context_user\n        context['knowledge_base_systems'] = VECTORSTORE_SYSTEMS\n        context['vectorizers'] = EMBEDDING_VECTORIZER_MODELS\n        user_orgs = context_user.organizations.all()\n        agents_of_orgs = Assistant.objects.filter(organization__in=user_orgs)\n        context['assistants'] = agents_of_orgs",
        "detail": "apps.datasource_knowledge_base.views.knowledge_base.create_knowledge_base_views",
        "documentation": {}
    },
    {
        "label": "VectorStoreView_Delete",
        "kind": 6,
        "importPath": "apps.datasource_knowledge_base.views.knowledge_base.delete_knowledge_base_views",
        "description": "apps.datasource_knowledge_base.views.knowledge_base.delete_knowledge_base_views",
        "peekOfCode": "class VectorStoreView_Delete(LoginRequiredMixin, DeleteView):\n    model = DocumentKnowledgeBaseConnection\n    success_url = '/app/datasource_knowledge_base/list/'\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['knowledge_base'] = self.get_object()\n        return context\n    def post(self, request, *args, **kwargs):\n        self.object = self.get_object()\n        context_user = self.request.user",
        "detail": "apps.datasource_knowledge_base.views.knowledge_base.delete_knowledge_base_views",
        "documentation": {}
    },
    {
        "label": "VectorStoreView_List",
        "kind": 6,
        "importPath": "apps.datasource_knowledge_base.views.knowledge_base.list_knowledge_bases_views",
        "description": "apps.datasource_knowledge_base.views.knowledge_base.list_knowledge_bases_views",
        "peekOfCode": "class VectorStoreView_List(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_KNOWLEDGE_BASES\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_KNOWLEDGE_BASES):\n            messages.error(self.request, \"You do not have permission to list Knowledge Bases.\")\n            return context\n        ##############################",
        "detail": "apps.datasource_knowledge_base.views.knowledge_base.list_knowledge_bases_views",
        "documentation": {}
    },
    {
        "label": "VectorStoreView_Update",
        "kind": 6,
        "importPath": "apps.datasource_knowledge_base.views.knowledge_base.update_knowledge_base_views",
        "description": "apps.datasource_knowledge_base.views.knowledge_base.update_knowledge_base_views",
        "peekOfCode": "class VectorStoreView_Update(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context_user = self.request.user\n        vector_store = get_object_or_404(DocumentKnowledgeBaseConnection, pk=kwargs['pk'])\n        context['user'] = context_user\n        context['knowledge_base_systems'] = VECTORSTORE_SYSTEMS\n        context['vectorizers'] = EMBEDDING_VECTORIZER_MODELS\n        user_orgs = context_user.organizations.all()\n        agents_of_orgs = Assistant.objects.filter(organization__in=user_orgs)",
        "detail": "apps.datasource_knowledge_base.views.knowledge_base.update_knowledge_base_views",
        "documentation": {}
    },
    {
        "label": "DatasourceKnowledgeBaseConfig",
        "kind": 6,
        "importPath": "apps.datasource_knowledge_base.apps",
        "description": "apps.datasource_knowledge_base.apps",
        "peekOfCode": "class DatasourceKnowledgeBaseConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.datasource_knowledge_base'",
        "detail": "apps.datasource_knowledge_base.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.datasource_knowledge_base.urls",
        "description": "apps.datasource_knowledge_base.urls",
        "peekOfCode": "app_name = \"datasource_knowledge_base\"\nurlpatterns = [\n    path(\"create/\", VectorStoreView_Create.as_view(\n        template_name=\"datasource_knowledge_base/base/create_knowledge_base.html\"), name=\"create\"),\n    path(\"list/\", VectorStoreView_List.as_view(\n        template_name=\"datasource_knowledge_base/base/list_knowledge_bases.html\"), name=\"list\"),\n    path(\"update/<int:pk>/\", VectorStoreView_Update.as_view(\n        template_name=\"datasource_knowledge_base/base/update_knowledge_base.html\"), name=\"update\"),\n    path(\"delete/<int:pk>/\", VectorStoreView_Delete.as_view(\n        template_name=\"datasource_knowledge_base/base/confirm_delete_knowledge_base.html\"), name=\"delete\"),",
        "detail": "apps.datasource_knowledge_base.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.datasource_knowledge_base.urls",
        "description": "apps.datasource_knowledge_base.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"create/\", VectorStoreView_Create.as_view(\n        template_name=\"datasource_knowledge_base/base/create_knowledge_base.html\"), name=\"create\"),\n    path(\"list/\", VectorStoreView_List.as_view(\n        template_name=\"datasource_knowledge_base/base/list_knowledge_bases.html\"), name=\"list\"),\n    path(\"update/<int:pk>/\", VectorStoreView_Update.as_view(\n        template_name=\"datasource_knowledge_base/base/update_knowledge_base.html\"), name=\"update\"),\n    path(\"delete/<int:pk>/\", VectorStoreView_Delete.as_view(\n        template_name=\"datasource_knowledge_base/base/confirm_delete_knowledge_base.html\"), name=\"delete\"),\n    path('create_documents/', DocumentView_Create.as_view(",
        "detail": "apps.datasource_knowledge_base.urls",
        "documentation": {}
    },
    {
        "label": "DataSourceMediaStorageItemAdmin",
        "kind": 6,
        "importPath": "apps.datasource_media_storages.admin.media_item_admin",
        "description": "apps.datasource_media_storages.admin.media_item_admin",
        "peekOfCode": "class DataSourceMediaStorageItemAdmin(admin.ModelAdmin):\n    list_display = MEDIA_MANAGER_ITEM_ADMIN_LIST_DISPLAY\n    list_filter = MEDIA_MANAGER_ITEM_ADMIN_LIST_FILTER\n    search_fields = MEDIA_MANAGER_ITEM_ADMIN_SEARCH_FIELDS\n    ordering = ['-created_at']\n    readonly_fields = ['created_at', 'updated_at']",
        "detail": "apps.datasource_media_storages.admin.media_item_admin",
        "documentation": {}
    },
    {
        "label": "DataSourceMediaStorageConnectionAdmin",
        "kind": 6,
        "importPath": "apps.datasource_media_storages.admin.media_storage_admin",
        "description": "apps.datasource_media_storages.admin.media_storage_admin",
        "peekOfCode": "class DataSourceMediaStorageConnectionAdmin(admin.ModelAdmin):\n    list_display = MEDIA_STORE_ADMIN_LIST_DISPLAY\n    list_filter = MEDIA_STORE_ADMIN_LIST_FILTER\n    search_fields = MEDIA_STORE_ADMIN_SEARCH_FIELDS\n    ordering = ['-created_at']\n    readonly_fields = ['created_at', 'updated_at']",
        "detail": "apps.datasource_media_storages.admin.media_storage_admin",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.datasource_media_storages.migrations.0001_initial",
        "description": "apps.datasource_media_storages.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('assistants', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='DataSourceMediaStorageConnection',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "apps.datasource_media_storages.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "DataSourceMediaStorageItem",
        "kind": 6,
        "importPath": "apps.datasource_media_storages.models.media_item_models",
        "description": "apps.datasource_media_storages.models.media_item_models",
        "peekOfCode": "class DataSourceMediaStorageItem(models.Model):\n    storage_base = models.ForeignKey('datasource_media_storages.DataSourceMediaStorageConnection',\n                                     on_delete=models.CASCADE, related_name='items')\n    media_file_name = models.CharField(max_length=255)\n    description = models.TextField(blank=True, null=True)\n    media_file_size = models.BigIntegerField(null=True, blank=True)\n    media_file_type = models.CharField(max_length=10, choices=MEDIA_FILE_TYPES)\n    full_file_path = models.CharField(max_length=1000, blank=True, null=True)\n    file_bytes = models.BinaryField(null=True, blank=True)\n    created_at = models.DateTimeField(auto_now_add=True)",
        "detail": "apps.datasource_media_storages.models.media_item_models",
        "documentation": {}
    },
    {
        "label": "DataSourceMediaStorageConnection",
        "kind": 6,
        "importPath": "apps.datasource_media_storages.models.media_storage_models",
        "description": "apps.datasource_media_storages.models.media_storage_models",
        "peekOfCode": "class DataSourceMediaStorageConnection(models.Model):\n    assistant = models.ForeignKey('assistants.Assistant', on_delete=models.CASCADE)\n    name = models.CharField(max_length=255)\n    description = models.TextField()\n    media_category = models.CharField(max_length=20, choices=MEDIA_MANAGER_ITEM_TYPES)\n    directory_full_path = models.CharField(max_length=255, blank=True, null=True)\n    directory_schema = models.TextField(blank=True, null=True)\n    interpretation_temperature = models.FloatField(default=0.25)\n    interpretation_maximum_tokens = models.IntegerField(default=2048)\n    created_at = models.DateTimeField(auto_now_add=True)",
        "detail": "apps.datasource_media_storages.models.media_storage_models",
        "documentation": {}
    },
    {
        "label": "download_file_from_url",
        "kind": 2,
        "importPath": "apps.datasource_media_storages.tasks.download_file_from_url_tasks",
        "description": "apps.datasource_media_storages.tasks.download_file_from_url_tasks",
        "peekOfCode": "def download_file_from_url(storage_id: int, url: str):\n    from apps.datasource_media_storages.models import DataSourceMediaStorageConnection, DataSourceMediaStorageItem\n    import requests\n    media_manager = DataSourceMediaStorageConnection.objects.get(id=storage_id)\n    if not media_manager:\n        print(f\"Storage with ID: {storage_id} does not exist\")\n        return False\n    file_format = url.split('.')[-1]\n    f_generated = None\n    try:",
        "detail": "apps.datasource_media_storages.tasks.download_file_from_url_tasks",
        "documentation": {}
    },
    {
        "label": "build_media_manager_file_name",
        "kind": 2,
        "importPath": "apps.datasource_media_storages.tasks.download_file_from_url_tasks",
        "description": "apps.datasource_media_storages.tasks.download_file_from_url_tasks",
        "peekOfCode": "def build_media_manager_file_name(url: str, file_extension: str):\n    component = url.split('/')[-1]\n    combined_file_name = f\"{component}.{file_extension}\"\n    return combined_file_name",
        "detail": "apps.datasource_media_storages.tasks.download_file_from_url_tasks",
        "documentation": {}
    },
    {
        "label": "upload_file_to_storage",
        "kind": 2,
        "importPath": "apps.datasource_media_storages.tasks.upload_file_to_storage_tasks",
        "description": "apps.datasource_media_storages.tasks.upload_file_to_storage_tasks",
        "peekOfCode": "def upload_file_to_storage(file_bytes: bytes, full_path: str, media_category: str):\n    f_format = full_path.split('.')[-1]\n    if f_format not in [file_type[0] for file_type in MEDIA_FILE_TYPES]:\n        return False\n    if media_category == MediaManagerItemCategoriesNames.Image:\n        if f_format not in MediaManagerItemFormatTypesNamesLists.IMAGE:\n            return False\n    elif media_category == MediaManagerItemCategoriesNames.Audio:\n        if f_format not in MediaManagerItemFormatTypesNamesLists.AUDIO:\n            return False",
        "detail": "apps.datasource_media_storages.tasks.upload_file_to_storage_tasks",
        "documentation": {}
    },
    {
        "label": "convert_file_size",
        "kind": 2,
        "importPath": "apps.datasource_media_storages.templatetags.convert_file_size",
        "description": "apps.datasource_media_storages.templatetags.convert_file_size",
        "peekOfCode": "def convert_file_size(byte_size):\n    k_bytes = (byte_size / UNIT_BYTES_THOUSAND)\n    str_k_bytes = f'{k_bytes:.2f} KB'\n    return str_k_bytes",
        "detail": "apps.datasource_media_storages.templatetags.convert_file_size",
        "documentation": {}
    },
    {
        "label": "register",
        "kind": 5,
        "importPath": "apps.datasource_media_storages.templatetags.convert_file_size",
        "description": "apps.datasource_media_storages.templatetags.convert_file_size",
        "peekOfCode": "register = template.Library()\n@register.filter\ndef convert_file_size(byte_size):\n    k_bytes = (byte_size / UNIT_BYTES_THOUSAND)\n    str_k_bytes = f'{k_bytes:.2f} KB'\n    return str_k_bytes",
        "detail": "apps.datasource_media_storages.templatetags.convert_file_size",
        "documentation": {}
    },
    {
        "label": "fixture_datasource_media_storages_dashboards",
        "kind": 2,
        "importPath": "apps.datasource_media_storages.tests.conftest",
        "description": "apps.datasource_media_storages.tests.conftest",
        "peekOfCode": "def fixture_datasource_media_storages_dashboards():\n    return True",
        "detail": "apps.datasource_media_storages.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_datasource_media_storages_test_forms",
        "kind": 2,
        "importPath": "apps.datasource_media_storages.tests.test_forms",
        "description": "apps.datasource_media_storages.tests.test_forms",
        "peekOfCode": "def test_init_datasource_media_storages_test_forms():\n    assert True",
        "detail": "apps.datasource_media_storages.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_datasource_media_storages_test_models",
        "kind": 2,
        "importPath": "apps.datasource_media_storages.tests.test_models",
        "description": "apps.datasource_media_storages.tests.test_models",
        "peekOfCode": "def test_init_datasource_media_storages_test_models():\n    assert True",
        "detail": "apps.datasource_media_storages.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_datasource_media_storages_test_utils",
        "kind": 2,
        "importPath": "apps.datasource_media_storages.tests.test_utils",
        "description": "apps.datasource_media_storages.tests.test_utils",
        "peekOfCode": "def test_init_datasource_media_storages_test_utils():\n    assert True",
        "detail": "apps.datasource_media_storages.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_datasource_media_storages_test_views",
        "kind": 2,
        "importPath": "apps.datasource_media_storages.tests.test_views",
        "description": "apps.datasource_media_storages.tests.test_views",
        "peekOfCode": "def test_init_datasource_media_storages_test_views():\n    assert True",
        "detail": "apps.datasource_media_storages.tests.test_views",
        "documentation": {}
    },
    {
        "label": "MediaManagerItemCategoriesNames",
        "kind": 6,
        "importPath": "apps.datasource_media_storages.utils.constant_utils",
        "description": "apps.datasource_media_storages.utils.constant_utils",
        "peekOfCode": "class MediaManagerItemCategoriesNames:\n    Image = 'image'\n    Audio = 'audio'\n    Video = 'video'\n    Compressed = 'compressed'\n    Code = 'code'\n    Data = 'data'\nMEDIA_FILE_TYPES = (\n    # Image Files\n    ('jpg', 'JPEG'),",
        "detail": "apps.datasource_media_storages.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MediaManagerItemFormatTypesNames",
        "kind": 6,
        "importPath": "apps.datasource_media_storages.utils.constant_utils",
        "description": "apps.datasource_media_storages.utils.constant_utils",
        "peekOfCode": "class MediaManagerItemFormatTypesNames:\n    class Image:\n        JPEG = 'jpg'\n        PNG = 'png'\n        GIF = 'gif'\n        SVG = 'svg'\n        BMP = 'bmp'\n        TIFF = 'tiff'\n    class Audio:\n        MP3 = 'mp3'",
        "detail": "apps.datasource_media_storages.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MediaManagerItemFormatTypesNamesLists",
        "kind": 6,
        "importPath": "apps.datasource_media_storages.utils.constant_utils",
        "description": "apps.datasource_media_storages.utils.constant_utils",
        "peekOfCode": "class MediaManagerItemFormatTypesNamesLists:\n    IMAGE = ['jpg', 'png', 'gif', 'svg', 'bmp', 'tiff']\n    AUDIO = ['mp3', 'wav', 'flac', 'aac', 'ogg']\n    VIDEO = ['mp4', 'avi', 'mkv', 'mov']\n    COMPRESSED = ['zip', 'rar', 'tar']\n    CODE = ['py', 'js', 'ts', 'php', 'css', 'html', 'java', 'c', 'cpp', 'h', 'sh', 'go', 'dart']\n    DATA = ['yml', 'yaml', 'sql', 'pkl', 'csv', 'xlsx', 'json', 'xml', 'tsv', 'docx', 'pptx', 'pdf', 'txt']\nFILE_TYPE_HIGHLIGHTING_DECODER = {\n    \"py\": \"python\", \"js\": \"javascript\", \"ts\": \"typescript\", \"php\": \"php\", \"css\": \"css\", \"html\": \"html\",\n    \"java\": \"java\", \"c\": \"c\", \"cpp\": \"cpp\", \"h\": \"h\", \"sh\": \"shell\", \"go\": \"golang\", \"dart\": \"dart\",",
        "detail": "apps.datasource_media_storages.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MEDIA_MANAGER_ITEM_TYPES",
        "kind": 5,
        "importPath": "apps.datasource_media_storages.utils.constant_utils",
        "description": "apps.datasource_media_storages.utils.constant_utils",
        "peekOfCode": "MEDIA_MANAGER_ITEM_TYPES = (\n    ('image', 'Image'),\n    ('audio', 'Audio'),\n    ('video', 'Video'),\n    ('compressed', 'Compressed'),\n    ('code', 'Code'),\n    ('data', 'Data'),\n)\nclass MediaManagerItemCategoriesNames:\n    Image = 'image'",
        "detail": "apps.datasource_media_storages.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MEDIA_FILE_TYPES",
        "kind": 5,
        "importPath": "apps.datasource_media_storages.utils.constant_utils",
        "description": "apps.datasource_media_storages.utils.constant_utils",
        "peekOfCode": "MEDIA_FILE_TYPES = (\n    # Image Files\n    ('jpg', 'JPEG'),\n    ('png', 'PNG'),\n    ('gif', 'GIF'),\n    ('svg', 'SVG'),\n    ('bmp', 'BMP'),\n    ('tiff', 'TIFF'),\n    # Audio Files\n    ('mp3', 'MP3'),",
        "detail": "apps.datasource_media_storages.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "FILE_TYPE_HIGHLIGHTING_DECODER",
        "kind": 5,
        "importPath": "apps.datasource_media_storages.utils.constant_utils",
        "description": "apps.datasource_media_storages.utils.constant_utils",
        "peekOfCode": "FILE_TYPE_HIGHLIGHTING_DECODER = {\n    \"py\": \"python\", \"js\": \"javascript\", \"ts\": \"typescript\", \"php\": \"php\", \"css\": \"css\", \"html\": \"html\",\n    \"java\": \"java\", \"c\": \"c\", \"cpp\": \"cpp\", \"h\": \"h\", \"sh\": \"shell\", \"go\": \"golang\", \"dart\": \"dart\",\n    \"yml\": \"yaml\", \"yaml\": \"yaml\", \"sql\": \"sql\", \"pkl\": \"plaintext\", \"csv\": \"plaintext\",\n    \"xlsx\": \"plaintext\", \"json\": \"json\", \"xml\": \"xml\", \"tsv\": \"plaintext\", \"docx\": \"plaintext\",\n    \"pptx\": \"plaintext\", \"pdf\": \"plaintext\", \"txt\": \"plaintext\",\n}\nMEDIA_MANAGER_ITEM_ADMIN_LIST_DISPLAY = ['storage_base', 'media_file_name', 'media_file_size', 'media_file_type',\n                                         'full_file_path', 'created_at', 'updated_at']\nMEDIA_MANAGER_ITEM_ADMIN_LIST_FILTER = ['storage_base', 'media_file_type', 'media_file_type']",
        "detail": "apps.datasource_media_storages.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MEDIA_MANAGER_ITEM_ADMIN_LIST_DISPLAY",
        "kind": 5,
        "importPath": "apps.datasource_media_storages.utils.constant_utils",
        "description": "apps.datasource_media_storages.utils.constant_utils",
        "peekOfCode": "MEDIA_MANAGER_ITEM_ADMIN_LIST_DISPLAY = ['storage_base', 'media_file_name', 'media_file_size', 'media_file_type',\n                                         'full_file_path', 'created_at', 'updated_at']\nMEDIA_MANAGER_ITEM_ADMIN_LIST_FILTER = ['storage_base', 'media_file_type', 'media_file_type']\nMEDIA_MANAGER_ITEM_ADMIN_SEARCH_FIELDS = ['storage_base', 'media_file_name', 'full_file_path']\nMEDIA_STORE_ADMIN_LIST_DISPLAY = ['assistant', 'name', 'media_category', 'directory_full_path', 'directory_schema',\n                                  'created_at', 'updated_at']\nMEDIA_STORE_ADMIN_LIST_FILTER = ['assistant', 'media_category']\nMEDIA_STORE_ADMIN_SEARCH_FIELDS = ['assistant', 'name', 'directory_full_path']\nUNIT_BYTES_THOUSAND = 1024\nAI_GENERATED_DESCRIPTION_SPECIFIER = 'generated_description'",
        "detail": "apps.datasource_media_storages.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MEDIA_MANAGER_ITEM_ADMIN_LIST_FILTER",
        "kind": 5,
        "importPath": "apps.datasource_media_storages.utils.constant_utils",
        "description": "apps.datasource_media_storages.utils.constant_utils",
        "peekOfCode": "MEDIA_MANAGER_ITEM_ADMIN_LIST_FILTER = ['storage_base', 'media_file_type', 'media_file_type']\nMEDIA_MANAGER_ITEM_ADMIN_SEARCH_FIELDS = ['storage_base', 'media_file_name', 'full_file_path']\nMEDIA_STORE_ADMIN_LIST_DISPLAY = ['assistant', 'name', 'media_category', 'directory_full_path', 'directory_schema',\n                                  'created_at', 'updated_at']\nMEDIA_STORE_ADMIN_LIST_FILTER = ['assistant', 'media_category']\nMEDIA_STORE_ADMIN_SEARCH_FIELDS = ['assistant', 'name', 'directory_full_path']\nUNIT_BYTES_THOUSAND = 1024\nAI_GENERATED_DESCRIPTION_SPECIFIER = 'generated_description'",
        "detail": "apps.datasource_media_storages.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MEDIA_MANAGER_ITEM_ADMIN_SEARCH_FIELDS",
        "kind": 5,
        "importPath": "apps.datasource_media_storages.utils.constant_utils",
        "description": "apps.datasource_media_storages.utils.constant_utils",
        "peekOfCode": "MEDIA_MANAGER_ITEM_ADMIN_SEARCH_FIELDS = ['storage_base', 'media_file_name', 'full_file_path']\nMEDIA_STORE_ADMIN_LIST_DISPLAY = ['assistant', 'name', 'media_category', 'directory_full_path', 'directory_schema',\n                                  'created_at', 'updated_at']\nMEDIA_STORE_ADMIN_LIST_FILTER = ['assistant', 'media_category']\nMEDIA_STORE_ADMIN_SEARCH_FIELDS = ['assistant', 'name', 'directory_full_path']\nUNIT_BYTES_THOUSAND = 1024\nAI_GENERATED_DESCRIPTION_SPECIFIER = 'generated_description'",
        "detail": "apps.datasource_media_storages.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MEDIA_STORE_ADMIN_LIST_DISPLAY",
        "kind": 5,
        "importPath": "apps.datasource_media_storages.utils.constant_utils",
        "description": "apps.datasource_media_storages.utils.constant_utils",
        "peekOfCode": "MEDIA_STORE_ADMIN_LIST_DISPLAY = ['assistant', 'name', 'media_category', 'directory_full_path', 'directory_schema',\n                                  'created_at', 'updated_at']\nMEDIA_STORE_ADMIN_LIST_FILTER = ['assistant', 'media_category']\nMEDIA_STORE_ADMIN_SEARCH_FIELDS = ['assistant', 'name', 'directory_full_path']\nUNIT_BYTES_THOUSAND = 1024\nAI_GENERATED_DESCRIPTION_SPECIFIER = 'generated_description'",
        "detail": "apps.datasource_media_storages.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MEDIA_STORE_ADMIN_LIST_FILTER",
        "kind": 5,
        "importPath": "apps.datasource_media_storages.utils.constant_utils",
        "description": "apps.datasource_media_storages.utils.constant_utils",
        "peekOfCode": "MEDIA_STORE_ADMIN_LIST_FILTER = ['assistant', 'media_category']\nMEDIA_STORE_ADMIN_SEARCH_FIELDS = ['assistant', 'name', 'directory_full_path']\nUNIT_BYTES_THOUSAND = 1024\nAI_GENERATED_DESCRIPTION_SPECIFIER = 'generated_description'",
        "detail": "apps.datasource_media_storages.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MEDIA_STORE_ADMIN_SEARCH_FIELDS",
        "kind": 5,
        "importPath": "apps.datasource_media_storages.utils.constant_utils",
        "description": "apps.datasource_media_storages.utils.constant_utils",
        "peekOfCode": "MEDIA_STORE_ADMIN_SEARCH_FIELDS = ['assistant', 'name', 'directory_full_path']\nUNIT_BYTES_THOUSAND = 1024\nAI_GENERATED_DESCRIPTION_SPECIFIER = 'generated_description'",
        "detail": "apps.datasource_media_storages.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "UNIT_BYTES_THOUSAND",
        "kind": 5,
        "importPath": "apps.datasource_media_storages.utils.constant_utils",
        "description": "apps.datasource_media_storages.utils.constant_utils",
        "peekOfCode": "UNIT_BYTES_THOUSAND = 1024\nAI_GENERATED_DESCRIPTION_SPECIFIER = 'generated_description'",
        "detail": "apps.datasource_media_storages.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "AI_GENERATED_DESCRIPTION_SPECIFIER",
        "kind": 5,
        "importPath": "apps.datasource_media_storages.utils.constant_utils",
        "description": "apps.datasource_media_storages.utils.constant_utils",
        "peekOfCode": "AI_GENERATED_DESCRIPTION_SPECIFIER = 'generated_description'",
        "detail": "apps.datasource_media_storages.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "decode_stream__docx",
        "kind": 2,
        "importPath": "apps.datasource_media_storages.utils.function_utils",
        "description": "apps.datasource_media_storages.utils.function_utils",
        "peekOfCode": "def decode_stream__docx(file_bytes):\n    f_stream = BytesIO(file_bytes)\n    doc = ms_dx(f_stream)\n    return '\\n'.join([paragraph.text for paragraph in doc.paragraphs])\ndef decode_stream__pptx(file_bytes):\n    f_stream = BytesIO(file_bytes)\n    pres = ms_px(f_stream)\n    txt = []\n    for sl in pres.slides:\n        for shp in sl.shapes:",
        "detail": "apps.datasource_media_storages.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "decode_stream__pptx",
        "kind": 2,
        "importPath": "apps.datasource_media_storages.utils.function_utils",
        "description": "apps.datasource_media_storages.utils.function_utils",
        "peekOfCode": "def decode_stream__pptx(file_bytes):\n    f_stream = BytesIO(file_bytes)\n    pres = ms_px(f_stream)\n    txt = []\n    for sl in pres.slides:\n        for shp in sl.shapes:\n            if hasattr(shp, \"text\"):\n                txt.append(shp.text)\n    return '\\n'.join(txt)\ndef decode_stream__xlsx(file_bytes):",
        "detail": "apps.datasource_media_storages.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "decode_stream__xlsx",
        "kind": 2,
        "importPath": "apps.datasource_media_storages.utils.function_utils",
        "description": "apps.datasource_media_storages.utils.function_utils",
        "peekOfCode": "def decode_stream__xlsx(file_bytes):\n    f_stream = BytesIO(file_bytes)\n    w_book = ms_ex(f_stream, data_only=True)\n    txt = []\n    for sheet in w_book.sheetnames:\n        w_sheet = w_book[sheet]\n        for row in w_sheet.iter_rows(values_only=True):\n            txt.append('\\t'.join([str(cell) if cell is not None else '' for cell in row]))\n    return '\\n'.join(txt)",
        "detail": "apps.datasource_media_storages.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "MediaView_Generated",
        "kind": 6,
        "importPath": "apps.datasource_media_storages.views.generated.generated_media_items_views",
        "description": "apps.datasource_media_storages.views.generated.generated_media_items_views",
        "peekOfCode": "class MediaView_Generated(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_STORAGE_FILES\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_STORAGE_FILES):\n            messages.error(self.request, \"You do not have permission to see media files.\")\n            return context\n        ##############################",
        "detail": "apps.datasource_media_storages.views.generated.generated_media_items_views",
        "documentation": {}
    },
    {
        "label": "MediaView_ItemCreate",
        "kind": 6,
        "importPath": "apps.datasource_media_storages.views.media_file.create_media_item_views",
        "description": "apps.datasource_media_storages.views.media_file.create_media_item_views",
        "peekOfCode": "class MediaView_ItemCreate(LoginRequiredMixin, TemplateView):\n    def get(self, request, *args, **kwargs):\n        user_agents = Assistant.objects.filter(organization__users__in=[request.user])\n        media_managers = DataSourceMediaStorageConnection.objects.filter(assistant__in=user_agents)\n        orgs = Organization.objects.filter(users__in=[request.user])\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['organizations'] = list(orgs.values('id', 'name'))\n        context['assistants'] = list(user_agents.values('id', 'name', 'organization_id'))\n        context['media_storages'] = list(media_managers.values('id', 'name', 'assistant_id'))\n        return self.render_to_response(context)",
        "detail": "apps.datasource_media_storages.views.media_file.create_media_item_views",
        "documentation": {}
    },
    {
        "label": "MediaView_ItemDeleteAll",
        "kind": 6,
        "importPath": "apps.datasource_media_storages.views.media_file.delete_all_media_items_views",
        "description": "apps.datasource_media_storages.views.media_file.delete_all_media_items_views",
        "peekOfCode": "class MediaView_ItemDeleteAll(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context\n    def get(self, request, *args, **kwargs):\n        context = self.post(request, *args, **kwargs)\n        return self.render_to_response(context)\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - DELETE_STORAGE_FILES",
        "detail": "apps.datasource_media_storages.views.media_file.delete_all_media_items_views",
        "documentation": {}
    },
    {
        "label": "MediaView_ItemUpdate",
        "kind": 6,
        "importPath": "apps.datasource_media_storages.views.media_file.detail_update_media_item_views",
        "description": "apps.datasource_media_storages.views.media_file.detail_update_media_item_views",
        "peekOfCode": "class MediaView_ItemUpdate(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_STORAGE_FILES\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_STORAGE_FILES):\n            messages.error(self.request, \"You do not have permission to see media files.\")\n            return context\n        ##############################",
        "detail": "apps.datasource_media_storages.views.media_file.detail_update_media_item_views",
        "documentation": {}
    },
    {
        "label": "MediaView_ItemHTTPRetrieval",
        "kind": 6,
        "importPath": "apps.datasource_media_storages.views.media_file.fetch_media_file_from_url_views",
        "description": "apps.datasource_media_storages.views.media_file.fetch_media_file_from_url_views",
        "peekOfCode": "class MediaView_ItemHTTPRetrieval(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context\n    def get(self, request, *args, **kwargs):\n        return self.post(request, *args, **kwargs)\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - ADD_STORAGE_FILES\n        if not UserPermissionManager.is_authorized(user=self.request.user,",
        "detail": "apps.datasource_media_storages.views.media_file.fetch_media_file_from_url_views",
        "documentation": {}
    },
    {
        "label": "MediaView_ItemAIDescription",
        "kind": 6,
        "importPath": "apps.datasource_media_storages.views.media_file.generate_description_media_item_views",
        "description": "apps.datasource_media_storages.views.media_file.generate_description_media_item_views",
        "peekOfCode": "class MediaView_ItemAIDescription(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        if AI_GENERATED_DESCRIPTION_SPECIFIER in kwargs:\n            context['generated_description'] = kwargs['generated_description']\n            print(f\"Generated Description: {kwargs['generated_description']}\")\n        return context\n    @staticmethod\n    def decode_media_item_type(media_item_type):\n        class MediaFileTypesNamesLists:",
        "detail": "apps.datasource_media_storages.views.media_file.generate_description_media_item_views",
        "documentation": {}
    },
    {
        "label": "MediaView_ItemList",
        "kind": 6,
        "importPath": "apps.datasource_media_storages.views.media_file.list_media_items_views",
        "description": "apps.datasource_media_storages.views.media_file.list_media_items_views",
        "peekOfCode": "class MediaView_ItemList(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_STORAGE_FILES\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_STORAGE_FILES):\n            messages.error(self.request, \"You do not have permission to see media files.\")\n            return context\n        ##############################",
        "detail": "apps.datasource_media_storages.views.media_file.list_media_items_views",
        "documentation": {}
    },
    {
        "label": "MediaView_ManagerCreate",
        "kind": 6,
        "importPath": "apps.datasource_media_storages.views.media_storage.create_media_storage_views",
        "description": "apps.datasource_media_storages.views.media_storage.create_media_storage_views",
        "peekOfCode": "class MediaView_ManagerCreate(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context_user = self.request.user\n        user_orgs = Organization.objects.filter(users__in=[context_user])\n        context['assistants'] = Assistant.objects.filter(organization__in=user_orgs)\n        context['media_categories'] = MEDIA_MANAGER_ITEM_TYPES\n        context['user'] = context_user\n        return context\n    def post(self, request, *args, **kwargs):",
        "detail": "apps.datasource_media_storages.views.media_storage.create_media_storage_views",
        "documentation": {}
    },
    {
        "label": "MediaView_ManagerDelete",
        "kind": 6,
        "importPath": "apps.datasource_media_storages.views.media_storage.delete_media_storage_views",
        "description": "apps.datasource_media_storages.views.media_storage.delete_media_storage_views",
        "peekOfCode": "class MediaView_ManagerDelete(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context_user = self.request.user\n        media_manager = get_object_or_404(DataSourceMediaStorageConnection, pk=kwargs['pk'])\n        context['user'] = context_user\n        context['media_storage'] = media_manager\n        return context\n    def post(self, request, *args, **kwargs):\n        ##############################",
        "detail": "apps.datasource_media_storages.views.media_storage.delete_media_storage_views",
        "documentation": {}
    },
    {
        "label": "MediaView_ManagerList",
        "kind": 6,
        "importPath": "apps.datasource_media_storages.views.media_storage.list_media_storages_views",
        "description": "apps.datasource_media_storages.views.media_storage.list_media_storages_views",
        "peekOfCode": "class MediaView_ManagerList(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_MEDIA_STORAGES\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_MEDIA_STORAGES):\n            messages.error(self.request, \"You do not have permission to list media storages.\")\n            return context\n        ##############################",
        "detail": "apps.datasource_media_storages.views.media_storage.list_media_storages_views",
        "documentation": {}
    },
    {
        "label": "MediaView_ManagerUpdate",
        "kind": 6,
        "importPath": "apps.datasource_media_storages.views.media_storage.update_media_storage_views",
        "description": "apps.datasource_media_storages.views.media_storage.update_media_storage_views",
        "peekOfCode": "class MediaView_ManagerUpdate(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context_user = self.request.user\n        media_manager = get_object_or_404(DataSourceMediaStorageConnection, pk=kwargs['pk'])\n        user_orgs = Organization.objects.filter(users__in=[context_user])\n        context['assistants'] = Assistant.objects.filter(organization__in=user_orgs)\n        context['media_categories'] = MEDIA_MANAGER_ITEM_TYPES\n        context['user'] = context_user\n        context['connection'] = media_manager",
        "detail": "apps.datasource_media_storages.views.media_storage.update_media_storage_views",
        "documentation": {}
    },
    {
        "label": "DatasourceMediaStoragesConfig",
        "kind": 6,
        "importPath": "apps.datasource_media_storages.apps",
        "description": "apps.datasource_media_storages.apps",
        "peekOfCode": "class DatasourceMediaStoragesConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.datasource_media_storages'",
        "detail": "apps.datasource_media_storages.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.datasource_media_storages.urls",
        "description": "apps.datasource_media_storages.urls",
        "peekOfCode": "app_name = \"datasource_media_storages\"\nurlpatterns = [\n    path('create/', MediaView_ManagerCreate.as_view(\n        template_name=\"datasource_media_storages/storage/create_datasource_media_storage.html\"), name=\"create\"),\n    path('list/', MediaView_ManagerList.as_view(\n        template_name=\"datasource_media_storages/storage/list_datasource_media_storages.html\"), name=\"list\"),\n    path('update/<int:pk>/', MediaView_ManagerUpdate.as_view(\n        template_name=\"datasource_media_storages/storage/update_datasource_media_storage.html\"), name=\"update\"),\n    path('delete/<int:pk>/', MediaView_ManagerDelete.as_view(\n        template_name=\"datasource_media_storages/storage/confirm_delete_datasource_media_storage.html\"",
        "detail": "apps.datasource_media_storages.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.datasource_media_storages.urls",
        "description": "apps.datasource_media_storages.urls",
        "peekOfCode": "urlpatterns = [\n    path('create/', MediaView_ManagerCreate.as_view(\n        template_name=\"datasource_media_storages/storage/create_datasource_media_storage.html\"), name=\"create\"),\n    path('list/', MediaView_ManagerList.as_view(\n        template_name=\"datasource_media_storages/storage/list_datasource_media_storages.html\"), name=\"list\"),\n    path('update/<int:pk>/', MediaView_ManagerUpdate.as_view(\n        template_name=\"datasource_media_storages/storage/update_datasource_media_storage.html\"), name=\"update\"),\n    path('delete/<int:pk>/', MediaView_ManagerDelete.as_view(\n        template_name=\"datasource_media_storages/storage/confirm_delete_datasource_media_storage.html\"\n    ), name=\"delete\"),",
        "detail": "apps.datasource_media_storages.urls",
        "documentation": {}
    },
    {
        "label": "DataSourceMLModelItemAdmin",
        "kind": 6,
        "importPath": "apps.datasource_ml_models.admin.ml_model_item_admin",
        "description": "apps.datasource_ml_models.admin.ml_model_item_admin",
        "peekOfCode": "class DataSourceMLModelItemAdmin(admin.ModelAdmin):\n    list_display = ML_MODEL_ITEM_ADMIN_LIST\n    list_filter = ML_MODEL_ITEM_ADMIN_FILTER\n    search_fields = ML_MODEL_ITEM_ADMIN_SEARCH\n    ordering = ('-created_at',)",
        "detail": "apps.datasource_ml_models.admin.ml_model_item_admin",
        "documentation": {}
    },
    {
        "label": "DataSourceMLModelConnectionAdmin",
        "kind": 6,
        "importPath": "apps.datasource_ml_models.admin.ml_model_storage_admin",
        "description": "apps.datasource_ml_models.admin.ml_model_storage_admin",
        "peekOfCode": "class DataSourceMLModelConnectionAdmin(admin.ModelAdmin):\n    list_display = ML_MODEL_MANAGER_ADMIN_LIST\n    list_filter = ML_MODEL_MANAGER_ADMIN_FILTER\n    search_fields = ML_MODEL_MANAGER_ADMIN_SEARCH\n    ordering = ('-created_at',)",
        "detail": "apps.datasource_ml_models.admin.ml_model_storage_admin",
        "documentation": {}
    },
    {
        "label": "DataSourceMLModelItemForm",
        "kind": 6,
        "importPath": "apps.datasource_ml_models.forms.ml_model_item_forms",
        "description": "apps.datasource_ml_models.forms.ml_model_item_forms",
        "peekOfCode": "class DataSourceMLModelItemForm(forms.ModelForm):\n    file = forms.FileField(required=True, widget=forms.FileInput(attrs={'class': 'form-control'}))\n    class Meta:\n        model = DataSourceMLModelItem\n        fields = ['ml_model_base', 'ml_model_name', 'description', 'interpretation_temperature']\n        widgets = {\n            'ml_model_base': forms.Select(attrs={'class': 'form-select'}),\n            'ml_model_name': forms.TextInput(attrs={'class': 'form-control', 'placeholder': 'Enter ML model name'}),\n            'description': forms.Textarea(attrs={\n                'class': 'form-control', 'placeholder': 'Enter description for the ML model', 'rows': 3",
        "detail": "apps.datasource_ml_models.forms.ml_model_item_forms",
        "documentation": {}
    },
    {
        "label": "DataSourceMLModelConnectionForm",
        "kind": 6,
        "importPath": "apps.datasource_ml_models.forms.ml_model_storage_forms",
        "description": "apps.datasource_ml_models.forms.ml_model_storage_forms",
        "peekOfCode": "class DataSourceMLModelConnectionForm(forms.ModelForm):\n    class Meta:\n        model = DataSourceMLModelConnection\n        fields = [\n            'assistant', 'name', 'description', 'model_object_category', 'directory_schema',\n            'interpretation_temperature', 'interpretation_maximum_tokens'\n        ]\n        widgets = {\n            'assistant': forms.Select(attrs={'class': 'form-select'}),\n            'name': forms.TextInput(attrs={'class': 'form-control', 'placeholder': 'Enter data source name'}),",
        "detail": "apps.datasource_ml_models.forms.ml_model_storage_forms",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.datasource_ml_models.migrations.0001_initial",
        "description": "apps.datasource_ml_models.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('assistants', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='DataSourceMLModelConnection',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "apps.datasource_ml_models.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "DataSourceMLModelItem",
        "kind": 6,
        "importPath": "apps.datasource_ml_models.models.ml_model_item_models",
        "description": "apps.datasource_ml_models.models.ml_model_item_models",
        "peekOfCode": "class DataSourceMLModelItem(models.Model):\n    ml_model_base = models.ForeignKey('datasource_ml_models.DataSourceMLModelConnection',\n                                      on_delete=models.CASCADE, related_name='items')\n    ml_model_name = models.CharField(max_length=255)\n    description = models.TextField(blank=True, null=True)\n    ml_model_size = models.BigIntegerField(null=True, blank=True)\n    interpretation_temperature = models.FloatField(default=0.25)\n    full_file_path = models.CharField(max_length=1000, blank=True, null=True)\n    file_bytes = models.BinaryField(null=True, blank=True)\n    created_at = models.DateTimeField(auto_now_add=True)",
        "detail": "apps.datasource_ml_models.models.ml_model_item_models",
        "documentation": {}
    },
    {
        "label": "DataSourceMLModelConnection",
        "kind": 6,
        "importPath": "apps.datasource_ml_models.models.ml_model_storage_models",
        "description": "apps.datasource_ml_models.models.ml_model_storage_models",
        "peekOfCode": "class DataSourceMLModelConnection(models.Model):\n    assistant = models.ForeignKey('assistants.Assistant', on_delete=models.CASCADE)\n    name = models.CharField(max_length=255)\n    description = models.TextField()\n    model_object_category = models.CharField(max_length=20, choices=ML_MODEL_ITEM_CATEGORIES)\n    directory_full_path = models.CharField(max_length=255, blank=True, null=True)\n    directory_schema = models.TextField(blank=True, null=True)\n    interpretation_temperature = models.FloatField(default=0.25)\n    interpretation_maximum_tokens = models.IntegerField(default=2048)\n    created_at = models.DateTimeField(auto_now_add=True)",
        "detail": "apps.datasource_ml_models.models.ml_model_storage_models",
        "documentation": {}
    },
    {
        "label": "upload_model_to_ml_model_base",
        "kind": 2,
        "importPath": "apps.datasource_ml_models.tasks.upload_model_to_ml_storage_tasks",
        "description": "apps.datasource_ml_models.tasks.upload_model_to_ml_storage_tasks",
        "peekOfCode": "def upload_model_to_ml_model_base(file_bytes: bytes, full_path: str):\n    f_format = full_path.split('.')[-1]\n    if f_format not in [file_type[0] for file_type in ML_MODEL_ITEM_CATEGORIES]:\n        return False\n    try:\n        s3c = boto3.client('s3')\n        bucket = settings.AWS_STORAGE_BUCKET_NAME\n        bucket_path = full_path.split(MEDIA_URL)[-1]\n        s3c.put_object(Bucket=bucket, Key=bucket_path, Body=file_bytes)\n    except Exception as e:",
        "detail": "apps.datasource_ml_models.tasks.upload_model_to_ml_storage_tasks",
        "documentation": {}
    },
    {
        "label": "fixture_datasource_ml_models_dashboards",
        "kind": 2,
        "importPath": "apps.datasource_ml_models.tests.conftest",
        "description": "apps.datasource_ml_models.tests.conftest",
        "peekOfCode": "def fixture_datasource_ml_models_dashboards():\n    return True",
        "detail": "apps.datasource_ml_models.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_datasource_ml_models_test_forms",
        "kind": 2,
        "importPath": "apps.datasource_ml_models.tests.test_forms",
        "description": "apps.datasource_ml_models.tests.test_forms",
        "peekOfCode": "def test_init_datasource_ml_models_test_forms():\n    assert True",
        "detail": "apps.datasource_ml_models.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_datasource_ml_models_test_models",
        "kind": 2,
        "importPath": "apps.datasource_ml_models.tests.test_models",
        "description": "apps.datasource_ml_models.tests.test_models",
        "peekOfCode": "def test_init_datasource_ml_models_test_models():\n    assert True",
        "detail": "apps.datasource_ml_models.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_datasource_ml_models_test_utils",
        "kind": 2,
        "importPath": "apps.datasource_ml_models.tests.test_utils",
        "description": "apps.datasource_ml_models.tests.test_utils",
        "peekOfCode": "def test_init_datasource_ml_models_test_utils():\n    assert True",
        "detail": "apps.datasource_ml_models.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_datasource_ml_models_test_views",
        "kind": 2,
        "importPath": "apps.datasource_ml_models.tests.test_views",
        "description": "apps.datasource_ml_models.tests.test_views",
        "peekOfCode": "def test_init_datasource_ml_models_test_views():\n    assert True",
        "detail": "apps.datasource_ml_models.tests.test_views",
        "documentation": {}
    },
    {
        "label": "ML_MODEL_ITEM_CATEGORIES",
        "kind": 5,
        "importPath": "apps.datasource_ml_models.utils.constant_utils",
        "description": "apps.datasource_ml_models.utils.constant_utils",
        "peekOfCode": "ML_MODEL_ITEM_CATEGORIES = (\n    ('pth', 'PyTorch Model'),\n)\nML_MODEL_ITEM_ADMIN_LIST = ('id', 'ml_model_base', 'ml_model_name', 'description', 'ml_model_size', 'full_file_path',\n                            'created_at', 'updated_at')\nML_MODEL_ITEM_ADMIN_FILTER = ('ml_model_base',)\nML_MODEL_ITEM_ADMIN_SEARCH = ('ml_model_name', 'full_file_path')\nML_MODEL_MANAGER_ADMIN_LIST = ('id', 'assistant', 'name', 'model_object_category', 'directory_full_path', 'created_at',\n                               'updated_at')\nML_MODEL_MANAGER_ADMIN_FILTER = ('assistant', 'model_object_category')",
        "detail": "apps.datasource_ml_models.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "ML_MODEL_ITEM_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.datasource_ml_models.utils.constant_utils",
        "description": "apps.datasource_ml_models.utils.constant_utils",
        "peekOfCode": "ML_MODEL_ITEM_ADMIN_LIST = ('id', 'ml_model_base', 'ml_model_name', 'description', 'ml_model_size', 'full_file_path',\n                            'created_at', 'updated_at')\nML_MODEL_ITEM_ADMIN_FILTER = ('ml_model_base',)\nML_MODEL_ITEM_ADMIN_SEARCH = ('ml_model_name', 'full_file_path')\nML_MODEL_MANAGER_ADMIN_LIST = ('id', 'assistant', 'name', 'model_object_category', 'directory_full_path', 'created_at',\n                               'updated_at')\nML_MODEL_MANAGER_ADMIN_FILTER = ('assistant', 'model_object_category')\nML_MODEL_MANAGER_ADMIN_SEARCH = ('name', 'directory_full_path')\nDELETE_ALL_ML_ITEMS_SPECIFIER = 'delete_all'",
        "detail": "apps.datasource_ml_models.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "ML_MODEL_ITEM_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.datasource_ml_models.utils.constant_utils",
        "description": "apps.datasource_ml_models.utils.constant_utils",
        "peekOfCode": "ML_MODEL_ITEM_ADMIN_FILTER = ('ml_model_base',)\nML_MODEL_ITEM_ADMIN_SEARCH = ('ml_model_name', 'full_file_path')\nML_MODEL_MANAGER_ADMIN_LIST = ('id', 'assistant', 'name', 'model_object_category', 'directory_full_path', 'created_at',\n                               'updated_at')\nML_MODEL_MANAGER_ADMIN_FILTER = ('assistant', 'model_object_category')\nML_MODEL_MANAGER_ADMIN_SEARCH = ('name', 'directory_full_path')\nDELETE_ALL_ML_ITEMS_SPECIFIER = 'delete_all'",
        "detail": "apps.datasource_ml_models.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "ML_MODEL_ITEM_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.datasource_ml_models.utils.constant_utils",
        "description": "apps.datasource_ml_models.utils.constant_utils",
        "peekOfCode": "ML_MODEL_ITEM_ADMIN_SEARCH = ('ml_model_name', 'full_file_path')\nML_MODEL_MANAGER_ADMIN_LIST = ('id', 'assistant', 'name', 'model_object_category', 'directory_full_path', 'created_at',\n                               'updated_at')\nML_MODEL_MANAGER_ADMIN_FILTER = ('assistant', 'model_object_category')\nML_MODEL_MANAGER_ADMIN_SEARCH = ('name', 'directory_full_path')\nDELETE_ALL_ML_ITEMS_SPECIFIER = 'delete_all'",
        "detail": "apps.datasource_ml_models.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "ML_MODEL_MANAGER_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.datasource_ml_models.utils.constant_utils",
        "description": "apps.datasource_ml_models.utils.constant_utils",
        "peekOfCode": "ML_MODEL_MANAGER_ADMIN_LIST = ('id', 'assistant', 'name', 'model_object_category', 'directory_full_path', 'created_at',\n                               'updated_at')\nML_MODEL_MANAGER_ADMIN_FILTER = ('assistant', 'model_object_category')\nML_MODEL_MANAGER_ADMIN_SEARCH = ('name', 'directory_full_path')\nDELETE_ALL_ML_ITEMS_SPECIFIER = 'delete_all'",
        "detail": "apps.datasource_ml_models.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "ML_MODEL_MANAGER_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.datasource_ml_models.utils.constant_utils",
        "description": "apps.datasource_ml_models.utils.constant_utils",
        "peekOfCode": "ML_MODEL_MANAGER_ADMIN_FILTER = ('assistant', 'model_object_category')\nML_MODEL_MANAGER_ADMIN_SEARCH = ('name', 'directory_full_path')\nDELETE_ALL_ML_ITEMS_SPECIFIER = 'delete_all'",
        "detail": "apps.datasource_ml_models.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "ML_MODEL_MANAGER_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.datasource_ml_models.utils.constant_utils",
        "description": "apps.datasource_ml_models.utils.constant_utils",
        "peekOfCode": "ML_MODEL_MANAGER_ADMIN_SEARCH = ('name', 'directory_full_path')\nDELETE_ALL_ML_ITEMS_SPECIFIER = 'delete_all'",
        "detail": "apps.datasource_ml_models.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DELETE_ALL_ML_ITEMS_SPECIFIER",
        "kind": 5,
        "importPath": "apps.datasource_ml_models.utils.constant_utils",
        "description": "apps.datasource_ml_models.utils.constant_utils",
        "peekOfCode": "DELETE_ALL_ML_ITEMS_SPECIFIER = 'delete_all'",
        "detail": "apps.datasource_ml_models.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MLModelView_ItemCreate",
        "kind": 6,
        "importPath": "apps.datasource_ml_models.views.ml_item.create_ml_item_views",
        "description": "apps.datasource_ml_models.views.ml_item.create_ml_item_views",
        "peekOfCode": "class MLModelView_ItemCreate(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context_user = self.request.user\n        user_orgs = context_user.organizations.all()\n        user_agents = Assistant.objects.filter(organization__in=user_orgs)\n        ml_managers = DataSourceMLModelConnection.objects.filter(assistant__in=user_agents).all()\n        context['ml_model_connections'] = ml_managers\n        context['form'] = DataSourceMLModelItemForm()\n        return context",
        "detail": "apps.datasource_ml_models.views.ml_item.create_ml_item_views",
        "documentation": {}
    },
    {
        "label": "MLModelView_ItemList",
        "kind": 6,
        "importPath": "apps.datasource_ml_models.views.ml_item.list_ml_items_views",
        "description": "apps.datasource_ml_models.views.ml_item.list_ml_items_views",
        "peekOfCode": "class MLModelView_ItemList(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_ML_MODEL_FILES\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_ML_MODEL_FILES):\n            messages.error(self.request, \"You do not have permission to list ML Model files.\")\n            return context\n        ##############################",
        "detail": "apps.datasource_ml_models.views.ml_item.list_ml_items_views",
        "documentation": {}
    },
    {
        "label": "MLModelView_ManagerCreate",
        "kind": 6,
        "importPath": "apps.datasource_ml_models.views.ml_storage.create_ml_storage_views",
        "description": "apps.datasource_ml_models.views.ml_storage.create_ml_storage_views",
        "peekOfCode": "class MLModelView_ManagerCreate(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)\n        context = TemplateLayout.init(self, context)\n        context['form'] = DataSourceMLModelConnectionForm()\n        return context\n    def post(self, request, *args, **kwargs):\n        form = DataSourceMLModelConnectionForm(request.POST)\n        ##############################\n        # PERMISSION CHECK FOR - ADD_ML_MODEL_CONNECTIONS",
        "detail": "apps.datasource_ml_models.views.ml_storage.create_ml_storage_views",
        "documentation": {}
    },
    {
        "label": "MLModelView_ManagerDelete",
        "kind": 6,
        "importPath": "apps.datasource_ml_models.views.ml_storage.delete_ml_storage_views",
        "description": "apps.datasource_ml_models.views.ml_storage.delete_ml_storage_views",
        "peekOfCode": "class MLModelView_ManagerDelete(LoginRequiredMixin, DeleteView):\n    model = DataSourceMLModelConnection\n    success_url = 'datasource_ml_models:list'\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['user'] = self.request.user\n        return context\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - DELETE_ML_MODEL_CONNECTIONS",
        "detail": "apps.datasource_ml_models.views.ml_storage.delete_ml_storage_views",
        "documentation": {}
    },
    {
        "label": "MLModelView_ManagerList",
        "kind": 6,
        "importPath": "apps.datasource_ml_models.views.ml_storage.list_ml_storages_views",
        "description": "apps.datasource_ml_models.views.ml_storage.list_ml_storages_views",
        "peekOfCode": "class MLModelView_ManagerList(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_ML_MODEL_CONNECTIONS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_ML_MODEL_CONNECTIONS):\n            messages.error(self.request, \"You do not have permission to list ML Model Connections.\")\n            return context\n        ##############################",
        "detail": "apps.datasource_ml_models.views.ml_storage.list_ml_storages_views",
        "documentation": {}
    },
    {
        "label": "MLModelView_ManagerUpdate",
        "kind": 6,
        "importPath": "apps.datasource_ml_models.views.ml_storage.update_ml_storage_views",
        "description": "apps.datasource_ml_models.views.ml_storage.update_ml_storage_views",
        "peekOfCode": "class MLModelView_ManagerUpdate(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context_user = self.request.user\n        mgr = DataSourceMLModelConnection.objects.get(id=kwargs['pk'])\n        user_orgs = context_user.organizations.all()\n        agents = Assistant.objects.filter(organization__in=user_orgs)\n        context['form'] = DataSourceMLModelConnectionForm(instance=mgr)\n        context['assistants'] = agents\n        context['connection'] = mgr",
        "detail": "apps.datasource_ml_models.views.ml_storage.update_ml_storage_views",
        "documentation": {}
    },
    {
        "label": "DatasourceMlModelsConfig",
        "kind": 6,
        "importPath": "apps.datasource_ml_models.apps",
        "description": "apps.datasource_ml_models.apps",
        "peekOfCode": "class DatasourceMlModelsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.datasource_ml_models'",
        "detail": "apps.datasource_ml_models.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.datasource_ml_models.urls",
        "description": "apps.datasource_ml_models.urls",
        "peekOfCode": "app_name = 'datasource_ml_models'\nurlpatterns = [\n    path('create/', MLModelView_ManagerCreate.as_view(\n        template_name='datasource_ml_models/base/create_datasource_ml_model.html'), name='create'),\n    path('update/<int:pk>/', MLModelView_ManagerUpdate.as_view(\n        template_name='datasource_ml_models/base/update_datasource_ml_model.html'), name='update'),\n    path('list/', MLModelView_ManagerList.as_view(\n        template_name='datasource_ml_models/base/list_datasource_ml_models.html'), name='list'),\n    path('delete/<int:pk>/', MLModelView_ManagerDelete.as_view(\n        template_name='datasource_ml_models/base/confirm_delete_datasource_ml_model.html'), name='delete'),",
        "detail": "apps.datasource_ml_models.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.datasource_ml_models.urls",
        "description": "apps.datasource_ml_models.urls",
        "peekOfCode": "urlpatterns = [\n    path('create/', MLModelView_ManagerCreate.as_view(\n        template_name='datasource_ml_models/base/create_datasource_ml_model.html'), name='create'),\n    path('update/<int:pk>/', MLModelView_ManagerUpdate.as_view(\n        template_name='datasource_ml_models/base/update_datasource_ml_model.html'), name='update'),\n    path('list/', MLModelView_ManagerList.as_view(\n        template_name='datasource_ml_models/base/list_datasource_ml_models.html'), name='list'),\n    path('delete/<int:pk>/', MLModelView_ManagerDelete.as_view(\n        template_name='datasource_ml_models/base/confirm_delete_datasource_ml_model.html'), name='delete'),\n    path('item/create/', MLModelView_ItemCreate.as_view(",
        "detail": "apps.datasource_ml_models.urls",
        "documentation": {}
    },
    {
        "label": "fixture_datasource_nosql_dashboards",
        "kind": 2,
        "importPath": "apps.datasource_nosql.tests.conftest",
        "description": "apps.datasource_nosql.tests.conftest",
        "peekOfCode": "def fixture_datasource_nosql_dashboards():\n    return True",
        "detail": "apps.datasource_nosql.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_datasource_nosql_test_forms",
        "kind": 2,
        "importPath": "apps.datasource_nosql.tests.test_forms",
        "description": "apps.datasource_nosql.tests.test_forms",
        "peekOfCode": "def test_init_datasource_nosql_test_forms():\n    assert True",
        "detail": "apps.datasource_nosql.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_datasource_nosql_test_models",
        "kind": 2,
        "importPath": "apps.datasource_nosql.tests.test_models",
        "description": "apps.datasource_nosql.tests.test_models",
        "peekOfCode": "def test_init_datasource_nosql_test_models():\n    assert True",
        "detail": "apps.datasource_nosql.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_datasource_nosql_test_utils",
        "kind": 2,
        "importPath": "apps.datasource_nosql.tests.test_utils",
        "description": "apps.datasource_nosql.tests.test_utils",
        "peekOfCode": "def test_init_datasource_nosql_test_utils():\n    assert True",
        "detail": "apps.datasource_nosql.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_datasource_nosql_test_views",
        "kind": 2,
        "importPath": "apps.datasource_nosql.tests.test_views",
        "description": "apps.datasource_nosql.tests.test_views",
        "peekOfCode": "def test_init_datasource_nosql_test_views():\n    assert True",
        "detail": "apps.datasource_nosql.tests.test_views",
        "documentation": {}
    },
    {
        "label": "DatasourceNosqlConfig",
        "kind": 6,
        "importPath": "apps.datasource_nosql.apps",
        "description": "apps.datasource_nosql.apps",
        "peekOfCode": "class DatasourceNosqlConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.datasource_nosql'",
        "detail": "apps.datasource_nosql.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.datasource_nosql.urls",
        "description": "apps.datasource_nosql.urls",
        "peekOfCode": "app_name = \"datasource_nosql\"\nurl_patterns = []",
        "detail": "apps.datasource_nosql.urls",
        "documentation": {}
    },
    {
        "label": "url_patterns",
        "kind": 5,
        "importPath": "apps.datasource_nosql.urls",
        "description": "apps.datasource_nosql.urls",
        "peekOfCode": "url_patterns = []",
        "detail": "apps.datasource_nosql.urls",
        "documentation": {}
    },
    {
        "label": "SQLDatabaseConnectionAdmin",
        "kind": 6,
        "importPath": "apps.datasource_sql.admin.sql_database_admin",
        "description": "apps.datasource_sql.admin.sql_database_admin",
        "peekOfCode": "class SQLDatabaseConnectionAdmin(admin.ModelAdmin):\n    list_display = SQL_DATABASE_ADMIN_LIST\n    list_filter = SQL_DATABASE_ADMIN_FILTER\n    search_fields = SQL_DATABASE_ADMIN_SEARCH\n    ordering = ('-created_at',)\n    readonly_fields = ('created_at', 'updated_at')\n    def save_model(self, request, obj, form, change):\n        obj.schema_data_json = self.retrieve_schema(obj)\n        super().save_model(request, obj, form, change)\n    def retrieve_schema(self, obj):",
        "detail": "apps.datasource_sql.admin.sql_database_admin",
        "documentation": {}
    },
    {
        "label": "CustomSQLQueryAdmin",
        "kind": 6,
        "importPath": "apps.datasource_sql.admin.sql_query_admin",
        "description": "apps.datasource_sql.admin.sql_query_admin",
        "peekOfCode": "class CustomSQLQueryAdmin(admin.ModelAdmin):\n    list_display = SQL_QUERY_ADMIN_LIST\n    list_filter = SQL_QUERY_ADMIN_FILTER\n    search_fields = SQL_QUERY_ADMIN_SEARCH\n    ordering = ('-created_at',)\n    readonly_fields = ('created_at', 'updated_at')",
        "detail": "apps.datasource_sql.admin.sql_query_admin",
        "documentation": {}
    },
    {
        "label": "SQLDatabaseConnectionForm",
        "kind": 6,
        "importPath": "apps.datasource_sql.forms.sql_database_forms",
        "description": "apps.datasource_sql.forms.sql_database_forms",
        "peekOfCode": "class SQLDatabaseConnectionForm(forms.ModelForm):\n    class Meta:\n        model = SQLDatabaseConnection\n        fields = [\n            'assistant', 'dbms_type', 'name', 'description', 'host', 'port', 'database_name', 'username',\n            'password', 'is_read_only', 'created_by_user', 'one_time_sql_retrieval_instance_limit',\n            'one_time_sql_retrieval_token_limit',\n        ]\n        widgets = {'password': forms.PasswordInput()}\n        exclude = ['schema_data_json']",
        "detail": "apps.datasource_sql.forms.sql_database_forms",
        "documentation": {}
    },
    {
        "label": "CustomSQLQueryForm",
        "kind": 6,
        "importPath": "apps.datasource_sql.forms.sql_query_forms",
        "description": "apps.datasource_sql.forms.sql_query_forms",
        "peekOfCode": "class CustomSQLQueryForm(forms.ModelForm):\n    class Meta:\n        model = CustomSQLQuery\n        fields = [\n            'database_connection', 'name', 'description', 'sql_query',\n        ]\n        widgets = {\n            'sql_query': forms.Textarea(attrs={'rows': 10}),\n        }",
        "detail": "apps.datasource_sql.forms.sql_query_forms",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.datasource_sql.migrations.0001_initial",
        "description": "apps.datasource_sql.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('assistants', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='SQLDatabaseConnection',\n            fields=[",
        "detail": "apps.datasource_sql.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "SQLDatabaseConnection",
        "kind": 6,
        "importPath": "apps.datasource_sql.models.sql_database_models",
        "description": "apps.datasource_sql.models.sql_database_models",
        "peekOfCode": "class SQLDatabaseConnection(models.Model):\n    assistant = models.ForeignKey('assistants.Assistant', on_delete=models.CASCADE,\n                                  related_name='sql_database_connections',\n                                  default=None, null=True)\n    dbms_type = models.CharField(max_length=50, choices=DBMS_CHOICES)\n    name = models.CharField(max_length=255)\n    description = models.TextField(blank=True, null=True)\n    host = models.CharField(max_length=255)\n    port = models.IntegerField()\n    database_name = models.CharField(max_length=255)",
        "detail": "apps.datasource_sql.models.sql_database_models",
        "documentation": {}
    },
    {
        "label": "CustomSQLQuery",
        "kind": 6,
        "importPath": "apps.datasource_sql.models.sql_query_models",
        "description": "apps.datasource_sql.models.sql_query_models",
        "peekOfCode": "class CustomSQLQuery(models.Model):\n    database_connection = models.ForeignKey('datasource_sql.SQLDatabaseConnection', on_delete=models.CASCADE,\n                                            related_name='custom_queries')\n    name = models.CharField(max_length=255)\n    description = models.TextField(blank=True, null=True)\n    sql_query = models.TextField()\n    parameters = models.JSONField(blank=True, null=True)  # Optional: Use if you need to handle query parameters\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    def __str__(self):",
        "detail": "apps.datasource_sql.models.sql_query_models",
        "documentation": {}
    },
    {
        "label": "fixture_datasource_sql_dashboards",
        "kind": 2,
        "importPath": "apps.datasource_sql.tests.conftest",
        "description": "apps.datasource_sql.tests.conftest",
        "peekOfCode": "def fixture_datasource_sql_dashboards():\n    return True",
        "detail": "apps.datasource_sql.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_datasource_sql_test_forms",
        "kind": 2,
        "importPath": "apps.datasource_sql.tests.test_forms",
        "description": "apps.datasource_sql.tests.test_forms",
        "peekOfCode": "def test_init_datasource_sql_test_forms():\n    assert True",
        "detail": "apps.datasource_sql.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_datasource_sql_test_models",
        "kind": 2,
        "importPath": "apps.datasource_sql.tests.test_models",
        "description": "apps.datasource_sql.tests.test_models",
        "peekOfCode": "def test_init_datasource_sql_test_models():\n    assert True",
        "detail": "apps.datasource_sql.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_datasource_sql_test_utils",
        "kind": 2,
        "importPath": "apps.datasource_sql.tests.test_utils",
        "description": "apps.datasource_sql.tests.test_utils",
        "peekOfCode": "def test_init_datasource_sql_test_utils():\n    assert True",
        "detail": "apps.datasource_sql.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_datasource_sql_test_views",
        "kind": 2,
        "importPath": "apps.datasource_sql.tests.test_views",
        "description": "apps.datasource_sql.tests.test_views",
        "peekOfCode": "def test_init_datasource_sql_test_views():\n    assert True",
        "detail": "apps.datasource_sql.tests.test_views",
        "documentation": {}
    },
    {
        "label": "DBMSChoicesNames",
        "kind": 6,
        "importPath": "apps.datasource_sql.utils.constant_utils",
        "description": "apps.datasource_sql.utils.constant_utils",
        "peekOfCode": "class DBMSChoicesNames:\n    POSTGRESQL = 'postgresql'\n    MYSQL = 'mysql'\nPOSTGRESQL_SCHEMA_RETRIEVAL_QUERY = f\"\"\"\nSELECT table_name\nFROM information_schema.tables\nWHERE table_schema NOT IN ('information_schema', 'pg_catalog');\n\"\"\"\nPOSTGRESQL_SCHEMA_RETRIEVAL_QUERY_SUPPLY = f\"\"\"\nSELECT column_name, data_type FROM information_schema.columns WHERE table_name = %s",
        "detail": "apps.datasource_sql.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "DBMS_CHOICES",
        "kind": 5,
        "importPath": "apps.datasource_sql.utils.constant_utils",
        "description": "apps.datasource_sql.utils.constant_utils",
        "peekOfCode": "DBMS_CHOICES = [\n    ('postgresql', 'PostgreSQL'),\n    ('mysql', 'MySQL'),\n]\nclass DBMSChoicesNames:\n    POSTGRESQL = 'postgresql'\n    MYSQL = 'mysql'\nPOSTGRESQL_SCHEMA_RETRIEVAL_QUERY = f\"\"\"\nSELECT table_name\nFROM information_schema.tables",
        "detail": "apps.datasource_sql.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "POSTGRESQL_SCHEMA_RETRIEVAL_QUERY",
        "kind": 5,
        "importPath": "apps.datasource_sql.utils.constant_utils",
        "description": "apps.datasource_sql.utils.constant_utils",
        "peekOfCode": "POSTGRESQL_SCHEMA_RETRIEVAL_QUERY = f\"\"\"\nSELECT table_name\nFROM information_schema.tables\nWHERE table_schema NOT IN ('information_schema', 'pg_catalog');\n\"\"\"\nPOSTGRESQL_SCHEMA_RETRIEVAL_QUERY_SUPPLY = f\"\"\"\nSELECT column_name, data_type FROM information_schema.columns WHERE table_name = %s\n\"\"\"\nMYSQL_SCHEMA_RETRIEVAL_QUERY = f\"\"\"\nSELECT table_name",
        "detail": "apps.datasource_sql.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "POSTGRESQL_SCHEMA_RETRIEVAL_QUERY_SUPPLY",
        "kind": 5,
        "importPath": "apps.datasource_sql.utils.constant_utils",
        "description": "apps.datasource_sql.utils.constant_utils",
        "peekOfCode": "POSTGRESQL_SCHEMA_RETRIEVAL_QUERY_SUPPLY = f\"\"\"\nSELECT column_name, data_type FROM information_schema.columns WHERE table_name = %s\n\"\"\"\nMYSQL_SCHEMA_RETRIEVAL_QUERY = f\"\"\"\nSELECT table_name\nFROM information_schema.tables\nWHERE table_schema NOT IN ('information_schema', 'mysql', 'performance_schema', 'sys');\n\"\"\"\nMYSQL_SCHEMA_RETRIEVAL_QUERY_SUPPLY = f\"\"\"\nSELECT column_name, data_type FROM information_schema.columns WHERE table_name = %s",
        "detail": "apps.datasource_sql.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MYSQL_SCHEMA_RETRIEVAL_QUERY",
        "kind": 5,
        "importPath": "apps.datasource_sql.utils.constant_utils",
        "description": "apps.datasource_sql.utils.constant_utils",
        "peekOfCode": "MYSQL_SCHEMA_RETRIEVAL_QUERY = f\"\"\"\nSELECT table_name\nFROM information_schema.tables\nWHERE table_schema NOT IN ('information_schema', 'mysql', 'performance_schema', 'sys');\n\"\"\"\nMYSQL_SCHEMA_RETRIEVAL_QUERY_SUPPLY = f\"\"\"\nSELECT column_name, data_type FROM information_schema.columns WHERE table_name = %s\n\"\"\"\nSQL_DATABASE_ADMIN_LIST = ('id', 'assistant', 'dbms_type', 'name', 'database_name', 'is_read_only', 'created_at')\nSQL_DATABASE_ADMIN_FILTER = ('dbms_type', 'created_at')",
        "detail": "apps.datasource_sql.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MYSQL_SCHEMA_RETRIEVAL_QUERY_SUPPLY",
        "kind": 5,
        "importPath": "apps.datasource_sql.utils.constant_utils",
        "description": "apps.datasource_sql.utils.constant_utils",
        "peekOfCode": "MYSQL_SCHEMA_RETRIEVAL_QUERY_SUPPLY = f\"\"\"\nSELECT column_name, data_type FROM information_schema.columns WHERE table_name = %s\n\"\"\"\nSQL_DATABASE_ADMIN_LIST = ('id', 'assistant', 'dbms_type', 'name', 'database_name', 'is_read_only', 'created_at')\nSQL_DATABASE_ADMIN_FILTER = ('dbms_type', 'created_at')\nSQL_DATABASE_ADMIN_SEARCH = ('name', 'database_name', 'is_read_only')\nSQL_QUERY_ADMIN_LIST = ('id', 'database_connection', 'name', 'description', 'created_at', 'updated_at')\nSQL_QUERY_ADMIN_FILTER = ('created_at', 'updated_at')\nSQL_QUERY_ADMIN_SEARCH = ('name', 'description')",
        "detail": "apps.datasource_sql.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "SQL_DATABASE_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.datasource_sql.utils.constant_utils",
        "description": "apps.datasource_sql.utils.constant_utils",
        "peekOfCode": "SQL_DATABASE_ADMIN_LIST = ('id', 'assistant', 'dbms_type', 'name', 'database_name', 'is_read_only', 'created_at')\nSQL_DATABASE_ADMIN_FILTER = ('dbms_type', 'created_at')\nSQL_DATABASE_ADMIN_SEARCH = ('name', 'database_name', 'is_read_only')\nSQL_QUERY_ADMIN_LIST = ('id', 'database_connection', 'name', 'description', 'created_at', 'updated_at')\nSQL_QUERY_ADMIN_FILTER = ('created_at', 'updated_at')\nSQL_QUERY_ADMIN_SEARCH = ('name', 'description')",
        "detail": "apps.datasource_sql.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "SQL_DATABASE_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.datasource_sql.utils.constant_utils",
        "description": "apps.datasource_sql.utils.constant_utils",
        "peekOfCode": "SQL_DATABASE_ADMIN_FILTER = ('dbms_type', 'created_at')\nSQL_DATABASE_ADMIN_SEARCH = ('name', 'database_name', 'is_read_only')\nSQL_QUERY_ADMIN_LIST = ('id', 'database_connection', 'name', 'description', 'created_at', 'updated_at')\nSQL_QUERY_ADMIN_FILTER = ('created_at', 'updated_at')\nSQL_QUERY_ADMIN_SEARCH = ('name', 'description')",
        "detail": "apps.datasource_sql.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "SQL_DATABASE_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.datasource_sql.utils.constant_utils",
        "description": "apps.datasource_sql.utils.constant_utils",
        "peekOfCode": "SQL_DATABASE_ADMIN_SEARCH = ('name', 'database_name', 'is_read_only')\nSQL_QUERY_ADMIN_LIST = ('id', 'database_connection', 'name', 'description', 'created_at', 'updated_at')\nSQL_QUERY_ADMIN_FILTER = ('created_at', 'updated_at')\nSQL_QUERY_ADMIN_SEARCH = ('name', 'description')",
        "detail": "apps.datasource_sql.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "SQL_QUERY_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.datasource_sql.utils.constant_utils",
        "description": "apps.datasource_sql.utils.constant_utils",
        "peekOfCode": "SQL_QUERY_ADMIN_LIST = ('id', 'database_connection', 'name', 'description', 'created_at', 'updated_at')\nSQL_QUERY_ADMIN_FILTER = ('created_at', 'updated_at')\nSQL_QUERY_ADMIN_SEARCH = ('name', 'description')",
        "detail": "apps.datasource_sql.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "SQL_QUERY_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.datasource_sql.utils.constant_utils",
        "description": "apps.datasource_sql.utils.constant_utils",
        "peekOfCode": "SQL_QUERY_ADMIN_FILTER = ('created_at', 'updated_at')\nSQL_QUERY_ADMIN_SEARCH = ('name', 'description')",
        "detail": "apps.datasource_sql.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "SQL_QUERY_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.datasource_sql.utils.constant_utils",
        "description": "apps.datasource_sql.utils.constant_utils",
        "peekOfCode": "SQL_QUERY_ADMIN_SEARCH = ('name', 'description')",
        "detail": "apps.datasource_sql.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "SQLDatabaseView_ManagerCreate",
        "kind": 6,
        "importPath": "apps.datasource_sql.views.sql_database.create_sql_database_views",
        "description": "apps.datasource_sql.views.sql_database.create_sql_database_views",
        "peekOfCode": "class SQLDatabaseView_ManagerCreate(TemplateView, LoginRequiredMixin):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context_user = self.request.user\n        user_orgs = context_user.organizations.all()\n        agents = Assistant.objects.filter(organization__in=user_orgs)\n        context['dbms_choices'] = DBMS_CHOICES\n        context['form'] = SQLDatabaseConnectionForm()\n        context['assistants'] = agents\n        return context",
        "detail": "apps.datasource_sql.views.sql_database.create_sql_database_views",
        "documentation": {}
    },
    {
        "label": "SQLDatabaseView_ManagerDelete",
        "kind": 6,
        "importPath": "apps.datasource_sql.views.sql_database.delete_sql_database_views",
        "description": "apps.datasource_sql.views.sql_database.delete_sql_database_views",
        "peekOfCode": "class SQLDatabaseView_ManagerDelete(LoginRequiredMixin, DeleteView):\n    model = SQLDatabaseConnection\n    success_url = 'datasource_sql:list'\n    def get(self, request, *args, **kwargs):\n        return self.post(request, *args, **kwargs)\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - DELETE_SQL_DATABASES\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.DELETE_SQL_DATABASES):",
        "detail": "apps.datasource_sql.views.sql_database.delete_sql_database_views",
        "documentation": {}
    },
    {
        "label": "SQLDatabaseView_ManagerList",
        "kind": 6,
        "importPath": "apps.datasource_sql.views.sql_database.list_sql_databases_views",
        "description": "apps.datasource_sql.views.sql_database.list_sql_databases_views",
        "peekOfCode": "class SQLDatabaseView_ManagerList(TemplateView, LoginRequiredMixin):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_SQL_DATABASES\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_SQL_DATABASES):\n            messages.error(self.request, \"You do not have permission to list SQL Data Sources.\")\n            return context\n        ##############################",
        "detail": "apps.datasource_sql.views.sql_database.list_sql_databases_views",
        "documentation": {}
    },
    {
        "label": "SQLDatabaseView_ManagerUpdate",
        "kind": 6,
        "importPath": "apps.datasource_sql.views.sql_database.update_sql_database_views",
        "description": "apps.datasource_sql.views.sql_database.update_sql_database_views",
        "peekOfCode": "class SQLDatabaseView_ManagerUpdate(TemplateView, LoginRequiredMixin):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context_user = self.request.user\n        conn = SQLDatabaseConnection.objects.get(id=kwargs['pk'])\n        user_orgs = context_user.organizations.all()\n        agents = Assistant.objects.filter(organization__in=user_orgs)\n        context['dbms_choices'] = DBMS_CHOICES\n        context['form'] = SQLDatabaseConnectionForm(instance=conn)\n        context['assistants'] = agents",
        "detail": "apps.datasource_sql.views.sql_database.update_sql_database_views",
        "documentation": {}
    },
    {
        "label": "SQLDatabaseView_QueryCreate",
        "kind": 6,
        "importPath": "apps.datasource_sql.views.sql_query.create_sql_query_views",
        "description": "apps.datasource_sql.views.sql_query.create_sql_query_views",
        "peekOfCode": "class SQLDatabaseView_QueryCreate(TemplateView, LoginRequiredMixin):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context_user = self.request.user\n        user_orgs = context_user.organizations.all()\n        db_c = SQLDatabaseConnection.objects.filter(assistant__in=Assistant.objects.filter(organization__in=user_orgs))\n        context['database_connections'] = db_c\n        context['form'] = CustomSQLQueryForm()\n        return context\n    def post(self, request, *args, **kwargs):",
        "detail": "apps.datasource_sql.views.sql_query.create_sql_query_views",
        "documentation": {}
    },
    {
        "label": "SQLDatabaseView_QueryDelete",
        "kind": 6,
        "importPath": "apps.datasource_sql.views.sql_query.delete_sql_query_views",
        "description": "apps.datasource_sql.views.sql_query.delete_sql_query_views",
        "peekOfCode": "class SQLDatabaseView_QueryDelete(LoginRequiredMixin, DeleteView):\n    model = CustomSQLQuery\n    success_url = 'datasource_sql:list_queries'\n    def get(self, request, *args, **kwargs):\n        return self.post(request, *args, **kwargs)\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - DELETE_CUSTOM_SQL_QUERIES\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.DELETE_CUSTOM_SQL_QUERIES):",
        "detail": "apps.datasource_sql.views.sql_query.delete_sql_query_views",
        "documentation": {}
    },
    {
        "label": "SQLDatabaseView_QueryList",
        "kind": 6,
        "importPath": "apps.datasource_sql.views.sql_query.list_sql_queries_views",
        "description": "apps.datasource_sql.views.sql_query.list_sql_queries_views",
        "peekOfCode": "class SQLDatabaseView_QueryList(TemplateView, LoginRequiredMixin):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_CUSTOM_SQL_QUERIES\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_CUSTOM_SQL_QUERIES):\n            messages.error(self.request, \"You do not have permission to list custom SQL queries.\")\n            return context\n        ##############################",
        "detail": "apps.datasource_sql.views.sql_query.list_sql_queries_views",
        "documentation": {}
    },
    {
        "label": "SQLDatabaseView_QueryUpdate",
        "kind": 6,
        "importPath": "apps.datasource_sql.views.sql_query.update_sql_query_views",
        "description": "apps.datasource_sql.views.sql_query.update_sql_query_views",
        "peekOfCode": "class SQLDatabaseView_QueryUpdate(TemplateView, LoginRequiredMixin):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context_user = self.request.user\n        query = get_object_or_404(CustomSQLQuery, id=kwargs['pk'])\n        user_orgs = context_user.organizations.all()\n        db_c = SQLDatabaseConnection.objects.filter(assistant__in=Assistant.objects.filter(organization__in=user_orgs))\n        context['database_connections'] = db_c\n        context['form'] = CustomSQLQueryForm(instance=query)\n        context['query'] = query",
        "detail": "apps.datasource_sql.views.sql_query.update_sql_query_views",
        "documentation": {}
    },
    {
        "label": "DatasourceSqlConfig",
        "kind": 6,
        "importPath": "apps.datasource_sql.apps",
        "description": "apps.datasource_sql.apps",
        "peekOfCode": "class DatasourceSqlConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.datasource_sql'",
        "detail": "apps.datasource_sql.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.datasource_sql.urls",
        "description": "apps.datasource_sql.urls",
        "peekOfCode": "app_name = \"datasource_sql\"\nurlpatterns = [\n    path(\"create/\", SQLDatabaseView_ManagerCreate.as_view(\n        template_name=\"datasource_sql/connections/create_sql_datasources.html\"), name=\"create\"),\n    path(\"list/\", SQLDatabaseView_ManagerList.as_view(\n        template_name=\"datasource_sql/connections/list_sql_datasources.html\"), name=\"list\"),\n    path(\"update/<int:pk>/\", SQLDatabaseView_ManagerUpdate.as_view(\n        template_name=\"datasource_sql/connections/update_sql_datasources.html\"), name=\"update\"),\n    path(\"delete/<int:pk>/\", SQLDatabaseView_ManagerDelete.as_view(), name=\"delete\"),\n    path(\"create_query/\", SQLDatabaseView_QueryCreate.as_view(",
        "detail": "apps.datasource_sql.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.datasource_sql.urls",
        "description": "apps.datasource_sql.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"create/\", SQLDatabaseView_ManagerCreate.as_view(\n        template_name=\"datasource_sql/connections/create_sql_datasources.html\"), name=\"create\"),\n    path(\"list/\", SQLDatabaseView_ManagerList.as_view(\n        template_name=\"datasource_sql/connections/list_sql_datasources.html\"), name=\"list\"),\n    path(\"update/<int:pk>/\", SQLDatabaseView_ManagerUpdate.as_view(\n        template_name=\"datasource_sql/connections/update_sql_datasources.html\"), name=\"update\"),\n    path(\"delete/<int:pk>/\", SQLDatabaseView_ManagerDelete.as_view(), name=\"delete\"),\n    path(\"create_query/\", SQLDatabaseView_QueryCreate.as_view(\n        template_name=\"datasource_sql/queries/create_sql_query.html\"), name=\"create_query\"),",
        "detail": "apps.datasource_sql.urls",
        "documentation": {}
    },
    {
        "label": "ExportAssistantAPIAdmin",
        "kind": 6,
        "importPath": "apps.export_assistants.admin.exports.export_assistant_admin",
        "description": "apps.export_assistants.admin.exports.export_assistant_admin",
        "peekOfCode": "class ExportAssistantAPIAdmin(admin.ModelAdmin):\n    list_display = EXPORT_ASSISTANT_API_ADMIN_LIST\n    list_filter = EXPORT_ASSISTANT_API_ADMIN_FILTER\n    search_fields = EXPORT_ASSISTANT_API_ADMIN_SEARCH\n    date_hierarchy = \"created_at\"\n    ordering = [\"-created_at\"]",
        "detail": "apps.export_assistants.admin.exports.export_assistant_admin",
        "documentation": {}
    },
    {
        "label": "RequestLogAdmin",
        "kind": 6,
        "importPath": "apps.export_assistants.admin.logs.request_log_admin",
        "description": "apps.export_assistants.admin.logs.request_log_admin",
        "peekOfCode": "class RequestLogAdmin(admin.ModelAdmin):\n    list_display = EXPORT_ASSISTANT_LOG_ADMIN_LIST\n    list_filter = EXPORT_ASSISTANT_LOG_ADMIN_FILTER\n    search_fields = EXPORT_ASSISTANT_LOG_ADMIN_SEARCH\n    date_hierarchy = \"timestamp\"\n    ordering = [\"-timestamp\"]",
        "detail": "apps.export_assistants.admin.logs.request_log_admin",
        "documentation": {}
    },
    {
        "label": "Command",
        "kind": 6,
        "importPath": "apps.export_assistants.management.commands.start_exported_assistants",
        "description": "apps.export_assistants.management.commands.start_exported_assistants",
        "peekOfCode": "class Command(BaseCommand):\n    help = 'Start all exported assistants'\n    def handle(self, *args, **kwargs):\n        initialize_endpoints()",
        "detail": "apps.export_assistants.management.commands.start_exported_assistants",
        "documentation": {}
    },
    {
        "label": "start_endpoint_for_assistant",
        "kind": 2,
        "importPath": "apps.export_assistants.management.commands.start_exported_assistants",
        "description": "apps.export_assistants.management.commands.start_exported_assistants",
        "peekOfCode": "def start_endpoint_for_assistant(assistant):\n    endpoint_url = assistant.endpoint\n    endpoint_local = EXPORT_API_BASE_URL + endpoint_url.split(EXPORT_API_BASE_URL)[1]\n    urlpatterns = getattr(importlib.import_module(settings.ROOT_URLCONF), 'urlpatterns')\n    urlpatterns += [\n        path(endpoint_local, ExportAssistantAPIView.as_view(), name=f'export_assistant_{assistant.id}')\n    ]\ndef initialize_endpoints():\n    for assistant in ExportAssistantAPI.objects.all():\n        if assistant.is_online:",
        "detail": "apps.export_assistants.management.commands.start_exported_assistants",
        "documentation": {}
    },
    {
        "label": "initialize_endpoints",
        "kind": 2,
        "importPath": "apps.export_assistants.management.commands.start_exported_assistants",
        "description": "apps.export_assistants.management.commands.start_exported_assistants",
        "peekOfCode": "def initialize_endpoints():\n    for assistant in ExportAssistantAPI.objects.all():\n        if assistant.is_online:\n            start_endpoint_for_assistant(assistant)\n        else:\n            # OFFLINE, SKIP\n            pass\nclass Command(BaseCommand):\n    help = 'Start all exported assistants'\n    def handle(self, *args, **kwargs):",
        "detail": "apps.export_assistants.management.commands.start_exported_assistants",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.export_assistants.migrations.0001_initial",
        "description": "apps.export_assistants.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('assistants', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='RequestLog',\n            fields=[",
        "detail": "apps.export_assistants.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.export_assistants.migrations.0002_initial",
        "description": "apps.export_assistants.migrations.0002_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('export_assistants', '0001_initial'),\n        ('organization', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='exportassistantapi',\n            name='organization',",
        "detail": "apps.export_assistants.migrations.0002_initial",
        "documentation": {}
    },
    {
        "label": "ExportAssistantAPI",
        "kind": 6,
        "importPath": "apps.export_assistants.models.exports.export_assistant_models",
        "description": "apps.export_assistants.models.exports.export_assistant_models",
        "peekOfCode": "class ExportAssistantAPI(models.Model):\n    organization = models.ForeignKey(\"organization.Organization\", on_delete=models.CASCADE,\n                                     related_name='exported_assistants',\n                                     default=2, null=True, blank=True)\n    assistant = models.ForeignKey('assistants.Assistant', on_delete=models.CASCADE, related_name='exported_assistants')\n    is_public = models.BooleanField(default=False)\n    request_limit_per_hour = models.IntegerField(default=1000)\n    is_online = models.BooleanField(default=True)\n    custom_api_key = models.CharField(max_length=1000, blank=True, null=True, unique=True)\n    endpoint = models.CharField(max_length=1000, blank=True, null=True)",
        "detail": "apps.export_assistants.models.exports.export_assistant_models",
        "documentation": {}
    },
    {
        "label": "RequestLog",
        "kind": 6,
        "importPath": "apps.export_assistants.models.logs.request_log_models",
        "description": "apps.export_assistants.models.logs.request_log_models",
        "peekOfCode": "class RequestLog(models.Model):\n    export_assistant = models.ForeignKey('ExportAssistantAPI', on_delete=models.CASCADE)\n    timestamp = models.DateTimeField(auto_now_add=True)\n    class Meta:\n        verbose_name = \"Request Log\"\n        verbose_name_plural = \"Request Logs\"\n        ordering = ['-timestamp']\n        indexes = [\n            models.Index(fields=['export_assistant']),\n            models.Index(fields=['timestamp']),",
        "detail": "apps.export_assistants.models.logs.request_log_models",
        "documentation": {}
    },
    {
        "label": "fixture_export_assistants_dashboards",
        "kind": 2,
        "importPath": "apps.export_assistants.tests.conftest",
        "description": "apps.export_assistants.tests.conftest",
        "peekOfCode": "def fixture_export_assistants_dashboards():\n    return True",
        "detail": "apps.export_assistants.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_export_assistants_test_forms",
        "kind": 2,
        "importPath": "apps.export_assistants.tests.test_forms",
        "description": "apps.export_assistants.tests.test_forms",
        "peekOfCode": "def test_init_export_assistants_test_forms():\n    assert True",
        "detail": "apps.export_assistants.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_export_assistants_test_models",
        "kind": 2,
        "importPath": "apps.export_assistants.tests.test_models",
        "description": "apps.export_assistants.tests.test_models",
        "peekOfCode": "def test_init_export_assistants_test_models():\n    assert True",
        "detail": "apps.export_assistants.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_export_assistants_test_utils",
        "kind": 2,
        "importPath": "apps.export_assistants.tests.test_utils",
        "description": "apps.export_assistants.tests.test_utils",
        "peekOfCode": "def test_init_export_assistants_test_utils():\n    assert True",
        "detail": "apps.export_assistants.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_export_assistants_test_views",
        "kind": 2,
        "importPath": "apps.export_assistants.tests.test_views",
        "description": "apps.export_assistants.tests.test_views",
        "peekOfCode": "def test_init_export_assistants_test_views():\n    assert True",
        "detail": "apps.export_assistants.tests.test_views",
        "documentation": {}
    },
    {
        "label": "ExportAPIStatusCodes",
        "kind": 6,
        "importPath": "apps.export_assistants.utils.constant_utils",
        "description": "apps.export_assistants.utils.constant_utils",
        "peekOfCode": "class ExportAPIStatusCodes:\n    OK = 200\n    NOT_FOUND = 404\n    UNAUTHORIZED = 401\n    TOO_MANY_REQUESTS = 429\n    SERVICE_OFFLINE = 503\n    INTERNAL_SERVER_ERROR = 500\nEXPORT_ASSISTANT_API_ADMIN_LIST = (\"assistant\", \"is_public\", \"request_limit_per_hour\", \"created_by_user\",\n                                   \"is_online\", \"created_at\")\nEXPORT_ASSISTANT_API_ADMIN_FILTER = (\"assistant\", \"is_public\", \"request_limit_per_hour\", \"created_by_user\",",
        "detail": "apps.export_assistants.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "EXPORT_ASSISTANT_API_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.export_assistants.utils.constant_utils",
        "description": "apps.export_assistants.utils.constant_utils",
        "peekOfCode": "EXPORT_ASSISTANT_API_ADMIN_LIST = (\"assistant\", \"is_public\", \"request_limit_per_hour\", \"created_by_user\",\n                                   \"is_online\", \"created_at\")\nEXPORT_ASSISTANT_API_ADMIN_FILTER = (\"assistant\", \"is_public\", \"request_limit_per_hour\", \"created_by_user\",\n                                     \"is_online\", \"created_at\")\nEXPORT_ASSISTANT_API_ADMIN_SEARCH = (\"assistant\", \"is_public\", \"request_limit_per_hour\", \"created_by_user\",\n                                     \"is_online\", \"created_at\")\nEXPORT_ASSISTANT_LOG_ADMIN_LIST = (\"export_assistant\", \"timestamp\")\nEXPORT_ASSISTANT_LOG_ADMIN_FILTER = (\"export_assistant\", \"timestamp\")\nEXPORT_ASSISTANT_LOG_ADMIN_SEARCH = (\"export_assistant\", \"timestamp\")",
        "detail": "apps.export_assistants.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "EXPORT_ASSISTANT_API_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.export_assistants.utils.constant_utils",
        "description": "apps.export_assistants.utils.constant_utils",
        "peekOfCode": "EXPORT_ASSISTANT_API_ADMIN_FILTER = (\"assistant\", \"is_public\", \"request_limit_per_hour\", \"created_by_user\",\n                                     \"is_online\", \"created_at\")\nEXPORT_ASSISTANT_API_ADMIN_SEARCH = (\"assistant\", \"is_public\", \"request_limit_per_hour\", \"created_by_user\",\n                                     \"is_online\", \"created_at\")\nEXPORT_ASSISTANT_LOG_ADMIN_LIST = (\"export_assistant\", \"timestamp\")\nEXPORT_ASSISTANT_LOG_ADMIN_FILTER = (\"export_assistant\", \"timestamp\")\nEXPORT_ASSISTANT_LOG_ADMIN_SEARCH = (\"export_assistant\", \"timestamp\")",
        "detail": "apps.export_assistants.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "EXPORT_ASSISTANT_API_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.export_assistants.utils.constant_utils",
        "description": "apps.export_assistants.utils.constant_utils",
        "peekOfCode": "EXPORT_ASSISTANT_API_ADMIN_SEARCH = (\"assistant\", \"is_public\", \"request_limit_per_hour\", \"created_by_user\",\n                                     \"is_online\", \"created_at\")\nEXPORT_ASSISTANT_LOG_ADMIN_LIST = (\"export_assistant\", \"timestamp\")\nEXPORT_ASSISTANT_LOG_ADMIN_FILTER = (\"export_assistant\", \"timestamp\")\nEXPORT_ASSISTANT_LOG_ADMIN_SEARCH = (\"export_assistant\", \"timestamp\")",
        "detail": "apps.export_assistants.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "EXPORT_ASSISTANT_LOG_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.export_assistants.utils.constant_utils",
        "description": "apps.export_assistants.utils.constant_utils",
        "peekOfCode": "EXPORT_ASSISTANT_LOG_ADMIN_LIST = (\"export_assistant\", \"timestamp\")\nEXPORT_ASSISTANT_LOG_ADMIN_FILTER = (\"export_assistant\", \"timestamp\")\nEXPORT_ASSISTANT_LOG_ADMIN_SEARCH = (\"export_assistant\", \"timestamp\")",
        "detail": "apps.export_assistants.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "EXPORT_ASSISTANT_LOG_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.export_assistants.utils.constant_utils",
        "description": "apps.export_assistants.utils.constant_utils",
        "peekOfCode": "EXPORT_ASSISTANT_LOG_ADMIN_FILTER = (\"export_assistant\", \"timestamp\")\nEXPORT_ASSISTANT_LOG_ADMIN_SEARCH = (\"export_assistant\", \"timestamp\")",
        "detail": "apps.export_assistants.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "EXPORT_ASSISTANT_LOG_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.export_assistants.utils.constant_utils",
        "description": "apps.export_assistants.utils.constant_utils",
        "peekOfCode": "EXPORT_ASSISTANT_LOG_ADMIN_SEARCH = (\"export_assistant\", \"timestamp\")",
        "detail": "apps.export_assistants.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "generate_endpoint",
        "kind": 2,
        "importPath": "apps.export_assistants.utils.function_utils",
        "description": "apps.export_assistants.utils.function_utils",
        "peekOfCode": "def generate_endpoint(assistant: Assistant):\n    agent_id = assistant.id\n    org_id = assistant.organization.id\n    org_name = assistant.organization.name\n    agent_name = assistant.name\n    llm_name = assistant.llm_model.model_name\n    date_created = assistant.created_at\n    year_created = date_created.year\n    month_created = date_created.month\n    day_created = date_created.day",
        "detail": "apps.export_assistants.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "generate_assistant_custom_api_key",
        "kind": 2,
        "importPath": "apps.export_assistants.utils.function_utils",
        "description": "apps.export_assistants.utils.function_utils",
        "peekOfCode": "def generate_assistant_custom_api_key(assistant: Assistant):\n    agent_id = assistant.id\n    org_id = assistant.organization.id\n    org_name = assistant.organization.name\n    agent_name = assistant.name\n    desc = assistant.description\n    instructions = assistant.instructions\n    llm_name = assistant.llm_model.model_name\n    llm_temperature = assistant.llm_model.temperature\n    llm_max_tokens = assistant.llm_model.maximum_tokens",
        "detail": "apps.export_assistants.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "ExportAssistantAPIView",
        "kind": 6,
        "importPath": "apps.export_assistants.views.endpoints.endpoint_export_assistant_views",
        "description": "apps.export_assistants.views.endpoints.endpoint_export_assistant_views",
        "peekOfCode": "class ExportAssistantAPIView(View):\n    def post(self, request, *args, **kwargs):\n        endpoint = BASE_URL + request.path\n        api_key = request.headers.get('Authorization')\n        try:\n            export_assistant = ExportAssistantAPI.objects.get(endpoint=endpoint)\n        except ExportAssistantAPI.DoesNotExist:\n            return JsonResponse({\n                \"message\": \"Invalid endpoint\", \"data\": {}, \"status\": ExportAPIStatusCodes.NOT_FOUND\n            }, status=ExportAPIStatusCodes.NOT_FOUND)",
        "detail": "apps.export_assistants.views.endpoints.endpoint_export_assistant_views",
        "documentation": {}
    },
    {
        "label": "ExportAssistantView_Create",
        "kind": 6,
        "importPath": "apps.export_assistants.views.export_assistants.create_export_assistant_views",
        "description": "apps.export_assistants.views.export_assistants.create_export_assistant_views",
        "peekOfCode": "class ExportAssistantView_Create(TemplateView, LoginRequiredMixin):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        user_context = self.request.user\n        agents = Assistant.objects.filter(organization__users=user_context)\n        context[\"user\"] = user_context\n        context[\"assistants\"] = agents\n        return context\n    def post(self, request, *args, **kwargs):\n        from apps.export_assistants.models import ExportAssistantAPI",
        "detail": "apps.export_assistants.views.export_assistants.create_export_assistant_views",
        "documentation": {}
    },
    {
        "label": "ExportAssistantView_Delete",
        "kind": 6,
        "importPath": "apps.export_assistants.views.export_assistants.delete_export_assistants_views",
        "description": "apps.export_assistants.views.export_assistants.delete_export_assistants_views",
        "peekOfCode": "class ExportAssistantView_Delete(LoginRequiredMixin, DeleteView):\n    model = ExportAssistantAPI\n    success_url = 'export_assistants:list'\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context\n    def get(self, request, *args, **kwargs):\n        return self.post(request, *args, **kwargs)\n    def post(self, request, *args, **kwargs):\n        ##############################",
        "detail": "apps.export_assistants.views.export_assistants.delete_export_assistants_views",
        "documentation": {}
    },
    {
        "label": "ExportAssistantView_List",
        "kind": 6,
        "importPath": "apps.export_assistants.views.export_assistants.list_export_assistants_views",
        "description": "apps.export_assistants.views.export_assistants.list_export_assistants_views",
        "peekOfCode": "class ExportAssistantView_List(TemplateView, LoginRequiredMixin):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_EXPORT_ASSISTANT\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_EXPORT_ASSISTANT):\n            messages.error(self.request, \"You do not have permission to list Export Assistant APIs.\")\n            return context\n        ##############################",
        "detail": "apps.export_assistants.views.export_assistants.list_export_assistants_views",
        "documentation": {}
    },
    {
        "label": "ExportAssistantView_ToggleService",
        "kind": 6,
        "importPath": "apps.export_assistants.views.export_assistants.toggle_service_export_assistants_views",
        "description": "apps.export_assistants.views.export_assistants.toggle_service_export_assistants_views",
        "peekOfCode": "class ExportAssistantView_ToggleService(LoginRequiredMixin, View):\n    def post(self, request, *args, **kwargs):\n        from apps.export_assistants.management.commands.start_exported_assistants import start_endpoint_for_assistant\n        exp_agent = get_object_or_404(ExportAssistantAPI, pk=self.kwargs['pk'])\n        endpoint = EXPORT_API_BASE_URL + exp_agent.endpoint.split(EXPORT_API_BASE_URL)[1]\n        context_user = request.user\n        ##############################\n        # PERMISSION CHECK FOR - UPDATE_EXPORT_ASSISTANT\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.UPDATE_EXPORT_ASSIST):",
        "detail": "apps.export_assistants.views.export_assistants.toggle_service_export_assistants_views",
        "documentation": {}
    },
    {
        "label": "ExportAssistantView_Update",
        "kind": 6,
        "importPath": "apps.export_assistants.views.export_assistants.update_export_assistants_views",
        "description": "apps.export_assistants.views.export_assistants.update_export_assistants_views",
        "peekOfCode": "class ExportAssistantView_Update(TemplateView, LoginRequiredMixin):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        exp_agent = get_object_or_404(ExportAssistantAPI, pk=self.kwargs['pk'])\n        context['export_assistant'] = exp_agent\n        context['assistants'] = Assistant.objects.filter(\n            organization__users__in=[self.request.user]).all()\n        return context\n    def post(self, request, *args, **kwargs):\n        ##############################",
        "detail": "apps.export_assistants.views.export_assistants.update_export_assistants_views",
        "documentation": {}
    },
    {
        "label": "ExportAssistantsConfig",
        "kind": 6,
        "importPath": "apps.export_assistants.apps",
        "description": "apps.export_assistants.apps",
        "peekOfCode": "class ExportAssistantsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.export_assistants'\n    def ready(self):\n        if settings.TESTING:\n            return\n        from threading import Thread\n        from django.core.management import call_command\n        def run_initialization_command():\n            call_command('start_exported_assistants')",
        "detail": "apps.export_assistants.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.export_assistants.urls",
        "description": "apps.export_assistants.urls",
        "peekOfCode": "app_name = 'export_assistants'\nurlpatterns = [\n    path('list/', ExportAssistantView_List.as_view(\n        template_name=\"export_assistants/list_export_assistants.html\"), name='list'),\n    path('create/', ExportAssistantView_Create.as_view(\n        template_name=\"export_assistants/create_export_assistants.html\"), name='create'),\n    path('update/<int:pk>/', ExportAssistantView_Update.as_view(\n        template_name=\"export_assistants/update_export_assistants.html\"), name='update'),\n    path('delete/<int:pk>/', ExportAssistantView_Delete.as_view(), name='delete'),\n    path('exported/<str:endpoint>/', ExportAssistantAPIView.as_view(), name='api'),",
        "detail": "apps.export_assistants.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.export_assistants.urls",
        "description": "apps.export_assistants.urls",
        "peekOfCode": "urlpatterns = [\n    path('list/', ExportAssistantView_List.as_view(\n        template_name=\"export_assistants/list_export_assistants.html\"), name='list'),\n    path('create/', ExportAssistantView_Create.as_view(\n        template_name=\"export_assistants/create_export_assistants.html\"), name='create'),\n    path('update/<int:pk>/', ExportAssistantView_Update.as_view(\n        template_name=\"export_assistants/update_export_assistants.html\"), name='update'),\n    path('delete/<int:pk>/', ExportAssistantView_Delete.as_view(), name='delete'),\n    path('exported/<str:endpoint>/', ExportAssistantAPIView.as_view(), name='api'),\n    path('toggle_service/<int:pk>/', ExportAssistantView_ToggleService.as_view(), name='toggle_service'),",
        "detail": "apps.export_assistants.urls",
        "documentation": {}
    },
    {
        "label": "ExportLeanmodAssistantAPIAdmin",
        "kind": 6,
        "importPath": "apps.export_leanmods.admin.exports.export_leanmod_admin",
        "description": "apps.export_leanmods.admin.exports.export_leanmod_admin",
        "peekOfCode": "class ExportLeanmodAssistantAPIAdmin(admin.ModelAdmin):\n    list_display = EXPORT_LEANMOD_ASSISTANTS_API_ADMIN_LIST\n    list_filter = EXPORT_LEANMOD_ASSISTANTS_API_ADMIN_FILTER\n    search_fields = EXPORT_LEANMOD_ASSISTANTS_API_ADMIN_SEARCH\n    date_hierarchy = \"created_at\"\n    ordering = [\"-created_at\"]",
        "detail": "apps.export_leanmods.admin.exports.export_leanmod_admin",
        "documentation": {}
    },
    {
        "label": "LeanmodRequestLogAdmin",
        "kind": 6,
        "importPath": "apps.export_leanmods.admin.logs.leanmod_request_log_admin",
        "description": "apps.export_leanmods.admin.logs.leanmod_request_log_admin",
        "peekOfCode": "class LeanmodRequestLogAdmin(admin.ModelAdmin):\n    list_display = EXPORT_LEANMOD_REQUEST_LOG_ADMIN_LIST\n    list_filter = EXPORT_LEANMOD_REQUEST_LOG_ADMIN_FILTER\n    search_fields = EXPORT_LEANMOD_REQUEST_LOG_ADMIN_SEARCH\n    date_hierarchy = \"timestamp\"\n    ordering = [\"-timestamp\"]",
        "detail": "apps.export_leanmods.admin.logs.leanmod_request_log_admin",
        "documentation": {}
    },
    {
        "label": "Command",
        "kind": 6,
        "importPath": "apps.export_leanmods.management.commands.start_exported_leanmods",
        "description": "apps.export_leanmods.management.commands.start_exported_leanmods",
        "peekOfCode": "class Command(BaseCommand):\n    help = 'Start all exported LeanMod assistants'\n    def handle(self, *args, **kwargs):\n        initialize_leanmod_endpoints()",
        "detail": "apps.export_leanmods.management.commands.start_exported_leanmods",
        "documentation": {}
    },
    {
        "label": "start_endpoint_for_leanmod",
        "kind": 2,
        "importPath": "apps.export_leanmods.management.commands.start_exported_leanmods",
        "description": "apps.export_leanmods.management.commands.start_exported_leanmods",
        "peekOfCode": "def start_endpoint_for_leanmod(assistant: ExportLeanmodAssistantAPI):\n    from apps.export_leanmods.views import ExportLeanmodAssistantAPIView\n    endpoint_url = assistant.endpoint\n    endpoint_local = EXPORT_LEANMOD_API_BASE_URL + endpoint_url.split(EXPORT_LEANMOD_API_BASE_URL)[1]\n    urlpatterns = getattr(importlib.import_module(settings.ROOT_URLCONF), 'urlpatterns')\n    urlpatterns += [\n        path(endpoint_local, ExportLeanmodAssistantAPIView.as_view(), name=f'export_assistant_{assistant.id}')\n    ]\ndef initialize_leanmod_endpoints():\n    for assistant in ExportLeanmodAssistantAPI.objects.all():",
        "detail": "apps.export_leanmods.management.commands.start_exported_leanmods",
        "documentation": {}
    },
    {
        "label": "initialize_leanmod_endpoints",
        "kind": 2,
        "importPath": "apps.export_leanmods.management.commands.start_exported_leanmods",
        "description": "apps.export_leanmods.management.commands.start_exported_leanmods",
        "peekOfCode": "def initialize_leanmod_endpoints():\n    for assistant in ExportLeanmodAssistantAPI.objects.all():\n        assistant: ExportLeanmodAssistantAPI\n        if assistant.is_online:\n            start_endpoint_for_leanmod(assistant)\n        else:\n            # OFFLINE: SKIP\n            pass\nclass Command(BaseCommand):\n    help = 'Start all exported LeanMod assistants'",
        "detail": "apps.export_leanmods.management.commands.start_exported_leanmods",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.export_leanmods.migrations.0001_initial",
        "description": "apps.export_leanmods.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='LeanmodRequestLog',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "apps.export_leanmods.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.export_leanmods.migrations.0002_initial",
        "description": "apps.export_leanmods.migrations.0002_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('export_leanmods', '0001_initial'),\n        ('leanmod', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='exportleanmodassistantapi',\n            name='lean_assistant',",
        "detail": "apps.export_leanmods.migrations.0002_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.export_leanmods.migrations.0003_initial",
        "description": "apps.export_leanmods.migrations.0003_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('export_leanmods', '0002_initial'),\n        ('organization', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='exportleanmodassistantapi',\n            name='organization',",
        "detail": "apps.export_leanmods.migrations.0003_initial",
        "documentation": {}
    },
    {
        "label": "ExportLeanmodAssistantAPI",
        "kind": 6,
        "importPath": "apps.export_leanmods.models.exports.export_leanmod_models",
        "description": "apps.export_leanmods.models.exports.export_leanmod_models",
        "peekOfCode": "class ExportLeanmodAssistantAPI(models.Model):\n    organization = models.ForeignKey(\"organization.Organization\", on_delete=models.CASCADE,\n                                     related_name='exported_leanmods', null=True, blank=True)\n    lean_assistant = models.ForeignKey('leanmod.LeanAssistant', on_delete=models.CASCADE,\n                                       related_name='exported_leanmods')\n    is_public = models.BooleanField(default=False)\n    request_limit_per_hour = models.IntegerField(default=1000)\n    is_online = models.BooleanField(default=True)\n    custom_api_key = models.CharField(max_length=1000, blank=True, null=True, unique=True)\n    endpoint = models.CharField(max_length=1000, blank=True, null=True)",
        "detail": "apps.export_leanmods.models.exports.export_leanmod_models",
        "documentation": {}
    },
    {
        "label": "LeanmodRequestLog",
        "kind": 6,
        "importPath": "apps.export_leanmods.models.logs.leanmod_request_log_models",
        "description": "apps.export_leanmods.models.logs.leanmod_request_log_models",
        "peekOfCode": "class LeanmodRequestLog(models.Model):\n    export_lean_assistant = models.ForeignKey('ExportLeanmodAssistantAPI', on_delete=models.CASCADE)\n    timestamp = models.DateTimeField(auto_now_add=True)\n    class Meta:\n        verbose_name = \"Request LeanMod Log\"\n        verbose_name_plural = \"Request LeanMod Logs\"\n        ordering = ['-timestamp']\n        indexes = [\n            models.Index(fields=['export_lean_assistant']),\n            models.Index(fields=['timestamp']),",
        "detail": "apps.export_leanmods.models.logs.leanmod_request_log_models",
        "documentation": {}
    },
    {
        "label": "fixture_export_leanmods_dashboards",
        "kind": 2,
        "importPath": "apps.export_leanmods.tests.conftest",
        "description": "apps.export_leanmods.tests.conftest",
        "peekOfCode": "def fixture_export_leanmods_dashboards():\n    return True",
        "detail": "apps.export_leanmods.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_export_leanmods_test_forms",
        "kind": 2,
        "importPath": "apps.export_leanmods.tests.test_forms",
        "description": "apps.export_leanmods.tests.test_forms",
        "peekOfCode": "def test_init_export_leanmods_test_forms():\n    assert True",
        "detail": "apps.export_leanmods.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_export_leanmods_test_models",
        "kind": 2,
        "importPath": "apps.export_leanmods.tests.test_models",
        "description": "apps.export_leanmods.tests.test_models",
        "peekOfCode": "def test_init_export_leanmods_test_models():\n    assert True",
        "detail": "apps.export_leanmods.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_export_leanmods_test_utils",
        "kind": 2,
        "importPath": "apps.export_leanmods.tests.test_utils",
        "description": "apps.export_leanmods.tests.test_utils",
        "peekOfCode": "def test_init_export_leanmods_test_utils():\n    assert True",
        "detail": "apps.export_leanmods.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_export_leanmods_test_views",
        "kind": 2,
        "importPath": "apps.export_leanmods.tests.test_views",
        "description": "apps.export_leanmods.tests.test_views",
        "peekOfCode": "def test_init_export_leanmods_test_views():\n    assert True",
        "detail": "apps.export_leanmods.tests.test_views",
        "documentation": {}
    },
    {
        "label": "LeanModAssistantStatusCodes",
        "kind": 6,
        "importPath": "apps.export_leanmods.utils.constant_utils",
        "description": "apps.export_leanmods.utils.constant_utils",
        "peekOfCode": "class LeanModAssistantStatusCodes:\n    OK = 200\n    NOT_FOUND = 404\n    UNAUTHORIZED = 401\n    TOO_MANY_REQUESTS = 429\n    SERVICE_OFFLINE = 503\n    INTERNAL_SERVER_ERROR = 500\nEXPORT_LEANMOD_ASSISTANTS_API_ADMIN_LIST = (\"lean_assistant\", \"is_public\", \"request_limit_per_hour\",\n                                            \"created_by_user\", \"is_online\", \"created_at\", \"updated_at\")\nEXPORT_LEANMOD_ASSISTANTS_API_ADMIN_FILTER = (\"lean_assistant\", \"is_public\", \"request_limit_per_hour\",",
        "detail": "apps.export_leanmods.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "EXPORT_LEANMOD_ASSISTANTS_API_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.export_leanmods.utils.constant_utils",
        "description": "apps.export_leanmods.utils.constant_utils",
        "peekOfCode": "EXPORT_LEANMOD_ASSISTANTS_API_ADMIN_LIST = (\"lean_assistant\", \"is_public\", \"request_limit_per_hour\",\n                                            \"created_by_user\", \"is_online\", \"created_at\", \"updated_at\")\nEXPORT_LEANMOD_ASSISTANTS_API_ADMIN_FILTER = (\"lean_assistant\", \"is_public\", \"request_limit_per_hour\",\n                                              \"created_by_user\", \"is_online\", \"created_at\", \"updated_at\")\nEXPORT_LEANMOD_ASSISTANTS_API_ADMIN_SEARCH = (\"lean_assistant\", \"is_public\", \"request_limit_per_hour\",\n                                              \"created_by_user\", \"is_online\", \"created_at\", \"updated_at\")\nEXPORT_LEANMOD_REQUEST_LOG_ADMIN_LIST = (\"export_lean_assistant\", \"timestamp\")\nEXPORT_LEANMOD_REQUEST_LOG_ADMIN_FILTER = (\"export_lean_assistant\", \"timestamp\")\nEXPORT_LEANMOD_REQUEST_LOG_ADMIN_SEARCH = (\"export_lean_assistant\", \"timestamp\")",
        "detail": "apps.export_leanmods.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "EXPORT_LEANMOD_ASSISTANTS_API_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.export_leanmods.utils.constant_utils",
        "description": "apps.export_leanmods.utils.constant_utils",
        "peekOfCode": "EXPORT_LEANMOD_ASSISTANTS_API_ADMIN_FILTER = (\"lean_assistant\", \"is_public\", \"request_limit_per_hour\",\n                                              \"created_by_user\", \"is_online\", \"created_at\", \"updated_at\")\nEXPORT_LEANMOD_ASSISTANTS_API_ADMIN_SEARCH = (\"lean_assistant\", \"is_public\", \"request_limit_per_hour\",\n                                              \"created_by_user\", \"is_online\", \"created_at\", \"updated_at\")\nEXPORT_LEANMOD_REQUEST_LOG_ADMIN_LIST = (\"export_lean_assistant\", \"timestamp\")\nEXPORT_LEANMOD_REQUEST_LOG_ADMIN_FILTER = (\"export_lean_assistant\", \"timestamp\")\nEXPORT_LEANMOD_REQUEST_LOG_ADMIN_SEARCH = (\"export_lean_assistant\", \"timestamp\")",
        "detail": "apps.export_leanmods.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "EXPORT_LEANMOD_ASSISTANTS_API_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.export_leanmods.utils.constant_utils",
        "description": "apps.export_leanmods.utils.constant_utils",
        "peekOfCode": "EXPORT_LEANMOD_ASSISTANTS_API_ADMIN_SEARCH = (\"lean_assistant\", \"is_public\", \"request_limit_per_hour\",\n                                              \"created_by_user\", \"is_online\", \"created_at\", \"updated_at\")\nEXPORT_LEANMOD_REQUEST_LOG_ADMIN_LIST = (\"export_lean_assistant\", \"timestamp\")\nEXPORT_LEANMOD_REQUEST_LOG_ADMIN_FILTER = (\"export_lean_assistant\", \"timestamp\")\nEXPORT_LEANMOD_REQUEST_LOG_ADMIN_SEARCH = (\"export_lean_assistant\", \"timestamp\")",
        "detail": "apps.export_leanmods.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "EXPORT_LEANMOD_REQUEST_LOG_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.export_leanmods.utils.constant_utils",
        "description": "apps.export_leanmods.utils.constant_utils",
        "peekOfCode": "EXPORT_LEANMOD_REQUEST_LOG_ADMIN_LIST = (\"export_lean_assistant\", \"timestamp\")\nEXPORT_LEANMOD_REQUEST_LOG_ADMIN_FILTER = (\"export_lean_assistant\", \"timestamp\")\nEXPORT_LEANMOD_REQUEST_LOG_ADMIN_SEARCH = (\"export_lean_assistant\", \"timestamp\")",
        "detail": "apps.export_leanmods.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "EXPORT_LEANMOD_REQUEST_LOG_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.export_leanmods.utils.constant_utils",
        "description": "apps.export_leanmods.utils.constant_utils",
        "peekOfCode": "EXPORT_LEANMOD_REQUEST_LOG_ADMIN_FILTER = (\"export_lean_assistant\", \"timestamp\")\nEXPORT_LEANMOD_REQUEST_LOG_ADMIN_SEARCH = (\"export_lean_assistant\", \"timestamp\")",
        "detail": "apps.export_leanmods.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "EXPORT_LEANMOD_REQUEST_LOG_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.export_leanmods.utils.constant_utils",
        "description": "apps.export_leanmods.utils.constant_utils",
        "peekOfCode": "EXPORT_LEANMOD_REQUEST_LOG_ADMIN_SEARCH = (\"export_lean_assistant\", \"timestamp\")",
        "detail": "apps.export_leanmods.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "generate_leanmod_assistant_endpoint",
        "kind": 2,
        "importPath": "apps.export_leanmods.utils.function_utils",
        "description": "apps.export_leanmods.utils.function_utils",
        "peekOfCode": "def generate_leanmod_assistant_endpoint(assistant: LeanAssistant):\n    agent_id = assistant.id\n    org_id = assistant.organization.id\n    org_name = assistant.organization.name\n    agent_name = assistant.name\n    llm_name = assistant.llm_model.model_name\n    creation_date = assistant.created_at\n    creation_year = creation_date.year\n    creation_month = creation_date.month\n    creation_day = creation_date.day",
        "detail": "apps.export_leanmods.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "generate_leanmod_assistant_custom_api_key",
        "kind": 2,
        "importPath": "apps.export_leanmods.utils.function_utils",
        "description": "apps.export_leanmods.utils.function_utils",
        "peekOfCode": "def generate_leanmod_assistant_custom_api_key(assistant: LeanAssistant):\n    agent_id = assistant.id\n    org_id = assistant.organization.id\n    org_name = assistant.organization.name\n    agent_name = assistant.name\n    instructions = assistant.instructions\n    llm_model_name = assistant.llm_model.model_name\n    llm_model_temperature = assistant.llm_model.temperature\n    llm_model_max_tokens = assistant.llm_model.maximum_tokens\n    llm_temperature = assistant.llm_model.temperature",
        "detail": "apps.export_leanmods.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "ExportLeanmodAssistantAPIView",
        "kind": 6,
        "importPath": "apps.export_leanmods.views.endpoints.endpoint_export_leanmod_views",
        "description": "apps.export_leanmods.views.endpoints.endpoint_export_leanmod_views",
        "peekOfCode": "class ExportLeanmodAssistantAPIView(View):\n    def post(self, request, *args, **kwargs):\n        endpoint = BASE_URL + request.path\n        api_key = request.headers.get('Authorization')\n        try:\n            exp_agent = ExportLeanmodAssistantAPI.objects.get(endpoint=endpoint)\n        except ExportLeanmodAssistantAPI.DoesNotExist:\n            return JsonResponse({\n                \"message\": \"Invalid endpoint\", \"data\": {}, \"status\": LeanModAssistantStatusCodes.NOT_FOUND\n            }, status=LeanModAssistantStatusCodes.NOT_FOUND)",
        "detail": "apps.export_leanmods.views.endpoints.endpoint_export_leanmod_views",
        "documentation": {}
    },
    {
        "label": "ExportLeanModView_Create",
        "kind": 6,
        "importPath": "apps.export_leanmods.views.export_leanmods.create_export_leanmod_views",
        "description": "apps.export_leanmods.views.export_leanmods.create_export_leanmod_views",
        "peekOfCode": "class ExportLeanModView_Create(TemplateView, LoginRequiredMixin):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        user_context = self.request.user\n        agents = LeanAssistant.objects.filter(organization__users=user_context)\n        context[\"user\"] = user_context\n        context[\"assistants\"] = agents\n        return context\n    def post(self, request, *args, **kwargs):\n        ##############################",
        "detail": "apps.export_leanmods.views.export_leanmods.create_export_leanmod_views",
        "documentation": {}
    },
    {
        "label": "ExportLeanModView_Delete",
        "kind": 6,
        "importPath": "apps.export_leanmods.views.export_leanmods.delete_export_leanmod_views",
        "description": "apps.export_leanmods.views.export_leanmods.delete_export_leanmod_views",
        "peekOfCode": "class ExportLeanModView_Delete(LoginRequiredMixin, DeleteView):\n    model = ExportLeanmodAssistantAPI\n    success_url = 'export_leanmods:list'\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context\n    def get(self, request, *args, **kwargs):\n        return self.post(request, *args, **kwargs)\n    def post(self, request, *args, **kwargs):\n        ##############################",
        "detail": "apps.export_leanmods.views.export_leanmods.delete_export_leanmod_views",
        "documentation": {}
    },
    {
        "label": "ExportLeanModView_List",
        "kind": 6,
        "importPath": "apps.export_leanmods.views.export_leanmods.list_export_leanmods_views",
        "description": "apps.export_leanmods.views.export_leanmods.list_export_leanmods_views",
        "peekOfCode": "class ExportLeanModView_List(TemplateView, LoginRequiredMixin):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_EXPORT_LEANMOD\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_EXPORT_LEANMOD):\n            messages.error(self.request, \"You do not have permission to list Export LeanMod Assistant APIs.\")\n            return context\n        ##############################",
        "detail": "apps.export_leanmods.views.export_leanmods.list_export_leanmods_views",
        "documentation": {}
    },
    {
        "label": "ExportLeanModView_ToggleService",
        "kind": 6,
        "importPath": "apps.export_leanmods.views.export_leanmods.toggle_service_export_leanmods_views",
        "description": "apps.export_leanmods.views.export_leanmods.toggle_service_export_leanmods_views",
        "peekOfCode": "class ExportLeanModView_ToggleService(LoginRequiredMixin, View):\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - UPDATE_EXPORT_LEANMOD\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.UPDATE_EXPORT_LEANMOD):\n            messages.error(self.request, \"You do not have permission to update Export LeanMod Assistant APIs.\")\n            return redirect('export_leanmods:list')\n        ##############################\n        exp_agent = get_object_or_404(ExportLeanmodAssistantAPI, pk=self.kwargs['pk'])",
        "detail": "apps.export_leanmods.views.export_leanmods.toggle_service_export_leanmods_views",
        "documentation": {}
    },
    {
        "label": "ExportLeanModView_Update",
        "kind": 6,
        "importPath": "apps.export_leanmods.views.export_leanmods.update_export_leanmod_views",
        "description": "apps.export_leanmods.views.export_leanmods.update_export_leanmod_views",
        "peekOfCode": "class ExportLeanModView_Update(TemplateView, LoginRequiredMixin):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        exp_agent = get_object_or_404(ExportLeanmodAssistantAPI, pk=self.kwargs['pk'])\n        context['export_assistant'] = exp_agent\n        context['assistants'] = LeanAssistant.objects.filter(organization__users__in=[self.request.user])\n        return context\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - UPDATE_EXPORT_LEANMOD",
        "detail": "apps.export_leanmods.views.export_leanmods.update_export_leanmod_views",
        "documentation": {}
    },
    {
        "label": "ExportLeanmodsConfig",
        "kind": 6,
        "importPath": "apps.export_leanmods.apps",
        "description": "apps.export_leanmods.apps",
        "peekOfCode": "class ExportLeanmodsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.export_leanmods'\n    def ready(self):\n        if settings.TESTING:\n            return\n        from threading import Thread\n        from django.core.management import call_command\n        def run_initialization_command():\n            call_command('start_exported_leanmods')",
        "detail": "apps.export_leanmods.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.export_leanmods.urls",
        "description": "apps.export_leanmods.urls",
        "peekOfCode": "app_name = 'export_leanmods'\nurlpatterns = [\n    path('list/', ExportLeanModView_List.as_view(\n        template_name=\"export_leanmods/list_export_leanmods.html\"), name='list'),\n    path('create/', ExportLeanModView_Create.as_view(\n        template_name=\"export_leanmods/create_export_leanmods.html\"), name='create'),\n    path('update/<int:pk>/', ExportLeanModView_Update.as_view(\n        template_name=\"export_leanmods/update_export_leanmods.html\"), name='update'),\n    path('delete/<int:pk>/', ExportLeanModView_Delete.as_view(), name='delete'),\n    path('exported/<str:endpoint>/', ExportLeanmodAssistantAPIView.as_view(), name='api'),",
        "detail": "apps.export_leanmods.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.export_leanmods.urls",
        "description": "apps.export_leanmods.urls",
        "peekOfCode": "urlpatterns = [\n    path('list/', ExportLeanModView_List.as_view(\n        template_name=\"export_leanmods/list_export_leanmods.html\"), name='list'),\n    path('create/', ExportLeanModView_Create.as_view(\n        template_name=\"export_leanmods/create_export_leanmods.html\"), name='create'),\n    path('update/<int:pk>/', ExportLeanModView_Update.as_view(\n        template_name=\"export_leanmods/update_export_leanmods.html\"), name='update'),\n    path('delete/<int:pk>/', ExportLeanModView_Delete.as_view(), name='delete'),\n    path('exported/<str:endpoint>/', ExportLeanmodAssistantAPIView.as_view(), name='api'),\n    path('toggle_service/<int:pk>/', ExportLeanModView_ToggleService.as_view(), name='toggle_service'),",
        "detail": "apps.export_leanmods.urls",
        "documentation": {}
    },
    {
        "label": "ExportOrchestrationAssistantAPIAdmin",
        "kind": 6,
        "importPath": "apps.export_orchestrations.admin.exports.export_orchestration_admin",
        "description": "apps.export_orchestrations.admin.exports.export_orchestration_admin",
        "peekOfCode": "class ExportOrchestrationAssistantAPIAdmin(admin.ModelAdmin):\n    list_display = EXPORT_ORCHESTRATION_ADMIN_LIST\n    list_filter = EXPORT_ORCHESTRATION_ADMIN_FILTER\n    search_fields = EXPORT_ORCHESTRATION_ADMIN_SEARCH\n    date_hierarchy = \"created_at\"\n    ordering = [\"-created_at\"]",
        "detail": "apps.export_orchestrations.admin.exports.export_orchestration_admin",
        "documentation": {}
    },
    {
        "label": "OrchestratorRequestLogAdmin",
        "kind": 6,
        "importPath": "apps.export_orchestrations.admin.logs.orchestration_request_log_admin",
        "description": "apps.export_orchestrations.admin.logs.orchestration_request_log_admin",
        "peekOfCode": "class OrchestratorRequestLogAdmin(admin.ModelAdmin):\n    list_display = EXPORT_ORCHESTRATION_LOG_ADMIN_LIST\n    list_filter = EXPORT_ORCHESTRATION_LOG_ADMIN_FILTER\n    search_fields = EXPORT_ORCHESTRATION_LOG_ADMIN_SEARCH\n    date_hierarchy = \"timestamp\"\n    ordering = [\"-timestamp\"]",
        "detail": "apps.export_orchestrations.admin.logs.orchestration_request_log_admin",
        "documentation": {}
    },
    {
        "label": "Command",
        "kind": 6,
        "importPath": "apps.export_orchestrations.management.commands.start_exported_orchestrations",
        "description": "apps.export_orchestrations.management.commands.start_exported_orchestrations",
        "peekOfCode": "class Command(BaseCommand):\n    help = 'Start all exported Orchestrators'\n    def handle(self, *args, **kwargs):\n        initialize_orchestration_endpoints()",
        "detail": "apps.export_orchestrations.management.commands.start_exported_orchestrations",
        "documentation": {}
    },
    {
        "label": "start_endpoint_for_orchestration",
        "kind": 2,
        "importPath": "apps.export_orchestrations.management.commands.start_exported_orchestrations",
        "description": "apps.export_orchestrations.management.commands.start_exported_orchestrations",
        "peekOfCode": "def start_endpoint_for_orchestration(assistant: ExportOrchestrationAPI):\n    from apps.export_orchestrations.views import ExportOrchestrationAPIView\n    endpoint_url = assistant.endpoint\n    endpoint_local = EXPORT_ORCHESTRATION_API_BASE_URL + endpoint_url.split(EXPORT_ORCHESTRATION_API_BASE_URL)[1]\n    urlpatterns = getattr(importlib.import_module(settings.ROOT_URLCONF), 'urlpatterns')\n    urlpatterns += [\n        path(endpoint_local, ExportOrchestrationAPIView.as_view(), name=f'export_assistant_{assistant.id}')\n    ]\ndef initialize_orchestration_endpoints():\n    for agent in ExportOrchestrationAPI.objects.all():",
        "detail": "apps.export_orchestrations.management.commands.start_exported_orchestrations",
        "documentation": {}
    },
    {
        "label": "initialize_orchestration_endpoints",
        "kind": 2,
        "importPath": "apps.export_orchestrations.management.commands.start_exported_orchestrations",
        "description": "apps.export_orchestrations.management.commands.start_exported_orchestrations",
        "peekOfCode": "def initialize_orchestration_endpoints():\n    for agent in ExportOrchestrationAPI.objects.all():\n        agent: ExportOrchestrationAPI\n        if agent.is_online:\n            start_endpoint_for_orchestration(agent)\n        else:\n            # SKIP: OFFLINE\n            pass\nclass Command(BaseCommand):\n    help = 'Start all exported Orchestrators'",
        "detail": "apps.export_orchestrations.management.commands.start_exported_orchestrations",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.export_orchestrations.migrations.0001_initial",
        "description": "apps.export_orchestrations.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='OrchestratorRequestLog',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "apps.export_orchestrations.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.export_orchestrations.migrations.0002_initial",
        "description": "apps.export_orchestrations.migrations.0002_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('export_orchestrations', '0001_initial'),\n        ('orchestrations', '0001_initial'),\n        ('organization', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='exportorchestrationapi',",
        "detail": "apps.export_orchestrations.migrations.0002_initial",
        "documentation": {}
    },
    {
        "label": "ExportOrchestrationAPI",
        "kind": 6,
        "importPath": "apps.export_orchestrations.models.exports.export_orchestration_models",
        "description": "apps.export_orchestrations.models.exports.export_orchestration_models",
        "peekOfCode": "class ExportOrchestrationAPI(models.Model):\n    organization = models.ForeignKey(\"organization.Organization\", on_delete=models.CASCADE,\n                                     related_name='exported_orchestrations', null=True, blank=True)\n    orchestrator = models.ForeignKey('orchestrations.Maestro', on_delete=models.CASCADE,\n                                     related_name='exported_orchestrations')\n    is_public = models.BooleanField(default=False)\n    request_limit_per_hour = models.IntegerField(default=1000)\n    is_online = models.BooleanField(default=True)\n    custom_api_key = models.CharField(max_length=1000, blank=True, null=True, unique=True)\n    endpoint = models.CharField(max_length=1000, blank=True, null=True)",
        "detail": "apps.export_orchestrations.models.exports.export_orchestration_models",
        "documentation": {}
    },
    {
        "label": "OrchestratorRequestLog",
        "kind": 6,
        "importPath": "apps.export_orchestrations.models.logs.orchestration_request_log_models",
        "description": "apps.export_orchestrations.models.logs.orchestration_request_log_models",
        "peekOfCode": "class OrchestratorRequestLog(models.Model):\n    export_orchestration = models.ForeignKey('ExportOrchestrationAPI', on_delete=models.CASCADE)\n    timestamp = models.DateTimeField(auto_now_add=True)\n    class Meta:\n        verbose_name = \"Request Orchestration Log\"\n        verbose_name_plural = \"Request Orchestration Logs\"\n        ordering = ['-timestamp']\n        indexes = [\n            models.Index(fields=['export_orchestration']),\n            models.Index(fields=['timestamp']),",
        "detail": "apps.export_orchestrations.models.logs.orchestration_request_log_models",
        "documentation": {}
    },
    {
        "label": "fixture_export_orchestrations_dashboards",
        "kind": 2,
        "importPath": "apps.export_orchestrations.tests.conftest",
        "description": "apps.export_orchestrations.tests.conftest",
        "peekOfCode": "def fixture_export_orchestrations_dashboards():\n    return True",
        "detail": "apps.export_orchestrations.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_export_orchestrations_test_forms",
        "kind": 2,
        "importPath": "apps.export_orchestrations.tests.test_forms",
        "description": "apps.export_orchestrations.tests.test_forms",
        "peekOfCode": "def test_init_export_orchestrations_test_forms():\n    assert True",
        "detail": "apps.export_orchestrations.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_export_orchestrations_test_models",
        "kind": 2,
        "importPath": "apps.export_orchestrations.tests.test_models",
        "description": "apps.export_orchestrations.tests.test_models",
        "peekOfCode": "def test_init_export_orchestrations_test_models():\n    assert True",
        "detail": "apps.export_orchestrations.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_export_orchestrations_test_utils",
        "kind": 2,
        "importPath": "apps.export_orchestrations.tests.test_utils",
        "description": "apps.export_orchestrations.tests.test_utils",
        "peekOfCode": "def test_init_export_orchestrations_test_utils():\n    assert True",
        "detail": "apps.export_orchestrations.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_export_orchestrations_test_views",
        "kind": 2,
        "importPath": "apps.export_orchestrations.tests.test_views",
        "description": "apps.export_orchestrations.tests.test_views",
        "peekOfCode": "def test_init_export_orchestrations_test_views():\n    assert True",
        "detail": "apps.export_orchestrations.tests.test_views",
        "documentation": {}
    },
    {
        "label": "ExportOrchestrationRequestStatusCodes",
        "kind": 6,
        "importPath": "apps.export_orchestrations.utils.constant_utils",
        "description": "apps.export_orchestrations.utils.constant_utils",
        "peekOfCode": "class ExportOrchestrationRequestStatusCodes:\n    OK = 200\n    NOT_FOUND = 404\n    UNAUTHORIZED = 401\n    TOO_MANY_REQUESTS = 429\n    SERVICE_OFFLINE = 503\n    INTERNAL_SERVER_ERROR = 500\nEXPORT_ORCHESTRATION_ADMIN_LIST = (\n    \"orchestrator\", \"is_public\", \"request_limit_per_hour\", \"created_by_user\", \"is_online\", \"created_at\"\n)",
        "detail": "apps.export_orchestrations.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "EXPORT_ORCHESTRATION_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.export_orchestrations.utils.constant_utils",
        "description": "apps.export_orchestrations.utils.constant_utils",
        "peekOfCode": "EXPORT_ORCHESTRATION_ADMIN_LIST = (\n    \"orchestrator\", \"is_public\", \"request_limit_per_hour\", \"created_by_user\", \"is_online\", \"created_at\"\n)\nEXPORT_ORCHESTRATION_ADMIN_FILTER = (\n    \"orchestrator\", \"is_public\", \"request_limit_per_hour\", \"created_by_user\", \"is_online\", \"created_at\",\n)\nEXPORT_ORCHESTRATION_ADMIN_SEARCH = (\n    \"orchestrator\", \"is_public\", \"request_limit_per_hour\", \"created_by_user\", \"is_online\", \"created_at\"\n)\nEXPORT_ORCHESTRATION_LOG_ADMIN_LIST = (\"export_orchestration\", \"timestamp\")",
        "detail": "apps.export_orchestrations.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "EXPORT_ORCHESTRATION_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.export_orchestrations.utils.constant_utils",
        "description": "apps.export_orchestrations.utils.constant_utils",
        "peekOfCode": "EXPORT_ORCHESTRATION_ADMIN_FILTER = (\n    \"orchestrator\", \"is_public\", \"request_limit_per_hour\", \"created_by_user\", \"is_online\", \"created_at\",\n)\nEXPORT_ORCHESTRATION_ADMIN_SEARCH = (\n    \"orchestrator\", \"is_public\", \"request_limit_per_hour\", \"created_by_user\", \"is_online\", \"created_at\"\n)\nEXPORT_ORCHESTRATION_LOG_ADMIN_LIST = (\"export_orchestration\", \"timestamp\")\nEXPORT_ORCHESTRATION_LOG_ADMIN_FILTER = (\"export_orchestration\", \"timestamp\")\nEXPORT_ORCHESTRATION_LOG_ADMIN_SEARCH = (\"export_orchestration\", \"timestamp\")",
        "detail": "apps.export_orchestrations.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "EXPORT_ORCHESTRATION_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.export_orchestrations.utils.constant_utils",
        "description": "apps.export_orchestrations.utils.constant_utils",
        "peekOfCode": "EXPORT_ORCHESTRATION_ADMIN_SEARCH = (\n    \"orchestrator\", \"is_public\", \"request_limit_per_hour\", \"created_by_user\", \"is_online\", \"created_at\"\n)\nEXPORT_ORCHESTRATION_LOG_ADMIN_LIST = (\"export_orchestration\", \"timestamp\")\nEXPORT_ORCHESTRATION_LOG_ADMIN_FILTER = (\"export_orchestration\", \"timestamp\")\nEXPORT_ORCHESTRATION_LOG_ADMIN_SEARCH = (\"export_orchestration\", \"timestamp\")",
        "detail": "apps.export_orchestrations.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "EXPORT_ORCHESTRATION_LOG_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.export_orchestrations.utils.constant_utils",
        "description": "apps.export_orchestrations.utils.constant_utils",
        "peekOfCode": "EXPORT_ORCHESTRATION_LOG_ADMIN_LIST = (\"export_orchestration\", \"timestamp\")\nEXPORT_ORCHESTRATION_LOG_ADMIN_FILTER = (\"export_orchestration\", \"timestamp\")\nEXPORT_ORCHESTRATION_LOG_ADMIN_SEARCH = (\"export_orchestration\", \"timestamp\")",
        "detail": "apps.export_orchestrations.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "EXPORT_ORCHESTRATION_LOG_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.export_orchestrations.utils.constant_utils",
        "description": "apps.export_orchestrations.utils.constant_utils",
        "peekOfCode": "EXPORT_ORCHESTRATION_LOG_ADMIN_FILTER = (\"export_orchestration\", \"timestamp\")\nEXPORT_ORCHESTRATION_LOG_ADMIN_SEARCH = (\"export_orchestration\", \"timestamp\")",
        "detail": "apps.export_orchestrations.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "EXPORT_ORCHESTRATION_LOG_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.export_orchestrations.utils.constant_utils",
        "description": "apps.export_orchestrations.utils.constant_utils",
        "peekOfCode": "EXPORT_ORCHESTRATION_LOG_ADMIN_SEARCH = (\"export_orchestration\", \"timestamp\")",
        "detail": "apps.export_orchestrations.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "generate_orchestration_endpoint",
        "kind": 2,
        "importPath": "apps.export_orchestrations.utils.function_utils",
        "description": "apps.export_orchestrations.utils.function_utils",
        "peekOfCode": "def generate_orchestration_endpoint(assistant: Maestro):\n    assistant_id = assistant.id\n    organization_id = assistant.organization.id\n    organization_name = assistant.organization.name\n    assistant_name = assistant.name\n    llm_model_name = assistant.llm_model.model_name\n    creation_date = assistant.created_at\n    creation_year = creation_date.year\n    creation_month = creation_date.month\n    creation_day = creation_date.day",
        "detail": "apps.export_orchestrations.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "generate_orchestration_custom_api_key",
        "kind": 2,
        "importPath": "apps.export_orchestrations.utils.function_utils",
        "description": "apps.export_orchestrations.utils.function_utils",
        "peekOfCode": "def generate_orchestration_custom_api_key(assistant: Maestro):\n    assistant_id = assistant.id\n    organization_id = assistant.organization.id\n    organization_name = assistant.organization.name\n    assistant_name = assistant.name\n    instructions = assistant.instructions\n    llm_model_name = assistant.llm_model.model_name\n    llm_model_temperature = assistant.llm_model.temperature\n    llm_model_max_tokens = assistant.llm_model.maximum_tokens\n    llm_temperature = assistant.llm_model.temperature",
        "detail": "apps.export_orchestrations.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "ExportOrchestrationAPIView",
        "kind": 6,
        "importPath": "apps.export_orchestrations.views.endpoints.endpoint_export_orchestration_views",
        "description": "apps.export_orchestrations.views.endpoints.endpoint_export_orchestration_views",
        "peekOfCode": "class ExportOrchestrationAPIView(View):\n    def post(self, request, *args, **kwargs):\n        endpoint = BASE_URL + request.path\n        api_key = request.headers.get('Authorization')\n        try:\n            export_assistant: ExportOrchestrationAPI = ExportOrchestrationAPI.objects.get(endpoint=endpoint)\n        except ExportOrchestrationAPI.DoesNotExist:\n            return JsonResponse({\n                \"message\": \"Invalid endpoint\", \"data\": {}, \"status\": ExportOrchestrationRequestStatusCodes.NOT_FOUND\n            }, status=ExportOrchestrationRequestStatusCodes.NOT_FOUND)",
        "detail": "apps.export_orchestrations.views.endpoints.endpoint_export_orchestration_views",
        "documentation": {}
    },
    {
        "label": "ExportOrchestrationView_Create",
        "kind": 6,
        "importPath": "apps.export_orchestrations.views.export_orchestrations.create_export_orchestration_views",
        "description": "apps.export_orchestrations.views.export_orchestrations.create_export_orchestration_views",
        "peekOfCode": "class ExportOrchestrationView_Create(TemplateView, LoginRequiredMixin):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        user_context = self.request.user\n        agents = Maestro.objects.filter(organization__users=user_context)\n        context[\"user\"] = user_context\n        context[\"assistants\"] = agents\n        return context\n    def post(self, request, *args, **kwargs):\n        ##############################",
        "detail": "apps.export_orchestrations.views.export_orchestrations.create_export_orchestration_views",
        "documentation": {}
    },
    {
        "label": "ExportOrchestrationView_Delete",
        "kind": 6,
        "importPath": "apps.export_orchestrations.views.export_orchestrations.delete_export_orchestration_views",
        "description": "apps.export_orchestrations.views.export_orchestrations.delete_export_orchestration_views",
        "peekOfCode": "class ExportOrchestrationView_Delete(LoginRequiredMixin, DeleteView):\n    model = ExportOrchestrationAPI\n    success_url = 'export_orchestrations:list'\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context\n    def get(self, request, *args, **kwargs):\n        return self.post(request, *args, **kwargs)\n    def post(self, request, *args, **kwargs):\n        ##############################",
        "detail": "apps.export_orchestrations.views.export_orchestrations.delete_export_orchestration_views",
        "documentation": {}
    },
    {
        "label": "ExportOrchestrationView_List",
        "kind": 6,
        "importPath": "apps.export_orchestrations.views.export_orchestrations.list_export_orchestrations_views",
        "description": "apps.export_orchestrations.views.export_orchestrations.list_export_orchestrations_views",
        "peekOfCode": "class ExportOrchestrationView_List(TemplateView, LoginRequiredMixin):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_EXPORT_ORCHESTRATION\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_EXPORT_ORCHESTRATION):\n            messages.error(self.request, \"You do not have permission to list Export Orchestration APIs.\")\n            return context\n        ##############################",
        "detail": "apps.export_orchestrations.views.export_orchestrations.list_export_orchestrations_views",
        "documentation": {}
    },
    {
        "label": "ExportOrchestrationView_ToggleService",
        "kind": 6,
        "importPath": "apps.export_orchestrations.views.export_orchestrations.toggle_service_export_orchestrations_views",
        "description": "apps.export_orchestrations.views.export_orchestrations.toggle_service_export_orchestrations_views",
        "peekOfCode": "class ExportOrchestrationView_ToggleService(LoginRequiredMixin, View):\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - UPDATE_EXPORT_ORCHESTRATION\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.UPDATE_EXPORT_ORCHESTRATION):\n            messages.error(self.request, \"You do not have permission to update Export Orchestration APIs.\")\n            return redirect('export_orchestrations:list')\n        ##############################\n        exp_agent = get_object_or_404(ExportOrchestrationAPI, pk=self.kwargs['pk'])",
        "detail": "apps.export_orchestrations.views.export_orchestrations.toggle_service_export_orchestrations_views",
        "documentation": {}
    },
    {
        "label": "ExportOrchestrationView_Update",
        "kind": 6,
        "importPath": "apps.export_orchestrations.views.export_orchestrations.update_export_orchestration_views",
        "description": "apps.export_orchestrations.views.export_orchestrations.update_export_orchestration_views",
        "peekOfCode": "class ExportOrchestrationView_Update(TemplateView, LoginRequiredMixin):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        exp_agent = get_object_or_404(ExportOrchestrationAPI, pk=self.kwargs['pk'])\n        context['export_assistant'] = exp_agent\n        context['assistants'] = Maestro.objects.filter(organization__users__in=[self.request.user])\n        return context\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - UPDATE_EXPORT_ORCHESTRATION",
        "detail": "apps.export_orchestrations.views.export_orchestrations.update_export_orchestration_views",
        "documentation": {}
    },
    {
        "label": "ExportOrchestrationsConfig",
        "kind": 6,
        "importPath": "apps.export_orchestrations.apps",
        "description": "apps.export_orchestrations.apps",
        "peekOfCode": "class ExportOrchestrationsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.export_orchestrations'\n    def ready(self):\n        # Schedule the command to run after the server starts\n        if settings.TESTING:\n            return\n        from threading import Thread\n        from django.core.management import call_command\n        def run_initialization_command():",
        "detail": "apps.export_orchestrations.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.export_orchestrations.urls",
        "description": "apps.export_orchestrations.urls",
        "peekOfCode": "app_name = 'export_orchestrations'\nurlpatterns = [\n    path('list/', ExportOrchestrationView_List.as_view(\n        template_name=\"export_orchestrations/list_export_orchestrations.html\"), name='list'),\n    path('create/', ExportOrchestrationView_Create.as_view(\n        template_name=\"export_orchestrations/create_export_orchestrations.html\"), name='create'),\n    path('update/<int:pk>/', ExportOrchestrationView_Update.as_view(\n        template_name=\"export_orchestrations/update_export_orchestrations.html\"), name='update'),\n    path('delete/<int:pk>/', ExportOrchestrationView_Delete.as_view(), name='delete'),\n    path('exported/<str:endpoint>/', ExportOrchestrationAPIView.as_view(), name='api'),",
        "detail": "apps.export_orchestrations.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.export_orchestrations.urls",
        "description": "apps.export_orchestrations.urls",
        "peekOfCode": "urlpatterns = [\n    path('list/', ExportOrchestrationView_List.as_view(\n        template_name=\"export_orchestrations/list_export_orchestrations.html\"), name='list'),\n    path('create/', ExportOrchestrationView_Create.as_view(\n        template_name=\"export_orchestrations/create_export_orchestrations.html\"), name='create'),\n    path('update/<int:pk>/', ExportOrchestrationView_Update.as_view(\n        template_name=\"export_orchestrations/update_export_orchestrations.html\"), name='update'),\n    path('delete/<int:pk>/', ExportOrchestrationView_Delete.as_view(), name='delete'),\n    path('exported/<str:endpoint>/', ExportOrchestrationAPIView.as_view(), name='api'),\n    path('toggle_service/<int:pk>/', ExportOrchestrationView_ToggleService.as_view(), name='toggle_service'),",
        "detail": "apps.export_orchestrations.urls",
        "documentation": {}
    },
    {
        "label": "FineTunedModelConnectionAdmin",
        "kind": 6,
        "importPath": "apps.finetuning.admin.finetuning_admin",
        "description": "apps.finetuning.admin.finetuning_admin",
        "peekOfCode": "class FineTunedModelConnectionAdmin(admin.ModelAdmin):\n    list_display = FINETUNING_ADMIN_LIST\n    search_fields = FINETUNING_ADMIN_SEARCH",
        "detail": "apps.finetuning.admin.finetuning_admin",
        "documentation": {}
    },
    {
        "label": "FineTunedModelConnectionForm",
        "kind": 6,
        "importPath": "apps.finetuning.forms.finetuned_model_forms",
        "description": "apps.finetuning.forms.finetuned_model_forms",
        "peekOfCode": "class FineTunedModelConnectionForm(forms.ModelForm):\n    class Meta:\n        model = FineTunedModelConnection\n        fields = ['organization', 'nickname', 'model_name', 'model_type', 'provider', 'provider_api_key',\n                  'model_description']",
        "detail": "apps.finetuning.forms.finetuned_model_forms",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.finetuning.migrations.0001_initial",
        "description": "apps.finetuning.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='FineTunedModelConnection',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "apps.finetuning.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.finetuning.migrations.0002_initial",
        "description": "apps.finetuning.migrations.0002_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('finetuning', '0001_initial'),\n        ('organization', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='finetunedmodelconnection',\n            name='organization',",
        "detail": "apps.finetuning.migrations.0002_initial",
        "documentation": {}
    },
    {
        "label": "FineTunedModelConnection",
        "kind": 6,
        "importPath": "apps.finetuning.models.finetuning_models",
        "description": "apps.finetuning.models.finetuning_models",
        "peekOfCode": "class FineTunedModelConnection(models.Model):\n    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE, blank=True, null=True)\n    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE, blank=True, null=True)\n    provider = models.CharField(max_length=255, choices=FINE_TUNING_MODEL_PROVIDERS,\n                                default=FineTuningModelProvidersNames.OPENAI)\n    provider_api_key = models.CharField(max_length=5000, blank=True, null=True)\n    model_name = models.CharField(max_length=255)\n    nickname = models.CharField(max_length=255)\n    model_type = models.CharField(max_length=255, choices=MODEL_TYPES)\n    model_description = models.TextField()",
        "detail": "apps.finetuning.models.finetuning_models",
        "documentation": {}
    },
    {
        "label": "fixture_finetuning_init",
        "kind": 2,
        "importPath": "apps.finetuning.tests.conftest",
        "description": "apps.finetuning.tests.conftest",
        "peekOfCode": "def fixture_finetuning_init():\n    return True",
        "detail": "apps.finetuning.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_finetuning_test_forms",
        "kind": 2,
        "importPath": "apps.finetuning.tests.test_forms",
        "description": "apps.finetuning.tests.test_forms",
        "peekOfCode": "def test_init_finetuning_test_forms():\n    assert True",
        "detail": "apps.finetuning.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_finetuning_test_models",
        "kind": 2,
        "importPath": "apps.finetuning.tests.test_models",
        "description": "apps.finetuning.tests.test_models",
        "peekOfCode": "def test_init_finetuning_test_models():\n    assert True",
        "detail": "apps.finetuning.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_finetuning_test_utils",
        "kind": 2,
        "importPath": "apps.finetuning.tests.test_utils",
        "description": "apps.finetuning.tests.test_utils",
        "peekOfCode": "def test_init_finetuning_test_utils():\n    assert True",
        "detail": "apps.finetuning.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_finetuning_test_views",
        "kind": 2,
        "importPath": "apps.finetuning.tests.test_views",
        "description": "apps.finetuning.tests.test_views",
        "peekOfCode": "def test_init_finetuning_test_views():\n    assert True",
        "detail": "apps.finetuning.tests.test_views",
        "documentation": {}
    },
    {
        "label": "FineTunedModelTypesNames",
        "kind": 6,
        "importPath": "apps.finetuning.utils.constant_utils",
        "description": "apps.finetuning.utils.constant_utils",
        "peekOfCode": "class FineTunedModelTypesNames:\n    GPT_4O_MINI = 'gpt-4o-mini'\n    GPT_4O = 'gpt-4o'\n    GPT_4 = 'gpt-4'\n    @staticmethod\n    def as_list():\n        return [\n            FineTunedModelTypesNames.GPT_4O_MINI, FineTunedModelTypesNames.GPT_4O, FineTunedModelTypesNames.GPT_4,\n        ]\nclass FineTuningModelProvidersNames:",
        "detail": "apps.finetuning.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "FineTuningModelProvidersNames",
        "kind": 6,
        "importPath": "apps.finetuning.utils.constant_utils",
        "description": "apps.finetuning.utils.constant_utils",
        "peekOfCode": "class FineTuningModelProvidersNames:\n    OPENAI = 'openai'\n    @staticmethod\n    def as_list():\n        return [\n            FineTuningModelProvidersNames.OPENAI,\n        ]\nFINETUNING_ADMIN_LIST = ('organization', 'nickname', 'model_name', \"provider\", 'model_type', 'created_at')\nFINETUNING_ADMIN_SEARCH = ('organization', 'nickname', 'model_name', \"provider\", 'model_type', 'model_description')",
        "detail": "apps.finetuning.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MODEL_TYPES",
        "kind": 5,
        "importPath": "apps.finetuning.utils.constant_utils",
        "description": "apps.finetuning.utils.constant_utils",
        "peekOfCode": "MODEL_TYPES = [\n    ('gpt-4o-mini', 'GPT-4o Mini'),\n    ('gpt-4o', 'GPT-4o'),\n    ('gpt-4', 'GPT-4'),\n]\nFINE_TUNING_MODEL_PROVIDERS = [\n    ('openai', 'OpenAI'),\n]\n#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.\n#",
        "detail": "apps.finetuning.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "FINE_TUNING_MODEL_PROVIDERS",
        "kind": 5,
        "importPath": "apps.finetuning.utils.constant_utils",
        "description": "apps.finetuning.utils.constant_utils",
        "peekOfCode": "FINE_TUNING_MODEL_PROVIDERS = [\n    ('openai', 'OpenAI'),\n]\n#  Copyright (c) 2024 BMD™ Autonomous Holdings. All rights reserved.\n#\n#  Project: Bimod.io™\n#  File: constant_utils.py\n#  Last Modified: 2024-10-05 01:39:48\n#  Author: Ege Dogan Dursun (Co-Founder & Chief Executive Officer / CEO @ BMD™ Autonomous Holdings)\n#  Created: 2024-10-05 14:42:38",
        "detail": "apps.finetuning.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "FINETUNING_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.finetuning.utils.constant_utils",
        "description": "apps.finetuning.utils.constant_utils",
        "peekOfCode": "FINETUNING_ADMIN_LIST = ('organization', 'nickname', 'model_name', \"provider\", 'model_type', 'created_at')\nFINETUNING_ADMIN_SEARCH = ('organization', 'nickname', 'model_name', \"provider\", 'model_type', 'model_description')",
        "detail": "apps.finetuning.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "FINETUNING_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.finetuning.utils.constant_utils",
        "description": "apps.finetuning.utils.constant_utils",
        "peekOfCode": "FINETUNING_ADMIN_SEARCH = ('organization', 'nickname', 'model_name', \"provider\", 'model_type', 'model_description')",
        "detail": "apps.finetuning.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "FineTuningView_Add",
        "kind": 6,
        "importPath": "apps.finetuning.views.add_finetuning_views",
        "description": "apps.finetuning.views.add_finetuning_views",
        "peekOfCode": "class FineTuningView_Add(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['form'] = FineTunedModelConnectionForm()\n        return context\n    def post(self, request, *args, **kwargs):\n        context_user = request.user\n        ##############################\n        # PERMISSION CHECK FOR - ADD_FINETUNING_MODEL\n        if not UserPermissionManager.is_authorized(user=self.request.user,",
        "detail": "apps.finetuning.views.add_finetuning_views",
        "documentation": {}
    },
    {
        "label": "FineTuningView_Delete",
        "kind": 6,
        "importPath": "apps.finetuning.views.delete_finetuning_views",
        "description": "apps.finetuning.views.delete_finetuning_views",
        "peekOfCode": "class FineTuningView_Delete(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['connection'] = get_object_or_404(FineTunedModelConnection, id=kwargs['pk'],\n                                                  created_by_user=self.request.user)\n        return context\n    def post(self, request, *args, **kwargs):\n        context_user = request.user\n        ##############################\n        # PERMISSION CHECK FOR - DELETE_FINETUNING_MODEL",
        "detail": "apps.finetuning.views.delete_finetuning_views",
        "documentation": {}
    },
    {
        "label": "FineTuningView_List",
        "kind": 6,
        "importPath": "apps.finetuning.views.list_finetunings_views",
        "description": "apps.finetuning.views.list_finetunings_views",
        "peekOfCode": "class FineTuningView_List(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_FINETUNING_MODEL\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_FINETUNING_MODEL):\n            messages.error(self.request, \"You do not have permission to list Finetuning Model.\")\n            return context\n        ##############################",
        "detail": "apps.finetuning.views.list_finetunings_views",
        "documentation": {}
    },
    {
        "label": "FinetuningConfig",
        "kind": 6,
        "importPath": "apps.finetuning.apps",
        "description": "apps.finetuning.apps",
        "peekOfCode": "class FinetuningConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.finetuning'",
        "detail": "apps.finetuning.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.finetuning.urls",
        "description": "apps.finetuning.urls",
        "peekOfCode": "app_name = 'finetuning'\nurlpatterns = [\n    path('list/', FineTuningView_List.as_view(\n        template_name='finetuning/list_finetuned_connections.html'), name='list'),\n    path('add/', FineTuningView_Add.as_view(\n        template_name='finetuning/list_finetuned_connections.html'), name='add'),\n    path('remove/<int:pk>/', FineTuningView_Delete.as_view(\n        template_name='finetuning/list_finetuned_connections.html'), name='remove'),\n]",
        "detail": "apps.finetuning.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.finetuning.urls",
        "description": "apps.finetuning.urls",
        "peekOfCode": "urlpatterns = [\n    path('list/', FineTuningView_List.as_view(\n        template_name='finetuning/list_finetuned_connections.html'), name='list'),\n    path('add/', FineTuningView_Add.as_view(\n        template_name='finetuning/list_finetuned_connections.html'), name='add'),\n    path('remove/<int:pk>/', FineTuningView_Delete.as_view(\n        template_name='finetuning/list_finetuned_connections.html'), name='remove'),\n]",
        "detail": "apps.finetuning.urls",
        "documentation": {}
    },
    {
        "label": "HarmoniqAdmin",
        "kind": 6,
        "importPath": "apps.harmoniq.admin.harmoniq_admin",
        "description": "apps.harmoniq.admin.harmoniq_admin",
        "peekOfCode": "class HarmoniqAdmin(admin.ModelAdmin):\n    list_display = HARMONIQ_AGENT_ADMIN_LIST\n    list_filter = HARMONIQ_AGENT_ADMIN_FILTER\n    search_fields = HARMONIQ_AGENT_ADMIN_SEARCH\n    ordering = ['-created_at']",
        "detail": "apps.harmoniq.admin.harmoniq_admin",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.harmoniq.migrations.0001_initial",
        "description": "apps.harmoniq.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('llm_core', '0002_initial'),\n        ('organization', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Harmoniq',",
        "detail": "apps.harmoniq.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.harmoniq.migrations.0002_harmoniq_harmoniq_deity_and_more",
        "description": "apps.harmoniq.migrations.0002_harmoniq_harmoniq_deity_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('harmoniq', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='harmoniq',\n            name='harmoniq_deity',\n            field=models.CharField(choices=[('arathreus', 'Arathreus'), ('berathron', 'Berathron'), ('celesthar', 'Celesthar'), ('demorthon', 'Demorthon'), ('eratheris', 'Eratheris')], default='arathreus', max_length=100),\n        ),",
        "detail": "apps.harmoniq.migrations.0002_harmoniq_harmoniq_deity_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.harmoniq.migrations.0003_remove_harmoniq_harmoniq_ha_organiz_b877a8_idx_and_more",
        "description": "apps.harmoniq.migrations.0003_remove_harmoniq_harmoniq_ha_organiz_b877a8_idx_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('harmoniq', '0002_harmoniq_harmoniq_deity_and_more'),\n    ]\n    operations = [\n        migrations.RemoveIndex(\n            model_name='harmoniq',\n            name='harmoniq_ha_organiz_b877a8_idx',\n        ),\n        migrations.RemoveField(",
        "detail": "apps.harmoniq.migrations.0003_remove_harmoniq_harmoniq_ha_organiz_b877a8_idx_and_more",
        "documentation": {}
    },
    {
        "label": "Harmoniq",
        "kind": 6,
        "importPath": "apps.harmoniq.models.harmoniq_models",
        "description": "apps.harmoniq.models.harmoniq_models",
        "peekOfCode": "class Harmoniq(models.Model):\n    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE)\n    llm_model = models.ForeignKey('llm_core.LLMCore', on_delete=models.CASCADE)\n    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE)\n    name = models.CharField(max_length=1000)\n    description = models.TextField()\n    harmoniq_deity = models.CharField(max_length=100, choices=HARMONIQ_DEITIES, default=HARMONIQ_DEITIES[0][0])\n    optional_instructions = models.TextField(blank=True, null=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)",
        "detail": "apps.harmoniq.models.harmoniq_models",
        "documentation": {}
    },
    {
        "label": "fixture_harmoniq_init",
        "kind": 2,
        "importPath": "apps.harmoniq.tests.conftest",
        "description": "apps.harmoniq.tests.conftest",
        "peekOfCode": "def fixture_harmoniq_init():\n    return True",
        "detail": "apps.harmoniq.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_harmoniq_test_forms",
        "kind": 2,
        "importPath": "apps.harmoniq.tests.test_forms",
        "description": "apps.harmoniq.tests.test_forms",
        "peekOfCode": "def test_init_harmoniq_test_forms():\n    assert True",
        "detail": "apps.harmoniq.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_harmoniq_test_models",
        "kind": 2,
        "importPath": "apps.harmoniq.tests.test_models",
        "description": "apps.harmoniq.tests.test_models",
        "peekOfCode": "def test_init_harmoniq_test_models():\n    assert True",
        "detail": "apps.harmoniq.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_harmoniq_test_utils",
        "kind": 2,
        "importPath": "apps.harmoniq.tests.test_utils",
        "description": "apps.harmoniq.tests.test_utils",
        "peekOfCode": "def test_init_harmoniq_test_utils():\n    assert True",
        "detail": "apps.harmoniq.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_harmoniq_test_views",
        "kind": 2,
        "importPath": "apps.harmoniq.tests.test_views",
        "description": "apps.harmoniq.tests.test_views",
        "peekOfCode": "def test_init_harmoniq_test_views():\n    assert True",
        "detail": "apps.harmoniq.tests.test_views",
        "documentation": {}
    },
    {
        "label": "HarmoniqInputModesTypes",
        "kind": 6,
        "importPath": "apps.harmoniq.utils.constant_utils",
        "description": "apps.harmoniq.utils.constant_utils",
        "peekOfCode": "class HarmoniqInputModesTypes:\n    TEXT = 'text'\n    AUDIO = 'audio'\n    @staticmethod\n    def as_list():\n        return [HarmoniqInputModesTypes.TEXT, HarmoniqInputModesTypes.AUDIO]\nHARMONIQ_DEITIES = [\n    ('arathreus', 'Arathreus'),\n    ('berathron', 'Berathron'),\n    ('celesthar', 'Celesthar'),",
        "detail": "apps.harmoniq.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "HarmoniqDeitiesNames",
        "kind": 6,
        "importPath": "apps.harmoniq.utils.constant_utils",
        "description": "apps.harmoniq.utils.constant_utils",
        "peekOfCode": "class HarmoniqDeitiesNames:\n    ARATHREUS = 'arathreus'  # Gentle Healer\n    BERATHRON = 'berathron'  # Joker Lord\n    CELESTHAR = 'celesthar'  # Wise Advisor\n    DEMORTHON = 'demorthon'  # Elder Commander\n    ERATHERIS = 'eratheris'  # The Diplomat\n    @staticmethod\n    def as_list():\n        return [HarmoniqDeitiesNames.ARATHREUS, HarmoniqDeitiesNames.BERATHRON,\n                HarmoniqDeitiesNames.CELESTHAR, HarmoniqDeitiesNames.DEMORTHON,",
        "detail": "apps.harmoniq.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "HARMONIQ_INPUT_MODES",
        "kind": 5,
        "importPath": "apps.harmoniq.utils.constant_utils",
        "description": "apps.harmoniq.utils.constant_utils",
        "peekOfCode": "HARMONIQ_INPUT_MODES = [\n    ('text', 'Text'),\n    ('audio', 'Audio'),\n]\nclass HarmoniqInputModesTypes:\n    TEXT = 'text'\n    AUDIO = 'audio'\n    @staticmethod\n    def as_list():\n        return [HarmoniqInputModesTypes.TEXT, HarmoniqInputModesTypes.AUDIO]",
        "detail": "apps.harmoniq.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "HARMONIQ_DEITIES",
        "kind": 5,
        "importPath": "apps.harmoniq.utils.constant_utils",
        "description": "apps.harmoniq.utils.constant_utils",
        "peekOfCode": "HARMONIQ_DEITIES = [\n    ('arathreus', 'Arathreus'),\n    ('berathron', 'Berathron'),\n    ('celesthar', 'Celesthar'),\n    ('demorthon', 'Demorthon'),\n    ('eratheris', 'Eratheris'),\n]\nclass HarmoniqDeitiesNames:\n    ARATHREUS = 'arathreus'  # Gentle Healer\n    BERATHRON = 'berathron'  # Joker Lord",
        "detail": "apps.harmoniq.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "HARMONIQ_DEITIES_INSTRUCTIONS_MAP",
        "kind": 5,
        "importPath": "apps.harmoniq.utils.constant_utils",
        "description": "apps.harmoniq.utils.constant_utils",
        "peekOfCode": "HARMONIQ_DEITIES_INSTRUCTIONS_MAP = {\n    HarmoniqDeitiesNames.ARATHREUS: f\"\"\"\n    **Style, Tone & Character You Must Assume:**\n    -------------\n    *Personality:*\n    - Polished, empathetic, and patient.\n    - Arathreus is highly personable and diplomatic, with a calming presence.\n    - This assistant speaks in a sophisticated yet warm tone, making customers feel understood and valued.\n    -------------\n    *Behaviour:*",
        "detail": "apps.harmoniq.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "HARMONIQ_AGENT_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.harmoniq.utils.constant_utils",
        "description": "apps.harmoniq.utils.constant_utils",
        "peekOfCode": "HARMONIQ_AGENT_ADMIN_LIST = ('name', 'organization', 'llm_model', 'harmoniq_deity', 'created_by_user', 'created_at')\nHARMONIQ_AGENT_ADMIN_SEARCH = ('name', 'organization__name', 'llm_model__nickname', 'created_by_user__username')\nHARMONIQ_AGENT_ADMIN_FILTER = ('organization', 'llm_model', 'harmoniq_deity', 'created_by_user', 'created_at')",
        "detail": "apps.harmoniq.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "HARMONIQ_AGENT_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.harmoniq.utils.constant_utils",
        "description": "apps.harmoniq.utils.constant_utils",
        "peekOfCode": "HARMONIQ_AGENT_ADMIN_SEARCH = ('name', 'organization__name', 'llm_model__nickname', 'created_by_user__username')\nHARMONIQ_AGENT_ADMIN_FILTER = ('organization', 'llm_model', 'harmoniq_deity', 'created_by_user', 'created_at')",
        "detail": "apps.harmoniq.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "HARMONIQ_AGENT_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.harmoniq.utils.constant_utils",
        "description": "apps.harmoniq.utils.constant_utils",
        "peekOfCode": "HARMONIQ_AGENT_ADMIN_FILTER = ('organization', 'llm_model', 'harmoniq_deity', 'created_by_user', 'created_at')",
        "detail": "apps.harmoniq.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "HarmoniqView_ConfirmDelete",
        "kind": 6,
        "importPath": "apps.harmoniq.views.harmoniq.confirm_delete_harmoniq_agent_views",
        "description": "apps.harmoniq.views.harmoniq.confirm_delete_harmoniq_agent_views",
        "peekOfCode": "class HarmoniqView_ConfirmDelete(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        harmoniq_agent = get_object_or_404(Harmoniq, id=self.kwargs['pk'])\n        context['assistant'] = harmoniq_agent\n        return context\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - DELETE_HARMONIQ_AGENTS\n        if not UserPermissionManager.is_authorized(user=self.request.user,",
        "detail": "apps.harmoniq.views.harmoniq.confirm_delete_harmoniq_agent_views",
        "documentation": {}
    },
    {
        "label": "HarmoniqView_Create",
        "kind": 6,
        "importPath": "apps.harmoniq.views.harmoniq.create_harmoniq_agent_views",
        "description": "apps.harmoniq.views.harmoniq.create_harmoniq_agent_views",
        "peekOfCode": "class HarmoniqView_Create(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['organizations'] = Organization.objects.filter(users__in=[self.request.user])\n        context['llm_models'] = LLMCore.objects.filter(organization__in=context['organizations'])\n        context['harmoniq_deities'] = HARMONIQ_DEITIES\n        return context\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - ADD_HARMONIQ_AGENTS",
        "detail": "apps.harmoniq.views.harmoniq.create_harmoniq_agent_views",
        "documentation": {}
    },
    {
        "label": "HarmoniqView_List",
        "kind": 6,
        "importPath": "apps.harmoniq.views.harmoniq.list_harmoniq_agents_views",
        "description": "apps.harmoniq.views.harmoniq.list_harmoniq_agents_views",
        "peekOfCode": "class HarmoniqView_List(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_HARMONIQ_AGENTS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_HARMONIQ_AGENTS):\n            messages.error(self.request, \"You do not have permission to list Harmoniq Agents.\")\n            return context\n            ##############################",
        "detail": "apps.harmoniq.views.harmoniq.list_harmoniq_agents_views",
        "documentation": {}
    },
    {
        "label": "HarmoniqView_Update",
        "kind": 6,
        "importPath": "apps.harmoniq.views.harmoniq.update_harmoniq_agent_views",
        "description": "apps.harmoniq.views.harmoniq.update_harmoniq_agent_views",
        "peekOfCode": "class HarmoniqView_Update(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        harmoniq_agent = get_object_or_404(Harmoniq, id=self.kwargs['pk'])\n        context['harmoniq_agent'] = harmoniq_agent\n        context['organizations'] = Organization.objects.filter(users__in=[self.request.user])\n        context['llm_models'] = LLMCore.objects.filter(organization__in=context['organizations'])\n        context['harmoniq_deities'] = HARMONIQ_DEITIES\n        return context\n    def post(self, request, *args, **kwargs):",
        "detail": "apps.harmoniq.views.harmoniq.update_harmoniq_agent_views",
        "documentation": {}
    },
    {
        "label": "HarmoniqView_Use",
        "kind": 6,
        "importPath": "apps.harmoniq.views.harmoniq.use_harmoniq_agent_views",
        "description": "apps.harmoniq.views.harmoniq.use_harmoniq_agent_views",
        "peekOfCode": "class HarmoniqView_Use(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - CHAT_WITH_HARMONIQ_AGENTS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.CHAT_WITH_HARMONIQ_AGENTS):\n            messages.error(self.request, \"You do not have permission to chat with Harmoniq Agents.\")\n            return context\n        ##############################",
        "detail": "apps.harmoniq.views.harmoniq.use_harmoniq_agent_views",
        "documentation": {}
    },
    {
        "label": "HarmoniqCommunicationView",
        "kind": 6,
        "importPath": "apps.harmoniq.views.harmoniq.use_harmoniq_agent_views",
        "description": "apps.harmoniq.views.harmoniq.use_harmoniq_agent_views",
        "peekOfCode": "class HarmoniqCommunicationView(View):\n    @csrf_exempt\n    def post(self, request, *args, **kwargs):\n        try:\n            data = request.POST\n            agent_id = data.get('agentPicker')\n            msg = data.get('messageInput')\n            if not agent_id or not msg:\n                return JsonResponse({'error': 'Agent ID or message is missing'}, status=400)\n            harmoniq_agent = Harmoniq.objects.get(id=agent_id)",
        "detail": "apps.harmoniq.views.harmoniq.use_harmoniq_agent_views",
        "documentation": {}
    },
    {
        "label": "HarmoniqView_TestInternal",
        "kind": 6,
        "importPath": "apps.harmoniq.views.internal.internal_test_harmoniq_views",
        "description": "apps.harmoniq.views.internal.internal_test_harmoniq_views",
        "peekOfCode": "class HarmoniqView_TestInternal(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context",
        "detail": "apps.harmoniq.views.internal.internal_test_harmoniq_views",
        "documentation": {}
    },
    {
        "label": "HarmoniqConfig",
        "kind": 6,
        "importPath": "apps.harmoniq.apps",
        "description": "apps.harmoniq.apps",
        "peekOfCode": "class HarmoniqConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.harmoniq'",
        "detail": "apps.harmoniq.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.harmoniq.urls",
        "description": "apps.harmoniq.urls",
        "peekOfCode": "app_name = 'harmoniq'\nurlpatterns = [\n    path(\"use/\", HarmoniqView_Use.as_view(\n        template_name=\"harmoniq/use_harmoniq_agent.html\"), name=\"use\"),\n    path(\"list/\", HarmoniqView_List.as_view(\n        template_name=\"harmoniq/list_harmoniq_agents.html\"), name=\"list\"),\n    path(\"create/\", HarmoniqView_Create.as_view(\n        template_name=\"harmoniq/create_harmoniq_agent.html\"), name=\"create\"),\n    path(\"update/<int:pk>/\", HarmoniqView_Update.as_view(\n        template_name=\"harmoniq/update_harmoniq_agent.html\"), name=\"update\"),",
        "detail": "apps.harmoniq.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.harmoniq.urls",
        "description": "apps.harmoniq.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"use/\", HarmoniqView_Use.as_view(\n        template_name=\"harmoniq/use_harmoniq_agent.html\"), name=\"use\"),\n    path(\"list/\", HarmoniqView_List.as_view(\n        template_name=\"harmoniq/list_harmoniq_agents.html\"), name=\"list\"),\n    path(\"create/\", HarmoniqView_Create.as_view(\n        template_name=\"harmoniq/create_harmoniq_agent.html\"), name=\"create\"),\n    path(\"update/<int:pk>/\", HarmoniqView_Update.as_view(\n        template_name=\"harmoniq/update_harmoniq_agent.html\"), name=\"update\"),\n    path(\"delete/<int:pk>/\", HarmoniqView_ConfirmDelete.as_view(",
        "detail": "apps.harmoniq.urls",
        "documentation": {}
    },
    {
        "label": "fixture_landing_init",
        "kind": 2,
        "importPath": "apps.landing.tests.conftest",
        "description": "apps.landing.tests.conftest",
        "peekOfCode": "def fixture_landing_init():\n    return True",
        "detail": "apps.landing.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_landing_test_forms",
        "kind": 2,
        "importPath": "apps.landing.tests.test_forms",
        "description": "apps.landing.tests.test_forms",
        "peekOfCode": "def test_init_landing_test_forms():\n    assert True",
        "detail": "apps.landing.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_landing_test_models",
        "kind": 2,
        "importPath": "apps.landing.tests.test_models",
        "description": "apps.landing.tests.test_models",
        "peekOfCode": "def test_init_landing_test_models():\n    assert True",
        "detail": "apps.landing.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_landing_test_utils",
        "kind": 2,
        "importPath": "apps.landing.tests.test_utils",
        "description": "apps.landing.tests.test_utils",
        "peekOfCode": "def test_init_landing_test_utils():\n    assert True",
        "detail": "apps.landing.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_landing_test_views",
        "kind": 2,
        "importPath": "apps.landing.tests.test_views",
        "description": "apps.landing.tests.test_views",
        "peekOfCode": "def test_init_landing_test_views():\n    assert True",
        "detail": "apps.landing.tests.test_views",
        "documentation": {}
    },
    {
        "label": "LandingView_ContactFormSubmit",
        "kind": 6,
        "importPath": "apps.landing.views.contact_form_submit_views",
        "description": "apps.landing.views.contact_form_submit_views",
        "peekOfCode": "class LandingView_ContactFormSubmit(TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context.update({\n            \"layout\": \"blank\", \"layout_path\": TemplateHelper.set_layout(\"layout_blank.html\", context),\n            \"display_customizer\": False,})\n        TemplateHelper.map_context(context)\n        return context\n    def post(self, request, *args, **kwargs):\n        full_name = request.POST['fullname']",
        "detail": "apps.landing.views.contact_form_submit_views",
        "documentation": {}
    },
    {
        "label": "LandingView_Endeavours",
        "kind": 6,
        "importPath": "apps.landing.views.endeavours_views",
        "description": "apps.landing.views.endeavours_views",
        "peekOfCode": "class LandingView_Endeavours(TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context.update({\n            \"layout\": \"blank\", \"layout_path\": TemplateHelper.set_layout(\"layout_blank.html\", context),\n            \"display_customizer\": False})\n        TemplateHelper.map_context(context)\n        return context",
        "detail": "apps.landing.views.endeavours_views",
        "documentation": {}
    },
    {
        "label": "LandingView_FAQ",
        "kind": 6,
        "importPath": "apps.landing.views.faq_views",
        "description": "apps.landing.views.faq_views",
        "peekOfCode": "class LandingView_FAQ(TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context.update({\n            \"layout\": \"blank\", \"layout_path\": TemplateHelper.set_layout(\"layout_blank.html\", context),\n            \"display_customizer\": False})\n        TemplateHelper.map_context(context)\n        return context",
        "detail": "apps.landing.views.faq_views",
        "documentation": {}
    },
    {
        "label": "LandingView_IntegrationToOrganizations",
        "kind": 6,
        "importPath": "apps.landing.views.integration_to_organizations_views",
        "description": "apps.landing.views.integration_to_organizations_views",
        "peekOfCode": "class LandingView_IntegrationToOrganizations(TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context.update({\n            \"layout\": \"blank\", \"layout_path\": TemplateHelper.set_layout(\"layout_blank.html\", context),\n            \"display_customizer\": False})\n        TemplateHelper.map_context(context)\n        return context",
        "detail": "apps.landing.views.integration_to_organizations_views",
        "documentation": {}
    },
    {
        "label": "LandingView_Index",
        "kind": 6,
        "importPath": "apps.landing.views.landing_page_views",
        "description": "apps.landing.views.landing_page_views",
        "peekOfCode": "class LandingView_Index(TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context.update({\n            \"layout\": \"blank\", \"layout_path\": TemplateHelper.set_layout(\"layout_blank.html\", context),\n            \"display_customizer\": False})\n        TemplateHelper.map_context(context)\n        return context",
        "detail": "apps.landing.views.landing_page_views",
        "documentation": {}
    },
    {
        "label": "LandingView_AdminNotAccredited",
        "kind": 6,
        "importPath": "apps.landing.views.not_accredited_admin_views",
        "description": "apps.landing.views.not_accredited_admin_views",
        "peekOfCode": "class LandingView_AdminNotAccredited(TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context.update({\n            \"layout\": \"blank\", \"layout_path\": TemplateHelper.set_layout(\"layout_blank.html\", context),\n            \"display_customizer\": False})\n        TemplateHelper.map_context(context)\n        return context",
        "detail": "apps.landing.views.not_accredited_admin_views",
        "documentation": {}
    },
    {
        "label": "LandingConfig",
        "kind": 6,
        "importPath": "apps.landing.apps",
        "description": "apps.landing.apps",
        "peekOfCode": "class LandingConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.landing'",
        "detail": "apps.landing.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.landing.urls",
        "description": "apps.landing.urls",
        "peekOfCode": "app_name = \"landing\"\nurlpatterns = [\n    path(\"\", LandingView_Index.as_view(template_name=\"landing/index.html\"), name=\"index\"),\n    path('contact-form-submit/', LandingView_ContactFormSubmit.as_view(template_name=\"landing/contact_form_submitted.html\"),\n         name='contact_form_submit'),\n    path('faq/', LandingView_FAQ.as_view(template_name=\"landing/faq.html\"), name=\"faq\"),\n    path('not_accredited/', LandingView_AdminNotAccredited.as_view(template_name=\"landing/not_accredited_admin.html\"),\n         name='not_accredited'),\n    path('bimod_endeavours/', LandingView_Endeavours.as_view(template_name=\"landing/bimod_endeavours.html\"),\n         name='bimod_endeavours'),",
        "detail": "apps.landing.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.landing.urls",
        "description": "apps.landing.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", LandingView_Index.as_view(template_name=\"landing/index.html\"), name=\"index\"),\n    path('contact-form-submit/', LandingView_ContactFormSubmit.as_view(template_name=\"landing/contact_form_submitted.html\"),\n         name='contact_form_submit'),\n    path('faq/', LandingView_FAQ.as_view(template_name=\"landing/faq.html\"), name=\"faq\"),\n    path('not_accredited/', LandingView_AdminNotAccredited.as_view(template_name=\"landing/not_accredited_admin.html\"),\n         name='not_accredited'),\n    path('bimod_endeavours/', LandingView_Endeavours.as_view(template_name=\"landing/bimod_endeavours.html\"),\n         name='bimod_endeavours'),\n    path('integration_to_organizations/',",
        "detail": "apps.landing.urls",
        "documentation": {}
    },
    {
        "label": "ExpertNetworkAdmin",
        "kind": 6,
        "importPath": "apps.leanmod.admin.expert_network.expert_network_admin",
        "description": "apps.leanmod.admin.expert_network.expert_network_admin",
        "peekOfCode": "class ExpertNetworkAdmin(admin.ModelAdmin):\n    list_display = EXPERT_NETWORK_ADMIN_LIST\n    list_filter = EXPERT_NETWORK_ADMIN_FILTER\n    search_fields = EXPERT_NETWORK_ADMIN_SEARCH\n    date_hierarchy = \"created_at\"\n    ordering = [\"-created_at\"]",
        "detail": "apps.leanmod.admin.expert_network.expert_network_admin",
        "documentation": {}
    },
    {
        "label": "ExpertNetworkAssistantReferenceAdmin",
        "kind": 6,
        "importPath": "apps.leanmod.admin.expert_network.expert_network_reference_admin",
        "description": "apps.leanmod.admin.expert_network.expert_network_reference_admin",
        "peekOfCode": "class ExpertNetworkAssistantReferenceAdmin(admin.ModelAdmin):\n    list_display = EXPERT_NETWORK_REFERENCE_ADMIN_LIST\n    list_filter = EXPERT_NETWORK_REFERENCE_ADMIN_FILTER\n    search_fields = EXPERT_NETWORK_REFERENCE_ADMIN_SEARCH\n    date_hierarchy = \"created_at\"\n    ordering = [\"-created_at\"]",
        "detail": "apps.leanmod.admin.expert_network.expert_network_reference_admin",
        "documentation": {}
    },
    {
        "label": "LeanAssistantAdmin",
        "kind": 6,
        "importPath": "apps.leanmod.admin.lean_assistant.lean_assistant_admin",
        "description": "apps.leanmod.admin.lean_assistant.lean_assistant_admin",
        "peekOfCode": "class LeanAssistantAdmin(admin.ModelAdmin):\n    list_display = LEAN_ASSISTANT_ADMIN_LIST\n    list_filter = LEAN_ASSISTANT_ADMIN_FILTER\n    search_fields = LEAN_ASSISTANT_ADMIN_SEARCH\n    date_hierarchy = \"created_at\"\n    ordering = [\"-created_at\"]",
        "detail": "apps.leanmod.admin.lean_assistant.lean_assistant_admin",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.leanmod.migrations.0001_initial",
        "description": "apps.leanmod.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='ExpertNetworkAssistantReference',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "apps.leanmod.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.leanmod.migrations.0002_initial",
        "description": "apps.leanmod.migrations.0002_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('assistants', '0003_initial'),\n        ('leanmod', '0001_initial'),\n        ('llm_core', '0001_initial'),\n        ('organization', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [",
        "detail": "apps.leanmod.migrations.0002_initial",
        "documentation": {}
    },
    {
        "label": "ExpertNetwork",
        "kind": 6,
        "importPath": "apps.leanmod.models.expert_network.expert_network_models",
        "description": "apps.leanmod.models.expert_network.expert_network_models",
        "peekOfCode": "class ExpertNetwork(models.Model):\n    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE,\n                                     related_name='expert_networks', null=True, blank=True)\n    name = models.CharField(max_length=255)\n    meta_description = models.TextField(default=\"\", blank=True)\n    created_by_user = models.ForeignKey(\"auth.User\", on_delete=models.CASCADE,\n                                        related_name='expert_networks_created_by_user')\n    last_updated_by_user = models.ForeignKey(\"auth.User\", on_delete=models.CASCADE,\n                                             related_name='expert_networks_updated_by_user')\n    created_at = models.DateTimeField(auto_now_add=True)",
        "detail": "apps.leanmod.models.expert_network.expert_network_models",
        "documentation": {}
    },
    {
        "label": "ExpertNetworkAssistantReference",
        "kind": 6,
        "importPath": "apps.leanmod.models.expert_network.expert_network_reference_models",
        "description": "apps.leanmod.models.expert_network.expert_network_reference_models",
        "peekOfCode": "class ExpertNetworkAssistantReference(models.Model):\n    network = models.ForeignKey(\"ExpertNetwork\", on_delete=models.CASCADE, related_name='assistant_references',\n                                null=True, blank=True)\n    assistant = models.ForeignKey(\"assistants.Assistant\", on_delete=models.CASCADE)\n    context_instructions = models.TextField(default=\"\", blank=True)\n    created_by_user = models.ForeignKey(\"auth.User\", on_delete=models.CASCADE,\n                                        related_name='expert_network_assistant_references_created_by_user')\n    last_updated_by_user = models.ForeignKey(\"auth.User\", on_delete=models.CASCADE,\n                                             related_name='expert_network_assistant_references_updated_by_user')\n    created_at = models.DateTimeField(auto_now_add=True)",
        "detail": "apps.leanmod.models.expert_network.expert_network_reference_models",
        "documentation": {}
    },
    {
        "label": "LeanAssistant",
        "kind": 6,
        "importPath": "apps.leanmod.models.lean_assistant.lean_assistant_models",
        "description": "apps.leanmod.models.lean_assistant.lean_assistant_models",
        "peekOfCode": "class LeanAssistant(models.Model):\n    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE,\n                                     related_name='lean_assistants')\n    llm_model = models.ForeignKey('llm_core.LLMCore', on_delete=models.CASCADE, related_name='lean_assistants')\n    name = models.CharField(max_length=255)\n    instructions = models.TextField(default=\"\", blank=True)\n    lean_assistant_image_save_path = 'lean_assistant_images/%Y/%m/%d/'\n    lean_assistant_image = models.ImageField(upload_to=lean_assistant_image_save_path, blank=True, max_length=1000,\n                                             null=True)\n    created_by_user = models.ForeignKey(\"auth.User\", on_delete=models.CASCADE,",
        "detail": "apps.leanmod.models.lean_assistant.lean_assistant_models",
        "documentation": {}
    },
    {
        "label": "fixture_leanmod_init",
        "kind": 2,
        "importPath": "apps.leanmod.tests.conftest",
        "description": "apps.leanmod.tests.conftest",
        "peekOfCode": "def fixture_leanmod_init():\n    return True",
        "detail": "apps.leanmod.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_leanmod_test_forms",
        "kind": 2,
        "importPath": "apps.leanmod.tests.test_forms",
        "description": "apps.leanmod.tests.test_forms",
        "peekOfCode": "def test_init_leanmod_test_forms():\n    assert True",
        "detail": "apps.leanmod.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_leanmod_test_models",
        "kind": 2,
        "importPath": "apps.leanmod.tests.test_models",
        "description": "apps.leanmod.tests.test_models",
        "peekOfCode": "def test_init_leanmod_test_models():\n    assert True",
        "detail": "apps.leanmod.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_leanmod_test_utils",
        "kind": 2,
        "importPath": "apps.leanmod.tests.test_utils",
        "description": "apps.leanmod.tests.test_utils",
        "peekOfCode": "def test_init_leanmod_test_utils():\n    assert True",
        "detail": "apps.leanmod.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_leanmod_test_views",
        "kind": 2,
        "importPath": "apps.leanmod.tests.test_views",
        "description": "apps.leanmod.tests.test_views",
        "peekOfCode": "def test_init_leanmod_test_views():\n    assert True",
        "detail": "apps.leanmod.tests.test_views",
        "documentation": {}
    },
    {
        "label": "EXPERT_NETWORK_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.leanmod.utils.constant_utils",
        "description": "apps.leanmod.utils.constant_utils",
        "peekOfCode": "EXPERT_NETWORK_ADMIN_LIST = (\n    \"organization\", \"name\", \"meta_description\", \"created_by_user\", \"last_updated_by_user\", \"created_at\", \"updated_at\"\n)\nEXPERT_NETWORK_ADMIN_FILTER = (\n    \"organization\", \"name\", \"meta_description\", \"created_by_user\", \"last_updated_by_user\", \"created_at\", \"updated_at\"\n)\nEXPERT_NETWORK_ADMIN_SEARCH = (\n    \"organization\", \"name\", \"meta_description\", \"created_by_user\", \"last_updated_by_user\", \"created_at\", \"updated_at\"\n)\nEXPERT_NETWORK_REFERENCE_ADMIN_LIST = (",
        "detail": "apps.leanmod.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "EXPERT_NETWORK_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.leanmod.utils.constant_utils",
        "description": "apps.leanmod.utils.constant_utils",
        "peekOfCode": "EXPERT_NETWORK_ADMIN_FILTER = (\n    \"organization\", \"name\", \"meta_description\", \"created_by_user\", \"last_updated_by_user\", \"created_at\", \"updated_at\"\n)\nEXPERT_NETWORK_ADMIN_SEARCH = (\n    \"organization\", \"name\", \"meta_description\", \"created_by_user\", \"last_updated_by_user\", \"created_at\", \"updated_at\"\n)\nEXPERT_NETWORK_REFERENCE_ADMIN_LIST = (\n    \"network\", \"assistant\", \"context_instructions\", \"created_by_user\", \"last_updated_by_user\", \"created_at\",\n    \"updated_at\")\nEXPERT_NETWORK_REFERENCE_ADMIN_FILTER = (",
        "detail": "apps.leanmod.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "EXPERT_NETWORK_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.leanmod.utils.constant_utils",
        "description": "apps.leanmod.utils.constant_utils",
        "peekOfCode": "EXPERT_NETWORK_ADMIN_SEARCH = (\n    \"organization\", \"name\", \"meta_description\", \"created_by_user\", \"last_updated_by_user\", \"created_at\", \"updated_at\"\n)\nEXPERT_NETWORK_REFERENCE_ADMIN_LIST = (\n    \"network\", \"assistant\", \"context_instructions\", \"created_by_user\", \"last_updated_by_user\", \"created_at\",\n    \"updated_at\")\nEXPERT_NETWORK_REFERENCE_ADMIN_FILTER = (\n    \"network\", \"assistant\", \"context_instructions\", \"created_by_user\", \"last_updated_by_user\", \"created_at\",\n    \"updated_at\")\nEXPERT_NETWORK_REFERENCE_ADMIN_SEARCH = (",
        "detail": "apps.leanmod.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "EXPERT_NETWORK_REFERENCE_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.leanmod.utils.constant_utils",
        "description": "apps.leanmod.utils.constant_utils",
        "peekOfCode": "EXPERT_NETWORK_REFERENCE_ADMIN_LIST = (\n    \"network\", \"assistant\", \"context_instructions\", \"created_by_user\", \"last_updated_by_user\", \"created_at\",\n    \"updated_at\")\nEXPERT_NETWORK_REFERENCE_ADMIN_FILTER = (\n    \"network\", \"assistant\", \"context_instructions\", \"created_by_user\", \"last_updated_by_user\", \"created_at\",\n    \"updated_at\")\nEXPERT_NETWORK_REFERENCE_ADMIN_SEARCH = (\n    \"network\", \"assistant\", \"context_instructions\", \"created_by_user\", \"last_updated_by_user\", \"created_at\",\n    \"updated_at\")\nLEAN_ASSISTANT_ADMIN_LIST = (",
        "detail": "apps.leanmod.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "EXPERT_NETWORK_REFERENCE_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.leanmod.utils.constant_utils",
        "description": "apps.leanmod.utils.constant_utils",
        "peekOfCode": "EXPERT_NETWORK_REFERENCE_ADMIN_FILTER = (\n    \"network\", \"assistant\", \"context_instructions\", \"created_by_user\", \"last_updated_by_user\", \"created_at\",\n    \"updated_at\")\nEXPERT_NETWORK_REFERENCE_ADMIN_SEARCH = (\n    \"network\", \"assistant\", \"context_instructions\", \"created_by_user\", \"last_updated_by_user\", \"created_at\",\n    \"updated_at\")\nLEAN_ASSISTANT_ADMIN_LIST = (\n    \"organization\", \"llm_model\", \"name\",\n    \"created_by_user\", \"last_updated_by_user\", \"created_at\", \"updated_at\")\nLEAN_ASSISTANT_ADMIN_FILTER = (",
        "detail": "apps.leanmod.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "EXPERT_NETWORK_REFERENCE_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.leanmod.utils.constant_utils",
        "description": "apps.leanmod.utils.constant_utils",
        "peekOfCode": "EXPERT_NETWORK_REFERENCE_ADMIN_SEARCH = (\n    \"network\", \"assistant\", \"context_instructions\", \"created_by_user\", \"last_updated_by_user\", \"created_at\",\n    \"updated_at\")\nLEAN_ASSISTANT_ADMIN_LIST = (\n    \"organization\", \"llm_model\", \"name\",\n    \"created_by_user\", \"last_updated_by_user\", \"created_at\", \"updated_at\")\nLEAN_ASSISTANT_ADMIN_FILTER = (\n    \"organization\", \"llm_model\", \"name\",\n    \"created_by_user\", \"last_updated_by_user\", \"created_at\", \"updated_at\")\nLEAN_ASSISTANT_ADMIN_SEARCH = (",
        "detail": "apps.leanmod.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "LEAN_ASSISTANT_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.leanmod.utils.constant_utils",
        "description": "apps.leanmod.utils.constant_utils",
        "peekOfCode": "LEAN_ASSISTANT_ADMIN_LIST = (\n    \"organization\", \"llm_model\", \"name\",\n    \"created_by_user\", \"last_updated_by_user\", \"created_at\", \"updated_at\")\nLEAN_ASSISTANT_ADMIN_FILTER = (\n    \"organization\", \"llm_model\", \"name\",\n    \"created_by_user\", \"last_updated_by_user\", \"created_at\", \"updated_at\")\nLEAN_ASSISTANT_ADMIN_SEARCH = (\n    \"organization\", \"llm_model\", \"name\",\n    \"created_by_user\", \"last_updated_by_user\", \"created_at\", \"updated_at\")\nRANDOM_NAME_SUFFIX_MIN_VALUE = 1_000_000_000",
        "detail": "apps.leanmod.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "LEAN_ASSISTANT_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.leanmod.utils.constant_utils",
        "description": "apps.leanmod.utils.constant_utils",
        "peekOfCode": "LEAN_ASSISTANT_ADMIN_FILTER = (\n    \"organization\", \"llm_model\", \"name\",\n    \"created_by_user\", \"last_updated_by_user\", \"created_at\", \"updated_at\")\nLEAN_ASSISTANT_ADMIN_SEARCH = (\n    \"organization\", \"llm_model\", \"name\",\n    \"created_by_user\", \"last_updated_by_user\", \"created_at\", \"updated_at\")\nRANDOM_NAME_SUFFIX_MIN_VALUE = 1_000_000_000\nRANDOM_NAME_SUFFIX_MAX_VALUE = 9_999_999_999",
        "detail": "apps.leanmod.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "LEAN_ASSISTANT_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.leanmod.utils.constant_utils",
        "description": "apps.leanmod.utils.constant_utils",
        "peekOfCode": "LEAN_ASSISTANT_ADMIN_SEARCH = (\n    \"organization\", \"llm_model\", \"name\",\n    \"created_by_user\", \"last_updated_by_user\", \"created_at\", \"updated_at\")\nRANDOM_NAME_SUFFIX_MIN_VALUE = 1_000_000_000\nRANDOM_NAME_SUFFIX_MAX_VALUE = 9_999_999_999",
        "detail": "apps.leanmod.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "RANDOM_NAME_SUFFIX_MIN_VALUE",
        "kind": 5,
        "importPath": "apps.leanmod.utils.constant_utils",
        "description": "apps.leanmod.utils.constant_utils",
        "peekOfCode": "RANDOM_NAME_SUFFIX_MIN_VALUE = 1_000_000_000\nRANDOM_NAME_SUFFIX_MAX_VALUE = 9_999_999_999",
        "detail": "apps.leanmod.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "RANDOM_NAME_SUFFIX_MAX_VALUE",
        "kind": 5,
        "importPath": "apps.leanmod.utils.constant_utils",
        "description": "apps.leanmod.utils.constant_utils",
        "peekOfCode": "RANDOM_NAME_SUFFIX_MAX_VALUE = 9_999_999_999",
        "detail": "apps.leanmod.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "build_randomized_suffix_for_name",
        "kind": 2,
        "importPath": "apps.leanmod.utils.function_utils",
        "description": "apps.leanmod.utils.function_utils",
        "peekOfCode": "def build_randomized_suffix_for_name():\n    from apps.leanmod.utils import RANDOM_NAME_SUFFIX_MIN_VALUE, RANDOM_NAME_SUFFIX_MAX_VALUE\n    return f\"{str(random.randint(RANDOM_NAME_SUFFIX_MIN_VALUE, RANDOM_NAME_SUFFIX_MAX_VALUE))}\"",
        "detail": "apps.leanmod.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "ExpertNetworkView_Create",
        "kind": 6,
        "importPath": "apps.leanmod.views.expert_network.create_expert_network_views",
        "description": "apps.leanmod.views.expert_network.create_expert_network_views",
        "peekOfCode": "class ExpertNetworkView_Create(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        user = self.request.user\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['assistants'] = Assistant.objects.filter(organization__users__in=[user])\n        context['organizations'] = Organization.objects.filter(users__in=[user])\n        return context\n    def post(self, request, *args, **kwargs):\n        user = self.request.user\n        ##############################",
        "detail": "apps.leanmod.views.expert_network.create_expert_network_views",
        "documentation": {}
    },
    {
        "label": "ExpertNetworkView_Delete",
        "kind": 6,
        "importPath": "apps.leanmod.views.expert_network.delete_expert_network_views",
        "description": "apps.leanmod.views.expert_network.delete_expert_network_views",
        "peekOfCode": "class ExpertNetworkView_Delete(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        nw_id = kwargs.get('pk')\n        nw = get_object_or_404(ExpertNetwork, id=nw_id)\n        context['expert_network'] = nw\n        return context\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - DELETE_EXPERT_NETWORKS",
        "detail": "apps.leanmod.views.expert_network.delete_expert_network_views",
        "documentation": {}
    },
    {
        "label": "ExpertNetworkView_List",
        "kind": 6,
        "importPath": "apps.leanmod.views.expert_network.list_expert_networks_views",
        "description": "apps.leanmod.views.expert_network.list_expert_networks_views",
        "peekOfCode": "class ExpertNetworkView_List(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_EXPERT_NETWORKS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_EXPERT_NETWORKS):\n            messages.error(self.request, \"You do not have permission to list Expert Network.\")\n            return context\n        ##############################",
        "detail": "apps.leanmod.views.expert_network.list_expert_networks_views",
        "documentation": {}
    },
    {
        "label": "ExpertNetworkView_Update",
        "kind": 6,
        "importPath": "apps.leanmod.views.expert_network.update_expert_network_views",
        "description": "apps.leanmod.views.expert_network.update_expert_network_views",
        "peekOfCode": "class ExpertNetworkView_Update(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        user = self.request.user\n        nw_id = kwargs.get('pk')\n        nw = ExpertNetwork.objects.get(id=nw_id)\n        agents = Assistant.objects.filter(organization__users__in=[user])\n        agent_refs = nw.assistant_references.all().values('assistant_id', 'assistant__name', 'context_instructions')\n        context['expert_network'] = nw\n        context['assistants'] = agents",
        "detail": "apps.leanmod.views.expert_network.update_expert_network_views",
        "documentation": {}
    },
    {
        "label": "LeanModAssistantView_Create",
        "kind": 6,
        "importPath": "apps.leanmod.views.lean_assistant.create_lean_assistant_views",
        "description": "apps.leanmod.views.lean_assistant.create_lean_assistant_views",
        "peekOfCode": "class LeanModAssistantView_Create(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['organizations'] = Organization.objects.filter(\n            users__in=[self.request.user]\n        )\n        context['llm_models'] = LLMCore.objects.filter(\n            organization__users__in=[self.request.user]\n        )\n        context['expert_networks'] = ExpertNetwork.objects.filter(",
        "detail": "apps.leanmod.views.lean_assistant.create_lean_assistant_views",
        "documentation": {}
    },
    {
        "label": "LeanModAssistantView_Delete",
        "kind": 6,
        "importPath": "apps.leanmod.views.lean_assistant.delete_lean_assistant_views",
        "description": "apps.leanmod.views.lean_assistant.delete_lean_assistant_views",
        "peekOfCode": "class LeanModAssistantView_Delete(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        agent_id = kwargs.get('pk')\n        context['lean_assistant'] = LeanAssistant.objects.get(id=agent_id)\n        return context\n    def post(self, request, *args, **kwargs):\n        agent_id = kwargs.get('pk')\n        ##############################\n        # PERMISSION CHECK FOR - DELETE_LEAN_ASSISTANT",
        "detail": "apps.leanmod.views.lean_assistant.delete_lean_assistant_views",
        "documentation": {}
    },
    {
        "label": "LeanModAssistantView_List",
        "kind": 6,
        "importPath": "apps.leanmod.views.lean_assistant.list_lean_assistants_views",
        "description": "apps.leanmod.views.lean_assistant.list_lean_assistants_views",
        "peekOfCode": "class LeanModAssistantView_List(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_LEAN_ASSISTANT\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_LEAN_ASSISTANT):\n            messages.error(self.request, \"You do not have permission to list LeanMod assistants.\")\n            return context\n        ##############################",
        "detail": "apps.leanmod.views.lean_assistant.list_lean_assistants_views",
        "documentation": {}
    },
    {
        "label": "LeanModAssistantView_Update",
        "kind": 6,
        "importPath": "apps.leanmod.views.lean_assistant.update_lean_assistant_views",
        "description": "apps.leanmod.views.lean_assistant.update_lean_assistant_views",
        "peekOfCode": "class LeanModAssistantView_Update(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        agent_id = kwargs.get('pk')\n        context['lean_assistant'] = LeanAssistant.objects.get(id=agent_id)\n        context['organizations'] = Organization.objects.filter(users__in=[self.request.user])\n        context['llm_models'] = LLMCore.objects.filter(organization__users__in=[self.request.user])\n        context['expert_networks'] = ExpertNetwork.objects.filter(organization__in=context['organizations'])\n        context['selected_expert_networks'] = context['lean_assistant'].expert_networks.all().values_list('id',flat=True)\n        return context",
        "detail": "apps.leanmod.views.lean_assistant.update_lean_assistant_views",
        "documentation": {}
    },
    {
        "label": "LeanmodConfig",
        "kind": 6,
        "importPath": "apps.leanmod.apps",
        "description": "apps.leanmod.apps",
        "peekOfCode": "class LeanmodConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.leanmod'",
        "detail": "apps.leanmod.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.leanmod.urls",
        "description": "apps.leanmod.urls",
        "peekOfCode": "app_name = 'leanmod'\nurlpatterns = [\n    path('create/', LeanModAssistantView_Create.as_view(\n        template_name=\"leanmod/lean_assistant/create_lean_assistant.html\"), name='create'),\n    path('update/<int:pk>/', LeanModAssistantView_Update.as_view(\n        template_name=\"leanmod/lean_assistant/update_lean_assistant.html\"), name='update'),\n    path('delete/<int:pk>/', LeanModAssistantView_Delete.as_view(\n        template_name=\"leanmod/lean_assistant/confirm_delete_lean_assistant.html\"), name='delete'),\n    path('list/', LeanModAssistantView_List.as_view(\n        template_name=\"leanmod/lean_assistant/list_lean_assistants.html\"), name='list'),",
        "detail": "apps.leanmod.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.leanmod.urls",
        "description": "apps.leanmod.urls",
        "peekOfCode": "urlpatterns = [\n    path('create/', LeanModAssistantView_Create.as_view(\n        template_name=\"leanmod/lean_assistant/create_lean_assistant.html\"), name='create'),\n    path('update/<int:pk>/', LeanModAssistantView_Update.as_view(\n        template_name=\"leanmod/lean_assistant/update_lean_assistant.html\"), name='update'),\n    path('delete/<int:pk>/', LeanModAssistantView_Delete.as_view(\n        template_name=\"leanmod/lean_assistant/confirm_delete_lean_assistant.html\"), name='delete'),\n    path('list/', LeanModAssistantView_List.as_view(\n        template_name=\"leanmod/lean_assistant/list_lean_assistants.html\"), name='list'),\n    path('create_expert_network/', ExpertNetworkView_Create.as_view(",
        "detail": "apps.leanmod.urls",
        "documentation": {}
    },
    {
        "label": "LLMCoreAdmin",
        "kind": 6,
        "importPath": "apps.llm_core.admin.llm_core_admin",
        "description": "apps.llm_core.admin.llm_core_admin",
        "peekOfCode": "class LLMCoreAdmin(admin.ModelAdmin):\n    list_display = LLM_CORE_ADMIN_LIST\n    list_filter = LLM_CORE_ADMIN_FILTER\n    search_fields = LLM_CORE_ADMIN_SEARCH\n    date_hierarchy = \"created_at\"\n    ordering = [\"-created_at\"]",
        "detail": "apps.llm_core.admin.llm_core_admin",
        "documentation": {}
    },
    {
        "label": "LLMCoreForm",
        "kind": 6,
        "importPath": "apps.llm_core.forms.llm_core_forms",
        "description": "apps.llm_core.forms.llm_core_forms",
        "peekOfCode": "class LLMCoreForm(forms.ModelForm):\n    class Meta:\n        model = LLMCore\n        fields = [\n            'nickname', 'description', 'provider', 'api_key', 'model_name', 'temperature', 'maximum_tokens',\n            'stop_sequences', 'top_p', 'frequency_penalty', 'presence_penalty', 'organization',\n        ]\n    def clean_model_name(self):\n        return self.cleaned_data.get('model_name')",
        "detail": "apps.llm_core.forms.llm_core_forms",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.llm_core.migrations.0001_initial",
        "description": "apps.llm_core.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='LLMCore',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "apps.llm_core.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.llm_core.migrations.0002_initial",
        "description": "apps.llm_core.migrations.0002_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('llm_core', '0001_initial'),\n        ('organization', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='llmcore',\n            name='organization',",
        "detail": "apps.llm_core.migrations.0002_initial",
        "documentation": {}
    },
    {
        "label": "LLMCore",
        "kind": 6,
        "importPath": "apps.llm_core.models.llm_core_models",
        "description": "apps.llm_core.models.llm_core_models",
        "peekOfCode": "class LLMCore(models.Model):\n    nickname = models.CharField(max_length=255)\n    description = models.TextField(default=\"\", blank=True)\n    provider = models.CharField(max_length=2, choices=LARGE_LANGUAGE_MODEL_PROVIDERS)\n    api_key = models.CharField(max_length=8192)\n    model_name = models.CharField(max_length=1000)\n    temperature = models.DecimalField(max_digits=5, decimal_places=2, default=0.50)\n    maximum_tokens = models.IntegerField(default=4094)\n    stop_sequences = models.TextField(default=\"\", blank=True)\n    top_p = models.DecimalField(max_digits=5, decimal_places=2, default=1.0)",
        "detail": "apps.llm_core.models.llm_core_models",
        "documentation": {}
    },
    {
        "label": "divide",
        "kind": 2,
        "importPath": "apps.llm_core.templatetags.divide",
        "description": "apps.llm_core.templatetags.divide",
        "peekOfCode": "def divide(value, arg):\n    return value / arg",
        "detail": "apps.llm_core.templatetags.divide",
        "documentation": {}
    },
    {
        "label": "register",
        "kind": 5,
        "importPath": "apps.llm_core.templatetags.divide",
        "description": "apps.llm_core.templatetags.divide",
        "peekOfCode": "register = template.Library()\n@register.filter\ndef divide(value, arg):\n    return value / arg",
        "detail": "apps.llm_core.templatetags.divide",
        "documentation": {}
    },
    {
        "label": "field_name_to_label",
        "kind": 2,
        "importPath": "apps.llm_core.templatetags.field_to_label",
        "description": "apps.llm_core.templatetags.field_to_label",
        "peekOfCode": "def field_name_to_label(value):\n    value = value.replace('_', ' ')\n    return value.title()",
        "detail": "apps.llm_core.templatetags.field_to_label",
        "documentation": {}
    },
    {
        "label": "register",
        "kind": 5,
        "importPath": "apps.llm_core.templatetags.field_to_label",
        "description": "apps.llm_core.templatetags.field_to_label",
        "peekOfCode": "register = template.Library()\n@register.filter()\ndef field_name_to_label(value):\n    value = value.replace('_', ' ')\n    return value.title()",
        "detail": "apps.llm_core.templatetags.field_to_label",
        "documentation": {}
    },
    {
        "label": "multiply",
        "kind": 2,
        "importPath": "apps.llm_core.templatetags.multiply",
        "description": "apps.llm_core.templatetags.multiply",
        "peekOfCode": "def multiply(value, arg):\n    return value * arg",
        "detail": "apps.llm_core.templatetags.multiply",
        "documentation": {}
    },
    {
        "label": "register",
        "kind": 5,
        "importPath": "apps.llm_core.templatetags.multiply",
        "description": "apps.llm_core.templatetags.multiply",
        "peekOfCode": "register = template.Library()\n@register.filter\ndef multiply(value, arg):\n    return value * arg",
        "detail": "apps.llm_core.templatetags.multiply",
        "documentation": {}
    },
    {
        "label": "fixture_llm_core_init",
        "kind": 2,
        "importPath": "apps.llm_core.tests.conftest",
        "description": "apps.llm_core.tests.conftest",
        "peekOfCode": "def fixture_llm_core_init():\n    return True",
        "detail": "apps.llm_core.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_llm_core_test_forms",
        "kind": 2,
        "importPath": "apps.llm_core.tests.test_forms",
        "description": "apps.llm_core.tests.test_forms",
        "peekOfCode": "def test_init_llm_core_test_forms():\n    assert True",
        "detail": "apps.llm_core.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_llm_core_test_models",
        "kind": 2,
        "importPath": "apps.llm_core.tests.test_models",
        "description": "apps.llm_core.tests.test_models",
        "peekOfCode": "def test_init_llm_core_test_models():\n    assert True",
        "detail": "apps.llm_core.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_llm_core_test_utils",
        "kind": 2,
        "importPath": "apps.llm_core.tests.test_utils",
        "description": "apps.llm_core.tests.test_utils",
        "peekOfCode": "def test_init_llm_core_test_utils():\n    assert True",
        "detail": "apps.llm_core.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_llm_core_test_views",
        "kind": 2,
        "importPath": "apps.llm_core.tests.test_views",
        "description": "apps.llm_core.tests.test_views",
        "peekOfCode": "def test_init_llm_core_test_views():\n    assert True",
        "detail": "apps.llm_core.tests.test_views",
        "documentation": {}
    },
    {
        "label": "LARGE_LANGUAGE_MODEL_PROVIDERS",
        "kind": 5,
        "importPath": "apps.llm_core.utils.constant_utils",
        "description": "apps.llm_core.utils.constant_utils",
        "peekOfCode": "LARGE_LANGUAGE_MODEL_PROVIDERS = [\n    (\"OA\", \"OpenAI-GPT\"),\n]\nGPT_MODEL_NAMES = [\n    (\"gpt-4o\", \"gpt-4o\"),\n    (\"gpt-4-turbo\", \"gpt-4-turbo\"),\n    (\"gpt-4\", \"gpt-4\"),\n]\nLLM_CORE_ADMIN_LIST = (\"nickname\", \"provider\", \"model_name\", \"temperature\", \"created_at\", \"updated_at\")\nLLM_CORE_ADMIN_FILTER = (\"nickname\", \"provider\", \"model_name\", \"temperature\", \"created_at\", \"updated_at\")",
        "detail": "apps.llm_core.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "GPT_MODEL_NAMES",
        "kind": 5,
        "importPath": "apps.llm_core.utils.constant_utils",
        "description": "apps.llm_core.utils.constant_utils",
        "peekOfCode": "GPT_MODEL_NAMES = [\n    (\"gpt-4o\", \"gpt-4o\"),\n    (\"gpt-4-turbo\", \"gpt-4-turbo\"),\n    (\"gpt-4\", \"gpt-4\"),\n]\nLLM_CORE_ADMIN_LIST = (\"nickname\", \"provider\", \"model_name\", \"temperature\", \"created_at\", \"updated_at\")\nLLM_CORE_ADMIN_FILTER = (\"nickname\", \"provider\", \"model_name\", \"temperature\", \"created_at\", \"updated_at\")\nLLM_CORE_ADMIN_SEARCH = (\"nickname\", \"provider\", \"model_name\", \"temperature\", \"created_at\", \"updated_at\")",
        "detail": "apps.llm_core.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "LLM_CORE_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.llm_core.utils.constant_utils",
        "description": "apps.llm_core.utils.constant_utils",
        "peekOfCode": "LLM_CORE_ADMIN_LIST = (\"nickname\", \"provider\", \"model_name\", \"temperature\", \"created_at\", \"updated_at\")\nLLM_CORE_ADMIN_FILTER = (\"nickname\", \"provider\", \"model_name\", \"temperature\", \"created_at\", \"updated_at\")\nLLM_CORE_ADMIN_SEARCH = (\"nickname\", \"provider\", \"model_name\", \"temperature\", \"created_at\", \"updated_at\")",
        "detail": "apps.llm_core.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "LLM_CORE_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.llm_core.utils.constant_utils",
        "description": "apps.llm_core.utils.constant_utils",
        "peekOfCode": "LLM_CORE_ADMIN_FILTER = (\"nickname\", \"provider\", \"model_name\", \"temperature\", \"created_at\", \"updated_at\")\nLLM_CORE_ADMIN_SEARCH = (\"nickname\", \"provider\", \"model_name\", \"temperature\", \"created_at\", \"updated_at\")",
        "detail": "apps.llm_core.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "LLM_CORE_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.llm_core.utils.constant_utils",
        "description": "apps.llm_core.utils.constant_utils",
        "peekOfCode": "LLM_CORE_ADMIN_SEARCH = (\"nickname\", \"provider\", \"model_name\", \"temperature\", \"created_at\", \"updated_at\")",
        "detail": "apps.llm_core.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "LLMView_Create",
        "kind": 6,
        "importPath": "apps.llm_core.views.create_llm_core_views",
        "description": "apps.llm_core.views.create_llm_core_views",
        "peekOfCode": "class LLMView_Create(TemplateView, LoginRequiredMixin):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        user = self.request.user\n        context['user'] = user\n        context['organizations'] = user.organizations.all()\n        context['provider_choices'] = LARGE_LANGUAGE_MODEL_PROVIDERS\n        context['model_name_choices'] = GPT_MODEL_NAMES\n        tuned_llms = FineTunedModelConnection.objects.filter(organization__in=context['organizations']).all()\n        for model in tuned_llms:",
        "detail": "apps.llm_core.views.create_llm_core_views",
        "documentation": {}
    },
    {
        "label": "LLMView_Delete",
        "kind": 6,
        "importPath": "apps.llm_core.views.delete_llm_core_views",
        "description": "apps.llm_core.views.delete_llm_core_views",
        "peekOfCode": "class LLMView_Delete(DeleteView, LoginRequiredMixin):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        user = self.request.user\n        context['user'] = user\n        return context\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - UPDATE_LLM_CORES\n        if not UserPermissionManager.is_authorized(user=self.request.user,",
        "detail": "apps.llm_core.views.delete_llm_core_views",
        "documentation": {}
    },
    {
        "label": "LLMView_List",
        "kind": 6,
        "importPath": "apps.llm_core.views.list_llm_cores_views",
        "description": "apps.llm_core.views.list_llm_cores_views",
        "peekOfCode": "class LLMView_List(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_LLM_CORES\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_LLM_CORES):\n            messages.error(self.request, \"You do not have permission to list LLM Cores.\")\n            return context\n        ##############################",
        "detail": "apps.llm_core.views.list_llm_cores_views",
        "documentation": {}
    },
    {
        "label": "LLMView_Update",
        "kind": 6,
        "importPath": "apps.llm_core.views.update_llm_core_views",
        "description": "apps.llm_core.views.update_llm_core_views",
        "peekOfCode": "class LLMView_Update(TemplateView, LoginRequiredMixin):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        llm_core = LLMCore.objects.get(id=kwargs['pk'])\n        context_user = self.request.user\n        context['llm_core'] = llm_core\n        context['organizations'] = context_user.organizations.all()\n        context['provider_choices'] = LARGE_LANGUAGE_MODEL_PROVIDERS\n        context['model_name_choices'] = GPT_MODEL_NAMES\n        tuned_llms = FineTunedModelConnection.objects.filter(organization__in=context['organizations']).all()",
        "detail": "apps.llm_core.views.update_llm_core_views",
        "documentation": {}
    },
    {
        "label": "LlmCoreConfig",
        "kind": 6,
        "importPath": "apps.llm_core.apps",
        "description": "apps.llm_core.apps",
        "peekOfCode": "class LlmCoreConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.llm_core'",
        "detail": "apps.llm_core.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.llm_core.urls",
        "description": "apps.llm_core.urls",
        "peekOfCode": "app_name = \"llm_core\"\nurlpatterns = [\n    path('create/', LLMView_Create.as_view(template_name=\"llm_core/create_llm_core.html\"),\n         name=\"create\"),\n    path('list/', LLMView_List.as_view(template_name=\"llm_core/list_llm_cores.html\"),\n         name=\"list\"),\n    path('update/<int:pk>/', LLMView_Update.as_view(template_name=\"llm_core/update_llm_core.html\"),\n         name=\"update\"),\n    path('delete/<int:pk>/', LLMView_Delete.as_view(template_name=\"llm_core/llm_core_confirm_delete.html\"),\n         name=\"delete\")",
        "detail": "apps.llm_core.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.llm_core.urls",
        "description": "apps.llm_core.urls",
        "peekOfCode": "urlpatterns = [\n    path('create/', LLMView_Create.as_view(template_name=\"llm_core/create_llm_core.html\"),\n         name=\"create\"),\n    path('list/', LLMView_List.as_view(template_name=\"llm_core/list_llm_cores.html\"),\n         name=\"list\"),\n    path('update/<int:pk>/', LLMView_Update.as_view(template_name=\"llm_core/update_llm_core.html\"),\n         name=\"update\"),\n    path('delete/<int:pk>/', LLMView_Delete.as_view(template_name=\"llm_core/llm_core_confirm_delete.html\"),\n         name=\"delete\")\n]",
        "detail": "apps.llm_core.urls",
        "documentation": {}
    },
    {
        "label": "AutoBalanceTopUpModelAdmin",
        "kind": 6,
        "importPath": "apps.llm_transaction.admin.auto_topup.auto_topup_admin",
        "description": "apps.llm_transaction.admin.auto_topup.auto_topup_admin",
        "peekOfCode": "class AutoBalanceTopUpModelAdmin(admin.ModelAdmin):\n    list_display = AUTO_TOP_UP_ADMIN_LIST\n    ordering = [\"-created_at\"]",
        "detail": "apps.llm_transaction.admin.auto_topup.auto_topup_admin",
        "documentation": {}
    },
    {
        "label": "TransactionInvoiceAdmin",
        "kind": 6,
        "importPath": "apps.llm_transaction.admin.invoice.invoice_admin",
        "description": "apps.llm_transaction.admin.invoice.invoice_admin",
        "peekOfCode": "class TransactionInvoiceAdmin(admin.ModelAdmin):\n    list_display = INVOICE_ADMIN_LIST\n    ordering = [\"-transaction_date\"]\n    date_hierarchy = \"transaction_date\"\n    readonly_fields = [\"transaction_date\"]",
        "detail": "apps.llm_transaction.admin.invoice.invoice_admin",
        "documentation": {}
    },
    {
        "label": "TransactionAdmin",
        "kind": 6,
        "importPath": "apps.llm_transaction.admin.llm_transaction.llm_transaction_admin",
        "description": "apps.llm_transaction.admin.llm_transaction.llm_transaction_admin",
        "peekOfCode": "class TransactionAdmin(admin.ModelAdmin):\n    list_display = TRANSACTION_ADMIN_LIST\n    list_filter = TRANSACTION_ADMIN_FILTER\n    search_fields = TRANSACTION_ADMIN_SEARCH\n    ordering = [\"-created_at\"]\n    def save_model(self, request, obj, form, change):\n        if obj.transaction_context_content:\n            obj.number_of_tokens = process_and_calculate_number_of_billable_tokens(obj.encoding_engine, obj.transaction_context_content)\n            obj.llm_cost = calculate_total_llm_model_costs(obj.model.model_name, obj.number_of_tokens)\n            obj.internal_service_cost = calculate_service_costs_of_platform(obj.llm_cost)",
        "detail": "apps.llm_transaction.admin.llm_transaction.llm_transaction_admin",
        "documentation": {}
    },
    {
        "label": "OrganizationBalanceSnapshotAdmin",
        "kind": 6,
        "importPath": "apps.llm_transaction.admin.snapshot.snapshot_admin",
        "description": "apps.llm_transaction.admin.snapshot.snapshot_admin",
        "peekOfCode": "class OrganizationBalanceSnapshotAdmin(admin.ModelAdmin):\n    list_display = BALANCE_SNAPSHOT_ADMIN_LIST\n    ordering = [\"-created_at\"]\n    date_hierarchy = \"created_at\"",
        "detail": "apps.llm_transaction.admin.snapshot.snapshot_admin",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.llm_transaction.migrations.0001_initial",
        "description": "apps.llm_transaction.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='AutoBalanceTopUpModel',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('on_balance_threshold_trigger', models.BooleanField(default=False)),",
        "detail": "apps.llm_transaction.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.llm_transaction.migrations.0002_initial",
        "description": "apps.llm_transaction.migrations.0002_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('assistants', '0003_initial'),\n        ('llm_core', '0002_initial'),\n        ('llm_transaction', '0001_initial'),\n        ('organization', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [",
        "detail": "apps.llm_transaction.migrations.0002_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.llm_transaction.migrations.0003_alter_transactioninvoice_payment_method",
        "description": "apps.llm_transaction.migrations.0003_alter_transactioninvoice_payment_method",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('llm_transaction', '0002_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='transactioninvoice',\n            name='payment_method',\n            field=models.CharField(choices=[('credit-card', 'Credit Card'), ('internal-transfer', 'Internal Transfer'), ('direct-sales', 'Direct Sales')], default='credit-card', max_length=50),\n        ),",
        "detail": "apps.llm_transaction.migrations.0003_alter_transactioninvoice_payment_method",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.llm_transaction.migrations.0004_alter_llmtransaction_transaction_source",
        "description": "apps.llm_transaction.migrations.0004_alter_llmtransaction_transaction_source",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('llm_transaction', '0003_alter_transactioninvoice_payment_method'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='llmtransaction',\n            name='transaction_source',\n            field=models.CharField(choices=[('app', 'Application'), ('api', 'API'), ('generation', 'Generation'), ('sql-read', 'SQL Read'), ('sql-write', 'SQL Write'), ('store-memory', 'Store Memory'), ('interpret-code', 'Interpret Code'), ('upload-file', 'Upload File'), ('download-file', 'Download File'), ('file-system-commands', 'File System Commands'), ('knowledge-base-search', 'Knowledge Base Search'), ('code-base-search', 'Code Base Search'), ('retrieve-memory', 'Retrieve Memory'), ('ml-model-prediction', 'ML Model Prediction'), ('browsing', 'Browsing'), ('internal-function-execution', 'Internal Function Execution'), ('external-function-execution', 'External Function Execution'), ('internal-api-execution', 'Internal API Execution'), ('external-api-execution', 'External API Execution'), ('internal-script-retrieval', 'Internal Script Retrieval'), ('external-script-retrieval', 'External Script Retrieval'), ('interpret-file', 'Interpret File'), ('interpret-image', 'Interpret Image'), ('scheduled-job-execution', 'Scheduled Job Execution'), ('trigger-job-execution', 'Trigger Job Execution'), ('generate-image', 'Generate Image'), ('modify-image', 'Modify Image'), ('variate-image', 'Variate Image'), ('audio-processing-stt', 'Audio Processing STT'), ('audio-processing-tts', 'Audio Processing TTS'), ('brainstorming', 'Brainstorming')], default='application', max_length=100),\n        ),",
        "detail": "apps.llm_transaction.migrations.0004_alter_llmtransaction_transaction_source",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.llm_transaction.migrations.0005_alter_llmtransaction_transaction_source",
        "description": "apps.llm_transaction.migrations.0005_alter_llmtransaction_transaction_source",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('llm_transaction', '0004_alter_llmtransaction_transaction_source'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='llmtransaction',\n            name='transaction_source',\n            field=models.CharField(choices=[('app', 'Application'), ('api', 'API'), ('generation', 'Generation'), ('sql-read', 'SQL Read'), ('sql-write', 'SQL Write'), ('store-memory', 'Store Memory'), ('interpret-code', 'Interpret Code'), ('upload-file', 'Upload File'), ('download-file', 'Download File'), ('file-system-commands', 'File System Commands'), ('knowledge-base-search', 'Knowledge Base Search'), ('code-base-search', 'Code Base Search'), ('retrieve-memory', 'Retrieve Memory'), ('ml-model-prediction', 'ML Model Prediction'), ('browsing', 'Browsing'), ('internal-function-execution', 'Internal Function Execution'), ('external-function-execution', 'External Function Execution'), ('internal-api-execution', 'Internal API Execution'), ('external-api-execution', 'External API Execution'), ('internal-script-retrieval', 'Internal Script Retrieval'), ('external-script-retrieval', 'External Script Retrieval'), ('interpret-file', 'Interpret File'), ('interpret-image', 'Interpret Image'), ('scheduled-job-execution', 'Scheduled Job Execution'), ('trigger-job-execution', 'Trigger Job Execution'), ('generate-image', 'Generate Image'), ('modify-image', 'Modify Image'), ('variate-image', 'Variate Image'), ('audio-processing-stt', 'Audio Processing STT'), ('audio-processing-tts', 'Audio Processing TTS'), ('brainstorming', 'Brainstorming'), ('generate-video', 'Generate Video')], default='application', max_length=100),\n        ),",
        "detail": "apps.llm_transaction.migrations.0005_alter_llmtransaction_transaction_source",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.llm_transaction.migrations.0006_alter_llmtransaction_transaction_source",
        "description": "apps.llm_transaction.migrations.0006_alter_llmtransaction_transaction_source",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('llm_transaction', '0005_alter_llmtransaction_transaction_source'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='llmtransaction',\n            name='transaction_source',\n            field=models.CharField(choices=[('app', 'Application'), ('api', 'API'), ('generation', 'Generation'), ('sql-read', 'SQL Read'), ('sql-write', 'SQL Write'), ('store-memory', 'Store Memory'), ('interpret-code', 'Interpret Code'), ('reasoning', 'Reasoning'), ('upload-file', 'Upload File'), ('download-file', 'Download File'), ('file-system-commands', 'File System Commands'), ('knowledge-base-search', 'Knowledge Base Search'), ('code-base-search', 'Code Base Search'), ('retrieve-memory', 'Retrieve Memory'), ('ml-model-prediction', 'ML Model Prediction'), ('browsing', 'Browsing'), ('internal-function-execution', 'Internal Function Execution'), ('external-function-execution', 'External Function Execution'), ('internal-api-execution', 'Internal API Execution'), ('external-api-execution', 'External API Execution'), ('internal-script-retrieval', 'Internal Script Retrieval'), ('external-script-retrieval', 'External Script Retrieval'), ('interpret-file', 'Interpret File'), ('interpret-image', 'Interpret Image'), ('scheduled-job-execution', 'Scheduled Job Execution'), ('trigger-job-execution', 'Trigger Job Execution'), ('generate-image', 'Generate Image'), ('modify-image', 'Modify Image'), ('variate-image', 'Variate Image'), ('audio-processing-stt', 'Audio Processing STT'), ('audio-processing-tts', 'Audio Processing TTS'), ('brainstorming', 'Brainstorming'), ('generate-video', 'Generate Video')], default='application', max_length=100),\n        ),",
        "detail": "apps.llm_transaction.migrations.0006_alter_llmtransaction_transaction_source",
        "documentation": {}
    },
    {
        "label": "AutoBalanceTopUpModel",
        "kind": 6,
        "importPath": "apps.llm_transaction.models.auto_topup.auto_topup_models",
        "description": "apps.llm_transaction.models.auto_topup.auto_topup_models",
        "peekOfCode": "class AutoBalanceTopUpModel(models.Model):\n    organization = models.ForeignKey('organization.Organization', on_delete=models.SET_NULL,\n                                     related_name='auto_balance_top_ups',\n                                     null=True)\n    on_balance_threshold_trigger = models.BooleanField(default=False)\n    on_interval_by_days_trigger = models.BooleanField(default=False)\n    balance_lower_trigger_threshold_value = models.DecimalField(max_digits=12, decimal_places=6, null=True, blank=True)\n    addition_on_balance_threshold_trigger = models.DecimalField(max_digits=12, decimal_places=6, null=True, blank=True)\n    regular_by_days_interval = models.IntegerField(null=True, blank=True)\n    addition_on_interval_by_days_trigger = models.DecimalField(max_digits=12, decimal_places=6, null=True, blank=True)",
        "detail": "apps.llm_transaction.models.auto_topup.auto_topup_models",
        "documentation": {}
    },
    {
        "label": "TransactionInvoice",
        "kind": 6,
        "importPath": "apps.llm_transaction.models.invoice.invoice_models",
        "description": "apps.llm_transaction.models.invoice.invoice_models",
        "peekOfCode": "class TransactionInvoice(models.Model):\n    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE,\n                                     related_name='transaction_invoices')\n    responsible_user = models.ForeignKey('auth.User', on_delete=models.SET_NULL, related_name='transaction_invoices',\n                                         null=True, blank=True)\n    transaction_type = models.CharField(max_length=50, choices=INVOICE_TYPES, default=\"top-up\")\n    amount_added = models.DecimalField(max_digits=10, decimal_places=2, default=Decimal('0.00'))\n    payment_method = models.CharField(max_length=50, choices=ACCEPTED_METHODS_OF_PAYMENT, default=\"credit-card\")\n    transaction_date = models.DateTimeField(auto_now_add=True)\n    invoice_number = models.CharField(max_length=2000, null=True, blank=True)",
        "detail": "apps.llm_transaction.models.invoice.invoice_models",
        "documentation": {}
    },
    {
        "label": "LLMTransaction",
        "kind": 6,
        "importPath": "apps.llm_transaction.models.llm_transaction.llm_transaction_models",
        "description": "apps.llm_transaction.models.llm_transaction.llm_transaction_models",
        "peekOfCode": "class LLMTransaction(models.Model):\n    responsible_user = models.ForeignKey('auth.User', on_delete=models.SET_NULL, related_name='transactions',\n                                         null=True, blank=True)\n    responsible_assistant = models.ForeignKey('assistants.Assistant', on_delete=models.SET_NULL,\n                                              related_name='transactions',\n                                              null=True, blank=True)\n    organization = models.ForeignKey('organization.Organization', on_delete=models.SET_NULL,\n                                     related_name='transactions',\n                                     null=True)\n    model = models.ForeignKey('llm_core.LLMCore', on_delete=models.SET_NULL, related_name='transactions',",
        "detail": "apps.llm_transaction.models.llm_transaction.llm_transaction_models",
        "documentation": {}
    },
    {
        "label": "OrganizationBalanceSnapshot",
        "kind": 6,
        "importPath": "apps.llm_transaction.models.snapshot.snapshot_models",
        "description": "apps.llm_transaction.models.snapshot.snapshot_models",
        "peekOfCode": "class OrganizationBalanceSnapshot(models.Model):\n    organization = models.ForeignKey('organization.Organization', on_delete=models.SET_NULL,\n                                     related_name='balance_snapshots', null=True)\n    balance = models.DecimalField(max_digits=12, decimal_places=6, null=True, blank=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    def __str__(self):\n        return f\"{self.organization} - {self.balance} - {self.created_at}\"\n    class Meta:\n        verbose_name = \"Organization Balance Snapshot\"\n        verbose_name_plural = \"Organization Balance Snapshots\"",
        "detail": "apps.llm_transaction.models.snapshot.snapshot_models",
        "documentation": {}
    },
    {
        "label": "check_and_perform_auto_top_up",
        "kind": 2,
        "importPath": "apps.llm_transaction.tasks.check_and_perform_auto_topup_tasks",
        "description": "apps.llm_transaction.tasks.check_and_perform_auto_topup_tasks",
        "peekOfCode": "def check_and_perform_auto_top_up():\n    now = timezone.now()\n    all_auto_plans = AutoBalanceTopUpModel.objects.filter(on_interval_by_days_trigger=True)\n    if now.day == 20:\n        for plan in all_auto_plans:\n            plan.calendar_month_total_auto_addition_value = 0\n            plan.save()\n    for plan in all_auto_plans:\n        days_since_last = (now - plan.date_of_last_auto_top_up).days\n        if days_since_last >= plan.regular_by_days_interval:",
        "detail": "apps.llm_transaction.tasks.check_and_perform_auto_topup_tasks",
        "documentation": {}
    },
    {
        "label": "track_organization_balances",
        "kind": 2,
        "importPath": "apps.llm_transaction.tasks.track_organization_balances_tasks",
        "description": "apps.llm_transaction.tasks.track_organization_balances_tasks",
        "peekOfCode": "def track_organization_balances():\n    all_orgs = Organization.objects.all()\n    for org in all_orgs:\n        ss = OrganizationBalanceSnapshot(organization=org, balance=org.balance)\n        ss.save()\n    return True",
        "detail": "apps.llm_transaction.tasks.track_organization_balances_tasks",
        "documentation": {}
    },
    {
        "label": "fixture_llm_transactions_init",
        "kind": 2,
        "importPath": "apps.llm_transaction.tests.conftest",
        "description": "apps.llm_transaction.tests.conftest",
        "peekOfCode": "def fixture_llm_transactions_init():\n    return True",
        "detail": "apps.llm_transaction.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_llm_transactions_test_forms",
        "kind": 2,
        "importPath": "apps.llm_transaction.tests.test_forms",
        "description": "apps.llm_transaction.tests.test_forms",
        "peekOfCode": "def test_init_llm_transactions_test_forms():\n    assert True",
        "detail": "apps.llm_transaction.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_llm_transactions_test_models",
        "kind": 2,
        "importPath": "apps.llm_transaction.tests.test_models",
        "description": "apps.llm_transaction.tests.test_models",
        "peekOfCode": "def test_init_llm_transactions_test_models():\n    assert True",
        "detail": "apps.llm_transaction.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_llm_transactions_test_utils",
        "kind": 2,
        "importPath": "apps.llm_transaction.tests.test_utils",
        "description": "apps.llm_transaction.tests.test_utils",
        "peekOfCode": "def test_init_llm_transactions_test_utils():\n    assert True",
        "detail": "apps.llm_transaction.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_llm_transactions_test_views",
        "kind": 2,
        "importPath": "apps.llm_transaction.tests.test_views",
        "description": "apps.llm_transaction.tests.test_views",
        "peekOfCode": "def test_init_llm_transactions_test_views():\n    assert True",
        "detail": "apps.llm_transaction.tests.test_views",
        "documentation": {}
    },
    {
        "label": "LLMTransactionRolesForTypeNames",
        "kind": 6,
        "importPath": "apps.llm_transaction.utils.constant_utils",
        "description": "apps.llm_transaction.utils.constant_utils",
        "peekOfCode": "class LLMTransactionRolesForTypeNames:\n    USER = \"user\"\n    ASSISTANT = \"assistant\"\n    SYSTEM = \"system\"\nclass LLMTransactionSourcesTypesNames:\n    APP = \"app\"\n    API = \"api\"\n    ############################\n    GENERATION = \"generation\"\n    SQL_READ = \"sql-read\"",
        "detail": "apps.llm_transaction.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "LLMTransactionSourcesTypesNames",
        "kind": 6,
        "importPath": "apps.llm_transaction.utils.constant_utils",
        "description": "apps.llm_transaction.utils.constant_utils",
        "peekOfCode": "class LLMTransactionSourcesTypesNames:\n    APP = \"app\"\n    API = \"api\"\n    ############################\n    GENERATION = \"generation\"\n    SQL_READ = \"sql-read\"\n    SQL_WRITE = \"sql-write\"\n    STORE_MEMORY = \"store-memory\"\n    INTERPRET_CODE = \"interpret-code\"\n    REASONING = \"reasoning\"",
        "detail": "apps.llm_transaction.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "InvoiceTypesNames",
        "kind": 6,
        "importPath": "apps.llm_transaction.utils.constant_utils",
        "description": "apps.llm_transaction.utils.constant_utils",
        "peekOfCode": "class InvoiceTypesNames:\n    AUTO_TOP_UP = \"auto-top-up\"\n    TOP_UP = \"top-up\"\n    GIFT_CREDITS = \"gift-credits\"\n    TRANSFERRED_CREDITS = \"transferred-credits\"\n    @staticmethod\n    def as_list():\n        return [\n            InvoiceTypesNames.AUTO_TOP_UP,\n            InvoiceTypesNames.TOP_UP,",
        "detail": "apps.llm_transaction.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "AcceptedMethodsOfPaymentNames",
        "kind": 6,
        "importPath": "apps.llm_transaction.utils.constant_utils",
        "description": "apps.llm_transaction.utils.constant_utils",
        "peekOfCode": "class AcceptedMethodsOfPaymentNames:\n    CREDIT_CARD = \"credit-card\"\n    INTERNAL_TRANSFER = \"internal-transfer\"\n    DIRECT_SALES = \"direct-sales\"\n    @staticmethod\n    def as_list():\n        return [\n            AcceptedMethodsOfPaymentNames.CREDIT_CARD,\n            AcceptedMethodsOfPaymentNames.INTERNAL_TRANSFER,\n            AcceptedMethodsOfPaymentNames.DIRECT_SALES,",
        "detail": "apps.llm_transaction.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "LLMCostsPerMillionTokens",
        "kind": 6,
        "importPath": "apps.llm_transaction.utils.constant_utils",
        "description": "apps.llm_transaction.utils.constant_utils",
        "peekOfCode": "class LLMCostsPerMillionTokens:\n    OPENAI_GPT_COSTS = {\n        \"gpt-4o\": {\"input\": 5.00, \"output\": 15.00},\n        \"gpt-4-turbo\": {\"input\": 10.00, \"output\": 30.00},\n        \"gpt-4\": {\"input\": 30.00, \"output\": 60.00},\n    }\nINTERNAL_PROFIT_MARGIN_FOR_LLM = settings.__SERVICE_PROFIT_MARGIN\nVALUE_ADDED_TAX_PERCENTAGE = settings.__SERVICE_TAX_RATE\nAUTO_TOP_UP_ADMIN_LIST = [\n    \"organization\",",
        "detail": "apps.llm_transaction.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "TOKENIZATION_ENCODING_ENGINES",
        "kind": 5,
        "importPath": "apps.llm_transaction.utils.constant_utils",
        "description": "apps.llm_transaction.utils.constant_utils",
        "peekOfCode": "TOKENIZATION_ENCODING_ENGINES = [\n    (\"cl100k_base\", \"cl100k_base\"),\n    (\"p50k_base\", \"p50k_base\"),\n    (\"r50k_base\", \"r50k_base\"),\n]\nLLM_TRANSACTION_ROLES_FOR_TYPE = [\n    (\"user\", \"User\"),\n    (\"assistant\", \"Assistant\"),\n    (\"system\", \"System\"),\n]",
        "detail": "apps.llm_transaction.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "LLM_TRANSACTION_ROLES_FOR_TYPE",
        "kind": 5,
        "importPath": "apps.llm_transaction.utils.constant_utils",
        "description": "apps.llm_transaction.utils.constant_utils",
        "peekOfCode": "LLM_TRANSACTION_ROLES_FOR_TYPE = [\n    (\"user\", \"User\"),\n    (\"assistant\", \"Assistant\"),\n    (\"system\", \"System\"),\n]\nSOURCES_OF_LLM_TRANSACTION = [\n    (\"app\", \"Application\"),\n    (\"api\", \"API\"),\n    (\"generation\", \"Generation\"),\n    (\"sql-read\", \"SQL Read\"),",
        "detail": "apps.llm_transaction.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "SOURCES_OF_LLM_TRANSACTION",
        "kind": 5,
        "importPath": "apps.llm_transaction.utils.constant_utils",
        "description": "apps.llm_transaction.utils.constant_utils",
        "peekOfCode": "SOURCES_OF_LLM_TRANSACTION = [\n    (\"app\", \"Application\"),\n    (\"api\", \"API\"),\n    (\"generation\", \"Generation\"),\n    (\"sql-read\", \"SQL Read\"),\n    (\"sql-write\", \"SQL Write\"),\n    (\"store-memory\", \"Store Memory\"),\n    (\"interpret-code\", \"Interpret Code\"),\n    (\"reasoning\", \"Reasoning\"),\n    (\"upload-file\", \"Upload File\"),",
        "detail": "apps.llm_transaction.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "INVOICE_TYPES",
        "kind": 5,
        "importPath": "apps.llm_transaction.utils.constant_utils",
        "description": "apps.llm_transaction.utils.constant_utils",
        "peekOfCode": "INVOICE_TYPES = [\n    (\"auto-top-up\", \"Auto Top-Up\"),\n    (\"top-up\", \"Top-Up\"),\n    (\"gift-credits\", \"Gift Credits\"),\n    (\"transferred-credits\", \"Transferred Credits\"),\n]\nclass InvoiceTypesNames:\n    AUTO_TOP_UP = \"auto-top-up\"\n    TOP_UP = \"top-up\"\n    GIFT_CREDITS = \"gift-credits\"",
        "detail": "apps.llm_transaction.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "ACCEPTED_METHODS_OF_PAYMENT",
        "kind": 5,
        "importPath": "apps.llm_transaction.utils.constant_utils",
        "description": "apps.llm_transaction.utils.constant_utils",
        "peekOfCode": "ACCEPTED_METHODS_OF_PAYMENT = [\n    (\"credit-card\", \"Credit Card\"),\n    (\"internal-transfer\", \"Internal Transfer\"),\n    (\"direct-sales\", \"Direct Sales\"),\n]\nclass AcceptedMethodsOfPaymentNames:\n    CREDIT_CARD = \"credit-card\"\n    INTERNAL_TRANSFER = \"internal-transfer\"\n    DIRECT_SALES = \"direct-sales\"\n    @staticmethod",
        "detail": "apps.llm_transaction.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "INTERNAL_TIME_FILTER_TYPES",
        "kind": 5,
        "importPath": "apps.llm_transaction.utils.constant_utils",
        "description": "apps.llm_transaction.utils.constant_utils",
        "peekOfCode": "INTERNAL_TIME_FILTER_TYPES = [\n    ('seconds', 'seconds'),\n    ('minutes', 'minutes'),\n    ('hours', 'hours'),\n    ('days', 'days'),\n    ('weeks', 'weeks'),\n    ('months', 'months'),\n    ('years', 'years'),\n]\nTXS_PAGINATION_ITEMS_PER_PAGE = 5",
        "detail": "apps.llm_transaction.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "TXS_PAGINATION_ITEMS_PER_PAGE",
        "kind": 5,
        "importPath": "apps.llm_transaction.utils.constant_utils",
        "description": "apps.llm_transaction.utils.constant_utils",
        "peekOfCode": "TXS_PAGINATION_ITEMS_PER_PAGE = 5\nMAXIMUM_PAGES_POSSIBLE_TO_SHOW = 50\nclass LLMCostsPerMillionTokens:\n    OPENAI_GPT_COSTS = {\n        \"gpt-4o\": {\"input\": 5.00, \"output\": 15.00},\n        \"gpt-4-turbo\": {\"input\": 10.00, \"output\": 30.00},\n        \"gpt-4\": {\"input\": 30.00, \"output\": 60.00},\n    }\nINTERNAL_PROFIT_MARGIN_FOR_LLM = settings.__SERVICE_PROFIT_MARGIN\nVALUE_ADDED_TAX_PERCENTAGE = settings.__SERVICE_TAX_RATE",
        "detail": "apps.llm_transaction.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MAXIMUM_PAGES_POSSIBLE_TO_SHOW",
        "kind": 5,
        "importPath": "apps.llm_transaction.utils.constant_utils",
        "description": "apps.llm_transaction.utils.constant_utils",
        "peekOfCode": "MAXIMUM_PAGES_POSSIBLE_TO_SHOW = 50\nclass LLMCostsPerMillionTokens:\n    OPENAI_GPT_COSTS = {\n        \"gpt-4o\": {\"input\": 5.00, \"output\": 15.00},\n        \"gpt-4-turbo\": {\"input\": 10.00, \"output\": 30.00},\n        \"gpt-4\": {\"input\": 30.00, \"output\": 60.00},\n    }\nINTERNAL_PROFIT_MARGIN_FOR_LLM = settings.__SERVICE_PROFIT_MARGIN\nVALUE_ADDED_TAX_PERCENTAGE = settings.__SERVICE_TAX_RATE\nAUTO_TOP_UP_ADMIN_LIST = [",
        "detail": "apps.llm_transaction.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "INTERNAL_PROFIT_MARGIN_FOR_LLM",
        "kind": 5,
        "importPath": "apps.llm_transaction.utils.constant_utils",
        "description": "apps.llm_transaction.utils.constant_utils",
        "peekOfCode": "INTERNAL_PROFIT_MARGIN_FOR_LLM = settings.__SERVICE_PROFIT_MARGIN\nVALUE_ADDED_TAX_PERCENTAGE = settings.__SERVICE_TAX_RATE\nAUTO_TOP_UP_ADMIN_LIST = [\n    \"organization\",\n    \"on_balance_threshold_trigger\",\n    \"on_interval_by_days_trigger\",\n    \"balance_lower_trigger_threshold_value\",\n    \"addition_on_balance_threshold_trigger\"\n]\nINVOICE_ADMIN_LIST = [",
        "detail": "apps.llm_transaction.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "VALUE_ADDED_TAX_PERCENTAGE",
        "kind": 5,
        "importPath": "apps.llm_transaction.utils.constant_utils",
        "description": "apps.llm_transaction.utils.constant_utils",
        "peekOfCode": "VALUE_ADDED_TAX_PERCENTAGE = settings.__SERVICE_TAX_RATE\nAUTO_TOP_UP_ADMIN_LIST = [\n    \"organization\",\n    \"on_balance_threshold_trigger\",\n    \"on_interval_by_days_trigger\",\n    \"balance_lower_trigger_threshold_value\",\n    \"addition_on_balance_threshold_trigger\"\n]\nINVOICE_ADMIN_LIST = [\n    \"organization\",",
        "detail": "apps.llm_transaction.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "AUTO_TOP_UP_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.llm_transaction.utils.constant_utils",
        "description": "apps.llm_transaction.utils.constant_utils",
        "peekOfCode": "AUTO_TOP_UP_ADMIN_LIST = [\n    \"organization\",\n    \"on_balance_threshold_trigger\",\n    \"on_interval_by_days_trigger\",\n    \"balance_lower_trigger_threshold_value\",\n    \"addition_on_balance_threshold_trigger\"\n]\nINVOICE_ADMIN_LIST = [\n    \"organization\",\n    \"responsible_user\",",
        "detail": "apps.llm_transaction.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "INVOICE_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.llm_transaction.utils.constant_utils",
        "description": "apps.llm_transaction.utils.constant_utils",
        "peekOfCode": "INVOICE_ADMIN_LIST = [\n    \"organization\",\n    \"responsible_user\",\n    \"transaction_type\",\n    \"amount_added\",\n    \"payment_method\",\n    \"transaction_date\",\n    \"invoice_number\",\n    \"barcode_image\",\n    \"transaction_paper\",",
        "detail": "apps.llm_transaction.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "TRANSACTION_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.llm_transaction.utils.constant_utils",
        "description": "apps.llm_transaction.utils.constant_utils",
        "peekOfCode": "TRANSACTION_ADMIN_LIST = [\n    \"responsible_user\", \"responsible_assistant\", \"organization\", \"model\", \"transaction_source\", \"total_cost\",\n    \"created_at\"\n]\nTRANSACTION_ADMIN_FILTER = [\"responsible_user\", \"responsible_assistant\", \"transaction_source\", \"organization\", \"model\",\n                            \"created_at\"]\nTRANSACTION_ADMIN_SEARCH = [\"organization__name\", \"model__nickname\"]\nBALANCE_SNAPSHOT_ADMIN_LIST = [\"organization\", \"balance\", \"created_at\"]",
        "detail": "apps.llm_transaction.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "TRANSACTION_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.llm_transaction.utils.constant_utils",
        "description": "apps.llm_transaction.utils.constant_utils",
        "peekOfCode": "TRANSACTION_ADMIN_FILTER = [\"responsible_user\", \"responsible_assistant\", \"transaction_source\", \"organization\", \"model\",\n                            \"created_at\"]\nTRANSACTION_ADMIN_SEARCH = [\"organization__name\", \"model__nickname\"]\nBALANCE_SNAPSHOT_ADMIN_LIST = [\"organization\", \"balance\", \"created_at\"]",
        "detail": "apps.llm_transaction.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "TRANSACTION_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.llm_transaction.utils.constant_utils",
        "description": "apps.llm_transaction.utils.constant_utils",
        "peekOfCode": "TRANSACTION_ADMIN_SEARCH = [\"organization__name\", \"model__nickname\"]\nBALANCE_SNAPSHOT_ADMIN_LIST = [\"organization\", \"balance\", \"created_at\"]",
        "detail": "apps.llm_transaction.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BALANCE_SNAPSHOT_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.llm_transaction.utils.constant_utils",
        "description": "apps.llm_transaction.utils.constant_utils",
        "peekOfCode": "BALANCE_SNAPSHOT_ADMIN_LIST = [\"organization\", \"balance\", \"created_at\"]",
        "detail": "apps.llm_transaction.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "process_and_calculate_number_of_billable_tokens",
        "kind": 2,
        "importPath": "apps.llm_transaction.utils.function_utils",
        "description": "apps.llm_transaction.utils.function_utils",
        "peekOfCode": "def process_and_calculate_number_of_billable_tokens(encoding_engine, text):\n    encoding = tiktoken.get_encoding(encoding_engine)\n    tokens = encoding.encode(str(text))\n    return len(tokens)\ndef calculate_total_llm_model_costs(model, number_of_tokens):\n    from apps.llm_transaction.utils import LLMCostsPerMillionTokens\n    costs = LLMCostsPerMillionTokens.OPENAI_GPT_COSTS[model]\n    tokens_divided_by_million = number_of_tokens / 1_000_000\n    apx_input_cost = (tokens_divided_by_million / 2) * costs[\"input\"]\n    apx_output_cost = (tokens_divided_by_million / 2) * costs[\"output\"]",
        "detail": "apps.llm_transaction.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "calculate_total_llm_model_costs",
        "kind": 2,
        "importPath": "apps.llm_transaction.utils.function_utils",
        "description": "apps.llm_transaction.utils.function_utils",
        "peekOfCode": "def calculate_total_llm_model_costs(model, number_of_tokens):\n    from apps.llm_transaction.utils import LLMCostsPerMillionTokens\n    costs = LLMCostsPerMillionTokens.OPENAI_GPT_COSTS[model]\n    tokens_divided_by_million = number_of_tokens / 1_000_000\n    apx_input_cost = (tokens_divided_by_million / 2) * costs[\"input\"]\n    apx_output_cost = (tokens_divided_by_million / 2) * costs[\"output\"]\n    llm_cost = (apx_input_cost + apx_output_cost)\n    return llm_cost\ndef calculate_service_costs_of_platform(llm_cost, tool_service_fee_absolute_rate=0.000000):\n    from apps.llm_transaction.utils import INTERNAL_PROFIT_MARGIN_FOR_LLM",
        "detail": "apps.llm_transaction.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "calculate_service_costs_of_platform",
        "kind": 2,
        "importPath": "apps.llm_transaction.utils.function_utils",
        "description": "apps.llm_transaction.utils.function_utils",
        "peekOfCode": "def calculate_service_costs_of_platform(llm_cost, tool_service_fee_absolute_rate=0.000000):\n    from apps.llm_transaction.utils import INTERNAL_PROFIT_MARGIN_FOR_LLM\n    bare_amount = llm_cost * INTERNAL_PROFIT_MARGIN_FOR_LLM\n    bare_amount += tool_service_fee_absolute_rate\n    return bare_amount\ndef calculate_value_added_tax(internal_service_cost):\n    from apps.llm_transaction.utils import VALUE_ADDED_TAX_PERCENTAGE\n    tax_cost = internal_service_cost * VALUE_ADDED_TAX_PERCENTAGE\n    return tax_cost\ndef calculate_final_billable_cost(internal_service_cost, tax_cost):",
        "detail": "apps.llm_transaction.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "calculate_value_added_tax",
        "kind": 2,
        "importPath": "apps.llm_transaction.utils.function_utils",
        "description": "apps.llm_transaction.utils.function_utils",
        "peekOfCode": "def calculate_value_added_tax(internal_service_cost):\n    from apps.llm_transaction.utils import VALUE_ADDED_TAX_PERCENTAGE\n    tax_cost = internal_service_cost * VALUE_ADDED_TAX_PERCENTAGE\n    return tax_cost\ndef calculate_final_billable_cost(internal_service_cost, tax_cost):\n    return internal_service_cost + tax_cost\ndef calculate_final_cost_total(llm_cost, billable_cost):\n    return llm_cost + billable_cost\ndef sum_costs(transactions):\n    llm_cost = 0",
        "detail": "apps.llm_transaction.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "calculate_final_billable_cost",
        "kind": 2,
        "importPath": "apps.llm_transaction.utils.function_utils",
        "description": "apps.llm_transaction.utils.function_utils",
        "peekOfCode": "def calculate_final_billable_cost(internal_service_cost, tax_cost):\n    return internal_service_cost + tax_cost\ndef calculate_final_cost_total(llm_cost, billable_cost):\n    return llm_cost + billable_cost\ndef sum_costs(transactions):\n    llm_cost = 0\n    internal_service_cost = 0\n    tax_cost = 0\n    total_cost = 0\n    billable_cost = 0",
        "detail": "apps.llm_transaction.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "calculate_final_cost_total",
        "kind": 2,
        "importPath": "apps.llm_transaction.utils.function_utils",
        "description": "apps.llm_transaction.utils.function_utils",
        "peekOfCode": "def calculate_final_cost_total(llm_cost, billable_cost):\n    return llm_cost + billable_cost\ndef sum_costs(transactions):\n    llm_cost = 0\n    internal_service_cost = 0\n    tax_cost = 0\n    total_cost = 0\n    billable_cost = 0\n    for transaction in transactions:\n        llm_cost += transaction.llm_cost",
        "detail": "apps.llm_transaction.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "sum_costs",
        "kind": 2,
        "importPath": "apps.llm_transaction.utils.function_utils",
        "description": "apps.llm_transaction.utils.function_utils",
        "peekOfCode": "def sum_costs(transactions):\n    llm_cost = 0\n    internal_service_cost = 0\n    tax_cost = 0\n    total_cost = 0\n    billable_cost = 0\n    for transaction in transactions:\n        llm_cost += transaction.llm_cost\n        internal_service_cost += transaction.internal_service_cost\n        tax_cost += transaction.tax_cost",
        "detail": "apps.llm_transaction.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "barcode_generator",
        "kind": 2,
        "importPath": "apps.llm_transaction.utils.function_utils",
        "description": "apps.llm_transaction.utils.function_utils",
        "peekOfCode": "def barcode_generator(hashed_string):\n    try:\n        img = qrcode.make(hashed_string)\n        buffer = BytesIO()\n        img.save(buffer, format=\"PNG\")\n        buffer.seek(0)\n    except Exception as e:\n        return None\n    return ContentFile(buffer.getvalue(), name=f\"QR_{hashed_string}.png\")\ndef invoice_paper_generator(invoice_object, barcode_data):",
        "detail": "apps.llm_transaction.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "invoice_paper_generator",
        "kind": 2,
        "importPath": "apps.llm_transaction.utils.function_utils",
        "description": "apps.llm_transaction.utils.function_utils",
        "peekOfCode": "def invoice_paper_generator(invoice_object, barcode_data):\n    import base64\n    org = invoice_object.organization\n    user = invoice_object.responsible_user\n    barcode_data = barcode_data.file\n    barcode_data = base64.b64encode(barcode_data.getvalue()).decode('utf-8')\n    try:\n        html_content = render_to_string('llm_transaction/invoices/invoice_skeleton.html',\n                                        {\n                                            'invoice': invoice_object, 'organization': org, 'user': user,",
        "detail": "apps.llm_transaction.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "Transactions_AutoTopUpCreate",
        "kind": 6,
        "importPath": "apps.llm_transaction.views.auto_topup.create_auto_topup_views",
        "description": "apps.llm_transaction.views.auto_topup.create_auto_topup_views",
        "peekOfCode": "class Transactions_AutoTopUpCreate(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['organizations'] = Organization.objects.filter(users__in=[self.request.user])\n        return context\n    def post(self, request, *args, **kwargs):\n        org_id = request.POST.get('organization_id')\n        on_balance_threshold_trigger = request.POST.get('on_balance_threshold_trigger')\n        on_interval_by_days_trigger = request.POST.get('on_interval_by_days_trigger')\n        if on_balance_threshold_trigger == 'on':",
        "detail": "apps.llm_transaction.views.auto_topup.create_auto_topup_views",
        "documentation": {}
    },
    {
        "label": "Transactions_AutoTopUpList",
        "kind": 6,
        "importPath": "apps.llm_transaction.views.auto_topup.list_auto_topups_views",
        "description": "apps.llm_transaction.views.auto_topup.list_auto_topups_views",
        "peekOfCode": "class Transactions_AutoTopUpList(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['organizations'] = Organization.objects.filter(users__in=[self.request.user])\n        return context\n    def post(self, request, *args, **kwargs):\n        organization_id = request.POST.get('organization_id')\n        organization = Organization.objects.get(id=organization_id)\n        if 'delete' in request.POST:\n            organization.auto_balance_topup.delete()",
        "detail": "apps.llm_transaction.views.auto_topup.list_auto_topups_views",
        "documentation": {}
    },
    {
        "label": "Transactions_AutoTopUp_Update",
        "kind": 6,
        "importPath": "apps.llm_transaction.views.auto_topup.update_auto_topup_views",
        "description": "apps.llm_transaction.views.auto_topup.update_auto_topup_views",
        "peekOfCode": "class Transactions_AutoTopUp_Update(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        user = self.request.user\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        p = get_object_or_404(AutoBalanceTopUpModel, id=kwargs.get('plan_id'))\n        context.update({'plan': p, 'organizations': Organization.objects.filter(users__in=[user])})\n        return context\n    def post(self, request, plan_id):\n        p = get_object_or_404(AutoBalanceTopUpModel, id=plan_id)\n        p.on_balance_threshold_trigger = request.POST.get('on_balance_threshold_trigger') == 'on' or False",
        "detail": "apps.llm_transaction.views.auto_topup.update_auto_topup_views",
        "documentation": {}
    },
    {
        "label": "Transactions_InvoiceList",
        "kind": 6,
        "importPath": "apps.llm_transaction.views.invoice.list_invoices_views",
        "description": "apps.llm_transaction.views.invoice.list_invoices_views",
        "peekOfCode": "class Transactions_InvoiceList(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        orgs = Organization.objects.filter(users__in=[self.request.user]).all()\n        context['invoices'] = TransactionInvoice.objects.filter(organization__in=orgs).select_related(\n            'organization', 'responsible_user').order_by('-transaction_date')\n        context['organizations'] = orgs\n        return context",
        "detail": "apps.llm_transaction.views.invoice.list_invoices_views",
        "documentation": {}
    },
    {
        "label": "Transactions_TransactionList",
        "kind": 6,
        "importPath": "apps.llm_transaction.views.llm_transaction.list_transactions_views",
        "description": "apps.llm_transaction.views.llm_transaction.list_transactions_views",
        "peekOfCode": "class Transactions_TransactionList(TemplateView, LoginRequiredMixin):\n    def post(self, request, *args, **kwargs):\n        filter_value = request.POST.get('filter')\n        delta_specifier = request.POST.get('delta_specifier', \"30\")\n        time_specifier = request.POST.get('time_specifier', 'days')\n        context = self.get_context_data(filter_value=filter_value, **kwargs)\n        context['filter'] = filter_value\n        context['filter_types'] = INTERNAL_TIME_FILTER_TYPES\n        context['delta_specifier'] = delta_specifier\n        context['time_specifier'] = time_specifier",
        "detail": "apps.llm_transaction.views.llm_transaction.list_transactions_views",
        "documentation": {}
    },
    {
        "label": "Transactions_ManualTopUpCreate",
        "kind": 6,
        "importPath": "apps.llm_transaction.views.manual_topup.create_manual_topup_views",
        "description": "apps.llm_transaction.views.manual_topup.create_manual_topup_views",
        "peekOfCode": "class Transactions_ManualTopUpCreate(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        selected_org = Organization.objects.filter(users__in=[self.request.user]).first()\n        context['selected_organization'] = selected_org\n        orgs = Organization.objects.filter(users__in=[self.request.user]).all()\n        context['organizations'] = orgs\n        return context",
        "detail": "apps.llm_transaction.views.manual_topup.create_manual_topup_views",
        "documentation": {}
    },
    {
        "label": "Transactions_BalanceTransfer",
        "kind": 6,
        "importPath": "apps.llm_transaction.views.transfer_balance.transfer_balance_views",
        "description": "apps.llm_transaction.views.transfer_balance.transfer_balance_views",
        "peekOfCode": "class Transactions_BalanceTransfer(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        orgs = Organization.objects.filter(users__in=[self.request.user]).all()\n        context['organizations'] = orgs\n        return context",
        "detail": "apps.llm_transaction.views.transfer_balance.transfer_balance_views",
        "documentation": {}
    },
    {
        "label": "LLMTransactionConfig",
        "kind": 6,
        "importPath": "apps.llm_transaction.apps",
        "description": "apps.llm_transaction.apps",
        "peekOfCode": "class LLMTransactionConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.llm_transaction'",
        "detail": "apps.llm_transaction.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.llm_transaction.urls",
        "description": "apps.llm_transaction.urls",
        "peekOfCode": "app_name = \"llm_transaction\"\nurlpatterns = [\n    path('list/', Transactions_TransactionList.as_view(\n        template_name=\"llm_transaction/transactions/list_transactions.html\"), name='list'),\n    path('auto_top_up/create/', Transactions_AutoTopUpCreate.as_view(\n        template_name=\"llm_transaction/topup/create_auto_topup.html\"), name='auto_top_up_create'),\n    path('auto_top_up/update/<int:plan_id>/', Transactions_AutoTopUp_Update.as_view(\n        template_name=\"llm_transaction/topup/update_auto_topup.html\"), name='auto_top_up_update'),\n    path('auto_top_up/list/', Transactions_AutoTopUpList.as_view(\n        template_name=\"llm_transaction/topup/manage_auto_topup_plans.html\"), name='auto_top_up_list'),",
        "detail": "apps.llm_transaction.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.llm_transaction.urls",
        "description": "apps.llm_transaction.urls",
        "peekOfCode": "urlpatterns = [\n    path('list/', Transactions_TransactionList.as_view(\n        template_name=\"llm_transaction/transactions/list_transactions.html\"), name='list'),\n    path('auto_top_up/create/', Transactions_AutoTopUpCreate.as_view(\n        template_name=\"llm_transaction/topup/create_auto_topup.html\"), name='auto_top_up_create'),\n    path('auto_top_up/update/<int:plan_id>/', Transactions_AutoTopUp_Update.as_view(\n        template_name=\"llm_transaction/topup/update_auto_topup.html\"), name='auto_top_up_update'),\n    path('auto_top_up/list/', Transactions_AutoTopUpList.as_view(\n        template_name=\"llm_transaction/topup/manage_auto_topup_plans.html\"), name='auto_top_up_list'),\n    path('transaction_invoices/list/', Transactions_InvoiceList.as_view(",
        "detail": "apps.llm_transaction.urls",
        "documentation": {}
    },
    {
        "label": "AssistantMemoryAdmin",
        "kind": 6,
        "importPath": "apps.memories.admin.assistant_memory_admin",
        "description": "apps.memories.admin.assistant_memory_admin",
        "peekOfCode": "class AssistantMemoryAdmin(admin.ModelAdmin):\n    list_display = MEMORIES_ADMIN_LIST\n    list_filter = MEMORIES_ADMIN_FILTER\n    search_fields = MEMORIES_ADMIN_SEARCH\n    date_hierarchy = \"created_at\"",
        "detail": "apps.memories.admin.assistant_memory_admin",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.memories.migrations.0001_initial",
        "description": "apps.memories.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('assistants', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='AssistantMemory',\n            fields=[",
        "detail": "apps.memories.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "AssistantMemory",
        "kind": 6,
        "importPath": "apps.memories.models.assistant_memory_models",
        "description": "apps.memories.models.assistant_memory_models",
        "peekOfCode": "class AssistantMemory(models.Model):\n    user = models.ForeignKey(\"auth.User\", on_delete=models.CASCADE)\n    assistant = models.ForeignKey(\"assistants.Assistant\", on_delete=models.CASCADE)\n    memory_type = models.CharField(max_length=50, choices=AGENT_STANDARD_MEMORY_TYPES, default=\"user-specific\")\n    memory_text_content = models.TextField(default=\"\")\n    created_at = models.DateTimeField(auto_now_add=True)\n    def __str__(self):\n        return f\"{self.assistant} - {self.memory_type}\"\n    class Meta:\n        verbose_name = \"Memory\"",
        "detail": "apps.memories.models.assistant_memory_models",
        "documentation": {}
    },
    {
        "label": "fixture_memories_init",
        "kind": 2,
        "importPath": "apps.memories.tests.conftest",
        "description": "apps.memories.tests.conftest",
        "peekOfCode": "def fixture_memories_init():\n    return True",
        "detail": "apps.memories.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_memories_test_forms",
        "kind": 2,
        "importPath": "apps.memories.tests.test_forms",
        "description": "apps.memories.tests.test_forms",
        "peekOfCode": "def test_init_memories_test_forms():\n    assert True",
        "detail": "apps.memories.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_memories_test_models",
        "kind": 2,
        "importPath": "apps.memories.tests.test_models",
        "description": "apps.memories.tests.test_models",
        "peekOfCode": "def test_init_memories_test_models():\n    assert True",
        "detail": "apps.memories.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_memories_test_utils",
        "kind": 2,
        "importPath": "apps.memories.tests.test_utils",
        "description": "apps.memories.tests.test_utils",
        "peekOfCode": "def test_init_memories_test_utils():\n    assert True",
        "detail": "apps.memories.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_memories_test_views",
        "kind": 2,
        "importPath": "apps.memories.tests.test_views",
        "description": "apps.memories.tests.test_views",
        "peekOfCode": "def test_init_memories_test_views():\n    assert True",
        "detail": "apps.memories.tests.test_views",
        "documentation": {}
    },
    {
        "label": "AgentStandardMemoryTypesNames",
        "kind": 6,
        "importPath": "apps.memories.utils.constant_utils",
        "description": "apps.memories.utils.constant_utils",
        "peekOfCode": "class AgentStandardMemoryTypesNames:\n    USER_SPECIFIC = \"user-specific\"\n    ASSISTANT_SPECIFIC = \"assistant-specific\"\nMEMORIES_ADMIN_LIST = [\n    \"user\",\n    \"assistant\",\n    \"memory_type\",\n    \"created_at\",\n    \"memory_text_content\",\n    \"created_at\",",
        "detail": "apps.memories.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "AGENT_STANDARD_MEMORY_TYPES",
        "kind": 5,
        "importPath": "apps.memories.utils.constant_utils",
        "description": "apps.memories.utils.constant_utils",
        "peekOfCode": "AGENT_STANDARD_MEMORY_TYPES = [\n    (\"user-specific\", \"User-Specific\"),\n    (\"assistant-specific\", \"Assistant-Specific\"),\n]\nclass AgentStandardMemoryTypesNames:\n    USER_SPECIFIC = \"user-specific\"\n    ASSISTANT_SPECIFIC = \"assistant-specific\"\nMEMORIES_ADMIN_LIST = [\n    \"user\",\n    \"assistant\",",
        "detail": "apps.memories.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MEMORIES_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.memories.utils.constant_utils",
        "description": "apps.memories.utils.constant_utils",
        "peekOfCode": "MEMORIES_ADMIN_LIST = [\n    \"user\",\n    \"assistant\",\n    \"memory_type\",\n    \"created_at\",\n    \"memory_text_content\",\n    \"created_at\",\n]\nMEMORIES_ADMIN_FILTER = [\"memory_type\"]\nMEMORIES_ADMIN_SEARCH = [\"user__username\", \"assistant__name\"]",
        "detail": "apps.memories.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MEMORIES_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.memories.utils.constant_utils",
        "description": "apps.memories.utils.constant_utils",
        "peekOfCode": "MEMORIES_ADMIN_FILTER = [\"memory_type\"]\nMEMORIES_ADMIN_SEARCH = [\"user__username\", \"assistant__name\"]",
        "detail": "apps.memories.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MEMORIES_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.memories.utils.constant_utils",
        "description": "apps.memories.utils.constant_utils",
        "peekOfCode": "MEMORIES_ADMIN_SEARCH = [\"user__username\", \"assistant__name\"]",
        "detail": "apps.memories.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "AssistantMemoryView_Create",
        "kind": 6,
        "importPath": "apps.memories.views.create_assistant_memories_views",
        "description": "apps.memories.views.create_assistant_memories_views",
        "peekOfCode": "class AssistantMemoryView_Create(TemplateView, LoginRequiredMixin):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        user = self.request.user\n        agents = Assistant.objects.filter(organization__users=user)\n        context.update({'assistants': agents})\n        return context\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - ADD_ASSISTANT_MEMORIES",
        "detail": "apps.memories.views.create_assistant_memories_views",
        "documentation": {}
    },
    {
        "label": "AssistantMemoryView_Delete",
        "kind": 6,
        "importPath": "apps.memories.views.delete_assistant_memories_views",
        "description": "apps.memories.views.delete_assistant_memories_views",
        "peekOfCode": "class AssistantMemoryView_Delete(LoginRequiredMixin, DeleteView):\n    model = AssistantMemory\n    success_url = 'memories:list'\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context\n    def get(self, request, *args, **kwargs):\n        return self.post(request, *args, **kwargs)\n    def post(self, request, *args, **kwargs):\n        ##############################",
        "detail": "apps.memories.views.delete_assistant_memories_views",
        "documentation": {}
    },
    {
        "label": "AssistantMemoryView_List",
        "kind": 6,
        "importPath": "apps.memories.views.list_assistant_memories_views",
        "description": "apps.memories.views.list_assistant_memories_views",
        "peekOfCode": "class AssistantMemoryView_List(TemplateView, LoginRequiredMixin):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_ASSISTANT_MEMORIES\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_ASSISTANT_MEMORIES):\n            messages.error(self.request, \"You do not have permission to list assistant memories.\")\n            return context\n        ##############################",
        "detail": "apps.memories.views.list_assistant_memories_views",
        "documentation": {}
    },
    {
        "label": "MemoriesConfig",
        "kind": 6,
        "importPath": "apps.memories.apps",
        "description": "apps.memories.apps",
        "peekOfCode": "class MemoriesConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.memories'",
        "detail": "apps.memories.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.memories.urls",
        "description": "apps.memories.urls",
        "peekOfCode": "app_name = \"memories\"\nurlpatterns = [\n    path(\"list/\", AssistantMemoryView_List.as_view(template_name=\"memories/list_memories.html\"), name=\"list\"),\n    path(\"create/\", AssistantMemoryView_Create.as_view(template_name=\"memories/create_memory.html\"), name=\"create\"),\n    path(\"delete/<int:pk>/\", AssistantMemoryView_Delete.as_view(), name=\"delete\"),\n]",
        "detail": "apps.memories.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.memories.urls",
        "description": "apps.memories.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"list/\", AssistantMemoryView_List.as_view(template_name=\"memories/list_memories.html\"), name=\"list\"),\n    path(\"create/\", AssistantMemoryView_Create.as_view(template_name=\"memories/create_memory.html\"), name=\"create\"),\n    path(\"delete/<int:pk>/\", AssistantMemoryView_Delete.as_view(), name=\"delete\"),\n]",
        "detail": "apps.memories.urls",
        "documentation": {}
    },
    {
        "label": "MessageTemplateAdmin",
        "kind": 6,
        "importPath": "apps.message_templates.admin.message_template_admin",
        "description": "apps.message_templates.admin.message_template_admin",
        "peekOfCode": "class MessageTemplateAdmin(admin.ModelAdmin):\n    list_display = MESSAGE_TEMPLATE_ADMIN_LIST\n    search_fields = MESSAGE_TEMPLATE_ADMIN_SEARCH\n    list_filter = MESSAGE_TEMPLATE_ADMIN_FILTER\n    ordering = [\"-created_at\"]",
        "detail": "apps.message_templates.admin.message_template_admin",
        "documentation": {}
    },
    {
        "label": "MessageTemplateForm",
        "kind": 6,
        "importPath": "apps.message_templates.forms.message_template_forms",
        "description": "apps.message_templates.forms.message_template_forms",
        "peekOfCode": "class MessageTemplateForm(forms.ModelForm):\n    class Meta:\n        model = MessageTemplate\n        fields = ['organization', 'template_text']\n        widgets = {'template_text': forms.Textarea(attrs={'rows': 5, 'class': 'form-control'})}",
        "detail": "apps.message_templates.forms.message_template_forms",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.message_templates.migrations.0001_initial",
        "description": "apps.message_templates.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('organization', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='MessageTemplate',\n            fields=[",
        "detail": "apps.message_templates.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "MessageTemplate",
        "kind": 6,
        "importPath": "apps.message_templates.models.message_template_models",
        "description": "apps.message_templates.models.message_template_models",
        "peekOfCode": "class MessageTemplate(models.Model):\n    user = models.ForeignKey(\"auth.User\", on_delete=models.CASCADE)\n    organization = models.ForeignKey(\"organization.Organization\", on_delete=models.CASCADE)\n    template_text = models.TextField()\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    class Meta:\n        verbose_name = \"Message Template\"\n        verbose_name_plural = \"Message Templates\"\n        ordering = [\"-created_at\"]",
        "detail": "apps.message_templates.models.message_template_models",
        "documentation": {}
    },
    {
        "label": "fixture_message_templates_init",
        "kind": 2,
        "importPath": "apps.message_templates.tests.conftest",
        "description": "apps.message_templates.tests.conftest",
        "peekOfCode": "def fixture_message_templates_init():\n    return True",
        "detail": "apps.message_templates.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_message_templates_test_forms",
        "kind": 2,
        "importPath": "apps.message_templates.tests.test_forms",
        "description": "apps.message_templates.tests.test_forms",
        "peekOfCode": "def test_init_message_templates_test_forms():\n    assert True",
        "detail": "apps.message_templates.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_message_templates_test_models",
        "kind": 2,
        "importPath": "apps.message_templates.tests.test_models",
        "description": "apps.message_templates.tests.test_models",
        "peekOfCode": "def test_init_message_templates_test_models():\n    assert True",
        "detail": "apps.message_templates.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_message_templates_test_utils",
        "kind": 2,
        "importPath": "apps.message_templates.tests.test_utils",
        "description": "apps.message_templates.tests.test_utils",
        "peekOfCode": "def test_init_message_templates_test_utils():\n    assert True",
        "detail": "apps.message_templates.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_message_templates_test_views",
        "kind": 2,
        "importPath": "apps.message_templates.tests.test_views",
        "description": "apps.message_templates.tests.test_views",
        "peekOfCode": "def test_init_message_templates_test_views():\n    assert True",
        "detail": "apps.message_templates.tests.test_views",
        "documentation": {}
    },
    {
        "label": "MESSAGE_TEMPLATE_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.message_templates.utils.constant_utils",
        "description": "apps.message_templates.utils.constant_utils",
        "peekOfCode": "MESSAGE_TEMPLATE_ADMIN_LIST = [\n    \"user\",\n    \"organization\",\n    \"template_text\",\n    \"created_at\",\n    \"updated_at\",\n]\nMESSAGE_TEMPLATE_ADMIN_FILTER = [\"user\", \"organization\", \"created_at\", \"updated_at\"]\nMESSAGE_TEMPLATE_ADMIN_SEARCH = [\"user\", \"organization\", \"template_text\"]",
        "detail": "apps.message_templates.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MESSAGE_TEMPLATE_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.message_templates.utils.constant_utils",
        "description": "apps.message_templates.utils.constant_utils",
        "peekOfCode": "MESSAGE_TEMPLATE_ADMIN_FILTER = [\"user\", \"organization\", \"created_at\", \"updated_at\"]\nMESSAGE_TEMPLATE_ADMIN_SEARCH = [\"user\", \"organization\", \"template_text\"]",
        "detail": "apps.message_templates.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MESSAGE_TEMPLATE_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.message_templates.utils.constant_utils",
        "description": "apps.message_templates.utils.constant_utils",
        "peekOfCode": "MESSAGE_TEMPLATE_ADMIN_SEARCH = [\"user\", \"organization\", \"template_text\"]",
        "detail": "apps.message_templates.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MessageTemplateView_Create",
        "kind": 6,
        "importPath": "apps.message_templates.views.create_message_template_views",
        "description": "apps.message_templates.views.create_message_template_views",
        "peekOfCode": "class MessageTemplateView_Create(TemplateView, LoginRequiredMixin):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['organizations'] = self.request.user.organizations.all()\n        return context\n    def post(self, request, *args, **kwargs):\n        form = MessageTemplateForm(request.POST)\n        ##############################\n        # PERMISSION CHECK FOR - ADD_TEMPLATE_MESSAGES\n        if not UserPermissionManager.is_authorized(user=self.request.user,",
        "detail": "apps.message_templates.views.create_message_template_views",
        "documentation": {}
    },
    {
        "label": "MessageTemplateView_Delete",
        "kind": 6,
        "importPath": "apps.message_templates.views.delete_message_template_views",
        "description": "apps.message_templates.views.delete_message_template_views",
        "peekOfCode": "class MessageTemplateView_Delete(DeleteView, LoginRequiredMixin):\n    model = MessageTemplate\n    success_url = 'message_templates:list'\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context\n    def get(self, request, *args, **kwargs):\n        return self.post(request, *args, **kwargs)\n    def post(self, request, *args, **kwargs):\n        ##############################",
        "detail": "apps.message_templates.views.delete_message_template_views",
        "documentation": {}
    },
    {
        "label": "MessageTemplateView_List",
        "kind": 6,
        "importPath": "apps.message_templates.views.list_message_templates_views",
        "description": "apps.message_templates.views.list_message_templates_views",
        "peekOfCode": "class MessageTemplateView_List(TemplateView, LoginRequiredMixin):\n    model = MessageTemplate\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_TEMPLATE_MESSAGES\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_TEMPLATE_MESSAGES):\n            messages.error(self.request, \"You do not have permission to list template messages.\")\n            return context",
        "detail": "apps.message_templates.views.list_message_templates_views",
        "documentation": {}
    },
    {
        "label": "MessageTemplateView_Update",
        "kind": 6,
        "importPath": "apps.message_templates.views.update_message_template_views",
        "description": "apps.message_templates.views.update_message_template_views",
        "peekOfCode": "class MessageTemplateView_Update(TemplateView, LoginRequiredMixin):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        orgs = self.request.user.organizations.all()\n        msg_tmpl = get_object_or_404(MessageTemplate, pk=self.kwargs['pk'])\n        context['form'] = MessageTemplateForm(instance=msg_tmpl)\n        context['message_template'] = msg_tmpl\n        context['organizations'] = orgs\n        return context\n    def post(self, request, *args, **kwargs):",
        "detail": "apps.message_templates.views.update_message_template_views",
        "documentation": {}
    },
    {
        "label": "MessageTemplatesConfig",
        "kind": 6,
        "importPath": "apps.message_templates.apps",
        "description": "apps.message_templates.apps",
        "peekOfCode": "class MessageTemplatesConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.message_templates'",
        "detail": "apps.message_templates.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.message_templates.urls",
        "description": "apps.message_templates.urls",
        "peekOfCode": "app_name = \"message_templates\"\nurlpatterns = [\n    path(\"list/\", MessageTemplateView_List.as_view(template_name=\"message_templates/list_message_templates.html\"),\n         name=\"list\"),\n    path(\"create/\", MessageTemplateView_Create.as_view(template_name=\"message_templates/create_message_template.html\"),\n         name=\"create\"),\n    path(\"<int:pk>/update/\", MessageTemplateView_Update.as_view(\n        template_name=\"message_templates/update_message_template.html\"), name=\"update\"),\n    path(\"<int:pk>/delete/\", MessageTemplateView_Delete.as_view(), name=\"delete\"),\n]",
        "detail": "apps.message_templates.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.message_templates.urls",
        "description": "apps.message_templates.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"list/\", MessageTemplateView_List.as_view(template_name=\"message_templates/list_message_templates.html\"),\n         name=\"list\"),\n    path(\"create/\", MessageTemplateView_Create.as_view(template_name=\"message_templates/create_message_template.html\"),\n         name=\"create\"),\n    path(\"<int:pk>/update/\", MessageTemplateView_Update.as_view(\n        template_name=\"message_templates/update_message_template.html\"), name=\"update\"),\n    path(\"<int:pk>/delete/\", MessageTemplateView_Delete.as_view(), name=\"delete\"),\n]",
        "detail": "apps.message_templates.urls",
        "documentation": {}
    },
    {
        "label": "CustomAPIAdmin",
        "kind": 6,
        "importPath": "apps.mm_apis.admin.custom_api_admin",
        "description": "apps.mm_apis.admin.custom_api_admin",
        "peekOfCode": "class CustomAPIAdmin(admin.ModelAdmin):\n    list_display = CUSTOM_API_ADMIN_LIST\n    search_fields = CUSTOM_API_ADMIN_SEARCH\n    list_filter = CUSTOM_API_ADMIN_FILTER",
        "detail": "apps.mm_apis.admin.custom_api_admin",
        "documentation": {}
    },
    {
        "label": "CustomAPIReferenceAdmin",
        "kind": 6,
        "importPath": "apps.mm_apis.admin.custom_api_reference_admin",
        "description": "apps.mm_apis.admin.custom_api_reference_admin",
        "peekOfCode": "class CustomAPIReferenceAdmin(admin.ModelAdmin):\n    list_display = CUSTOM_API_REF_ADMIN_LIST\n    search_fields = CUSTOM_API_REF_ADMIN_SEARCH\n    list_filter = CUSTOM_API_REF_ADMIN_FILTER",
        "detail": "apps.mm_apis.admin.custom_api_reference_admin",
        "documentation": {}
    },
    {
        "label": "CustomAPIForm",
        "kind": 6,
        "importPath": "apps.mm_apis.forms.custom_api_forms",
        "description": "apps.mm_apis.forms.custom_api_forms",
        "peekOfCode": "class CustomAPIForm(forms.ModelForm):\n    class Meta:\n        model = CustomAPI\n        fields = [\n            'name', 'description', 'api_picture', 'authentication_type', 'authentication_token', 'base_url',\n            'categories', 'is_public'\n        ]\n        widgets = {'categories': forms.CheckboxSelectMultiple()}",
        "detail": "apps.mm_apis.forms.custom_api_forms",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.mm_apis.migrations.0001_initial",
        "description": "apps.mm_apis.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('assistants', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='CustomAPI',\n            fields=[",
        "detail": "apps.mm_apis.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "CustomAPI",
        "kind": 6,
        "importPath": "apps.mm_apis.models.custom_api_models",
        "description": "apps.mm_apis.models.custom_api_models",
        "peekOfCode": "class CustomAPI(models.Model):\n    is_public = models.BooleanField(default=False)\n    categories = models.JSONField(default=list, blank=True)\n    name = models.CharField(max_length=255)\n    description = models.TextField()\n    authentication_type = models.CharField(max_length=5000, default=\"None\", choices=CUSTOM_API_AUTHENTICATION_TYPES)\n    authentication_token = models.CharField(max_length=5000, default=\"\", blank=True)\n    base_url = models.CharField(max_length=5000, default=\"\")\n    endpoints = models.JSONField(default=dict, blank=True)\n    api_picture = models.ImageField(upload_to=\"custom_apis/%YYYY/%mm/%dd/\", blank=True, null=True)",
        "detail": "apps.mm_apis.models.custom_api_models",
        "documentation": {}
    },
    {
        "label": "CustomAPIReference",
        "kind": 6,
        "importPath": "apps.mm_apis.models.custom_api_reference_models",
        "description": "apps.mm_apis.models.custom_api_reference_models",
        "peekOfCode": "class CustomAPIReference(models.Model):\n    custom_api = models.ForeignKey(\"CustomAPI\", on_delete=models.CASCADE, related_name=\"custom_api_references\")\n    assistant = models.ForeignKey(\"assistants.Assistant\", on_delete=models.CASCADE)\n    api_source = models.CharField(max_length=255, default=\"internal\", blank=True)\n    created_by_user = models.ForeignKey(\"auth.User\", on_delete=models.SET_NULL, null=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    def __str__(self):\n        return self.custom_api.name + \" - \" + self.assistant.name + \" - \" + self.created_at.strftime(\n            \"%Y-%m-%d %H:%M:%S\")",
        "detail": "apps.mm_apis.models.custom_api_reference_models",
        "documentation": {}
    },
    {
        "label": "mm_api_execution_task",
        "kind": 2,
        "importPath": "apps.mm_apis.tasks.mm_api_execution_tasks",
        "description": "apps.mm_apis.tasks.mm_api_execution_tasks",
        "peekOfCode": "def mm_api_execution_task(custom_api_id, endpoint_name: str, path_values=None, query_values=None, body_values=None):\n    if path_values is None:\n        path_values = {}\n    from apps.mm_apis.models import CustomAPI\n    from apps.mm_apis.utils import AcceptedHTTPRequestMethods\n    response = {\"stdout\": \"\", \"stderr\": \"\"}\n    custom_api = CustomAPI.objects.get(id=custom_api_id)\n    auth_type = custom_api.authentication_type\n    auth_key = custom_api.authentication_token\n    base_url = custom_api.base_url",
        "detail": "apps.mm_apis.tasks.mm_api_execution_tasks",
        "documentation": {}
    },
    {
        "label": "randomize_featured_apis",
        "kind": 2,
        "importPath": "apps.mm_apis.tasks.randomize_feature_apis_tasks",
        "description": "apps.mm_apis.tasks.randomize_feature_apis_tasks",
        "peekOfCode": "def randomize_featured_apis():\n    all_apis = CustomAPI.objects.all()\n    for api in all_apis:\n        api.is_featured = False\n        api.save()\n    featured_apis = CustomAPI.objects.order_by('?')[:NUMBER_OF_RANDOM_FEATURED_APIS]\n    for api in featured_apis:\n        api.is_featured = True\n        api.save()",
        "detail": "apps.mm_apis.tasks.randomize_feature_apis_tasks",
        "documentation": {}
    },
    {
        "label": "get_api_item",
        "kind": 2,
        "importPath": "apps.mm_apis.templatetags.get_api_item",
        "description": "apps.mm_apis.templatetags.get_api_item",
        "peekOfCode": "def get_api_item(dictionary, key):\n    return dictionary.get(key)\n@register.filter\ndef get_api_ids(dictionary, key):\n    item = dictionary.get(key)\n    ids = []\n    for i in item:\n        ids.append(i.custom_api.id)\n    return ids",
        "detail": "apps.mm_apis.templatetags.get_api_item",
        "documentation": {}
    },
    {
        "label": "get_api_ids",
        "kind": 2,
        "importPath": "apps.mm_apis.templatetags.get_api_item",
        "description": "apps.mm_apis.templatetags.get_api_item",
        "peekOfCode": "def get_api_ids(dictionary, key):\n    item = dictionary.get(key)\n    ids = []\n    for i in item:\n        ids.append(i.custom_api.id)\n    return ids",
        "detail": "apps.mm_apis.templatetags.get_api_item",
        "documentation": {}
    },
    {
        "label": "register",
        "kind": 5,
        "importPath": "apps.mm_apis.templatetags.get_api_item",
        "description": "apps.mm_apis.templatetags.get_api_item",
        "peekOfCode": "register = template.Library()\n@register.filter\ndef get_api_item(dictionary, key):\n    return dictionary.get(key)\n@register.filter\ndef get_api_ids(dictionary, key):\n    item = dictionary.get(key)\n    ids = []\n    for i in item:\n        ids.append(i.custom_api.id)",
        "detail": "apps.mm_apis.templatetags.get_api_item",
        "documentation": {}
    },
    {
        "label": "fixture_mm_apis_init",
        "kind": 2,
        "importPath": "apps.mm_apis.tests.conftest",
        "description": "apps.mm_apis.tests.conftest",
        "peekOfCode": "def fixture_mm_apis_init():\n    return True",
        "detail": "apps.mm_apis.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_mm_apis_test_forms",
        "kind": 2,
        "importPath": "apps.mm_apis.tests.test_forms",
        "description": "apps.mm_apis.tests.test_forms",
        "peekOfCode": "def test_init_mm_apis_test_forms():\n    assert True",
        "detail": "apps.mm_apis.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_mm_apis_test_models",
        "kind": 2,
        "importPath": "apps.mm_apis.tests.test_models",
        "description": "apps.mm_apis.tests.test_models",
        "peekOfCode": "def test_init_mm_apis_test_models():\n    assert True",
        "detail": "apps.mm_apis.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_mm_apis_test_utils",
        "kind": 2,
        "importPath": "apps.mm_apis.tests.test_utils",
        "description": "apps.mm_apis.tests.test_utils",
        "peekOfCode": "def test_init_mm_apis_test_utils():\n    assert True",
        "detail": "apps.mm_apis.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_mm_apis_test_views",
        "kind": 2,
        "importPath": "apps.mm_apis.tests.test_views",
        "description": "apps.mm_apis.tests.test_views",
        "peekOfCode": "def test_init_mm_apis_test_views():\n    assert True",
        "detail": "apps.mm_apis.tests.test_views",
        "documentation": {}
    },
    {
        "label": "AcceptedHTTPRequestMethods",
        "kind": 6,
        "importPath": "apps.mm_apis.utils.constant_utils",
        "description": "apps.mm_apis.utils.constant_utils",
        "peekOfCode": "class AcceptedHTTPRequestMethods:\n    POST = \"POST\"\n    GET = \"GET\"\n    PUT = \"PUT\"\n    DELETE = \"DELETE\"\n    PATCH = \"PATCH\"\nMAXIMUM_RETRIES = 3\nNUMBER_OF_RANDOM_FEATURED_APIS = 5\nCUSTOM_API_ADMIN_LIST = [\n    \"name\",",
        "detail": "apps.mm_apis.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "SOURCES_OF_CUSTOM_APIS",
        "kind": 5,
        "importPath": "apps.mm_apis.utils.constant_utils",
        "description": "apps.mm_apis.utils.constant_utils",
        "peekOfCode": "SOURCES_OF_CUSTOM_APIS = {\n    \"internal\": \"internal\",\n    \"external\": \"external\",\n}\nCATEGORIES_OF_CUSTOM_APIS = [\n    (\"data\", \"Data\"),\n    (\"aiml\", \"AI/ML\"),\n    (\"media\", \"Media\"),\n    (\"automation\", \"Automation\"),\n    (\"apis\", \"APIs\"),",
        "detail": "apps.mm_apis.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CATEGORIES_OF_CUSTOM_APIS",
        "kind": 5,
        "importPath": "apps.mm_apis.utils.constant_utils",
        "description": "apps.mm_apis.utils.constant_utils",
        "peekOfCode": "CATEGORIES_OF_CUSTOM_APIS = [\n    (\"data\", \"Data\"),\n    (\"aiml\", \"AI/ML\"),\n    (\"media\", \"Media\"),\n    (\"automation\", \"Automation\"),\n    (\"apis\", \"APIs\"),\n    (\"finance\", \"Finance\"),\n    (\"commerce\", \"Commerce\"),\n    (\"support\", \"Support\"),\n    (\"social\", \"Social\"),",
        "detail": "apps.mm_apis.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_API_AUTHENTICATION_TYPES",
        "kind": 5,
        "importPath": "apps.mm_apis.utils.constant_utils",
        "description": "apps.mm_apis.utils.constant_utils",
        "peekOfCode": "CUSTOM_API_AUTHENTICATION_TYPES = [\n    (\"None\", \"None\"),\n    (\"Bearer\", \"Bearer\")\n]\nclass AcceptedHTTPRequestMethods:\n    POST = \"POST\"\n    GET = \"GET\"\n    PUT = \"PUT\"\n    DELETE = \"DELETE\"\n    PATCH = \"PATCH\"",
        "detail": "apps.mm_apis.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MAXIMUM_RETRIES",
        "kind": 5,
        "importPath": "apps.mm_apis.utils.constant_utils",
        "description": "apps.mm_apis.utils.constant_utils",
        "peekOfCode": "MAXIMUM_RETRIES = 3\nNUMBER_OF_RANDOM_FEATURED_APIS = 5\nCUSTOM_API_ADMIN_LIST = [\n    \"name\",\n    \"created_by_user\",\n    \"created_at\",\n    \"updated_at\",\n]\nCUSTOM_API_ADMIN_FILTER = [\"categories\", \"created_at\", \"updated_at\"]\nCUSTOM_API_ADMIN_SEARCH = [\"name\", \"description\", \"categories\", \"created_by_user__username\"]",
        "detail": "apps.mm_apis.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "NUMBER_OF_RANDOM_FEATURED_APIS",
        "kind": 5,
        "importPath": "apps.mm_apis.utils.constant_utils",
        "description": "apps.mm_apis.utils.constant_utils",
        "peekOfCode": "NUMBER_OF_RANDOM_FEATURED_APIS = 5\nCUSTOM_API_ADMIN_LIST = [\n    \"name\",\n    \"created_by_user\",\n    \"created_at\",\n    \"updated_at\",\n]\nCUSTOM_API_ADMIN_FILTER = [\"categories\", \"created_at\", \"updated_at\"]\nCUSTOM_API_ADMIN_SEARCH = [\"name\", \"description\", \"categories\", \"created_by_user__username\"]\nCUSTOM_API_REF_ADMIN_LIST = [",
        "detail": "apps.mm_apis.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_API_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.mm_apis.utils.constant_utils",
        "description": "apps.mm_apis.utils.constant_utils",
        "peekOfCode": "CUSTOM_API_ADMIN_LIST = [\n    \"name\",\n    \"created_by_user\",\n    \"created_at\",\n    \"updated_at\",\n]\nCUSTOM_API_ADMIN_FILTER = [\"categories\", \"created_at\", \"updated_at\"]\nCUSTOM_API_ADMIN_SEARCH = [\"name\", \"description\", \"categories\", \"created_by_user__username\"]\nCUSTOM_API_REF_ADMIN_LIST = [\n    \"custom_api\",",
        "detail": "apps.mm_apis.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_API_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.mm_apis.utils.constant_utils",
        "description": "apps.mm_apis.utils.constant_utils",
        "peekOfCode": "CUSTOM_API_ADMIN_FILTER = [\"categories\", \"created_at\", \"updated_at\"]\nCUSTOM_API_ADMIN_SEARCH = [\"name\", \"description\", \"categories\", \"created_by_user__username\"]\nCUSTOM_API_REF_ADMIN_LIST = [\n    \"custom_api\",\n    \"assistant\",\n    \"api_source\",\n    \"created_by_user\",\n    \"created_at\",\n    \"updated_at\",\n]",
        "detail": "apps.mm_apis.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_API_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.mm_apis.utils.constant_utils",
        "description": "apps.mm_apis.utils.constant_utils",
        "peekOfCode": "CUSTOM_API_ADMIN_SEARCH = [\"name\", \"description\", \"categories\", \"created_by_user__username\"]\nCUSTOM_API_REF_ADMIN_LIST = [\n    \"custom_api\",\n    \"assistant\",\n    \"api_source\",\n    \"created_by_user\",\n    \"created_at\",\n    \"updated_at\",\n]\nCUSTOM_API_REF_ADMIN_FILTER = [\"api_source\", \"created_at\", \"updated_at\"]",
        "detail": "apps.mm_apis.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_API_REF_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.mm_apis.utils.constant_utils",
        "description": "apps.mm_apis.utils.constant_utils",
        "peekOfCode": "CUSTOM_API_REF_ADMIN_LIST = [\n    \"custom_api\",\n    \"assistant\",\n    \"api_source\",\n    \"created_by_user\",\n    \"created_at\",\n    \"updated_at\",\n]\nCUSTOM_API_REF_ADMIN_FILTER = [\"api_source\", \"created_at\", \"updated_at\"]\nCUSTOM_API_REF_ADMIN_SEARCH = [\"custom_api__name\", \"assistant__name\", \"api_source\", \"created_by_user__username\"]",
        "detail": "apps.mm_apis.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_API_REF_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.mm_apis.utils.constant_utils",
        "description": "apps.mm_apis.utils.constant_utils",
        "peekOfCode": "CUSTOM_API_REF_ADMIN_FILTER = [\"api_source\", \"created_at\", \"updated_at\"]\nCUSTOM_API_REF_ADMIN_SEARCH = [\"custom_api__name\", \"assistant__name\", \"api_source\", \"created_by_user__username\"]",
        "detail": "apps.mm_apis.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_API_REF_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.mm_apis.utils.constant_utils",
        "description": "apps.mm_apis.utils.constant_utils",
        "peekOfCode": "CUSTOM_API_REF_ADMIN_SEARCH = [\"custom_api__name\", \"assistant__name\", \"api_source\", \"created_by_user__username\"]",
        "detail": "apps.mm_apis.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CustomAPIView_Connections",
        "kind": 6,
        "importPath": "apps.mm_apis.views.api.connections_apis_views",
        "description": "apps.mm_apis.views.api.connections_apis_views",
        "peekOfCode": "class CustomAPIView_Connections(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        user = self.request.user\n        conn_orgs = Organization.objects.filter(users__in=[user])\n        users_of_conn_orgs = [user for org in conn_orgs for user in org.users.all()]\n        apis = CustomAPI.objects.filter(created_by_user__in=users_of_conn_orgs)\n        ext_api_refs = CustomAPIReference.objects.filter(assistant__organization__in=conn_orgs).exclude(\n            custom_api__created_by_user__in=users_of_conn_orgs)\n        agents = Assistant.objects.filter(organization__in=conn_orgs).select_related('organization')",
        "detail": "apps.mm_apis.views.api.connections_apis_views",
        "documentation": {}
    },
    {
        "label": "CustomAPIView_Create",
        "kind": 6,
        "importPath": "apps.mm_apis.views.api.create_api_views",
        "description": "apps.mm_apis.views.api.create_api_views",
        "peekOfCode": "class CustomAPIView_Create(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['form'] = CustomAPIForm()\n        context['CUSTOM_API_CATEGORIES'] = CATEGORIES_OF_CUSTOM_APIS\n        context['CUSTOM_API_AUTHENTICATION_TYPES'] = CUSTOM_API_AUTHENTICATION_TYPES\n        return context\n    def post(self, request, *args, **kwargs):\n        form = CustomAPIForm(request.POST, request.FILES)\n        ##############################",
        "detail": "apps.mm_apis.views.api.create_api_views",
        "documentation": {}
    },
    {
        "label": "CustomAPIView_Delete",
        "kind": 6,
        "importPath": "apps.mm_apis.views.api.delete_api_views",
        "description": "apps.mm_apis.views.api.delete_api_views",
        "peekOfCode": "class CustomAPIView_Delete(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        custom_api_id = self.kwargs.get('pk')\n        custom_api = CustomAPI.objects.get(id=custom_api_id)\n        context['custom_api'] = custom_api\n        return context\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - DELETE_APIS",
        "detail": "apps.mm_apis.views.api.delete_api_views",
        "documentation": {}
    },
    {
        "label": "CustomAPIView_List",
        "kind": 6,
        "importPath": "apps.mm_apis.views.api.list_apis_views",
        "description": "apps.mm_apis.views.api.list_apis_views",
        "peekOfCode": "class CustomAPIView_List(LoginRequiredMixin, TemplateView):\n    paginate_by = 10\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_APIS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_APIS):\n            messages.error(self.request, \"You do not have permission to list custom APIs.\")\n            return context",
        "detail": "apps.mm_apis.views.api.list_apis_views",
        "documentation": {}
    },
    {
        "label": "CustomAPIView_Store",
        "kind": 6,
        "importPath": "apps.mm_apis.views.store.api_store_views",
        "description": "apps.mm_apis.views.store.api_store_views",
        "peekOfCode": "class CustomAPIView_Store(LoginRequiredMixin, TemplateView):\n    paginate_by = 10\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        search_query = self.request.GET.get('search', '')\n        selected_categories = self.request.GET.getlist('categories')\n        apis_list = CustomAPI.objects.filter(is_public=True)\n        if search_query:\n            apis_list = apis_list.filter(Q(name__icontains=search_query) | Q(description__icontains=search_query))\n        if selected_categories:",
        "detail": "apps.mm_apis.views.store.api_store_views",
        "documentation": {}
    },
    {
        "label": "MmApisConfig",
        "kind": 6,
        "importPath": "apps.mm_apis.apps",
        "description": "apps.mm_apis.apps",
        "peekOfCode": "class MmApisConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.mm_apis'",
        "detail": "apps.mm_apis.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.mm_apis.urls",
        "description": "apps.mm_apis.urls",
        "peekOfCode": "app_name = \"mm_apis\"\nurlpatterns = [\n    path(\"create/\", CustomAPIView_Create.as_view(template_name=\"mm_apis/apis/create_custom_api.html\"), name=\"create\"),\n    path(\"list/\", CustomAPIView_List.as_view(template_name=\"mm_apis/apis/list_custom_apis.html\"), name=\"list\"),\n    path(\"delete/<int:pk>/\", CustomAPIView_Delete.as_view(template_name=\"mm_apis/apis/confirm_delete_custom_api.html\"),\n         name=\"delete\"),\n    path(\"connect/\", CustomAPIView_Connections.as_view(\n        template_name=\"mm_apis/connections/manage_api_connections.html\"), name=\"connect\"),\n    path(\"store/\", CustomAPIView_Store.as_view(template_name=\"mm_apis/store/api_store.html\"), name=\"store\"),\n]",
        "detail": "apps.mm_apis.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.mm_apis.urls",
        "description": "apps.mm_apis.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"create/\", CustomAPIView_Create.as_view(template_name=\"mm_apis/apis/create_custom_api.html\"), name=\"create\"),\n    path(\"list/\", CustomAPIView_List.as_view(template_name=\"mm_apis/apis/list_custom_apis.html\"), name=\"list\"),\n    path(\"delete/<int:pk>/\", CustomAPIView_Delete.as_view(template_name=\"mm_apis/apis/confirm_delete_custom_api.html\"),\n         name=\"delete\"),\n    path(\"connect/\", CustomAPIView_Connections.as_view(\n        template_name=\"mm_apis/connections/manage_api_connections.html\"), name=\"connect\"),\n    path(\"store/\", CustomAPIView_Store.as_view(template_name=\"mm_apis/store/api_store.html\"), name=\"store\"),\n]",
        "detail": "apps.mm_apis.urls",
        "documentation": {}
    },
    {
        "label": "CustomFunctionAdmin",
        "kind": 6,
        "importPath": "apps.mm_functions.admin.custom_function_admin",
        "description": "apps.mm_functions.admin.custom_function_admin",
        "peekOfCode": "class CustomFunctionAdmin(admin.ModelAdmin):\n    list_display = CUSTOM_FUNCTION_ADMIN_LIST\n    list_filter = CUSTOM_FUNCTION_ADMIN_FILTER\n    search_fields = CUSTOM_FUNCTION_ADMIN_SEARCH\n    ordering = (\"-created_at\",)",
        "detail": "apps.mm_functions.admin.custom_function_admin",
        "documentation": {}
    },
    {
        "label": "CustomFunctionReferenceAdmin",
        "kind": 6,
        "importPath": "apps.mm_functions.admin.custom_function_reference_admin",
        "description": "apps.mm_functions.admin.custom_function_reference_admin",
        "peekOfCode": "class CustomFunctionReferenceAdmin(admin.ModelAdmin):\n    list_display = CUSTOM_FUNCTION_REF_ADMIN_LIST\n    list_filter = CUSTOM_FUNCTION_REF_ADMIN_FILTER\n    search_fields = CUSTOM_FUNCTION_REF_ADMIN_SEARCH\n    ordering = (\"-created_at\",)",
        "detail": "apps.mm_functions.admin.custom_function_reference_admin",
        "documentation": {}
    },
    {
        "label": "CustomFunctionForm",
        "kind": 6,
        "importPath": "apps.mm_functions.forms.custom_function_forms",
        "description": "apps.mm_functions.forms.custom_function_forms",
        "peekOfCode": "class CustomFunctionForm(forms.ModelForm):\n    class Meta:\n        model = CustomFunction\n        fields = ['name', 'description', 'packages', 'input_fields', 'output_fields', 'code_text', 'is_public',\n                  'function_picture', 'created_by_user']",
        "detail": "apps.mm_functions.forms.custom_function_forms",
        "documentation": {}
    },
    {
        "label": "CustomFunctionReferenceForm",
        "kind": 6,
        "importPath": "apps.mm_functions.forms.custom_function_reference_forms",
        "description": "apps.mm_functions.forms.custom_function_reference_forms",
        "peekOfCode": "class CustomFunctionReferenceForm(forms.ModelForm):\n    class Meta:\n        model = CustomFunctionReference\n        fields = ['custom_function', 'assistant']\n        widgets = {\n            'custom_function': forms.Select(attrs={'class': 'form-control'}),\n            'assistant': forms.Select(attrs={'class': 'form-control'}),\n        }",
        "detail": "apps.mm_functions.forms.custom_function_reference_forms",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.mm_functions.migrations.0001_initial",
        "description": "apps.mm_functions.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('assistants', '0003_initial'),\n        ('organization', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='CustomFunction',",
        "detail": "apps.mm_functions.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "CustomFunction",
        "kind": 6,
        "importPath": "apps.mm_functions.models.custom_function_models",
        "description": "apps.mm_functions.models.custom_function_models",
        "peekOfCode": "class CustomFunction(models.Model):\n    is_public = models.BooleanField(default=False)\n    categories = models.JSONField(default=list, blank=True)\n    name = models.CharField(max_length=255)\n    description = models.TextField()\n    packages = models.JSONField(default=list, blank=True)\n    input_fields = models.JSONField(default=list, blank=True)\n    output_fields = models.JSONField(default=list, blank=True)\n    code_text = models.TextField(default=\"\", blank=True)\n    secrets = models.JSONField(default=dict, blank=True)",
        "detail": "apps.mm_functions.models.custom_function_models",
        "documentation": {}
    },
    {
        "label": "CustomFunctionReference",
        "kind": 6,
        "importPath": "apps.mm_functions.models.custom_function_reference_models",
        "description": "apps.mm_functions.models.custom_function_reference_models",
        "peekOfCode": "class CustomFunctionReference(models.Model):\n    organization = models.ForeignKey(\"organization.Organization\", on_delete=models.CASCADE, null=True, blank=True,\n                                     related_name=\"custom_function_references\")\n    custom_function = models.ForeignKey(\"CustomFunction\", on_delete=models.CASCADE,\n                                        related_name=\"custom_function_references\")\n    assistant = models.ForeignKey(\"assistants.Assistant\", on_delete=models.CASCADE)\n    function_source = models.CharField(max_length=255, default=\"internal\", blank=True)\n    created_by_user = models.ForeignKey(\"auth.User\", on_delete=models.SET_NULL, null=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)",
        "detail": "apps.mm_functions.models.custom_function_reference_models",
        "documentation": {}
    },
    {
        "label": "mm_function_execution_task",
        "kind": 2,
        "importPath": "apps.mm_functions.tasks.function_execution_task_tasks",
        "description": "apps.mm_functions.tasks.function_execution_task_tasks",
        "peekOfCode": "def mm_function_execution_task(custom_function_id, input_values: dict):\n    from apps.mm_functions.tasks import generate_venv_uuid_string\n    custom_function = CustomFunction.objects.get(id=custom_function_id)\n    packages = custom_function.packages\n    input_fields = custom_function.input_fields\n    output_fields = custom_function.output_fields\n    package_imports = \"\\n\".join([f\"import {package['name']}\" for package in packages])\n    secrets = \"\"\n    for secret_item in custom_function.secrets:\n        name = secret_item[\"name\"]",
        "detail": "apps.mm_functions.tasks.function_execution_task_tasks",
        "documentation": {}
    },
    {
        "label": "generate_venv_uuid_string",
        "kind": 2,
        "importPath": "apps.mm_functions.tasks.generate_venv_uuid_string_tasks",
        "description": "apps.mm_functions.tasks.generate_venv_uuid_string_tasks",
        "peekOfCode": "def generate_venv_uuid_string():\n    return str(uuid.uuid4())",
        "detail": "apps.mm_functions.tasks.generate_venv_uuid_string_tasks",
        "documentation": {}
    },
    {
        "label": "randomize_featured_functions",
        "kind": 2,
        "importPath": "apps.mm_functions.tasks.randomize_featured_functions_tasks",
        "description": "apps.mm_functions.tasks.randomize_featured_functions_tasks",
        "peekOfCode": "def randomize_featured_functions():\n    all_functions = CustomFunction.objects.all()\n    for function in all_functions:\n        function.is_featured = False\n        function.save()\n    featured_functions = CustomFunction.objects.order_by('?')[:NUMBER_OF_RANDOM_FEATURED_FUNCTIONS]\n    for function in featured_functions:\n        function.is_featured = True\n        function.save()",
        "detail": "apps.mm_functions.tasks.randomize_featured_functions_tasks",
        "documentation": {}
    },
    {
        "label": "get_item",
        "kind": 2,
        "importPath": "apps.mm_functions.templatetags.get_item",
        "description": "apps.mm_functions.templatetags.get_item",
        "peekOfCode": "def get_item(dictionary, key):\n    return dictionary.get(key)\n@register.filter\ndef get_function_ids(dictionary, key):\n    item = dictionary.get(key)\n    ids = []\n    for i in item:\n        ids.append(i.custom_function.id)\n    return ids",
        "detail": "apps.mm_functions.templatetags.get_item",
        "documentation": {}
    },
    {
        "label": "get_function_ids",
        "kind": 2,
        "importPath": "apps.mm_functions.templatetags.get_item",
        "description": "apps.mm_functions.templatetags.get_item",
        "peekOfCode": "def get_function_ids(dictionary, key):\n    item = dictionary.get(key)\n    ids = []\n    for i in item:\n        ids.append(i.custom_function.id)\n    return ids",
        "detail": "apps.mm_functions.templatetags.get_item",
        "documentation": {}
    },
    {
        "label": "register",
        "kind": 5,
        "importPath": "apps.mm_functions.templatetags.get_item",
        "description": "apps.mm_functions.templatetags.get_item",
        "peekOfCode": "register = template.Library()\n@register.filter\ndef get_item(dictionary, key):\n    return dictionary.get(key)\n@register.filter\ndef get_function_ids(dictionary, key):\n    item = dictionary.get(key)\n    ids = []\n    for i in item:\n        ids.append(i.custom_function.id)",
        "detail": "apps.mm_functions.templatetags.get_item",
        "documentation": {}
    },
    {
        "label": "fixture_mm_functions_init",
        "kind": 2,
        "importPath": "apps.mm_functions.tests.conftest",
        "description": "apps.mm_functions.tests.conftest",
        "peekOfCode": "def fixture_mm_functions_init():\n    return True",
        "detail": "apps.mm_functions.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_mm_functions_test_forms",
        "kind": 2,
        "importPath": "apps.mm_functions.tests.test_forms",
        "description": "apps.mm_functions.tests.test_forms",
        "peekOfCode": "def test_init_mm_functions_test_forms():\n    assert True",
        "detail": "apps.mm_functions.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_mm_functions_test_models",
        "kind": 2,
        "importPath": "apps.mm_functions.tests.test_models",
        "description": "apps.mm_functions.tests.test_models",
        "peekOfCode": "def test_init_mm_functions_test_models():\n    assert True",
        "detail": "apps.mm_functions.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_mm_functions_test_utils",
        "kind": 2,
        "importPath": "apps.mm_functions.tests.test_utils",
        "description": "apps.mm_functions.tests.test_utils",
        "peekOfCode": "def test_init_mm_functions_test_utils():\n    assert True",
        "detail": "apps.mm_functions.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_mm_functions_test_views",
        "kind": 2,
        "importPath": "apps.mm_functions.tests.test_views",
        "description": "apps.mm_functions.tests.test_views",
        "peekOfCode": "def test_init_mm_functions_test_views():\n    assert True",
        "detail": "apps.mm_functions.tests.test_views",
        "documentation": {}
    },
    {
        "label": "FUNCTION_IO_FIELDS_FORMAT",
        "kind": 5,
        "importPath": "apps.mm_functions.utils.constant_utils",
        "description": "apps.mm_functions.utils.constant_utils",
        "peekOfCode": "FUNCTION_IO_FIELDS_FORMAT = {\n    \"name\": \"string\", \"description\": \"string\", \"type\": \"string\", \"required\": \"boolean\",\n}\nFUNCTION_PACKAGES_FORMAT = {\n    \"name\": \"string\", \"version\": \"string\",\n}\nFUNCTION_SOURCES = {\n    \"internal\": \"internal\", \"external\": \"external\",\n}\nCUSTOM_FUNCTION_CATEGORIES = [",
        "detail": "apps.mm_functions.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "FUNCTION_PACKAGES_FORMAT",
        "kind": 5,
        "importPath": "apps.mm_functions.utils.constant_utils",
        "description": "apps.mm_functions.utils.constant_utils",
        "peekOfCode": "FUNCTION_PACKAGES_FORMAT = {\n    \"name\": \"string\", \"version\": \"string\",\n}\nFUNCTION_SOURCES = {\n    \"internal\": \"internal\", \"external\": \"external\",\n}\nCUSTOM_FUNCTION_CATEGORIES = [\n    (\"data\", \"Data\"),\n    (\"aiml\", \"AI/ML\"),\n    (\"media\", \"Media\"),",
        "detail": "apps.mm_functions.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "FUNCTION_SOURCES",
        "kind": 5,
        "importPath": "apps.mm_functions.utils.constant_utils",
        "description": "apps.mm_functions.utils.constant_utils",
        "peekOfCode": "FUNCTION_SOURCES = {\n    \"internal\": \"internal\", \"external\": \"external\",\n}\nCUSTOM_FUNCTION_CATEGORIES = [\n    (\"data\", \"Data\"),\n    (\"aiml\", \"AI/ML\"),\n    (\"media\", \"Media\"),\n    (\"automation\", \"Automation\"),\n    (\"apis\", \"APIs\"),\n    (\"finance\", \"Finance\"),",
        "detail": "apps.mm_functions.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_FUNCTION_CATEGORIES",
        "kind": 5,
        "importPath": "apps.mm_functions.utils.constant_utils",
        "description": "apps.mm_functions.utils.constant_utils",
        "peekOfCode": "CUSTOM_FUNCTION_CATEGORIES = [\n    (\"data\", \"Data\"),\n    (\"aiml\", \"AI/ML\"),\n    (\"media\", \"Media\"),\n    (\"automation\", \"Automation\"),\n    (\"apis\", \"APIs\"),\n    (\"finance\", \"Finance\"),\n    (\"commerce\", \"Commerce\"),\n    (\"support\", \"Support\"),\n    (\"social\", \"Social\"),",
        "detail": "apps.mm_functions.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "NUMBER_OF_RANDOM_FEATURED_FUNCTIONS",
        "kind": 5,
        "importPath": "apps.mm_functions.utils.constant_utils",
        "description": "apps.mm_functions.utils.constant_utils",
        "peekOfCode": "NUMBER_OF_RANDOM_FEATURED_FUNCTIONS = 5\nCUSTOM_FUNCTION_ADMIN_LIST = (\"name\", \"is_public\", \"created_at\", \"updated_at\")\nCUSTOM_FUNCTION_ADMIN_FILTER = (\"is_public\",)\nCUSTOM_FUNCTION_ADMIN_SEARCH = (\"name\", \"description\")\nCUSTOM_FUNCTION_REF_ADMIN_LIST = (\"custom_function\", \"assistant\", \"created_by_user\", \"created_at\", \"updated_at\")\nCUSTOM_FUNCTION_REF_ADMIN_FILTER = (\"assistant\", \"created_by_user\")\nCUSTOM_FUNCTION_REF_ADMIN_SEARCH = (\"custom_function__name\", \"assistant__name\")",
        "detail": "apps.mm_functions.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_FUNCTION_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.mm_functions.utils.constant_utils",
        "description": "apps.mm_functions.utils.constant_utils",
        "peekOfCode": "CUSTOM_FUNCTION_ADMIN_LIST = (\"name\", \"is_public\", \"created_at\", \"updated_at\")\nCUSTOM_FUNCTION_ADMIN_FILTER = (\"is_public\",)\nCUSTOM_FUNCTION_ADMIN_SEARCH = (\"name\", \"description\")\nCUSTOM_FUNCTION_REF_ADMIN_LIST = (\"custom_function\", \"assistant\", \"created_by_user\", \"created_at\", \"updated_at\")\nCUSTOM_FUNCTION_REF_ADMIN_FILTER = (\"assistant\", \"created_by_user\")\nCUSTOM_FUNCTION_REF_ADMIN_SEARCH = (\"custom_function__name\", \"assistant__name\")",
        "detail": "apps.mm_functions.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_FUNCTION_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.mm_functions.utils.constant_utils",
        "description": "apps.mm_functions.utils.constant_utils",
        "peekOfCode": "CUSTOM_FUNCTION_ADMIN_FILTER = (\"is_public\",)\nCUSTOM_FUNCTION_ADMIN_SEARCH = (\"name\", \"description\")\nCUSTOM_FUNCTION_REF_ADMIN_LIST = (\"custom_function\", \"assistant\", \"created_by_user\", \"created_at\", \"updated_at\")\nCUSTOM_FUNCTION_REF_ADMIN_FILTER = (\"assistant\", \"created_by_user\")\nCUSTOM_FUNCTION_REF_ADMIN_SEARCH = (\"custom_function__name\", \"assistant__name\")",
        "detail": "apps.mm_functions.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_FUNCTION_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.mm_functions.utils.constant_utils",
        "description": "apps.mm_functions.utils.constant_utils",
        "peekOfCode": "CUSTOM_FUNCTION_ADMIN_SEARCH = (\"name\", \"description\")\nCUSTOM_FUNCTION_REF_ADMIN_LIST = (\"custom_function\", \"assistant\", \"created_by_user\", \"created_at\", \"updated_at\")\nCUSTOM_FUNCTION_REF_ADMIN_FILTER = (\"assistant\", \"created_by_user\")\nCUSTOM_FUNCTION_REF_ADMIN_SEARCH = (\"custom_function__name\", \"assistant__name\")",
        "detail": "apps.mm_functions.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_FUNCTION_REF_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.mm_functions.utils.constant_utils",
        "description": "apps.mm_functions.utils.constant_utils",
        "peekOfCode": "CUSTOM_FUNCTION_REF_ADMIN_LIST = (\"custom_function\", \"assistant\", \"created_by_user\", \"created_at\", \"updated_at\")\nCUSTOM_FUNCTION_REF_ADMIN_FILTER = (\"assistant\", \"created_by_user\")\nCUSTOM_FUNCTION_REF_ADMIN_SEARCH = (\"custom_function__name\", \"assistant__name\")",
        "detail": "apps.mm_functions.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_FUNCTION_REF_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.mm_functions.utils.constant_utils",
        "description": "apps.mm_functions.utils.constant_utils",
        "peekOfCode": "CUSTOM_FUNCTION_REF_ADMIN_FILTER = (\"assistant\", \"created_by_user\")\nCUSTOM_FUNCTION_REF_ADMIN_SEARCH = (\"custom_function__name\", \"assistant__name\")",
        "detail": "apps.mm_functions.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_FUNCTION_REF_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.mm_functions.utils.constant_utils",
        "description": "apps.mm_functions.utils.constant_utils",
        "peekOfCode": "CUSTOM_FUNCTION_REF_ADMIN_SEARCH = (\"custom_function__name\", \"assistant__name\")",
        "detail": "apps.mm_functions.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CustomFunctionView_Connections",
        "kind": 6,
        "importPath": "apps.mm_functions.views.function.connections_functions_views",
        "description": "apps.mm_functions.views.function.connections_functions_views",
        "peekOfCode": "class CustomFunctionView_Connections(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        user = self.request.user\n        conn_orgs = Organization.objects.filter(users__in=[user])\n        users_of_conn_orgs = [user for org in conn_orgs for user in org.users.all()]\n        functions = CustomFunction.objects.filter(created_by_user__in=users_of_conn_orgs)\n        ext_function_refs = CustomFunctionReference.objects.filter(assistant__organization__in=conn_orgs).exclude(\n            custom_function__created_by_user__in=users_of_conn_orgs)\n        agents = Assistant.objects.filter(organization__in=conn_orgs).select_related('organization')",
        "detail": "apps.mm_functions.views.function.connections_functions_views",
        "documentation": {}
    },
    {
        "label": "CustomFunctionView_Create",
        "kind": 6,
        "importPath": "apps.mm_functions.views.function.create_function_views",
        "description": "apps.mm_functions.views.function.create_function_views",
        "peekOfCode": "class CustomFunctionView_Create(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['form'] = CustomFunctionForm()\n        context['CUSTOM_FUNCTION_CATEGORIES'] = CUSTOM_FUNCTION_CATEGORIES\n        return context\n    def post(self, request, *args, **kwargs):\n        form = CustomFunctionForm(request.POST, request.FILES)\n        ##############################\n        # PERMISSION CHECK FOR - ADD_FUNCTIONS",
        "detail": "apps.mm_functions.views.function.create_function_views",
        "documentation": {}
    },
    {
        "label": "CustomFunctionView_Delete",
        "kind": 6,
        "importPath": "apps.mm_functions.views.function.delete_functions_views",
        "description": "apps.mm_functions.views.function.delete_functions_views",
        "peekOfCode": "class CustomFunctionView_Delete(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        custom_function_id = self.kwargs.get('pk')\n        custom_function = CustomFunction.objects.get(id=custom_function_id)\n        context['custom_function'] = custom_function\n        return context\n    def post(self, request, *args, **kwargs):\n        custom_function_id = self.kwargs.get('pk')\n        ##############################",
        "detail": "apps.mm_functions.views.function.delete_functions_views",
        "documentation": {}
    },
    {
        "label": "CustomFunctionView_List",
        "kind": 6,
        "importPath": "apps.mm_functions.views.function.list_functions_views",
        "description": "apps.mm_functions.views.function.list_functions_views",
        "peekOfCode": "class CustomFunctionView_List(LoginRequiredMixin, TemplateView):\n    paginate_by = 10\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_FUNCTIONS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_FUNCTIONS):\n            messages.error(self.request, \"You do not have permission to list custom functions.\")\n            return context",
        "detail": "apps.mm_functions.views.function.list_functions_views",
        "documentation": {}
    },
    {
        "label": "CustomFunctionView_Store",
        "kind": 6,
        "importPath": "apps.mm_functions.views.store.function_store_views",
        "description": "apps.mm_functions.views.store.function_store_views",
        "peekOfCode": "class CustomFunctionView_Store(LoginRequiredMixin, TemplateView):\n    paginate_by = 10\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        search_query = self.request.GET.get('search', '')\n        selected_categories = self.request.GET.getlist('categories')\n        functions_list = CustomFunction.objects.filter(is_public=True)\n        if search_query:\n            functions_list = functions_list.filter(\n                Q(name__icontains=search_query) | Q(description__icontains=search_query))",
        "detail": "apps.mm_functions.views.store.function_store_views",
        "documentation": {}
    },
    {
        "label": "MmFunctionsConfig",
        "kind": 6,
        "importPath": "apps.mm_functions.apps",
        "description": "apps.mm_functions.apps",
        "peekOfCode": "class MmFunctionsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.mm_functions'",
        "detail": "apps.mm_functions.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.mm_functions.urls",
        "description": "apps.mm_functions.urls",
        "peekOfCode": "app_name = \"mm_functions\"\nurlpatterns = [\n    path(\"create/\", CustomFunctionView_Create.as_view(\n        template_name=\"mm_functions/functions/create_custom_function.html\"), name=\"create\"),\n    path(\"list/\", CustomFunctionView_List.as_view(\n        template_name=\"mm_functions/functions/list_custom_functions.html\"), name=\"list\"),\n    path(\"delete/<int:pk>/\", CustomFunctionView_Delete.as_view(\n        template_name=\"mm_functions/functions/confirm_delete_custom_function.html\"), name=\"delete\"),\n    path(\"connect/\", CustomFunctionView_Connections.as_view(\n        template_name=\"mm_functions/connections/manage_assistant_connections.html\"), name=\"connect\"),",
        "detail": "apps.mm_functions.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.mm_functions.urls",
        "description": "apps.mm_functions.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"create/\", CustomFunctionView_Create.as_view(\n        template_name=\"mm_functions/functions/create_custom_function.html\"), name=\"create\"),\n    path(\"list/\", CustomFunctionView_List.as_view(\n        template_name=\"mm_functions/functions/list_custom_functions.html\"), name=\"list\"),\n    path(\"delete/<int:pk>/\", CustomFunctionView_Delete.as_view(\n        template_name=\"mm_functions/functions/confirm_delete_custom_function.html\"), name=\"delete\"),\n    path(\"connect/\", CustomFunctionView_Connections.as_view(\n        template_name=\"mm_functions/connections/manage_assistant_connections.html\"), name=\"connect\"),\n    path(\"store/\", CustomFunctionView_Store.as_view(",
        "detail": "apps.mm_functions.urls",
        "documentation": {}
    },
    {
        "label": "ScheduledJobAdmin",
        "kind": 6,
        "importPath": "apps.mm_scheduled_jobs.admin.scheduled_job_admin",
        "description": "apps.mm_scheduled_jobs.admin.scheduled_job_admin",
        "peekOfCode": "class ScheduledJobAdmin(admin.ModelAdmin):\n    list_display = SCHEDULED_JOB_ADMIN_LIST\n    search_fields = SCHEDULED_JOB_ADMIN_SEARCH\n    list_filter = SCHEDULED_JOB_ADMIN_FILTER",
        "detail": "apps.mm_scheduled_jobs.admin.scheduled_job_admin",
        "documentation": {}
    },
    {
        "label": "ScheduledJobInstanceAdmin",
        "kind": 6,
        "importPath": "apps.mm_scheduled_jobs.admin.scheduled_job_instance_admin",
        "description": "apps.mm_scheduled_jobs.admin.scheduled_job_instance_admin",
        "peekOfCode": "class ScheduledJobInstanceAdmin(admin.ModelAdmin):\n    list_display = SCHEDULED_JOB_INSTANCE_ADMIN_LIST\n    search_fields = SCHEDULED_JOB_INSTANCE_ADMIN_SEARCH\n    list_filter = SCHEDULED_JOB_INSTANCE_ADMIN_FILTER",
        "detail": "apps.mm_scheduled_jobs.admin.scheduled_job_instance_admin",
        "documentation": {}
    },
    {
        "label": "ScheduledJobForm",
        "kind": 6,
        "importPath": "apps.mm_scheduled_jobs.forms.scheduled_job_forms",
        "description": "apps.mm_scheduled_jobs.forms.scheduled_job_forms",
        "peekOfCode": "class ScheduledJobForm(forms.ModelForm):\n    class Meta:\n        model = ScheduledJob\n        fields = ['name', 'task_description', 'step_guide', 'assistant', 'minute', 'hour', 'day_of_week',\n                  'day_of_month', 'month_of_year', 'maximum_runs']\n        widgets = {\n            'step_guide': forms.Textarea(attrs={'rows': 5}), 'task_description': forms.Textarea(attrs={'rows': 10}),\n        }\n    def __init__(self, *args, **kwargs):\n        super(ScheduledJobForm, self).__init__(*args, **kwargs)",
        "detail": "apps.mm_scheduled_jobs.forms.scheduled_job_forms",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.mm_scheduled_jobs.migrations.0001_initial",
        "description": "apps.mm_scheduled_jobs.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('assistants', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='ScheduledJob',\n            fields=[",
        "detail": "apps.mm_scheduled_jobs.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "ScheduledJobInstance",
        "kind": 6,
        "importPath": "apps.mm_scheduled_jobs.models.scheduled_job_instance_models",
        "description": "apps.mm_scheduled_jobs.models.scheduled_job_instance_models",
        "peekOfCode": "class ScheduledJobInstance(models.Model):\n    scheduled_job = models.ForeignKey(ScheduledJob, on_delete=models.CASCADE, related_name='scheduled_job_instances',\n                                      null=True)\n    status = models.CharField(max_length=255, choices=SCHEDULED_JOB_INSTANCE_STATUSES, default='pending')\n    logs = models.JSONField(default=list)\n    execution_index = models.IntegerField(default=0, null=True)\n    started_at = models.DateTimeField(auto_now_add=True)\n    ended_at = models.DateTimeField(auto_now=True)\n    def __str__(self):\n        return self.scheduled_job.name + ' - ' + self.status + ' - ' + self.started_at.strftime('%Y%m%d%H%M%S')",
        "detail": "apps.mm_scheduled_jobs.models.scheduled_job_instance_models",
        "documentation": {}
    },
    {
        "label": "ScheduledJob",
        "kind": 6,
        "importPath": "apps.mm_scheduled_jobs.models.scheduled_job_models",
        "description": "apps.mm_scheduled_jobs.models.scheduled_job_models",
        "peekOfCode": "class ScheduledJob(models.Model):\n    name = models.CharField(max_length=255)\n    task_description = models.TextField(blank=True, null=True)\n    step_guide = models.JSONField(default=list)\n    assistant = models.ForeignKey('assistants.Assistant', on_delete=models.CASCADE, related_name='scheduled_jobs')\n    minute = models.CharField(max_length=600, blank=True, null=True)\n    hour = models.CharField(max_length=240, blank=True, null=True)\n    day_of_week = models.CharField(max_length=90, blank=True, null=True)  # e.g., \"0,1,2,3,4\"\n    day_of_month = models.CharField(max_length=310, blank=True, null=True)  # e.g., \"1,15,30\"\n    month_of_year = models.CharField(max_length=120, blank=True, null=True)  # e.g., \"1,6,12\"",
        "detail": "apps.mm_scheduled_jobs.models.scheduled_job_models",
        "documentation": {}
    },
    {
        "label": "register_periodic_task",
        "kind": 2,
        "importPath": "apps.mm_scheduled_jobs.signals.register_periodic_task_signals",
        "description": "apps.mm_scheduled_jobs.signals.register_periodic_task_signals",
        "peekOfCode": "def register_periodic_task(sender, instance, created, **kwargs):\n    PeriodicTask.objects.filter(name=f'ScheduledJob-{instance.id}').delete()\n    add_periodic_task(instance)",
        "detail": "apps.mm_scheduled_jobs.signals.register_periodic_task_signals",
        "documentation": {}
    },
    {
        "label": "unregister_periodic_task",
        "kind": 2,
        "importPath": "apps.mm_scheduled_jobs.signals.unregister_periodic_task_signals",
        "description": "apps.mm_scheduled_jobs.signals.unregister_periodic_task_signals",
        "peekOfCode": "def unregister_periodic_task(sender, instance, **kwargs):\n    PeriodicTask.objects.filter(name=f'ScheduledJob-{instance.id}').delete()",
        "detail": "apps.mm_scheduled_jobs.signals.unregister_periodic_task_signals",
        "documentation": {}
    },
    {
        "label": "add_periodic_task",
        "kind": 2,
        "importPath": "apps.mm_scheduled_jobs.tasks.add_periodic_task_tasks",
        "description": "apps.mm_scheduled_jobs.tasks.add_periodic_task_tasks",
        "peekOfCode": "def add_periodic_task(scheduled_job):\n    crontab_schedule, created = CrontabSchedule.objects.get_or_create(\n        minute=scheduled_job.minute or '*',\n        hour=scheduled_job.hour or '*',\n        day_of_week=scheduled_job.day_of_week or '*',\n        day_of_month=scheduled_job.day_of_month or '*',\n        month_of_year=scheduled_job.month_of_year or '*'\n    )\n    PeriodicTask.objects.create(\n        crontab=crontab_schedule,",
        "detail": "apps.mm_scheduled_jobs.tasks.add_periodic_task_tasks",
        "documentation": {}
    },
    {
        "label": "execute_scheduled_job",
        "kind": 2,
        "importPath": "apps.mm_scheduled_jobs.tasks.execute_scheduled_job_tasks",
        "description": "apps.mm_scheduled_jobs.tasks.execute_scheduled_job_tasks",
        "peekOfCode": "def execute_scheduled_job(scheduled_job_id):\n    from apps.mm_scheduled_jobs.tasks import generate_scheduled_job_chat_name\n    from apps.mm_scheduled_jobs.models import ScheduledJob, ScheduledJobInstance\n    from apps.mm_scheduled_jobs.utils import ScheduledJobInstanceStatusesNames\n    from apps.core.generative_ai.utils import GPT_DEFAULT_ENCODING_ENGINE\n    from apps.core.generative_ai.utils import ChatRoles\n    job = ScheduledJob.objects.get(id=scheduled_job_id)\n    if job.current_run_count > job.maximum_runs:\n        job.delete()\n        return",
        "detail": "apps.mm_scheduled_jobs.tasks.execute_scheduled_job_tasks",
        "documentation": {}
    },
    {
        "label": "generate_scheduled_job_chat_name",
        "kind": 2,
        "importPath": "apps.mm_scheduled_jobs.tasks.generate_scheduled_job_chat_name_tasks",
        "description": "apps.mm_scheduled_jobs.tasks.generate_scheduled_job_chat_name_tasks",
        "peekOfCode": "def generate_scheduled_job_chat_name(scheduled_job_name):\n    uuid_1 = str(uuid4())\n    uuid_2 = str(uuid4())\n    return f\"{slugify(scheduled_job_name)} - {uuid_1} - {uuid_2}\"",
        "detail": "apps.mm_scheduled_jobs.tasks.generate_scheduled_job_chat_name_tasks",
        "documentation": {}
    },
    {
        "label": "fixture_mm_scheduled_jobs_init",
        "kind": 2,
        "importPath": "apps.mm_scheduled_jobs.tests.conftest",
        "description": "apps.mm_scheduled_jobs.tests.conftest",
        "peekOfCode": "def fixture_mm_scheduled_jobs_init():\n    return True",
        "detail": "apps.mm_scheduled_jobs.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_mm_scheduled_jobs_test_forms",
        "kind": 2,
        "importPath": "apps.mm_scheduled_jobs.tests.test_forms",
        "description": "apps.mm_scheduled_jobs.tests.test_forms",
        "peekOfCode": "def test_init_mm_scheduled_jobs_test_forms():\n    assert True",
        "detail": "apps.mm_scheduled_jobs.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_mm_scheduled_jobs_test_models",
        "kind": 2,
        "importPath": "apps.mm_scheduled_jobs.tests.test_models",
        "description": "apps.mm_scheduled_jobs.tests.test_models",
        "peekOfCode": "def test_init_mm_scheduled_jobs_test_models():\n    assert True",
        "detail": "apps.mm_scheduled_jobs.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_mm_scheduled_jobs_test_utils",
        "kind": 2,
        "importPath": "apps.mm_scheduled_jobs.tests.test_utils",
        "description": "apps.mm_scheduled_jobs.tests.test_utils",
        "peekOfCode": "def test_init_mm_scheduled_jobs_test_utils():\n    assert True",
        "detail": "apps.mm_scheduled_jobs.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_mm_scheduled_jobs_test_views",
        "kind": 2,
        "importPath": "apps.mm_scheduled_jobs.tests.test_views",
        "description": "apps.mm_scheduled_jobs.tests.test_views",
        "peekOfCode": "def test_init_mm_scheduled_jobs_test_views():\n    assert True",
        "detail": "apps.mm_scheduled_jobs.tests.test_views",
        "documentation": {}
    },
    {
        "label": "TriggerTypeChoicesNames",
        "kind": 6,
        "importPath": "apps.mm_scheduled_jobs.utils.constant_utils",
        "description": "apps.mm_scheduled_jobs.utils.constant_utils",
        "peekOfCode": "class TriggerTypeChoicesNames:\n    INTERVAL = 'interval'\n    CHRONOLOGICAL = 'chronological'\nSCHEDULED_JOB_INSTANCE_STATUSES = [\n    ('pending', 'Pending'),\n    ('building', 'Building'),\n    ('initializing_assistant', 'Initializing Assistant'),\n    ('generating', 'Generating'),\n    ('saving_logs', 'Saving Logs'),\n    ('cleaning_up', 'Cleaning Up'),",
        "detail": "apps.mm_scheduled_jobs.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "ScheduledJobInstanceStatusesNames",
        "kind": 6,
        "importPath": "apps.mm_scheduled_jobs.utils.constant_utils",
        "description": "apps.mm_scheduled_jobs.utils.constant_utils",
        "peekOfCode": "class ScheduledJobInstanceStatusesNames:\n    PENDING = 'pending'\n    BUILDING = 'building'\n    INITIALIZING_ASSISTANT = 'initializing_assistant'\n    GENERATING = 'generating'\n    SAVING_LOGS = 'saving_logs'\n    CLEANING_UP = 'cleaning_up'\n    COMPLETED = 'completed'\n    FAILED = 'failed'\nSCHEDULED_JOB_ADMIN_LIST = [",
        "detail": "apps.mm_scheduled_jobs.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "SCHEDULED_JOB_INSTANCE_STATUSES",
        "kind": 5,
        "importPath": "apps.mm_scheduled_jobs.utils.constant_utils",
        "description": "apps.mm_scheduled_jobs.utils.constant_utils",
        "peekOfCode": "SCHEDULED_JOB_INSTANCE_STATUSES = [\n    ('pending', 'Pending'),\n    ('building', 'Building'),\n    ('initializing_assistant', 'Initializing Assistant'),\n    ('generating', 'Generating'),\n    ('saving_logs', 'Saving Logs'),\n    ('cleaning_up', 'Cleaning Up'),\n    ('completed', 'Completed'),\n    ('failed', 'Failed'),\n]",
        "detail": "apps.mm_scheduled_jobs.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "SCHEDULED_JOB_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.mm_scheduled_jobs.utils.constant_utils",
        "description": "apps.mm_scheduled_jobs.utils.constant_utils",
        "peekOfCode": "SCHEDULED_JOB_ADMIN_LIST = [\n    'name',\n    'assistant',\n    'current_run_count',\n    'maximum_runs',\n    'created_at',\n    'updated_at',\n    'created_by_user',\n]\nSCHEDULED_JOB_ADMIN_SEARCH = [",
        "detail": "apps.mm_scheduled_jobs.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "SCHEDULED_JOB_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.mm_scheduled_jobs.utils.constant_utils",
        "description": "apps.mm_scheduled_jobs.utils.constant_utils",
        "peekOfCode": "SCHEDULED_JOB_ADMIN_SEARCH = [\n    'name',\n    'assistant',\n    'current_run_count',\n    'maximum_runs',\n    'created_at',\n    'updated_at',\n    'created_by_user',\n]\nSCHEDULED_JOB_ADMIN_FILTER = [",
        "detail": "apps.mm_scheduled_jobs.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "SCHEDULED_JOB_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.mm_scheduled_jobs.utils.constant_utils",
        "description": "apps.mm_scheduled_jobs.utils.constant_utils",
        "peekOfCode": "SCHEDULED_JOB_ADMIN_FILTER = [\n    'name',\n    'assistant',\n    'current_run_count',\n    'maximum_runs',\n    'created_at',\n    'updated_at',\n    'created_by_user',\n]\nSCHEDULED_JOB_INSTANCE_ADMIN_LIST = ['scheduled_job', 'status', 'started_at', 'ended_at']",
        "detail": "apps.mm_scheduled_jobs.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "SCHEDULED_JOB_INSTANCE_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.mm_scheduled_jobs.utils.constant_utils",
        "description": "apps.mm_scheduled_jobs.utils.constant_utils",
        "peekOfCode": "SCHEDULED_JOB_INSTANCE_ADMIN_LIST = ['scheduled_job', 'status', 'started_at', 'ended_at']\nSCHEDULED_JOB_INSTANCE_ADMIN_SEARCH = ['scheduled_job', 'status', 'started_at', 'ended_at']\nSCHEDULED_JOB_INSTANCE_ADMIN_FILTER = ['scheduled_job', 'status', 'started_at', 'ended_at']",
        "detail": "apps.mm_scheduled_jobs.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "SCHEDULED_JOB_INSTANCE_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.mm_scheduled_jobs.utils.constant_utils",
        "description": "apps.mm_scheduled_jobs.utils.constant_utils",
        "peekOfCode": "SCHEDULED_JOB_INSTANCE_ADMIN_SEARCH = ['scheduled_job', 'status', 'started_at', 'ended_at']\nSCHEDULED_JOB_INSTANCE_ADMIN_FILTER = ['scheduled_job', 'status', 'started_at', 'ended_at']",
        "detail": "apps.mm_scheduled_jobs.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "SCHEDULED_JOB_INSTANCE_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.mm_scheduled_jobs.utils.constant_utils",
        "description": "apps.mm_scheduled_jobs.utils.constant_utils",
        "peekOfCode": "SCHEDULED_JOB_INSTANCE_ADMIN_FILTER = ['scheduled_job', 'status', 'started_at', 'ended_at']",
        "detail": "apps.mm_scheduled_jobs.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "ScheduledJobView_LogList",
        "kind": 6,
        "importPath": "apps.mm_scheduled_jobs.views.log.list_scheduled_job_logs_views",
        "description": "apps.mm_scheduled_jobs.views.log.list_scheduled_job_logs_views",
        "peekOfCode": "class ScheduledJobView_LogList(LoginRequiredMixin, TemplateView):\n    paginate_by = 10\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_SCHEDULED_JOBS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_SCHEDULED_JOBS):\n            messages.error(self.request, \"You do not have permission to list scheduled jobs.\")\n            return context",
        "detail": "apps.mm_scheduled_jobs.views.log.list_scheduled_job_logs_views",
        "documentation": {}
    },
    {
        "label": "ScheduledJobView_Create",
        "kind": 6,
        "importPath": "apps.mm_scheduled_jobs.views.scheduled_job.create_scheduled_job_views",
        "description": "apps.mm_scheduled_jobs.views.scheduled_job.create_scheduled_job_views",
        "peekOfCode": "class ScheduledJobView_Create(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['form'] = ScheduledJobForm()\n        return context\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - ADD_SCHEDULED_JOBS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.ADD_SCHEDULED_JOBS):",
        "detail": "apps.mm_scheduled_jobs.views.scheduled_job.create_scheduled_job_views",
        "documentation": {}
    },
    {
        "label": "ScheduledJobView_Delete",
        "kind": 6,
        "importPath": "apps.mm_scheduled_jobs.views.scheduled_job.delete_scheduled_jobs_views",
        "description": "apps.mm_scheduled_jobs.views.scheduled_job.delete_scheduled_jobs_views",
        "peekOfCode": "class ScheduledJobView_Delete(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        scheduled_job_id = self.kwargs.get('pk')\n        scheduled_job = get_object_or_404(ScheduledJob, id=scheduled_job_id)\n        context['scheduled_job'] = scheduled_job\n        return context\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - DELETE_SCHEDULED_JOBS",
        "detail": "apps.mm_scheduled_jobs.views.scheduled_job.delete_scheduled_jobs_views",
        "documentation": {}
    },
    {
        "label": "ScheduledJobView_List",
        "kind": 6,
        "importPath": "apps.mm_scheduled_jobs.views.scheduled_job.list_scheduled_jobs_views",
        "description": "apps.mm_scheduled_jobs.views.scheduled_job.list_scheduled_jobs_views",
        "peekOfCode": "class ScheduledJobView_List(LoginRequiredMixin, TemplateView):\n    paginate_by = 10\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_SCHEDULED_JOBS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_SCHEDULED_JOBS):\n            messages.error(self.request, \"You do not have permission to list scheduled jobs.\")\n            return context",
        "detail": "apps.mm_scheduled_jobs.views.scheduled_job.list_scheduled_jobs_views",
        "documentation": {}
    },
    {
        "label": "MmScheduledJobsConfig",
        "kind": 6,
        "importPath": "apps.mm_scheduled_jobs.apps",
        "description": "apps.mm_scheduled_jobs.apps",
        "peekOfCode": "class MmScheduledJobsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.mm_scheduled_jobs'\n    def ready(self):\n        import apps.mm_scheduled_jobs.signals",
        "detail": "apps.mm_scheduled_jobs.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.mm_scheduled_jobs.urls",
        "description": "apps.mm_scheduled_jobs.urls",
        "peekOfCode": "app_name = \"mm_scheduled_jobs\"\nurlpatterns = [\n    path('create/', ScheduledJobView_Create.as_view(template_name='mm_scheduled_jobs/create_scheduled_job.html'),\n         name='create'),\n    path('list/', ScheduledJobView_List.as_view(template_name='mm_scheduled_jobs/list_scheduled_jobs.html'),\n         name='list'),\n    path('logs/<int:pk>/', ScheduledJobView_LogList.as_view(\n        template_name='mm_scheduled_jobs/list_scheduled_job_logs.html'), name='logs'),\n    path('confirm-delete/<int:pk>', ScheduledJobView_Delete.as_view(\n        template_name='mm_scheduled_jobs/confirm_delete_scheduled_job.html'), name='delete'),",
        "detail": "apps.mm_scheduled_jobs.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.mm_scheduled_jobs.urls",
        "description": "apps.mm_scheduled_jobs.urls",
        "peekOfCode": "urlpatterns = [\n    path('create/', ScheduledJobView_Create.as_view(template_name='mm_scheduled_jobs/create_scheduled_job.html'),\n         name='create'),\n    path('list/', ScheduledJobView_List.as_view(template_name='mm_scheduled_jobs/list_scheduled_jobs.html'),\n         name='list'),\n    path('logs/<int:pk>/', ScheduledJobView_LogList.as_view(\n        template_name='mm_scheduled_jobs/list_scheduled_job_logs.html'), name='logs'),\n    path('confirm-delete/<int:pk>', ScheduledJobView_Delete.as_view(\n        template_name='mm_scheduled_jobs/confirm_delete_scheduled_job.html'), name='delete'),\n]",
        "detail": "apps.mm_scheduled_jobs.urls",
        "documentation": {}
    },
    {
        "label": "CustomScriptAdmin",
        "kind": 6,
        "importPath": "apps.mm_scripts.admin.custom_script_admin",
        "description": "apps.mm_scripts.admin.custom_script_admin",
        "peekOfCode": "class CustomScriptAdmin(admin.ModelAdmin):\n    list_display = CUSTOM_SCRIPT_ADMIN_LIST\n    list_filter = CUSTOM_SCRIPT_ADMIN_LIST_FILTER\n    search_fields = CUSTOM_SCRIPT_ADMIN_SEARCH\n    ordering = (\"-created_at\",)",
        "detail": "apps.mm_scripts.admin.custom_script_admin",
        "documentation": {}
    },
    {
        "label": "CustomScriptReferenceAdmin",
        "kind": 6,
        "importPath": "apps.mm_scripts.admin.custom_script_reference_admin",
        "description": "apps.mm_scripts.admin.custom_script_reference_admin",
        "peekOfCode": "class CustomScriptReferenceAdmin(admin.ModelAdmin):\n    list_display = CUSTOM_SCRIPT_REFERENCE_ADMIN_LIST\n    list_filter = CUSTOM_SCRIPT_REFERENCE_ADMIN_FILTER\n    search_fields = CUSTOM_SCRIPT_REFERENCE_ADMIN_SEARCH\n    ordering = (\"-created_at\",)",
        "detail": "apps.mm_scripts.admin.custom_script_reference_admin",
        "documentation": {}
    },
    {
        "label": "CustomScriptForm",
        "kind": 6,
        "importPath": "apps.mm_scripts.forms.custom_script_forms",
        "description": "apps.mm_scripts.forms.custom_script_forms",
        "peekOfCode": "class CustomScriptForm(forms.ModelForm):\n    class Meta:\n        model = CustomScript\n        fields = ['name', 'description', 'script_picture', 'categories', 'script_content', 'script_step_guide',\n                  'is_public']\n        widgets = {\n            'script_step_guide': forms.Textarea(attrs={'rows': 5}),\n            'script_content': forms.Textarea(attrs={'rows': 10}), 'categories': forms.CheckboxSelectMultiple(),\n        }",
        "detail": "apps.mm_scripts.forms.custom_script_forms",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.mm_scripts.migrations.0001_initial",
        "description": "apps.mm_scripts.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('assistants', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='CustomScript',\n            fields=[",
        "detail": "apps.mm_scripts.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "CustomScript",
        "kind": 6,
        "importPath": "apps.mm_scripts.models.custom_script_models",
        "description": "apps.mm_scripts.models.custom_script_models",
        "peekOfCode": "class CustomScript(models.Model):\n    is_public = models.BooleanField(default=False)\n    categories = models.JSONField(default=list, blank=True)\n    name = models.CharField(max_length=255)\n    description = models.TextField(blank=True)\n    script_content = models.TextField(blank=True)\n    script_step_guide = models.JSONField(default=list, blank=True)\n    script_picture = models.ImageField(upload_to=\"custom_scripts/%YYYY/%mm/%dd/\", blank=True, null=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)",
        "detail": "apps.mm_scripts.models.custom_script_models",
        "documentation": {}
    },
    {
        "label": "CustomScriptReference",
        "kind": 6,
        "importPath": "apps.mm_scripts.models.custom_script_reference_models",
        "description": "apps.mm_scripts.models.custom_script_reference_models",
        "peekOfCode": "class CustomScriptReference(models.Model):\n    custom_script = models.ForeignKey(\"CustomScript\", on_delete=models.CASCADE,\n                                      related_name=\"custom_script_references\")\n    assistant = models.ForeignKey(\"assistants.Assistant\", on_delete=models.CASCADE)\n    script_source = models.CharField(max_length=255, default=\"internal\", blank=True)\n    created_by_user = models.ForeignKey(\"auth.User\", on_delete=models.SET_NULL, null=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    def __str__(self):\n        return self.custom_script.name + \" - \" + self.assistant.name + \" - \" + self.created_at.strftime(",
        "detail": "apps.mm_scripts.models.custom_script_reference_models",
        "documentation": {}
    },
    {
        "label": "randomize_featured_scripts",
        "kind": 2,
        "importPath": "apps.mm_scripts.tasks.randomize_featured_scripts_tasks",
        "description": "apps.mm_scripts.tasks.randomize_featured_scripts_tasks",
        "peekOfCode": "def randomize_featured_scripts():\n    all_scripts = CustomScript.objects.all()\n    for script in all_scripts:\n        script.is_featured = False\n        script.save()\n    featured_scripts = CustomScript.objects.order_by('?')[:NUMBER_OF_RANDOM_FEATURED_SCRIPTS]\n    for script in featured_scripts:\n        script.is_featured = True\n        script.save()",
        "detail": "apps.mm_scripts.tasks.randomize_featured_scripts_tasks",
        "documentation": {}
    },
    {
        "label": "get_script_item",
        "kind": 2,
        "importPath": "apps.mm_scripts.templatetags.get_script_item",
        "description": "apps.mm_scripts.templatetags.get_script_item",
        "peekOfCode": "def get_script_item(dictionary, key):\n    return dictionary.get(key)\n@register.filter\ndef get_script_ids(dictionary, key):\n    item = dictionary.get(key)\n    ids = []\n    for i in item:\n        ids.append(i.custom_script.id)\n    return ids",
        "detail": "apps.mm_scripts.templatetags.get_script_item",
        "documentation": {}
    },
    {
        "label": "get_script_ids",
        "kind": 2,
        "importPath": "apps.mm_scripts.templatetags.get_script_item",
        "description": "apps.mm_scripts.templatetags.get_script_item",
        "peekOfCode": "def get_script_ids(dictionary, key):\n    item = dictionary.get(key)\n    ids = []\n    for i in item:\n        ids.append(i.custom_script.id)\n    return ids",
        "detail": "apps.mm_scripts.templatetags.get_script_item",
        "documentation": {}
    },
    {
        "label": "register",
        "kind": 5,
        "importPath": "apps.mm_scripts.templatetags.get_script_item",
        "description": "apps.mm_scripts.templatetags.get_script_item",
        "peekOfCode": "register = template.Library()\n@register.filter\ndef get_script_item(dictionary, key):\n    return dictionary.get(key)\n@register.filter\ndef get_script_ids(dictionary, key):\n    item = dictionary.get(key)\n    ids = []\n    for i in item:\n        ids.append(i.custom_script.id)",
        "detail": "apps.mm_scripts.templatetags.get_script_item",
        "documentation": {}
    },
    {
        "label": "fixture_mm_scripts_init",
        "kind": 2,
        "importPath": "apps.mm_scripts.tests.conftest",
        "description": "apps.mm_scripts.tests.conftest",
        "peekOfCode": "def fixture_mm_scripts_init():\n    return True",
        "detail": "apps.mm_scripts.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_mm_scripts_test_forms",
        "kind": 2,
        "importPath": "apps.mm_scripts.tests.test_forms",
        "description": "apps.mm_scripts.tests.test_forms",
        "peekOfCode": "def test_init_mm_scripts_test_forms():\n    assert True",
        "detail": "apps.mm_scripts.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_mm_scripts_test_models",
        "kind": 2,
        "importPath": "apps.mm_scripts.tests.test_models",
        "description": "apps.mm_scripts.tests.test_models",
        "peekOfCode": "def test_init_mm_scripts_test_models():\n    assert True",
        "detail": "apps.mm_scripts.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_mm_scripts_test_utils",
        "kind": 2,
        "importPath": "apps.mm_scripts.tests.test_utils",
        "description": "apps.mm_scripts.tests.test_utils",
        "peekOfCode": "def test_init_mm_scripts_test_utils():\n    assert True",
        "detail": "apps.mm_scripts.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_mm_scripts_test_views",
        "kind": 2,
        "importPath": "apps.mm_scripts.tests.test_views",
        "description": "apps.mm_scripts.tests.test_views",
        "peekOfCode": "def test_init_mm_scripts_test_views():\n    assert True",
        "detail": "apps.mm_scripts.tests.test_views",
        "documentation": {}
    },
    {
        "label": "NUMBER_OF_RANDOM_FEATURED_SCRIPTS",
        "kind": 5,
        "importPath": "apps.mm_scripts.utils.constant_utils",
        "description": "apps.mm_scripts.utils.constant_utils",
        "peekOfCode": "NUMBER_OF_RANDOM_FEATURED_SCRIPTS = 5\nSCRIPT_SOURCES = {\n    \"internal\": \"internal\", \"external\": \"external\",\n}\nCUSTOM_SCRIPT_CATEGORIES = [\n    (\"data\", \"Data\"),\n    (\"aiml\", \"AI/ML\"),\n    (\"media\", \"Media\"),\n    (\"automation\", \"Automation\"),\n    (\"apis\", \"APIs\"),",
        "detail": "apps.mm_scripts.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "SCRIPT_SOURCES",
        "kind": 5,
        "importPath": "apps.mm_scripts.utils.constant_utils",
        "description": "apps.mm_scripts.utils.constant_utils",
        "peekOfCode": "SCRIPT_SOURCES = {\n    \"internal\": \"internal\", \"external\": \"external\",\n}\nCUSTOM_SCRIPT_CATEGORIES = [\n    (\"data\", \"Data\"),\n    (\"aiml\", \"AI/ML\"),\n    (\"media\", \"Media\"),\n    (\"automation\", \"Automation\"),\n    (\"apis\", \"APIs\"),\n    (\"finance\", \"Finance\"),",
        "detail": "apps.mm_scripts.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_SCRIPT_CATEGORIES",
        "kind": 5,
        "importPath": "apps.mm_scripts.utils.constant_utils",
        "description": "apps.mm_scripts.utils.constant_utils",
        "peekOfCode": "CUSTOM_SCRIPT_CATEGORIES = [\n    (\"data\", \"Data\"),\n    (\"aiml\", \"AI/ML\"),\n    (\"media\", \"Media\"),\n    (\"automation\", \"Automation\"),\n    (\"apis\", \"APIs\"),\n    (\"finance\", \"Finance\"),\n    (\"commerce\", \"Commerce\"),\n    (\"support\", \"Support\"),\n    (\"social\", \"Social\"),",
        "detail": "apps.mm_scripts.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_SCRIPT_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.mm_scripts.utils.constant_utils",
        "description": "apps.mm_scripts.utils.constant_utils",
        "peekOfCode": "CUSTOM_SCRIPT_ADMIN_LIST = (\n    \"name\",\n    \"is_public\",\n    \"created_at\",\n    \"updated_at\",\n)\nCUSTOM_SCRIPT_ADMIN_SEARCH = (\n    \"name\",\n    \"description\",\n)",
        "detail": "apps.mm_scripts.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_SCRIPT_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.mm_scripts.utils.constant_utils",
        "description": "apps.mm_scripts.utils.constant_utils",
        "peekOfCode": "CUSTOM_SCRIPT_ADMIN_SEARCH = (\n    \"name\",\n    \"description\",\n)\nCUSTOM_SCRIPT_ADMIN_LIST_FILTER = (\n    \"is_public\",\n)\nCUSTOM_SCRIPT_REFERENCE_ADMIN_LIST = (\"custom_script\", \"assistant\", \"created_by_user\", \"created_at\", \"updated_at\")\nCUSTOM_SCRIPT_REFERENCE_ADMIN_SEARCH = (\"custom_script__name\", \"assistant__name\")\nCUSTOM_SCRIPT_REFERENCE_ADMIN_FILTER = (\"assistant\", \"created_by_user\")",
        "detail": "apps.mm_scripts.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_SCRIPT_ADMIN_LIST_FILTER",
        "kind": 5,
        "importPath": "apps.mm_scripts.utils.constant_utils",
        "description": "apps.mm_scripts.utils.constant_utils",
        "peekOfCode": "CUSTOM_SCRIPT_ADMIN_LIST_FILTER = (\n    \"is_public\",\n)\nCUSTOM_SCRIPT_REFERENCE_ADMIN_LIST = (\"custom_script\", \"assistant\", \"created_by_user\", \"created_at\", \"updated_at\")\nCUSTOM_SCRIPT_REFERENCE_ADMIN_SEARCH = (\"custom_script__name\", \"assistant__name\")\nCUSTOM_SCRIPT_REFERENCE_ADMIN_FILTER = (\"assistant\", \"created_by_user\")",
        "detail": "apps.mm_scripts.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_SCRIPT_REFERENCE_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.mm_scripts.utils.constant_utils",
        "description": "apps.mm_scripts.utils.constant_utils",
        "peekOfCode": "CUSTOM_SCRIPT_REFERENCE_ADMIN_LIST = (\"custom_script\", \"assistant\", \"created_by_user\", \"created_at\", \"updated_at\")\nCUSTOM_SCRIPT_REFERENCE_ADMIN_SEARCH = (\"custom_script__name\", \"assistant__name\")\nCUSTOM_SCRIPT_REFERENCE_ADMIN_FILTER = (\"assistant\", \"created_by_user\")",
        "detail": "apps.mm_scripts.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_SCRIPT_REFERENCE_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.mm_scripts.utils.constant_utils",
        "description": "apps.mm_scripts.utils.constant_utils",
        "peekOfCode": "CUSTOM_SCRIPT_REFERENCE_ADMIN_SEARCH = (\"custom_script__name\", \"assistant__name\")\nCUSTOM_SCRIPT_REFERENCE_ADMIN_FILTER = (\"assistant\", \"created_by_user\")",
        "detail": "apps.mm_scripts.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CUSTOM_SCRIPT_REFERENCE_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.mm_scripts.utils.constant_utils",
        "description": "apps.mm_scripts.utils.constant_utils",
        "peekOfCode": "CUSTOM_SCRIPT_REFERENCE_ADMIN_FILTER = (\"assistant\", \"created_by_user\")",
        "detail": "apps.mm_scripts.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CustomScriptView_Connections",
        "kind": 6,
        "importPath": "apps.mm_scripts.views.script.connections_scripts_views",
        "description": "apps.mm_scripts.views.script.connections_scripts_views",
        "peekOfCode": "class CustomScriptView_Connections(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        user = self.request.user\n        conn_orgs = Organization.objects.filter(users__in=[user])\n        users_of_conn_orgs = [user for org in conn_orgs for user in org.users.all()]\n        scripts = CustomScript.objects.filter(created_by_user__in=users_of_conn_orgs)\n        ext_script_refs = CustomScriptReference.objects.filter(assistant__organization__in=conn_orgs).exclude(\n            custom_script__created_by_user__in=users_of_conn_orgs)\n        agents = Assistant.objects.filter(organization__in=conn_orgs).select_related('organization')",
        "detail": "apps.mm_scripts.views.script.connections_scripts_views",
        "documentation": {}
    },
    {
        "label": "CustomScriptView_Create",
        "kind": 6,
        "importPath": "apps.mm_scripts.views.script.create_script_views",
        "description": "apps.mm_scripts.views.script.create_script_views",
        "peekOfCode": "class CustomScriptView_Create(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['form'] = CustomScriptForm()\n        context['CUSTOM_SCRIPT_CATEGORIES'] = CUSTOM_SCRIPT_CATEGORIES\n        return context\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - ADD_SCRIPTS\n        if not UserPermissionManager.is_authorized(user=self.request.user,",
        "detail": "apps.mm_scripts.views.script.create_script_views",
        "documentation": {}
    },
    {
        "label": "CustomScriptView_Delete",
        "kind": 6,
        "importPath": "apps.mm_scripts.views.script.delete_script_views",
        "description": "apps.mm_scripts.views.script.delete_script_views",
        "peekOfCode": "class CustomScriptView_Delete(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        custom_script_id = self.kwargs.get('pk')\n        custom_script = CustomScript.objects.get(id=custom_script_id)\n        context['custom_script'] = custom_script\n        return context\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - DELETE_SCRIPTS",
        "detail": "apps.mm_scripts.views.script.delete_script_views",
        "documentation": {}
    },
    {
        "label": "CustomScriptView_List",
        "kind": 6,
        "importPath": "apps.mm_scripts.views.script.list_scripts_views",
        "description": "apps.mm_scripts.views.script.list_scripts_views",
        "peekOfCode": "class CustomScriptView_List(LoginRequiredMixin, TemplateView):\n    paginate_by = 10\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_SCRIPTS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_SCRIPTS):\n            messages.error(self.request, \"You do not have permission to list scripts.\")\n            return context",
        "detail": "apps.mm_scripts.views.script.list_scripts_views",
        "documentation": {}
    },
    {
        "label": "CustomScriptView_Store",
        "kind": 6,
        "importPath": "apps.mm_scripts.views.store.script_store_views",
        "description": "apps.mm_scripts.views.store.script_store_views",
        "peekOfCode": "class CustomScriptView_Store(LoginRequiredMixin, TemplateView):\n    paginate_by = 10\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        search_query = self.request.GET.get('search', '')\n        selected_categories = self.request.GET.getlist('categories')\n        scripts_list = CustomScript.objects.filter(is_public=True)\n        if search_query:\n            scripts_list = scripts_list.filter(\n                Q(name__icontains=search_query) | Q(description__icontains=search_query))",
        "detail": "apps.mm_scripts.views.store.script_store_views",
        "documentation": {}
    },
    {
        "label": "MmScriptsConfig",
        "kind": 6,
        "importPath": "apps.mm_scripts.apps",
        "description": "apps.mm_scripts.apps",
        "peekOfCode": "class MmScriptsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.mm_scripts'",
        "detail": "apps.mm_scripts.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.mm_scripts.urls",
        "description": "apps.mm_scripts.urls",
        "peekOfCode": "app_name = \"mm_scripts\"\nurlpatterns = [\n    path(\"create/\", CustomScriptView_Create.as_view(\n        template_name=\"mm_scripts/scripts/create_custom_script.html\"), name=\"create\"),\n    path(\"list/\", CustomScriptView_List.as_view(\n        template_name=\"mm_scripts/scripts/list_custom_scripts.html\"), name=\"list\"),\n    path(\"delete/<int:pk>/\", CustomScriptView_Delete.as_view(\n        template_name=\"mm_scripts/scripts/confirm_delete_custom_script.html\"), name=\"delete\"),\n    path(\"connect/\", CustomScriptView_Connections.as_view(\n        template_name=\"mm_scripts/connections/manage_script_connections.html\"), name=\"connect\"),",
        "detail": "apps.mm_scripts.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.mm_scripts.urls",
        "description": "apps.mm_scripts.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"create/\", CustomScriptView_Create.as_view(\n        template_name=\"mm_scripts/scripts/create_custom_script.html\"), name=\"create\"),\n    path(\"list/\", CustomScriptView_List.as_view(\n        template_name=\"mm_scripts/scripts/list_custom_scripts.html\"), name=\"list\"),\n    path(\"delete/<int:pk>/\", CustomScriptView_Delete.as_view(\n        template_name=\"mm_scripts/scripts/confirm_delete_custom_script.html\"), name=\"delete\"),\n    path(\"connect/\", CustomScriptView_Connections.as_view(\n        template_name=\"mm_scripts/connections/manage_script_connections.html\"), name=\"connect\"),\n    path(\"store/\", CustomScriptView_Store.as_view(",
        "detail": "apps.mm_scripts.urls",
        "documentation": {}
    },
    {
        "label": "TriggeredJobAdmin",
        "kind": 6,
        "importPath": "apps.mm_triggered_jobs.admin.triggered_job_admin",
        "description": "apps.mm_triggered_jobs.admin.triggered_job_admin",
        "peekOfCode": "class TriggeredJobAdmin(admin.ModelAdmin):\n    list_display = TRIGGERED_JOB_ADMIN_LIST\n    search_fields = TRIGGERED_JOB_ADMIN_SEARCH\n    list_filter = TRIGGERED_JOB_ADMIN_FILTER",
        "detail": "apps.mm_triggered_jobs.admin.triggered_job_admin",
        "documentation": {}
    },
    {
        "label": "ScheduledJobInstanceAdmin",
        "kind": 6,
        "importPath": "apps.mm_triggered_jobs.admin.triggered_job_instance_admin",
        "description": "apps.mm_triggered_jobs.admin.triggered_job_instance_admin",
        "peekOfCode": "class ScheduledJobInstanceAdmin(admin.ModelAdmin):\n    list_display = TRIGGERED_JOB_INSTANCE_ADMIN_LIST\n    search_fields = TRIGGERED_JOB_INSTANCE_ADMIN_SEARCH\n    list_filter = TRIGGERED_JOB_INSTANCE_ADMIN_FILTER",
        "detail": "apps.mm_triggered_jobs.admin.triggered_job_instance_admin",
        "documentation": {}
    },
    {
        "label": "TriggeredJobForm",
        "kind": 6,
        "importPath": "apps.mm_triggered_jobs.forms.triggered_job_forms",
        "description": "apps.mm_triggered_jobs.forms.triggered_job_forms",
        "peekOfCode": "class TriggeredJobForm(forms.ModelForm):\n    class Meta:\n        model = TriggeredJob\n        fields = ['name', 'task_description', 'step_guide', 'trigger_assistant', 'trigger_source', 'event_type',\n                  'maximum_runs']\n        widgets = {'step_guide': forms.Textarea(attrs={'rows': 3})}\n    def __init__(self, *args, **kwargs):\n        super(TriggeredJobForm, self).__init__(*args, **kwargs)\n        self.fields['step_guide'].required = False\n    def clean(self):",
        "detail": "apps.mm_triggered_jobs.forms.triggered_job_forms",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.mm_triggered_jobs.migrations.0001_initial",
        "description": "apps.mm_triggered_jobs.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('assistants', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='TriggeredJob',\n            fields=[",
        "detail": "apps.mm_triggered_jobs.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "TriggeredJobInstance",
        "kind": 6,
        "importPath": "apps.mm_triggered_jobs.models.triggered_job_instance_models",
        "description": "apps.mm_triggered_jobs.models.triggered_job_instance_models",
        "peekOfCode": "class TriggeredJobInstance(models.Model):\n    triggered_job = models.ForeignKey(TriggeredJob, on_delete=models.CASCADE, related_name='triggered_job_instances',\n                                      null=True)\n    status = models.CharField(max_length=255, choices=TRIGGERED_JOB_INSTANCE_STATUSES, default='pending')\n    webhook_payload = models.JSONField(default=dict)\n    logs = models.JSONField(default=list)\n    execution_index = models.IntegerField(default=0, null=True)\n    started_at = models.DateTimeField(auto_now_add=True)\n    ended_at = models.DateTimeField(auto_now=True)\n    def __str__(self):",
        "detail": "apps.mm_triggered_jobs.models.triggered_job_instance_models",
        "documentation": {}
    },
    {
        "label": "TriggeredJob",
        "kind": 6,
        "importPath": "apps.mm_triggered_jobs.models.triggered_job_models",
        "description": "apps.mm_triggered_jobs.models.triggered_job_models",
        "peekOfCode": "class TriggeredJob(models.Model):\n    name = models.CharField(max_length=255)\n    task_description = models.TextField(blank=True, null=True)\n    step_guide = models.JSONField(default=list)\n    trigger_assistant = models.ForeignKey('assistants.Assistant', on_delete=models.CASCADE,\n                                          related_name='triggered_jobs')\n    trigger_source = models.CharField(max_length=2000, blank=True, null=True)\n    event_type = models.CharField(max_length=4000, blank=True, null=True)\n    endpoint_url = models.CharField(max_length=2000, blank=True, null=True)\n    current_run_count = models.PositiveIntegerField(default=0)",
        "detail": "apps.mm_triggered_jobs.models.triggered_job_models",
        "documentation": {}
    },
    {
        "label": "fixture_mm_triggered_jobs_init",
        "kind": 2,
        "importPath": "apps.mm_triggered_jobs.tests.conftest",
        "description": "apps.mm_triggered_jobs.tests.conftest",
        "peekOfCode": "def fixture_mm_triggered_jobs_init():\n    return True",
        "detail": "apps.mm_triggered_jobs.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_mm_triggered_jobs_test_forms",
        "kind": 2,
        "importPath": "apps.mm_triggered_jobs.tests.test_forms",
        "description": "apps.mm_triggered_jobs.tests.test_forms",
        "peekOfCode": "def test_init_mm_triggered_jobs_test_forms():\n    assert True",
        "detail": "apps.mm_triggered_jobs.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_mm_triggered_jobs_test_models",
        "kind": 2,
        "importPath": "apps.mm_triggered_jobs.tests.test_models",
        "description": "apps.mm_triggered_jobs.tests.test_models",
        "peekOfCode": "def test_init_mm_triggered_jobs_test_models():\n    assert True",
        "detail": "apps.mm_triggered_jobs.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_mm_triggered_jobs_test_utils",
        "kind": 2,
        "importPath": "apps.mm_triggered_jobs.tests.test_utils",
        "description": "apps.mm_triggered_jobs.tests.test_utils",
        "peekOfCode": "def test_init_mm_triggered_jobs_test_utils():\n    assert True",
        "detail": "apps.mm_triggered_jobs.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_mm_triggered_jobs_test_views",
        "kind": 2,
        "importPath": "apps.mm_triggered_jobs.tests.test_views",
        "description": "apps.mm_triggered_jobs.tests.test_views",
        "peekOfCode": "def test_init_mm_triggered_jobs_test_views():\n    assert True",
        "detail": "apps.mm_triggered_jobs.tests.test_views",
        "documentation": {}
    },
    {
        "label": "TriggeredJobInstanceStatusesNames",
        "kind": 6,
        "importPath": "apps.mm_triggered_jobs.utils.constant_utils",
        "description": "apps.mm_triggered_jobs.utils.constant_utils",
        "peekOfCode": "class TriggeredJobInstanceStatusesNames:\n    PENDING = 'pending'\n    BUILDING = 'building'\n    INITIALIZING_ASSISTANT = 'initializing_assistant'\n    GENERATING = 'generating'\n    SAVING_LOGS = 'saving_logs'\n    CLEANING_UP = 'cleaning_up'\n    COMPLETED = 'completed'\n    FAILED = 'failed'\nTRIGGERED_JOB_ADMIN_LIST = [",
        "detail": "apps.mm_triggered_jobs.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "TRIGGERED_JOB_INSTANCE_STATUSES",
        "kind": 5,
        "importPath": "apps.mm_triggered_jobs.utils.constant_utils",
        "description": "apps.mm_triggered_jobs.utils.constant_utils",
        "peekOfCode": "TRIGGERED_JOB_INSTANCE_STATUSES = [\n    ('pending', 'Pending'),\n    ('building', 'Building'),\n    ('initializing_assistant', 'Initializing Assistant'),\n    ('generating', 'Generating'),\n    ('saving_logs', 'Saving Logs'),\n    ('cleaning_up', 'Cleaning Up'),\n    ('completed', 'Completed'),\n    ('failed', 'Failed'),\n]",
        "detail": "apps.mm_triggered_jobs.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "TRIGGERED_JOB_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.mm_triggered_jobs.utils.constant_utils",
        "description": "apps.mm_triggered_jobs.utils.constant_utils",
        "peekOfCode": "TRIGGERED_JOB_ADMIN_LIST = [\n    'name', 'trigger_assistant', 'current_run_count', 'maximum_runs', 'created_at', 'updated_at', 'created_by_user'\n]\nTRIGGERED_JOB_ADMIN_SEARCH = [\n    'name', 'trigger_assistant', 'current_run_count', 'maximum_runs', 'created_at', 'updated_at', 'created_by_user'\n]\nTRIGGERED_JOB_ADMIN_FILTER = [\n    'name', 'trigger_assistant', 'current_run_count', 'maximum_runs', 'created_at', 'updated_at', 'created_by_user'\n]\nTRIGGERED_JOB_INSTANCE_ADMIN_LIST = ['triggered_job', 'status', 'started_at', 'ended_at']",
        "detail": "apps.mm_triggered_jobs.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "TRIGGERED_JOB_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.mm_triggered_jobs.utils.constant_utils",
        "description": "apps.mm_triggered_jobs.utils.constant_utils",
        "peekOfCode": "TRIGGERED_JOB_ADMIN_SEARCH = [\n    'name', 'trigger_assistant', 'current_run_count', 'maximum_runs', 'created_at', 'updated_at', 'created_by_user'\n]\nTRIGGERED_JOB_ADMIN_FILTER = [\n    'name', 'trigger_assistant', 'current_run_count', 'maximum_runs', 'created_at', 'updated_at', 'created_by_user'\n]\nTRIGGERED_JOB_INSTANCE_ADMIN_LIST = ['triggered_job', 'status', 'started_at', 'ended_at']\nTRIGGERED_JOB_INSTANCE_ADMIN_SEARCH = ['triggered_job', 'status', 'started_at', 'ended_at']\nTRIGGERED_JOB_INSTANCE_ADMIN_FILTER = ['triggered_job', 'status', 'started_at', 'ended_at']",
        "detail": "apps.mm_triggered_jobs.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "TRIGGERED_JOB_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.mm_triggered_jobs.utils.constant_utils",
        "description": "apps.mm_triggered_jobs.utils.constant_utils",
        "peekOfCode": "TRIGGERED_JOB_ADMIN_FILTER = [\n    'name', 'trigger_assistant', 'current_run_count', 'maximum_runs', 'created_at', 'updated_at', 'created_by_user'\n]\nTRIGGERED_JOB_INSTANCE_ADMIN_LIST = ['triggered_job', 'status', 'started_at', 'ended_at']\nTRIGGERED_JOB_INSTANCE_ADMIN_SEARCH = ['triggered_job', 'status', 'started_at', 'ended_at']\nTRIGGERED_JOB_INSTANCE_ADMIN_FILTER = ['triggered_job', 'status', 'started_at', 'ended_at']",
        "detail": "apps.mm_triggered_jobs.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "TRIGGERED_JOB_INSTANCE_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.mm_triggered_jobs.utils.constant_utils",
        "description": "apps.mm_triggered_jobs.utils.constant_utils",
        "peekOfCode": "TRIGGERED_JOB_INSTANCE_ADMIN_LIST = ['triggered_job', 'status', 'started_at', 'ended_at']\nTRIGGERED_JOB_INSTANCE_ADMIN_SEARCH = ['triggered_job', 'status', 'started_at', 'ended_at']\nTRIGGERED_JOB_INSTANCE_ADMIN_FILTER = ['triggered_job', 'status', 'started_at', 'ended_at']",
        "detail": "apps.mm_triggered_jobs.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "TRIGGERED_JOB_INSTANCE_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.mm_triggered_jobs.utils.constant_utils",
        "description": "apps.mm_triggered_jobs.utils.constant_utils",
        "peekOfCode": "TRIGGERED_JOB_INSTANCE_ADMIN_SEARCH = ['triggered_job', 'status', 'started_at', 'ended_at']\nTRIGGERED_JOB_INSTANCE_ADMIN_FILTER = ['triggered_job', 'status', 'started_at', 'ended_at']",
        "detail": "apps.mm_triggered_jobs.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "TRIGGERED_JOB_INSTANCE_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.mm_triggered_jobs.utils.constant_utils",
        "description": "apps.mm_triggered_jobs.utils.constant_utils",
        "peekOfCode": "TRIGGERED_JOB_INSTANCE_ADMIN_FILTER = ['triggered_job', 'status', 'started_at', 'ended_at']",
        "detail": "apps.mm_triggered_jobs.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "generate_triggered_job_chat_name",
        "kind": 2,
        "importPath": "apps.mm_triggered_jobs.utils.function_utils",
        "description": "apps.mm_triggered_jobs.utils.function_utils",
        "peekOfCode": "def generate_triggered_job_chat_name(triggered_job_name):\n    uuid_1 = str(uuid4())\n    uuid_2 = str(uuid4())\n    return f\"{slugify(triggered_job_name)} - {uuid_1} - {uuid_2}\"",
        "detail": "apps.mm_triggered_jobs.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "TriggeredJobView_LogList",
        "kind": 6,
        "importPath": "apps.mm_triggered_jobs.views.log.list_triggered_job_logs_views",
        "description": "apps.mm_triggered_jobs.views.log.list_triggered_job_logs_views",
        "peekOfCode": "class TriggeredJobView_LogList(LoginRequiredMixin, TemplateView):\n    paginate_by = 10\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_TRIGGERS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_TRIGGERS):\n            messages.error(self.request, \"You do not have permission to list triggered jobs.\")\n            return context",
        "detail": "apps.mm_triggered_jobs.views.log.list_triggered_job_logs_views",
        "documentation": {}
    },
    {
        "label": "TriggeredJobView_Create",
        "kind": 6,
        "importPath": "apps.mm_triggered_jobs.views.triggered_job.create_triggered_job_views",
        "description": "apps.mm_triggered_jobs.views.triggered_job.create_triggered_job_views",
        "peekOfCode": "class TriggeredJobView_Create(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['form'] = TriggeredJobForm()\n        return context\n    def post(self, request, *args, **kwargs):\n        form = TriggeredJobForm(request.POST)\n        ##############################\n        # PERMISSION CHECK FOR - ADD_TRIGGERS\n        if not UserPermissionManager.is_authorized(user=self.request.user,",
        "detail": "apps.mm_triggered_jobs.views.triggered_job.create_triggered_job_views",
        "documentation": {}
    },
    {
        "label": "TriggeredJobView_Delete",
        "kind": 6,
        "importPath": "apps.mm_triggered_jobs.views.triggered_job.delete_triggered_job_views",
        "description": "apps.mm_triggered_jobs.views.triggered_job.delete_triggered_job_views",
        "peekOfCode": "class TriggeredJobView_Delete(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        triggered_job_id = self.kwargs.get('pk')\n        triggered_job = get_object_or_404(TriggeredJob, id=triggered_job_id)\n        context['triggered_job'] = triggered_job\n        return context\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - DELETE_TRIGGERS",
        "detail": "apps.mm_triggered_jobs.views.triggered_job.delete_triggered_job_views",
        "documentation": {}
    },
    {
        "label": "TriggeredJobView_List",
        "kind": 6,
        "importPath": "apps.mm_triggered_jobs.views.triggered_job.list_triggered_jobs_views",
        "description": "apps.mm_triggered_jobs.views.triggered_job.list_triggered_jobs_views",
        "peekOfCode": "class TriggeredJobView_List(LoginRequiredMixin, TemplateView):\n    paginate_by = 10\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_TRIGGERS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_TRIGGERS):\n            messages.error(self.request, \"You do not have permission to list triggered jobs.\")\n            return context",
        "detail": "apps.mm_triggered_jobs.views.triggered_job.list_triggered_jobs_views",
        "documentation": {}
    },
    {
        "label": "TriggeredJobWebhookListenerView",
        "kind": 6,
        "importPath": "apps.mm_triggered_jobs.views.webhook.triggered_job_webhook_listener_views",
        "description": "apps.mm_triggered_jobs.views.webhook.triggered_job_webhook_listener_views",
        "peekOfCode": "class TriggeredJobWebhookListenerView(View):\n    def get(self, request, assistant_id, triggered_job_id):\n        _, _ = assistant_id, triggered_job_id\n        return JsonResponse({'status': 'error', 'message': 'Method GET is not allowed'}, status=405)\n    def post(self, request, assistant_id, triggered_job_id):\n        try:\n            payload = json.loads(request.body)\n            try:\n                job = TriggeredJob.objects.get(id=triggered_job_id)\n                assistant = job.trigger_assistant",
        "detail": "apps.mm_triggered_jobs.views.webhook.triggered_job_webhook_listener_views",
        "documentation": {}
    },
    {
        "label": "MmTriggeredJobsConfig",
        "kind": 6,
        "importPath": "apps.mm_triggered_jobs.apps",
        "description": "apps.mm_triggered_jobs.apps",
        "peekOfCode": "class MmTriggeredJobsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.mm_triggered_jobs'",
        "detail": "apps.mm_triggered_jobs.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.mm_triggered_jobs.urls",
        "description": "apps.mm_triggered_jobs.urls",
        "peekOfCode": "app_name = \"mm_triggered_jobs\"\nurlpatterns = [\n    path('create/', TriggeredJobView_Create.as_view(\n        template_name='mm_triggered_jobs/connections/create_triggered_job.html'), name='create'),\n    path('list/', TriggeredJobView_List.as_view(\n        template_name='mm_triggered_jobs/connections/list_triggered_jobs.html'), name='list'),\n    path('logs/<int:pk>/', TriggeredJobView_LogList.as_view(\n        template_name='mm_triggered_jobs/logs/list_triggered_job_logs.html'), name='logs'),\n    path('delete/<int:pk>/', TriggeredJobView_Delete.as_view(\n        template_name='mm_triggered_jobs/connections/confirm_delete_triggered_job.html'), name='delete'),",
        "detail": "apps.mm_triggered_jobs.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.mm_triggered_jobs.urls",
        "description": "apps.mm_triggered_jobs.urls",
        "peekOfCode": "urlpatterns = [\n    path('create/', TriggeredJobView_Create.as_view(\n        template_name='mm_triggered_jobs/connections/create_triggered_job.html'), name='create'),\n    path('list/', TriggeredJobView_List.as_view(\n        template_name='mm_triggered_jobs/connections/list_triggered_jobs.html'), name='list'),\n    path('logs/<int:pk>/', TriggeredJobView_LogList.as_view(\n        template_name='mm_triggered_jobs/logs/list_triggered_job_logs.html'), name='logs'),\n    path('delete/<int:pk>/', TriggeredJobView_Delete.as_view(\n        template_name='mm_triggered_jobs/connections/confirm_delete_triggered_job.html'), name='delete'),\n    path('api/v1/webhook/<str:assistant_id>/<int:triggered_job_id>/', TriggeredJobWebhookListenerView.as_view(),",
        "detail": "apps.mm_triggered_jobs.urls",
        "documentation": {}
    },
    {
        "label": "MultimodalChatAdmin",
        "kind": 6,
        "importPath": "apps.multimodal_chat.admin.chat.multimodal_chat_admin",
        "description": "apps.multimodal_chat.admin.chat.multimodal_chat_admin",
        "peekOfCode": "class MultimodalChatAdmin(admin.ModelAdmin):\n    list_display = MULTIMODAL_CHAT_ADMIN_LIST\n    list_filter = MULTIMODAL_CHAT_ADMIN_FILTER\n    search_fields = MULTIMODAL_CHAT_ADMIN_SEARCH\n    readonly_fields = ['created_at', 'updated_at']\n    list_per_page = 20\n    list_max_show_all = 100\n    list_editable = []\n    list_display_links = [\"organization\"]\n    list_select_related = False",
        "detail": "apps.multimodal_chat.admin.chat.multimodal_chat_admin",
        "documentation": {}
    },
    {
        "label": "MultimodalChatMessageAdmin",
        "kind": 6,
        "importPath": "apps.multimodal_chat.admin.chat.multimodal_message_admin",
        "description": "apps.multimodal_chat.admin.chat.multimodal_message_admin",
        "peekOfCode": "class MultimodalChatMessageAdmin(admin.ModelAdmin):\n    list_display = MULTIMODAL_MESSAGE_ADMIN_LIST\n    list_filter = MULTIMODAL_MESSAGE_ADMIN_FILTER\n    search_fields = MULTIMODAL_MESSAGE_ADMIN_SEARCH\n    readonly_fields = ['sent_at']\n    list_per_page = 20\n    list_max_show_all = 100\n    list_editable = []\n    list_select_related = False\n    list_display_links_details = False",
        "detail": "apps.multimodal_chat.admin.chat.multimodal_message_admin",
        "documentation": {}
    },
    {
        "label": "ChatCreationLogAdmin",
        "kind": 6,
        "importPath": "apps.multimodal_chat.admin.creation_log.chat_creation_log_admin",
        "description": "apps.multimodal_chat.admin.creation_log.chat_creation_log_admin",
        "peekOfCode": "class ChatCreationLogAdmin(admin.ModelAdmin):\n    list_display = CHAT_CREATION_LOG_ADMIN_LIST\n    list_filter = CHAT_CREATION_LOG_ADMIN_FILTER\n    search_fields = CHAT_CREATION_LOG_ADMIN_SEARCH",
        "detail": "apps.multimodal_chat.admin.creation_log.chat_creation_log_admin",
        "documentation": {}
    },
    {
        "label": "ChatMessageCreationLogAdmin",
        "kind": 6,
        "importPath": "apps.multimodal_chat.admin.creation_log.message_creation_log_admin",
        "description": "apps.multimodal_chat.admin.creation_log.message_creation_log_admin",
        "peekOfCode": "class ChatMessageCreationLogAdmin(admin.ModelAdmin):\n    list_display = CHAT_MESSAGE_CREATION_LOG_ADMIN_LIST\n    list_filter = CHAT_MESSAGE_CREATION_LOG_ADMIN_FILTER\n    search_fields = CHAT_MESSAGE_CREATION_LOG_ADMIN_SEARCH",
        "detail": "apps.multimodal_chat.admin.creation_log.message_creation_log_admin",
        "documentation": {}
    },
    {
        "label": "MultimodalLeanChatAdmin",
        "kind": 6,
        "importPath": "apps.multimodal_chat.admin.lean_chat.multimodal_lean_chat_admin",
        "description": "apps.multimodal_chat.admin.lean_chat.multimodal_lean_chat_admin",
        "peekOfCode": "class MultimodalLeanChatAdmin(admin.ModelAdmin):\n    list_display = LEAN_CHAT_ADMIN_LIST\n    list_filter = LEAN_CHAT_ADMIN_FILTER\n    search_fields = LEAN_CHAT_ADMIN_SEARCH\n    readonly_fields = ['created_at', 'updated_at']\n    list_per_page = 20\n    list_max_show_all = 100\n    list_editable = []\n    list_display_links = [\"organization\"]\n    list_select_related = False",
        "detail": "apps.multimodal_chat.admin.lean_chat.multimodal_lean_chat_admin",
        "documentation": {}
    },
    {
        "label": "MultimodalLeanChatMessageAdmin",
        "kind": 6,
        "importPath": "apps.multimodal_chat.admin.lean_chat.multimodal_lean_message_admin",
        "description": "apps.multimodal_chat.admin.lean_chat.multimodal_lean_message_admin",
        "peekOfCode": "class MultimodalLeanChatMessageAdmin(admin.ModelAdmin):\n    list_display = MULTIMODAL_LEAN_CHAT_MESSAGE_ADMIN_LIST\n    list_filter = MULTIMODAL_LEAN_CHAT_MESSAGE_ADMIN_FILTER\n    search_fields = MULTIMODAL_LEAN_CHAT_MESSAGE_ADMIN_SEARCH\n    readonly_fields = ['sent_at']\n    list_per_page = 20\n    list_max_show_all = 100\n    list_editable = []\n    list_select_related = False\n    list_display_links_details = False",
        "detail": "apps.multimodal_chat.admin.lean_chat.multimodal_lean_message_admin",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.multimodal_chat.migrations.0001_initial",
        "description": "apps.multimodal_chat.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('assistants', '0003_initial'),\n        ('datasource_knowledge_base', '0001_initial'),\n        ('leanmod', '0002_initial'),\n        ('llm_transaction', '0002_initial'),\n        ('organization', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]",
        "detail": "apps.multimodal_chat.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "MultimodalChat",
        "kind": 6,
        "importPath": "apps.multimodal_chat.models.chat.multimodal_chat_models",
        "description": "apps.multimodal_chat.models.chat.multimodal_chat_models",
        "peekOfCode": "class MultimodalChat(models.Model):\n    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE)\n    assistant = models.ForeignKey('assistants.Assistant', on_delete=models.CASCADE,\n                                  related_name='multimodal_chats', null=True)\n    user = models.ForeignKey('auth.User', on_delete=models.CASCADE, related_name='multimodal_chats', null=True)\n    chat_name = models.CharField(max_length=255)\n    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE,\n                                        related_name='multimodal_chats_created_by_user')\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)",
        "detail": "apps.multimodal_chat.models.chat.multimodal_chat_models",
        "documentation": {}
    },
    {
        "label": "MultimodalChatMessage",
        "kind": 6,
        "importPath": "apps.multimodal_chat.models.chat.multimodal_message_models",
        "description": "apps.multimodal_chat.models.chat.multimodal_message_models",
        "peekOfCode": "class MultimodalChatMessage(models.Model):\n    multimodal_chat = models.ForeignKey('MultimodalChat', on_delete=models.CASCADE, related_name='chat_messages')\n    sender_type = models.CharField(max_length=10, choices=CHAT_MESSAGE_ROLE_SENDER_TYPES)\n    message_text_content = models.TextField()\n    message_json_content = models.JSONField(default=dict, blank=True, null=True)  # Not used for now\n    message_image_contents = models.JSONField(default=list, blank=True, null=True)\n    message_file_contents = models.JSONField(default=list, blank=True, null=True)\n    message_audio = models.URLField(max_length=10000, blank=True, null=True)\n    starred = models.BooleanField(default=False)\n    sent_at = models.DateTimeField(auto_now_add=True)",
        "detail": "apps.multimodal_chat.models.chat.multimodal_message_models",
        "documentation": {}
    },
    {
        "label": "ChatCreationLog",
        "kind": 6,
        "importPath": "apps.multimodal_chat.models.creation_log.chat_creation_log_models",
        "description": "apps.multimodal_chat.models.creation_log.chat_creation_log_models",
        "peekOfCode": "class ChatCreationLog(models.Model):\n    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE, null=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    def __str__(self):\n        return f\"{self.created_at}\"\n    class Meta:\n        verbose_name = \"Chat Creation Log\"\n        verbose_name_plural = \"Chat Creation Logs\"\n        ordering = [\"-created_at\"]\n        indexes = [",
        "detail": "apps.multimodal_chat.models.creation_log.chat_creation_log_models",
        "documentation": {}
    },
    {
        "label": "ChatMessageCreationLog",
        "kind": 6,
        "importPath": "apps.multimodal_chat.models.creation_log.message_creation_log_models",
        "description": "apps.multimodal_chat.models.creation_log.message_creation_log_models",
        "peekOfCode": "class ChatMessageCreationLog(models.Model):\n    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE, null=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    def __str__(self):\n        return f\"{self.created_at}\"\n    class Meta:\n        verbose_name = \"Chat Message Creation Log\"\n        verbose_name_plural = \"Chat Message Creation Logs\"\n        ordering = [\"-created_at\"]\n        indexes = [",
        "detail": "apps.multimodal_chat.models.creation_log.message_creation_log_models",
        "documentation": {}
    },
    {
        "label": "MultimodalLeanChat",
        "kind": 6,
        "importPath": "apps.multimodal_chat.models.lean_chat.multimodal_lean_chat_models",
        "description": "apps.multimodal_chat.models.lean_chat.multimodal_lean_chat_models",
        "peekOfCode": "class MultimodalLeanChat(models.Model):\n    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE)\n    lean_assistant = models.ForeignKey('leanmod.LeanAssistant', on_delete=models.CASCADE,\n                                       related_name='multimodal_lean_chats', null=True)\n    user = models.ForeignKey('auth.User', on_delete=models.CASCADE, related_name='multimodal_lean_chats', default=1)\n    chat_name = models.CharField(max_length=255)\n    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE,\n                                        related_name='multimodal_lean_chats_created_by_user')\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)",
        "detail": "apps.multimodal_chat.models.lean_chat.multimodal_lean_chat_models",
        "documentation": {}
    },
    {
        "label": "MultimodalLeanChatMessage",
        "kind": 6,
        "importPath": "apps.multimodal_chat.models.lean_chat.multimodal_lean_message_models",
        "description": "apps.multimodal_chat.models.lean_chat.multimodal_lean_message_models",
        "peekOfCode": "class MultimodalLeanChatMessage(models.Model):\n    multimodal_lean_chat = models.ForeignKey('MultimodalLeanChat', on_delete=models.CASCADE,\n                                             related_name='lean_chat_messages')\n    sender_type = models.CharField(max_length=10, choices=CHAT_MESSAGE_ROLE_SENDER_TYPES)\n    message_text_content = models.TextField()\n    message_json_content = models.JSONField(default=dict, blank=True, null=True)  # Not used for now\n    message_image_contents = models.JSONField(default=list, blank=True, null=True)\n    message_file_contents = models.JSONField(default=list, blank=True, null=True)\n    message_audio = models.URLField(max_length=10000, blank=True, null=True)\n    starred = models.BooleanField(default=False)",
        "detail": "apps.multimodal_chat.models.lean_chat.multimodal_lean_message_models",
        "documentation": {}
    },
    {
        "label": "create_chat_created_log",
        "kind": 2,
        "importPath": "apps.multimodal_chat.signals.chat.chat_created_log_signals",
        "description": "apps.multimodal_chat.signals.chat.chat_created_log_signals",
        "peekOfCode": "def create_chat_created_log(sender, instance, created, **kwargs):\n    if created:\n        ChatCreationLog.objects.create(organization=instance.assistant.organization)",
        "detail": "apps.multimodal_chat.signals.chat.chat_created_log_signals",
        "documentation": {}
    },
    {
        "label": "create_chat_message_created_log",
        "kind": 2,
        "importPath": "apps.multimodal_chat.signals.chat.message_created_log_signals",
        "description": "apps.multimodal_chat.signals.chat.message_created_log_signals",
        "peekOfCode": "def create_chat_message_created_log(sender, instance, created, **kwargs):\n    if created:\n        ChatMessageCreationLog.objects.create(organization=instance.multimodal_chat.assistant.organization)",
        "detail": "apps.multimodal_chat.signals.chat.message_created_log_signals",
        "documentation": {}
    },
    {
        "label": "create_lean_chat_created_log",
        "kind": 2,
        "importPath": "apps.multimodal_chat.signals.lean_chat.lean_chat_created_log_signals",
        "description": "apps.multimodal_chat.signals.lean_chat.lean_chat_created_log_signals",
        "peekOfCode": "def create_lean_chat_created_log(sender, instance, created, **kwargs):\n    if created:\n        ChatCreationLog.objects.create(organization=instance.lean_assistant.organization)",
        "detail": "apps.multimodal_chat.signals.lean_chat.lean_chat_created_log_signals",
        "documentation": {}
    },
    {
        "label": "create_lean_chat_message_created_log",
        "kind": 2,
        "importPath": "apps.multimodal_chat.signals.lean_chat.lean_message_created_log_signals",
        "description": "apps.multimodal_chat.signals.lean_chat.lean_message_created_log_signals",
        "peekOfCode": "def create_lean_chat_message_created_log(sender, instance, created, **kwargs):\n    if created:\n        ChatMessageCreationLog.objects.create(organization=instance.multimodal_lean_chat.lean_assistant.organization)",
        "detail": "apps.multimodal_chat.signals.lean_chat.lean_message_created_log_signals",
        "documentation": {}
    },
    {
        "label": "markdownify",
        "kind": 2,
        "importPath": "apps.multimodal_chat.templatetags.markdown_extras",
        "description": "apps.multimodal_chat.templatetags.markdown_extras",
        "peekOfCode": "def markdownify(text):\n    return mark_safe(markdown.markdown(text))",
        "detail": "apps.multimodal_chat.templatetags.markdown_extras",
        "documentation": {}
    },
    {
        "label": "register",
        "kind": 5,
        "importPath": "apps.multimodal_chat.templatetags.markdown_extras",
        "description": "apps.multimodal_chat.templatetags.markdown_extras",
        "peekOfCode": "register = template.Library()\n@register.filter(name='markdownify')\ndef markdownify(text):\n    return mark_safe(markdown.markdown(text))",
        "detail": "apps.multimodal_chat.templatetags.markdown_extras",
        "documentation": {}
    },
    {
        "label": "fixture_multimodal_chat_init",
        "kind": 2,
        "importPath": "apps.multimodal_chat.tests.conftest",
        "description": "apps.multimodal_chat.tests.conftest",
        "peekOfCode": "def fixture_multimodal_chat_init():\n    return True",
        "detail": "apps.multimodal_chat.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_multimodal_chat_test_forms",
        "kind": 2,
        "importPath": "apps.multimodal_chat.tests.test_forms",
        "description": "apps.multimodal_chat.tests.test_forms",
        "peekOfCode": "def test_init_multimodal_chat_test_forms():\n    assert True",
        "detail": "apps.multimodal_chat.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_multimodal_chat_test_models",
        "kind": 2,
        "importPath": "apps.multimodal_chat.tests.test_models",
        "description": "apps.multimodal_chat.tests.test_models",
        "peekOfCode": "def test_init_multimodal_chat_test_models():\n    assert True",
        "detail": "apps.multimodal_chat.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_multimodal_chat_test_utils",
        "kind": 2,
        "importPath": "apps.multimodal_chat.tests.test_utils",
        "description": "apps.multimodal_chat.tests.test_utils",
        "peekOfCode": "def test_init_multimodal_chat_test_utils():\n    assert True",
        "detail": "apps.multimodal_chat.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_multimodal_chat_test_views",
        "kind": 2,
        "importPath": "apps.multimodal_chat.tests.test_views",
        "description": "apps.multimodal_chat.tests.test_views",
        "peekOfCode": "def test_init_multimodal_chat_test_views():\n    assert True",
        "detail": "apps.multimodal_chat.tests.test_views",
        "documentation": {}
    },
    {
        "label": "SourcesForMultimodalChatsNames",
        "kind": 6,
        "importPath": "apps.multimodal_chat.utils.constant_utils",
        "description": "apps.multimodal_chat.utils.constant_utils",
        "peekOfCode": "class SourcesForMultimodalChatsNames:\n    APP = \"app\"\n    API = \"api\"\n    SCHEDULED = \"scheduled\"\n    TRIGGERED = \"triggered\"\n    ORCHESTRATION = \"orchestration\"\nclass ChatMessageRoleSenderTypes:\n    USER = \"USER\"\n    ASSISTANT = \"ASSISTANT\"\n    SYSTEM = \"SYSTEM\"",
        "detail": "apps.multimodal_chat.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "ChatMessageRoleSenderTypes",
        "kind": 6,
        "importPath": "apps.multimodal_chat.utils.constant_utils",
        "description": "apps.multimodal_chat.utils.constant_utils",
        "peekOfCode": "class ChatMessageRoleSenderTypes:\n    USER = \"USER\"\n    ASSISTANT = \"ASSISTANT\"\n    SYSTEM = \"SYSTEM\"\n    TOOL = \"TOOL\"\nCHAT_MESSAGE_ROLE_SENDER_TYPES = [\n    (\"USER\", \"User\"),\n    (\"ASSISTANT\", \"Assistant\"),\n    (\"SYSTEM\", \"System\"),\n    (\"TOOL\", \"Tool\"),",
        "detail": "apps.multimodal_chat.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "ChatPostActionSpecifiers",
        "kind": 6,
        "importPath": "apps.multimodal_chat.utils.constant_utils",
        "description": "apps.multimodal_chat.utils.constant_utils",
        "peekOfCode": "class ChatPostActionSpecifiers:\n    NEW_CHAT_WITH_ASSISTANT_SPECIFIER = 'assistant_id'\n    CHANGE_CHAT_NAME_SPECIFIER = 'new_chat_name'\n    STARRING_MESSAGE_SPECIFIER = 'starred_message'",
        "detail": "apps.multimodal_chat.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BIMOD_STREAMING_END_TAG",
        "kind": 5,
        "importPath": "apps.multimodal_chat.utils.constant_utils",
        "description": "apps.multimodal_chat.utils.constant_utils",
        "peekOfCode": "BIMOD_STREAMING_END_TAG = \"<[bimod_streaming_end]>\"\nBIMOD_PROCESS_END = \"<[bimod_process_end]>\"\nBIMOD_NO_TAG_PLACEHOLDER = \"<[bimod_no_tag]>\"\nSOURCES_FOR_MULTIMODAL_CHATS = [\n    (\"app\", \"Application\"),\n    (\"api\", \"API\"),\n    (\"scheduled\", \"Scheduled\"),\n    (\"orchestration\", \"Orchestration\"),\n]\nclass SourcesForMultimodalChatsNames:",
        "detail": "apps.multimodal_chat.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BIMOD_PROCESS_END",
        "kind": 5,
        "importPath": "apps.multimodal_chat.utils.constant_utils",
        "description": "apps.multimodal_chat.utils.constant_utils",
        "peekOfCode": "BIMOD_PROCESS_END = \"<[bimod_process_end]>\"\nBIMOD_NO_TAG_PLACEHOLDER = \"<[bimod_no_tag]>\"\nSOURCES_FOR_MULTIMODAL_CHATS = [\n    (\"app\", \"Application\"),\n    (\"api\", \"API\"),\n    (\"scheduled\", \"Scheduled\"),\n    (\"orchestration\", \"Orchestration\"),\n]\nclass SourcesForMultimodalChatsNames:\n    APP = \"app\"",
        "detail": "apps.multimodal_chat.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "BIMOD_NO_TAG_PLACEHOLDER",
        "kind": 5,
        "importPath": "apps.multimodal_chat.utils.constant_utils",
        "description": "apps.multimodal_chat.utils.constant_utils",
        "peekOfCode": "BIMOD_NO_TAG_PLACEHOLDER = \"<[bimod_no_tag]>\"\nSOURCES_FOR_MULTIMODAL_CHATS = [\n    (\"app\", \"Application\"),\n    (\"api\", \"API\"),\n    (\"scheduled\", \"Scheduled\"),\n    (\"orchestration\", \"Orchestration\"),\n]\nclass SourcesForMultimodalChatsNames:\n    APP = \"app\"\n    API = \"api\"",
        "detail": "apps.multimodal_chat.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "SOURCES_FOR_MULTIMODAL_CHATS",
        "kind": 5,
        "importPath": "apps.multimodal_chat.utils.constant_utils",
        "description": "apps.multimodal_chat.utils.constant_utils",
        "peekOfCode": "SOURCES_FOR_MULTIMODAL_CHATS = [\n    (\"app\", \"Application\"),\n    (\"api\", \"API\"),\n    (\"scheduled\", \"Scheduled\"),\n    (\"orchestration\", \"Orchestration\"),\n]\nclass SourcesForMultimodalChatsNames:\n    APP = \"app\"\n    API = \"api\"\n    SCHEDULED = \"scheduled\"",
        "detail": "apps.multimodal_chat.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CHAT_MESSAGE_ROLE_SENDER_TYPES",
        "kind": 5,
        "importPath": "apps.multimodal_chat.utils.constant_utils",
        "description": "apps.multimodal_chat.utils.constant_utils",
        "peekOfCode": "CHAT_MESSAGE_ROLE_SENDER_TYPES = [\n    (\"USER\", \"User\"),\n    (\"ASSISTANT\", \"Assistant\"),\n    (\"SYSTEM\", \"System\"),\n    (\"TOOL\", \"Tool\"),\n]\nMULTIMODAL_CHAT_ADMIN_LIST = ['organization', 'assistant', 'user', 'chat_name', 'created_by_user', 'created_at',\n                              'updated_at']\nMULTIMODAL_CHAT_ADMIN_FILTER = ['organization', 'assistant', 'user', 'created_by_user', 'created_at', 'updated_at']\nMULTIMODAL_CHAT_ADMIN_SEARCH = ['organization', 'assistant', 'user', 'chat_name', 'created_by_user', 'created_at',",
        "detail": "apps.multimodal_chat.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MULTIMODAL_CHAT_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.multimodal_chat.utils.constant_utils",
        "description": "apps.multimodal_chat.utils.constant_utils",
        "peekOfCode": "MULTIMODAL_CHAT_ADMIN_LIST = ['organization', 'assistant', 'user', 'chat_name', 'created_by_user', 'created_at',\n                              'updated_at']\nMULTIMODAL_CHAT_ADMIN_FILTER = ['organization', 'assistant', 'user', 'created_by_user', 'created_at', 'updated_at']\nMULTIMODAL_CHAT_ADMIN_SEARCH = ['organization', 'assistant', 'user', 'chat_name', 'created_by_user', 'created_at',\n                                'updated_at']\nMULTIMODAL_MESSAGE_ADMIN_LIST = ['multimodal_chat', 'sender_type', 'sent_at']\nMULTIMODAL_MESSAGE_ADMIN_FILTER = ['multimodal_chat', 'sender_type', 'sent_at']\nMULTIMODAL_MESSAGE_ADMIN_SEARCH = ['multimodal_chat', 'sender_type', 'sent_at']\nCHAT_CREATION_LOG_ADMIN_LIST = [\"organization\", 'created_at']\nCHAT_CREATION_LOG_ADMIN_FILTER = ['created_at']",
        "detail": "apps.multimodal_chat.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MULTIMODAL_CHAT_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.multimodal_chat.utils.constant_utils",
        "description": "apps.multimodal_chat.utils.constant_utils",
        "peekOfCode": "MULTIMODAL_CHAT_ADMIN_FILTER = ['organization', 'assistant', 'user', 'created_by_user', 'created_at', 'updated_at']\nMULTIMODAL_CHAT_ADMIN_SEARCH = ['organization', 'assistant', 'user', 'chat_name', 'created_by_user', 'created_at',\n                                'updated_at']\nMULTIMODAL_MESSAGE_ADMIN_LIST = ['multimodal_chat', 'sender_type', 'sent_at']\nMULTIMODAL_MESSAGE_ADMIN_FILTER = ['multimodal_chat', 'sender_type', 'sent_at']\nMULTIMODAL_MESSAGE_ADMIN_SEARCH = ['multimodal_chat', 'sender_type', 'sent_at']\nCHAT_CREATION_LOG_ADMIN_LIST = [\"organization\", 'created_at']\nCHAT_CREATION_LOG_ADMIN_FILTER = ['created_at']\nCHAT_CREATION_LOG_ADMIN_SEARCH = ['created_at']\nCHAT_MESSAGE_CREATION_LOG_ADMIN_LIST = [\"organization\", 'created_at']",
        "detail": "apps.multimodal_chat.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MULTIMODAL_CHAT_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.multimodal_chat.utils.constant_utils",
        "description": "apps.multimodal_chat.utils.constant_utils",
        "peekOfCode": "MULTIMODAL_CHAT_ADMIN_SEARCH = ['organization', 'assistant', 'user', 'chat_name', 'created_by_user', 'created_at',\n                                'updated_at']\nMULTIMODAL_MESSAGE_ADMIN_LIST = ['multimodal_chat', 'sender_type', 'sent_at']\nMULTIMODAL_MESSAGE_ADMIN_FILTER = ['multimodal_chat', 'sender_type', 'sent_at']\nMULTIMODAL_MESSAGE_ADMIN_SEARCH = ['multimodal_chat', 'sender_type', 'sent_at']\nCHAT_CREATION_LOG_ADMIN_LIST = [\"organization\", 'created_at']\nCHAT_CREATION_LOG_ADMIN_FILTER = ['created_at']\nCHAT_CREATION_LOG_ADMIN_SEARCH = ['created_at']\nCHAT_MESSAGE_CREATION_LOG_ADMIN_LIST = [\"organization\", 'created_at']\nCHAT_MESSAGE_CREATION_LOG_ADMIN_FILTER = ['created_at']",
        "detail": "apps.multimodal_chat.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MULTIMODAL_MESSAGE_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.multimodal_chat.utils.constant_utils",
        "description": "apps.multimodal_chat.utils.constant_utils",
        "peekOfCode": "MULTIMODAL_MESSAGE_ADMIN_LIST = ['multimodal_chat', 'sender_type', 'sent_at']\nMULTIMODAL_MESSAGE_ADMIN_FILTER = ['multimodal_chat', 'sender_type', 'sent_at']\nMULTIMODAL_MESSAGE_ADMIN_SEARCH = ['multimodal_chat', 'sender_type', 'sent_at']\nCHAT_CREATION_LOG_ADMIN_LIST = [\"organization\", 'created_at']\nCHAT_CREATION_LOG_ADMIN_FILTER = ['created_at']\nCHAT_CREATION_LOG_ADMIN_SEARCH = ['created_at']\nCHAT_MESSAGE_CREATION_LOG_ADMIN_LIST = [\"organization\", 'created_at']\nCHAT_MESSAGE_CREATION_LOG_ADMIN_FILTER = ['created_at']\nCHAT_MESSAGE_CREATION_LOG_ADMIN_SEARCH = ['created_at']\nLEAN_CHAT_ADMIN_LIST = ['organization', 'lean_assistant', 'user', 'chat_name', 'created_by_user', 'created_at',",
        "detail": "apps.multimodal_chat.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MULTIMODAL_MESSAGE_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.multimodal_chat.utils.constant_utils",
        "description": "apps.multimodal_chat.utils.constant_utils",
        "peekOfCode": "MULTIMODAL_MESSAGE_ADMIN_FILTER = ['multimodal_chat', 'sender_type', 'sent_at']\nMULTIMODAL_MESSAGE_ADMIN_SEARCH = ['multimodal_chat', 'sender_type', 'sent_at']\nCHAT_CREATION_LOG_ADMIN_LIST = [\"organization\", 'created_at']\nCHAT_CREATION_LOG_ADMIN_FILTER = ['created_at']\nCHAT_CREATION_LOG_ADMIN_SEARCH = ['created_at']\nCHAT_MESSAGE_CREATION_LOG_ADMIN_LIST = [\"organization\", 'created_at']\nCHAT_MESSAGE_CREATION_LOG_ADMIN_FILTER = ['created_at']\nCHAT_MESSAGE_CREATION_LOG_ADMIN_SEARCH = ['created_at']\nLEAN_CHAT_ADMIN_LIST = ['organization', 'lean_assistant', 'user', 'chat_name', 'created_by_user', 'created_at',\n                        'updated_at']",
        "detail": "apps.multimodal_chat.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MULTIMODAL_MESSAGE_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.multimodal_chat.utils.constant_utils",
        "description": "apps.multimodal_chat.utils.constant_utils",
        "peekOfCode": "MULTIMODAL_MESSAGE_ADMIN_SEARCH = ['multimodal_chat', 'sender_type', 'sent_at']\nCHAT_CREATION_LOG_ADMIN_LIST = [\"organization\", 'created_at']\nCHAT_CREATION_LOG_ADMIN_FILTER = ['created_at']\nCHAT_CREATION_LOG_ADMIN_SEARCH = ['created_at']\nCHAT_MESSAGE_CREATION_LOG_ADMIN_LIST = [\"organization\", 'created_at']\nCHAT_MESSAGE_CREATION_LOG_ADMIN_FILTER = ['created_at']\nCHAT_MESSAGE_CREATION_LOG_ADMIN_SEARCH = ['created_at']\nLEAN_CHAT_ADMIN_LIST = ['organization', 'lean_assistant', 'user', 'chat_name', 'created_by_user', 'created_at',\n                        'updated_at']\nLEAN_CHAT_ADMIN_FILTER = ['organization', 'lean_assistant', 'user', 'created_by_user', 'created_at', 'updated_at']",
        "detail": "apps.multimodal_chat.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CHAT_CREATION_LOG_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.multimodal_chat.utils.constant_utils",
        "description": "apps.multimodal_chat.utils.constant_utils",
        "peekOfCode": "CHAT_CREATION_LOG_ADMIN_LIST = [\"organization\", 'created_at']\nCHAT_CREATION_LOG_ADMIN_FILTER = ['created_at']\nCHAT_CREATION_LOG_ADMIN_SEARCH = ['created_at']\nCHAT_MESSAGE_CREATION_LOG_ADMIN_LIST = [\"organization\", 'created_at']\nCHAT_MESSAGE_CREATION_LOG_ADMIN_FILTER = ['created_at']\nCHAT_MESSAGE_CREATION_LOG_ADMIN_SEARCH = ['created_at']\nLEAN_CHAT_ADMIN_LIST = ['organization', 'lean_assistant', 'user', 'chat_name', 'created_by_user', 'created_at',\n                        'updated_at']\nLEAN_CHAT_ADMIN_FILTER = ['organization', 'lean_assistant', 'user', 'created_by_user', 'created_at', 'updated_at']\nLEAN_CHAT_ADMIN_SEARCH = ['organization', 'lean_assistant', 'user', 'chat_name', 'created_by_user', 'created_at',",
        "detail": "apps.multimodal_chat.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CHAT_CREATION_LOG_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.multimodal_chat.utils.constant_utils",
        "description": "apps.multimodal_chat.utils.constant_utils",
        "peekOfCode": "CHAT_CREATION_LOG_ADMIN_FILTER = ['created_at']\nCHAT_CREATION_LOG_ADMIN_SEARCH = ['created_at']\nCHAT_MESSAGE_CREATION_LOG_ADMIN_LIST = [\"organization\", 'created_at']\nCHAT_MESSAGE_CREATION_LOG_ADMIN_FILTER = ['created_at']\nCHAT_MESSAGE_CREATION_LOG_ADMIN_SEARCH = ['created_at']\nLEAN_CHAT_ADMIN_LIST = ['organization', 'lean_assistant', 'user', 'chat_name', 'created_by_user', 'created_at',\n                        'updated_at']\nLEAN_CHAT_ADMIN_FILTER = ['organization', 'lean_assistant', 'user', 'created_by_user', 'created_at', 'updated_at']\nLEAN_CHAT_ADMIN_SEARCH = ['organization', 'lean_assistant', 'user', 'chat_name', 'created_by_user', 'created_at',\n                          'updated_at']",
        "detail": "apps.multimodal_chat.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CHAT_CREATION_LOG_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.multimodal_chat.utils.constant_utils",
        "description": "apps.multimodal_chat.utils.constant_utils",
        "peekOfCode": "CHAT_CREATION_LOG_ADMIN_SEARCH = ['created_at']\nCHAT_MESSAGE_CREATION_LOG_ADMIN_LIST = [\"organization\", 'created_at']\nCHAT_MESSAGE_CREATION_LOG_ADMIN_FILTER = ['created_at']\nCHAT_MESSAGE_CREATION_LOG_ADMIN_SEARCH = ['created_at']\nLEAN_CHAT_ADMIN_LIST = ['organization', 'lean_assistant', 'user', 'chat_name', 'created_by_user', 'created_at',\n                        'updated_at']\nLEAN_CHAT_ADMIN_FILTER = ['organization', 'lean_assistant', 'user', 'created_by_user', 'created_at', 'updated_at']\nLEAN_CHAT_ADMIN_SEARCH = ['organization', 'lean_assistant', 'user', 'chat_name', 'created_by_user', 'created_at',\n                          'updated_at']\nMULTIMODAL_LEAN_CHAT_MESSAGE_ADMIN_LIST = ['multimodal_lean_chat', 'sender_type', 'sent_at']",
        "detail": "apps.multimodal_chat.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CHAT_MESSAGE_CREATION_LOG_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.multimodal_chat.utils.constant_utils",
        "description": "apps.multimodal_chat.utils.constant_utils",
        "peekOfCode": "CHAT_MESSAGE_CREATION_LOG_ADMIN_LIST = [\"organization\", 'created_at']\nCHAT_MESSAGE_CREATION_LOG_ADMIN_FILTER = ['created_at']\nCHAT_MESSAGE_CREATION_LOG_ADMIN_SEARCH = ['created_at']\nLEAN_CHAT_ADMIN_LIST = ['organization', 'lean_assistant', 'user', 'chat_name', 'created_by_user', 'created_at',\n                        'updated_at']\nLEAN_CHAT_ADMIN_FILTER = ['organization', 'lean_assistant', 'user', 'created_by_user', 'created_at', 'updated_at']\nLEAN_CHAT_ADMIN_SEARCH = ['organization', 'lean_assistant', 'user', 'chat_name', 'created_by_user', 'created_at',\n                          'updated_at']\nMULTIMODAL_LEAN_CHAT_MESSAGE_ADMIN_LIST = ['multimodal_lean_chat', 'sender_type', 'sent_at']\nMULTIMODAL_LEAN_CHAT_MESSAGE_ADMIN_FILTER = ['multimodal_lean_chat', 'sender_type', 'sent_at']",
        "detail": "apps.multimodal_chat.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CHAT_MESSAGE_CREATION_LOG_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.multimodal_chat.utils.constant_utils",
        "description": "apps.multimodal_chat.utils.constant_utils",
        "peekOfCode": "CHAT_MESSAGE_CREATION_LOG_ADMIN_FILTER = ['created_at']\nCHAT_MESSAGE_CREATION_LOG_ADMIN_SEARCH = ['created_at']\nLEAN_CHAT_ADMIN_LIST = ['organization', 'lean_assistant', 'user', 'chat_name', 'created_by_user', 'created_at',\n                        'updated_at']\nLEAN_CHAT_ADMIN_FILTER = ['organization', 'lean_assistant', 'user', 'created_by_user', 'created_at', 'updated_at']\nLEAN_CHAT_ADMIN_SEARCH = ['organization', 'lean_assistant', 'user', 'chat_name', 'created_by_user', 'created_at',\n                          'updated_at']\nMULTIMODAL_LEAN_CHAT_MESSAGE_ADMIN_LIST = ['multimodal_lean_chat', 'sender_type', 'sent_at']\nMULTIMODAL_LEAN_CHAT_MESSAGE_ADMIN_FILTER = ['multimodal_lean_chat', 'sender_type', 'sent_at']\nMULTIMODAL_LEAN_CHAT_MESSAGE_ADMIN_SEARCH = ['multimodal_lean_chat', 'sender_type', 'sent_at']",
        "detail": "apps.multimodal_chat.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CHAT_MESSAGE_CREATION_LOG_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.multimodal_chat.utils.constant_utils",
        "description": "apps.multimodal_chat.utils.constant_utils",
        "peekOfCode": "CHAT_MESSAGE_CREATION_LOG_ADMIN_SEARCH = ['created_at']\nLEAN_CHAT_ADMIN_LIST = ['organization', 'lean_assistant', 'user', 'chat_name', 'created_by_user', 'created_at',\n                        'updated_at']\nLEAN_CHAT_ADMIN_FILTER = ['organization', 'lean_assistant', 'user', 'created_by_user', 'created_at', 'updated_at']\nLEAN_CHAT_ADMIN_SEARCH = ['organization', 'lean_assistant', 'user', 'chat_name', 'created_by_user', 'created_at',\n                          'updated_at']\nMULTIMODAL_LEAN_CHAT_MESSAGE_ADMIN_LIST = ['multimodal_lean_chat', 'sender_type', 'sent_at']\nMULTIMODAL_LEAN_CHAT_MESSAGE_ADMIN_FILTER = ['multimodal_lean_chat', 'sender_type', 'sent_at']\nMULTIMODAL_LEAN_CHAT_MESSAGE_ADMIN_SEARCH = ['multimodal_lean_chat', 'sender_type', 'sent_at']\nclass ChatPostActionSpecifiers:",
        "detail": "apps.multimodal_chat.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "LEAN_CHAT_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.multimodal_chat.utils.constant_utils",
        "description": "apps.multimodal_chat.utils.constant_utils",
        "peekOfCode": "LEAN_CHAT_ADMIN_LIST = ['organization', 'lean_assistant', 'user', 'chat_name', 'created_by_user', 'created_at',\n                        'updated_at']\nLEAN_CHAT_ADMIN_FILTER = ['organization', 'lean_assistant', 'user', 'created_by_user', 'created_at', 'updated_at']\nLEAN_CHAT_ADMIN_SEARCH = ['organization', 'lean_assistant', 'user', 'chat_name', 'created_by_user', 'created_at',\n                          'updated_at']\nMULTIMODAL_LEAN_CHAT_MESSAGE_ADMIN_LIST = ['multimodal_lean_chat', 'sender_type', 'sent_at']\nMULTIMODAL_LEAN_CHAT_MESSAGE_ADMIN_FILTER = ['multimodal_lean_chat', 'sender_type', 'sent_at']\nMULTIMODAL_LEAN_CHAT_MESSAGE_ADMIN_SEARCH = ['multimodal_lean_chat', 'sender_type', 'sent_at']\nclass ChatPostActionSpecifiers:\n    NEW_CHAT_WITH_ASSISTANT_SPECIFIER = 'assistant_id'",
        "detail": "apps.multimodal_chat.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "LEAN_CHAT_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.multimodal_chat.utils.constant_utils",
        "description": "apps.multimodal_chat.utils.constant_utils",
        "peekOfCode": "LEAN_CHAT_ADMIN_FILTER = ['organization', 'lean_assistant', 'user', 'created_by_user', 'created_at', 'updated_at']\nLEAN_CHAT_ADMIN_SEARCH = ['organization', 'lean_assistant', 'user', 'chat_name', 'created_by_user', 'created_at',\n                          'updated_at']\nMULTIMODAL_LEAN_CHAT_MESSAGE_ADMIN_LIST = ['multimodal_lean_chat', 'sender_type', 'sent_at']\nMULTIMODAL_LEAN_CHAT_MESSAGE_ADMIN_FILTER = ['multimodal_lean_chat', 'sender_type', 'sent_at']\nMULTIMODAL_LEAN_CHAT_MESSAGE_ADMIN_SEARCH = ['multimodal_lean_chat', 'sender_type', 'sent_at']\nclass ChatPostActionSpecifiers:\n    NEW_CHAT_WITH_ASSISTANT_SPECIFIER = 'assistant_id'\n    CHANGE_CHAT_NAME_SPECIFIER = 'new_chat_name'\n    STARRING_MESSAGE_SPECIFIER = 'starred_message'",
        "detail": "apps.multimodal_chat.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "LEAN_CHAT_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.multimodal_chat.utils.constant_utils",
        "description": "apps.multimodal_chat.utils.constant_utils",
        "peekOfCode": "LEAN_CHAT_ADMIN_SEARCH = ['organization', 'lean_assistant', 'user', 'chat_name', 'created_by_user', 'created_at',\n                          'updated_at']\nMULTIMODAL_LEAN_CHAT_MESSAGE_ADMIN_LIST = ['multimodal_lean_chat', 'sender_type', 'sent_at']\nMULTIMODAL_LEAN_CHAT_MESSAGE_ADMIN_FILTER = ['multimodal_lean_chat', 'sender_type', 'sent_at']\nMULTIMODAL_LEAN_CHAT_MESSAGE_ADMIN_SEARCH = ['multimodal_lean_chat', 'sender_type', 'sent_at']\nclass ChatPostActionSpecifiers:\n    NEW_CHAT_WITH_ASSISTANT_SPECIFIER = 'assistant_id'\n    CHANGE_CHAT_NAME_SPECIFIER = 'new_chat_name'\n    STARRING_MESSAGE_SPECIFIER = 'starred_message'",
        "detail": "apps.multimodal_chat.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MULTIMODAL_LEAN_CHAT_MESSAGE_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.multimodal_chat.utils.constant_utils",
        "description": "apps.multimodal_chat.utils.constant_utils",
        "peekOfCode": "MULTIMODAL_LEAN_CHAT_MESSAGE_ADMIN_LIST = ['multimodal_lean_chat', 'sender_type', 'sent_at']\nMULTIMODAL_LEAN_CHAT_MESSAGE_ADMIN_FILTER = ['multimodal_lean_chat', 'sender_type', 'sent_at']\nMULTIMODAL_LEAN_CHAT_MESSAGE_ADMIN_SEARCH = ['multimodal_lean_chat', 'sender_type', 'sent_at']\nclass ChatPostActionSpecifiers:\n    NEW_CHAT_WITH_ASSISTANT_SPECIFIER = 'assistant_id'\n    CHANGE_CHAT_NAME_SPECIFIER = 'new_chat_name'\n    STARRING_MESSAGE_SPECIFIER = 'starred_message'",
        "detail": "apps.multimodal_chat.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MULTIMODAL_LEAN_CHAT_MESSAGE_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.multimodal_chat.utils.constant_utils",
        "description": "apps.multimodal_chat.utils.constant_utils",
        "peekOfCode": "MULTIMODAL_LEAN_CHAT_MESSAGE_ADMIN_FILTER = ['multimodal_lean_chat', 'sender_type', 'sent_at']\nMULTIMODAL_LEAN_CHAT_MESSAGE_ADMIN_SEARCH = ['multimodal_lean_chat', 'sender_type', 'sent_at']\nclass ChatPostActionSpecifiers:\n    NEW_CHAT_WITH_ASSISTANT_SPECIFIER = 'assistant_id'\n    CHANGE_CHAT_NAME_SPECIFIER = 'new_chat_name'\n    STARRING_MESSAGE_SPECIFIER = 'starred_message'",
        "detail": "apps.multimodal_chat.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MULTIMODAL_LEAN_CHAT_MESSAGE_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.multimodal_chat.utils.constant_utils",
        "description": "apps.multimodal_chat.utils.constant_utils",
        "peekOfCode": "MULTIMODAL_LEAN_CHAT_MESSAGE_ADMIN_SEARCH = ['multimodal_lean_chat', 'sender_type', 'sent_at']\nclass ChatPostActionSpecifiers:\n    NEW_CHAT_WITH_ASSISTANT_SPECIFIER = 'assistant_id'\n    CHANGE_CHAT_NAME_SPECIFIER = 'new_chat_name'\n    STARRING_MESSAGE_SPECIFIER = 'starred_message'",
        "detail": "apps.multimodal_chat.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "transmit_websocket_log",
        "kind": 2,
        "importPath": "apps.multimodal_chat.utils.function_utils",
        "description": "apps.multimodal_chat.utils.function_utils",
        "peekOfCode": "def transmit_websocket_log(log_message, chat_id, stop_tag=BIMOD_STREAMING_END_TAG):\n    channel_layer = get_channel_layer()\n    group_name = f'logs_{chat_id}'\n    async_to_sync(channel_layer.group_send)(group_name, {'type': 'send_log', 'message': log_message})\n    if stop_tag == BIMOD_STREAMING_END_TAG:\n        async_to_sync(channel_layer.group_send)(group_name, {'type': 'send_log', 'message': BIMOD_STREAMING_END_TAG})\n    elif stop_tag == BIMOD_PROCESS_END:\n        async_to_sync(channel_layer.group_send)(group_name, {'type': 'send_log', 'message': BIMOD_PROCESS_END})\n    else:\n        if stop_tag is None or stop_tag == \"\" or stop_tag == BIMOD_NO_TAG_PLACEHOLDER:",
        "detail": "apps.multimodal_chat.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "calculate_number_of_tokens",
        "kind": 2,
        "importPath": "apps.multimodal_chat.utils.function_utils",
        "description": "apps.multimodal_chat.utils.function_utils",
        "peekOfCode": "def calculate_number_of_tokens(encoding_engine, text):\n    encoding = tiktoken.get_encoding(encoding_engine)\n    tokens = encoding.encode(str(text))\n    return len(tokens)\ndef calculate_llm_cost(model, number_of_tokens):\n    costs = LLMCostsPerMillionTokens.OPENAI_GPT_COSTS[model]\n    tokens_divided_by_million = number_of_tokens / 1_000_000\n    apx_input_cost = (tokens_divided_by_million / 2) * costs[\"input\"]\n    apx_output_cost = (tokens_divided_by_million / 2) * costs[\"output\"]\n    llm_cost = (apx_input_cost + apx_output_cost)",
        "detail": "apps.multimodal_chat.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "calculate_llm_cost",
        "kind": 2,
        "importPath": "apps.multimodal_chat.utils.function_utils",
        "description": "apps.multimodal_chat.utils.function_utils",
        "peekOfCode": "def calculate_llm_cost(model, number_of_tokens):\n    costs = LLMCostsPerMillionTokens.OPENAI_GPT_COSTS[model]\n    tokens_divided_by_million = number_of_tokens / 1_000_000\n    apx_input_cost = (tokens_divided_by_million / 2) * costs[\"input\"]\n    apx_output_cost = (tokens_divided_by_million / 2) * costs[\"output\"]\n    llm_cost = (apx_input_cost + apx_output_cost)\n    return llm_cost\ndef calculate_internal_service_cost(llm_cost):\n    return llm_cost * INTERNAL_PROFIT_MARGIN_FOR_LLM\ndef calculate_tax_cost(internal_service_cost):",
        "detail": "apps.multimodal_chat.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "calculate_internal_service_cost",
        "kind": 2,
        "importPath": "apps.multimodal_chat.utils.function_utils",
        "description": "apps.multimodal_chat.utils.function_utils",
        "peekOfCode": "def calculate_internal_service_cost(llm_cost):\n    return llm_cost * INTERNAL_PROFIT_MARGIN_FOR_LLM\ndef calculate_tax_cost(internal_service_cost):\n    tax_cost = internal_service_cost * VALUE_ADDED_TAX_PERCENTAGE\n    return tax_cost\ndef calculate_billable_cost(internal_service_cost, tax_cost):\n    return internal_service_cost + tax_cost\ndef calculate_billable_cost_from_raw(encoding_engine, model, text):\n    number_of_tokens = calculate_number_of_tokens(encoding_engine, text)\n    llm_cost = calculate_llm_cost(model, number_of_tokens)",
        "detail": "apps.multimodal_chat.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "calculate_tax_cost",
        "kind": 2,
        "importPath": "apps.multimodal_chat.utils.function_utils",
        "description": "apps.multimodal_chat.utils.function_utils",
        "peekOfCode": "def calculate_tax_cost(internal_service_cost):\n    tax_cost = internal_service_cost * VALUE_ADDED_TAX_PERCENTAGE\n    return tax_cost\ndef calculate_billable_cost(internal_service_cost, tax_cost):\n    return internal_service_cost + tax_cost\ndef calculate_billable_cost_from_raw(encoding_engine, model, text):\n    number_of_tokens = calculate_number_of_tokens(encoding_engine, text)\n    llm_cost = calculate_llm_cost(model, number_of_tokens)\n    internal_service_cost = calculate_internal_service_cost(llm_cost)\n    tax_cost = calculate_tax_cost(internal_service_cost)",
        "detail": "apps.multimodal_chat.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "calculate_billable_cost",
        "kind": 2,
        "importPath": "apps.multimodal_chat.utils.function_utils",
        "description": "apps.multimodal_chat.utils.function_utils",
        "peekOfCode": "def calculate_billable_cost(internal_service_cost, tax_cost):\n    return internal_service_cost + tax_cost\ndef calculate_billable_cost_from_raw(encoding_engine, model, text):\n    number_of_tokens = calculate_number_of_tokens(encoding_engine, text)\n    llm_cost = calculate_llm_cost(model, number_of_tokens)\n    internal_service_cost = calculate_internal_service_cost(llm_cost)\n    tax_cost = calculate_tax_cost(internal_service_cost)\n    return calculate_billable_cost(internal_service_cost, tax_cost)\ndef generate_chat_name():\n    chat_name_1 = wonderwords.RandomWord().word(word_max_length=8, include_categories=[\"verb\"])",
        "detail": "apps.multimodal_chat.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "calculate_billable_cost_from_raw",
        "kind": 2,
        "importPath": "apps.multimodal_chat.utils.function_utils",
        "description": "apps.multimodal_chat.utils.function_utils",
        "peekOfCode": "def calculate_billable_cost_from_raw(encoding_engine, model, text):\n    number_of_tokens = calculate_number_of_tokens(encoding_engine, text)\n    llm_cost = calculate_llm_cost(model, number_of_tokens)\n    internal_service_cost = calculate_internal_service_cost(llm_cost)\n    tax_cost = calculate_tax_cost(internal_service_cost)\n    return calculate_billable_cost(internal_service_cost, tax_cost)\ndef generate_chat_name():\n    chat_name_1 = wonderwords.RandomWord().word(word_max_length=8, include_categories=[\"verb\"])\n    chat_name_2 = wonderwords.RandomWord().word(word_max_length=8, include_categories=[\"adjective\"])\n    chat_name_3 = wonderwords.RandomWord().word(word_max_length=8, include_categories=[\"noun\"])",
        "detail": "apps.multimodal_chat.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "generate_chat_name",
        "kind": 2,
        "importPath": "apps.multimodal_chat.utils.function_utils",
        "description": "apps.multimodal_chat.utils.function_utils",
        "peekOfCode": "def generate_chat_name():\n    chat_name_1 = wonderwords.RandomWord().word(word_max_length=8, include_categories=[\"verb\"])\n    chat_name_2 = wonderwords.RandomWord().word(word_max_length=8, include_categories=[\"adjective\"])\n    chat_name_3 = wonderwords.RandomWord().word(word_max_length=8, include_categories=[\"noun\"])\n    chat_name_1 = chat_name_1.capitalize()\n    chat_name_2 = chat_name_2.capitalize()\n    chat_name_3 = chat_name_3.capitalize()\n    return \" \".join([chat_name_1, chat_name_2, chat_name_3])",
        "detail": "apps.multimodal_chat.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "ChatView_ChatArchive",
        "kind": 6,
        "importPath": "apps.multimodal_chat.views.chat.archive_chat_views",
        "description": "apps.multimodal_chat.views.chat.archive_chat_views",
        "peekOfCode": "class ChatView_ChatArchive(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context\n    def get(self, request, *args, **kwargs):\n        context = self.get_context_data(**kwargs)\n        ##############################\n        # PERMISSION CHECK FOR - ARCHIVE_CHATS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.ARCHIVE_CHATS):",
        "detail": "apps.multimodal_chat.views.chat.archive_chat_views",
        "documentation": {}
    },
    {
        "label": "ChatView_Chat",
        "kind": 6,
        "importPath": "apps.multimodal_chat.views.chat.chat_views",
        "description": "apps.multimodal_chat.views.chat.chat_views",
        "peekOfCode": "class ChatView_Chat(LoginRequiredMixin, TemplateView):\n    @staticmethod\n    def refresh_page(chat_id, user_id):\n        return redirect(f'/chat/?chat_id={chat_id}')\n    def get_context_data(self, **kwargs):\n        active_chat = None\n        context_user = self.request.user\n        if 'chat_id' in self.request.GET:\n            active_chat = get_object_or_404(MultimodalChat, id=self.request.GET['chat_id'], user=self.request.user)\n        chats = MultimodalChat.objects.filter(",
        "detail": "apps.multimodal_chat.views.chat.chat_views",
        "documentation": {}
    },
    {
        "label": "ChatView_ChatDelete",
        "kind": 6,
        "importPath": "apps.multimodal_chat.views.chat.delete_chat_views",
        "description": "apps.multimodal_chat.views.chat.delete_chat_views",
        "peekOfCode": "class ChatView_ChatDelete(LoginRequiredMixin, DeleteView):\n    template_name = 'multimodal_chat/chats/confirm_delete_chat.html'\n    success_url = '/chat/'\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        chat = self.get_object()\n        context['chat'] = chat\n        return context\n    def get_queryset(self):\n        return MultimodalChat.objects.filter(user=self.request.user, chat_source=SourcesForMultimodalChatsNames.APP)",
        "detail": "apps.multimodal_chat.views.chat.delete_chat_views",
        "documentation": {}
    },
    {
        "label": "ChatView_ListArchivedChats",
        "kind": 6,
        "importPath": "apps.multimodal_chat.views.chat.list_archived_chats_views",
        "description": "apps.multimodal_chat.views.chat.list_archived_chats_views",
        "peekOfCode": "class ChatView_ListArchivedChats(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        active_chat = None\n        context_user = self.request.user\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - CREATE_AND_USE_CHATS\n        if not UserPermissionManager.is_authorized(user=context_user,\n                                                   operation=PermissionNames.CREATE_AND_USE_CHATS):\n            messages.error(self.request, \"You do not have permission to create and use chats.\")",
        "detail": "apps.multimodal_chat.views.chat.list_archived_chats_views",
        "documentation": {}
    },
    {
        "label": "ChatView_ChatStream",
        "kind": 6,
        "importPath": "apps.multimodal_chat.views.chat.stream_chat_views",
        "description": "apps.multimodal_chat.views.chat.stream_chat_views",
        "peekOfCode": "class ChatView_ChatStream(View):\n    def post(self, request, *args, **kwargs):\n        context_user_id = request.POST.get('user_id')\n        context_user = get_object_or_404(User, id=context_user_id)\n        ##############################\n        # PERMISSION CHECK FOR - CREATE_AND_USE_CHATS\n        if not UserPermissionManager.is_authorized(user=context_user,\n                                                   operation=PermissionNames.CREATE_AND_USE_CHATS):\n            messages.error(self.request, \"You do not have permission to create and use chats.\")\n            return redirect('multimodal_chat:chat')",
        "detail": "apps.multimodal_chat.views.chat.stream_chat_views",
        "documentation": {}
    },
    {
        "label": "ChatView_ChatUnarchive",
        "kind": 6,
        "importPath": "apps.multimodal_chat.views.chat.unarchive_chat_views",
        "description": "apps.multimodal_chat.views.chat.unarchive_chat_views",
        "peekOfCode": "class ChatView_ChatUnarchive(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context\n    def get(self, request, *args, **kwargs):\n        context = self.get_context_data(**kwargs)\n        ##############################\n        # PERMISSION CHECK FOR - UNARCHIVE_CHATS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.UNARCHIVE_CHATS):",
        "detail": "apps.multimodal_chat.views.chat.unarchive_chat_views",
        "documentation": {}
    },
    {
        "label": "ChatView_LeanChatArchive",
        "kind": 6,
        "importPath": "apps.multimodal_chat.views.lean_chat.archive_lean_chat_views",
        "description": "apps.multimodal_chat.views.lean_chat.archive_lean_chat_views",
        "peekOfCode": "class ChatView_LeanChatArchive(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context\n    def get(self, request, *args, **kwargs):\n        context = self.get_context_data(**kwargs)\n        ##############################\n        # PERMISSION CHECK FOR - ARCHIVE_LEAN_CHATS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.ARCHIVE_LEAN_CHATS):",
        "detail": "apps.multimodal_chat.views.lean_chat.archive_lean_chat_views",
        "documentation": {}
    },
    {
        "label": "ChatView_LeanChatDelete",
        "kind": 6,
        "importPath": "apps.multimodal_chat.views.lean_chat.delete_lean_chat_views",
        "description": "apps.multimodal_chat.views.lean_chat.delete_lean_chat_views",
        "peekOfCode": "class ChatView_LeanChatDelete(LoginRequiredMixin, DeleteView):\n    template_name = 'multimodal_chat/chats/confirm_delete_lean_chat.html'\n    success_url = '/lean_chat/'\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        chat = self.get_object()\n        context['chat'] = chat\n        return context\n    def get_queryset(self):\n        return MultimodalLeanChat.objects.filter(user=self.request.user, chat_source=SourcesForMultimodalChatsNames.APP)",
        "detail": "apps.multimodal_chat.views.lean_chat.delete_lean_chat_views",
        "documentation": {}
    },
    {
        "label": "ChatView_LeanChat",
        "kind": 6,
        "importPath": "apps.multimodal_chat.views.lean_chat.lean_chat_views",
        "description": "apps.multimodal_chat.views.lean_chat.lean_chat_views",
        "peekOfCode": "class ChatView_LeanChat(TemplateView, LoginRequiredMixin):\n    @staticmethod\n    def refresh_page(chat_id, user_id):\n        return redirect(f'/lean_chat/?chat_id={chat_id}')\n    def get_context_data(self, **kwargs):\n        active_chat = None\n        context_user = self.request.user\n        if 'chat_id' in self.request.GET:\n            active_chat = get_object_or_404(MultimodalLeanChat, id=self.request.GET['chat_id'], user=self.request.user)\n        chats = MultimodalLeanChat.objects.filter(",
        "detail": "apps.multimodal_chat.views.lean_chat.lean_chat_views",
        "documentation": {}
    },
    {
        "label": "ChatView_LeanChatListArchivedChats",
        "kind": 6,
        "importPath": "apps.multimodal_chat.views.lean_chat.list_archived_lean_chats_views",
        "description": "apps.multimodal_chat.views.lean_chat.list_archived_lean_chats_views",
        "peekOfCode": "class ChatView_LeanChatListArchivedChats(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        active_chat = None\n        context_user = self.request.user\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - CREATE_AND_USE_LEAN_CHATS\n        if not UserPermissionManager.is_authorized(user=context_user,\n                                                   operation=PermissionNames.CREATE_AND_USE_LEAN_CHATS):\n            messages.error(self.request, \"You do not have permission to create and use LeanMod chats.\")",
        "detail": "apps.multimodal_chat.views.lean_chat.list_archived_lean_chats_views",
        "documentation": {}
    },
    {
        "label": "ChatView_LeanChatStream",
        "kind": 6,
        "importPath": "apps.multimodal_chat.views.lean_chat.stream_lean_chat_views",
        "description": "apps.multimodal_chat.views.lean_chat.stream_lean_chat_views",
        "peekOfCode": "class ChatView_LeanChatStream(View):\n    def post(self, request, *args, **kwargs):\n        context_user_id = request.POST.get('user_id')\n        context_user = get_object_or_404(User, id=context_user_id)\n        ##############################\n        # PERMISSION CHECK FOR - CREATE_AND_USE_LEAN_CHATS\n        if not UserPermissionManager.is_authorized(user=context_user,\n                                                   operation=PermissionNames.CREATE_AND_USE_LEAN_CHATS):\n            messages.error(self.request, \"You do not have permission to create and use LeanMod chats.\")\n            return redirect('multimodal_chat:lean_chat')",
        "detail": "apps.multimodal_chat.views.lean_chat.stream_lean_chat_views",
        "documentation": {}
    },
    {
        "label": "ChatView_LeanChatUnarchive",
        "kind": 6,
        "importPath": "apps.multimodal_chat.views.lean_chat.unarchive_lean_chat_views",
        "description": "apps.multimodal_chat.views.lean_chat.unarchive_lean_chat_views",
        "peekOfCode": "class ChatView_LeanChatUnarchive(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context\n    def get(self, request, *args, **kwargs):\n        context = self.get_context_data(**kwargs)\n        ##############################\n        # PERMISSION CHECK FOR - UNARCHIVE_LEAN_CHATS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.UNARCHIVE_LEAN_CHATS):",
        "detail": "apps.multimodal_chat.views.lean_chat.unarchive_lean_chat_views",
        "documentation": {}
    },
    {
        "label": "LeanChat_MessageNarration",
        "kind": 6,
        "importPath": "apps.multimodal_chat.views.multimodality.narrate_chat_message_views",
        "description": "apps.multimodal_chat.views.multimodality.narrate_chat_message_views",
        "peekOfCode": "class LeanChat_MessageNarration(LoginRequiredMixin, View):\n    def get(self, request, *args, **kwargs):\n        msg_id = kwargs.get('pk')\n        try:\n            msg = get_object_or_404(MultimodalChatMessage, id=msg_id, multimodal_chat__user=request.user)\n        except Exception as e:\n            return JsonResponse({'audio_url': None})\n        try:\n            if msg.message_audio:\n                return JsonResponse({'audio_url': msg.message_audio})",
        "detail": "apps.multimodal_chat.views.multimodality.narrate_chat_message_views",
        "documentation": {}
    },
    {
        "label": "MultimodalChatConfig",
        "kind": 6,
        "importPath": "apps.multimodal_chat.apps",
        "description": "apps.multimodal_chat.apps",
        "peekOfCode": "class MultimodalChatConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.multimodal_chat'\n    def ready(self):\n        from . import signals",
        "detail": "apps.multimodal_chat.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.multimodal_chat.urls",
        "description": "apps.multimodal_chat.urls",
        "peekOfCode": "app_name = \"multimodal_chat\"\nurlpatterns = [\n    path('chat/', ChatView_Chat.as_view(template_name=\"multimodal_chat/chats/chat.html\"), name='chat'),\n    path('chat/stream/', ChatView_ChatStream.as_view(), name='chat_stream'),\n    path('chat/<int:pk>/', ChatView_ChatDelete.as_view(\n        template_name=\"multimodal_chat/chats/confirm_delete_chat.html\"), name='delete'),\n    path('archive/<int:pk>/', ChatView_ChatArchive.as_view(\n        template_name=\"multimodal_chat/archives/archived_chats.html\"), name='archive'),\n    path('unarchive/<int:pk>/', ChatView_ChatUnarchive.as_view(\n        template_name=\"multimodal_chat/archives/archived_chats.html\"), name='unarchive'),",
        "detail": "apps.multimodal_chat.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.multimodal_chat.urls",
        "description": "apps.multimodal_chat.urls",
        "peekOfCode": "urlpatterns = [\n    path('chat/', ChatView_Chat.as_view(template_name=\"multimodal_chat/chats/chat.html\"), name='chat'),\n    path('chat/stream/', ChatView_ChatStream.as_view(), name='chat_stream'),\n    path('chat/<int:pk>/', ChatView_ChatDelete.as_view(\n        template_name=\"multimodal_chat/chats/confirm_delete_chat.html\"), name='delete'),\n    path('archive/<int:pk>/', ChatView_ChatArchive.as_view(\n        template_name=\"multimodal_chat/archives/archived_chats.html\"), name='archive'),\n    path('unarchive/<int:pk>/', ChatView_ChatUnarchive.as_view(\n        template_name=\"multimodal_chat/archives/archived_chats.html\"), name='unarchive'),\n    path('chat/archive/', ChatView_ListArchivedChats.as_view(",
        "detail": "apps.multimodal_chat.urls",
        "documentation": {}
    },
    {
        "label": "MaestroAdmin",
        "kind": 6,
        "importPath": "apps.orchestrations.admin.maestro.maestro_admin",
        "description": "apps.orchestrations.admin.maestro.maestro_admin",
        "peekOfCode": "class MaestroAdmin(admin.ModelAdmin):\n    list_display = MAESTRO_ADMIN_LIST\n    search_fields = MAESTRO_ADMIN_SEARCH\n    list_filter = MAESTRO_ADMIN_LIST",
        "detail": "apps.orchestrations.admin.maestro.maestro_admin",
        "documentation": {}
    },
    {
        "label": "OrchestrationQueryAdmin",
        "kind": 6,
        "importPath": "apps.orchestrations.admin.query.orchestration_query_admin",
        "description": "apps.orchestrations.admin.query.orchestration_query_admin",
        "peekOfCode": "class OrchestrationQueryAdmin(admin.ModelAdmin):\n    list_display = MAESTRO_QUERY_ADMIN_LIST\n    search_fields = MAESTRO_QUERY_ADMIN_SEARCH\n    list_filter = MAESTRO_QUERY_ADMIN_FILTER",
        "detail": "apps.orchestrations.admin.query.orchestration_query_admin",
        "documentation": {}
    },
    {
        "label": "OrchestrationQueryLogAdmin",
        "kind": 6,
        "importPath": "apps.orchestrations.admin.query.orchestration_query_log_admin",
        "description": "apps.orchestrations.admin.query.orchestration_query_log_admin",
        "peekOfCode": "class OrchestrationQueryLogAdmin(admin.ModelAdmin):\n    list_display = MAESTRO_QUERY_LOG_ADMIN_LIST\n    search_fields = MAESTRO_QUERY_LOG_ADMIN_SEARCH\n    list_filter = MAESTRO_QUERY_LOG_ADMIN_FILTER",
        "detail": "apps.orchestrations.admin.query.orchestration_query_log_admin",
        "documentation": {}
    },
    {
        "label": "MaestroForm",
        "kind": 6,
        "importPath": "apps.orchestrations.forms.maestro_forms",
        "description": "apps.orchestrations.forms.maestro_forms",
        "peekOfCode": "class MaestroForm(forms.ModelForm):\n    organization = forms.ModelChoiceField(queryset=Organization.objects.all(), widget=forms.Select(attrs={\n        'class': 'form-control select2',\n    }))\n    llm_model = forms.ModelChoiceField(queryset=LLMCore.objects.all(), widget=forms.Select(attrs={\n        'class': 'form-control select2',\n    }))\n    class Meta:\n        model = Maestro\n        fields = [",
        "detail": "apps.orchestrations.forms.maestro_forms",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.orchestrations.migrations.0001_initial",
        "description": "apps.orchestrations.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('assistants', '0003_initial'),\n        ('llm_core', '0002_initial'),\n        ('organization', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(",
        "detail": "apps.orchestrations.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Maestro",
        "kind": 6,
        "importPath": "apps.orchestrations.models.maestro.maestro_models",
        "description": "apps.orchestrations.models.maestro.maestro_models",
        "peekOfCode": "class Maestro(models.Model):\n    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE, related_name='maestros')\n    llm_model = models.ForeignKey('llm_core.LLMCore', on_delete=models.CASCADE, related_name='maestros')\n    name = models.CharField(max_length=255)\n    description = models.TextField(default=\"\", blank=True)\n    instructions = models.TextField(default=\"\", blank=True)\n    workflow_step_guide = models.TextField(default=\"\", blank=True)\n    maximum_assistant_limits = models.IntegerField(default=10)\n    response_template = models.TextField(default=\"\", blank=True)\n    audience = models.CharField(max_length=1000)",
        "detail": "apps.orchestrations.models.maestro.maestro_models",
        "documentation": {}
    },
    {
        "label": "OrchestrationQueryLog",
        "kind": 6,
        "importPath": "apps.orchestrations.models.query.orchestration_query_log_models",
        "description": "apps.orchestrations.models.query.orchestration_query_log_models",
        "peekOfCode": "class OrchestrationQueryLog(models.Model):\n    orchestration_query = models.ForeignKey('orchestrations.OrchestrationQuery', on_delete=models.CASCADE,\n                                            related_name='logs')\n    log_type = models.CharField(max_length=100, choices=ORCHESTRATION_QUERY_LOG_TYPES, default=\"info\")\n    context_worker = models.ForeignKey('assistants.Assistant', on_delete=models.SET_NULL, blank=True, null=True)\n    log_text_content = models.TextField()\n    log_image_contents = models.JSONField(default=list, blank=True, null=True)\n    log_file_contents = models.JSONField(default=list, blank=True, null=True)\n    log_audio_contents = models.JSONField(default=list, blank=True, null=True)\n    created_at = models.DateTimeField(auto_now_add=True)",
        "detail": "apps.orchestrations.models.query.orchestration_query_log_models",
        "documentation": {}
    },
    {
        "label": "OrchestrationQuery",
        "kind": 6,
        "importPath": "apps.orchestrations.models.query.orchestration_query_models",
        "description": "apps.orchestrations.models.query.orchestration_query_models",
        "peekOfCode": "class OrchestrationQuery(models.Model):\n    maestro = models.ForeignKey(Maestro, on_delete=models.CASCADE, related_name='queries')\n    query_text = models.TextField()\n    created_by_user = models.ForeignKey(\"auth.User\", on_delete=models.CASCADE,\n                                        related_name='orchestration_queries_created_by_user')\n    last_updated_by_user = models.ForeignKey(\"auth.User\", on_delete=models.CASCADE,\n                                             related_name='orchestration_queries_last_updated_by_user')\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    def __str__(self):",
        "detail": "apps.orchestrations.models.query.orchestration_query_models",
        "documentation": {}
    },
    {
        "label": "fixture_orchestrations_init",
        "kind": 2,
        "importPath": "apps.orchestrations.tests.conftest",
        "description": "apps.orchestrations.tests.conftest",
        "peekOfCode": "def fixture_orchestrations_init():\n    return True",
        "detail": "apps.orchestrations.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_orchestrations_test_forms",
        "kind": 2,
        "importPath": "apps.orchestrations.tests.test_forms",
        "description": "apps.orchestrations.tests.test_forms",
        "peekOfCode": "def test_init_orchestrations_test_forms():\n    assert True",
        "detail": "apps.orchestrations.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_orchestrations_test_models",
        "kind": 2,
        "importPath": "apps.orchestrations.tests.test_models",
        "description": "apps.orchestrations.tests.test_models",
        "peekOfCode": "def test_init_orchestrations_test_models():\n    assert True",
        "detail": "apps.orchestrations.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_orchestrations_test_utils",
        "kind": 2,
        "importPath": "apps.orchestrations.tests.test_utils",
        "description": "apps.orchestrations.tests.test_utils",
        "peekOfCode": "def test_init_orchestrations_test_utils():\n    assert True",
        "detail": "apps.orchestrations.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_orchestrations_test_views",
        "kind": 2,
        "importPath": "apps.orchestrations.tests.test_views",
        "description": "apps.orchestrations.tests.test_views",
        "peekOfCode": "def test_init_orchestrations_test_views():\n    assert True",
        "detail": "apps.orchestrations.tests.test_views",
        "documentation": {}
    },
    {
        "label": "OrchestrationQueryLogTypesNames",
        "kind": 6,
        "importPath": "apps.orchestrations.utils.constant_utils",
        "description": "apps.orchestrations.utils.constant_utils",
        "peekOfCode": "class OrchestrationQueryLogTypesNames:\n    USER = \"user\"\n    INFO = \"info\"\n    ERROR = \"error\"\n    WORKER_REQUEST = \"worker_request\"\n    WORKER_RESPONSE = \"worker_response\"\n    MAESTRO_ANSWER = \"maestro_answer\"\n    @staticmethod\n    def as_list():\n        return [OrchestrationQueryLogTypesNames.INFO, OrchestrationQueryLogTypesNames.ERROR,",
        "detail": "apps.orchestrations.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "ORCHESTRATION_QUERY_LOG_TYPES",
        "kind": 5,
        "importPath": "apps.orchestrations.utils.constant_utils",
        "description": "apps.orchestrations.utils.constant_utils",
        "peekOfCode": "ORCHESTRATION_QUERY_LOG_TYPES = [\n    (\"user\", \"User\"),\n    (\"info\", \"Info\"),\n    (\"error\", \"Error\"),\n    (\"worker_request\", \"Worker Request\"),\n    (\"worker_response\", \"Worker Response\"),\n    (\"maestro_answer\", \"Maestro Answer\"),\n]\nclass OrchestrationQueryLogTypesNames:\n    USER = \"user\"",
        "detail": "apps.orchestrations.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "ORCHESTRATION_RESPONSE_LANGUAGES",
        "kind": 5,
        "importPath": "apps.orchestrations.utils.constant_utils",
        "description": "apps.orchestrations.utils.constant_utils",
        "peekOfCode": "ORCHESTRATION_RESPONSE_LANGUAGES = [\n    (\"auto\", \"Auto (Detect)\"),\n    (\"en\", \"English\"), (\"es\", \"Spanish\"), (\"fr\", \"French\"), (\"de\", \"German\"), (\"it\", \"Italian\"),\n    (\"pt\", \"Portuguese\"), (\"nl\", \"Dutch\"), (\"ru\", \"Russian\"), (\"ja\", \"Japanese\"), (\"ko\", \"Korean\"),\n    (\"zh\", \"Chinese\"), (\"ar\", \"Arabic\"), (\"tr\", \"Turkish\"), (\"pl\", \"Polish\"), (\"sv\", \"Swedish\"),\n    (\"da\", \"Danish\"), (\"fi\", \"Finnish\"), (\"no\", \"Norwegian\"), (\"he\", \"Hebrew\"), (\"id\", \"Indonesian\"),\n    (\"ms\", \"Malay\"), (\"th\", \"Thai\"), (\"hi\", \"Hindi\"), (\"hu\", \"Hungarian\"), (\"cs\", \"Czech\"),\n    (\"sk\", \"Slovak\"), (\"uk\", \"Ukrainian\"), (\"ro\", \"Romanian\"), (\"bg\", \"Bulgarian\"), (\"el\", \"Greek\"),\n    (\"fi\", \"Finnish\"), (\"et\", \"Estonian\"), (\"lv\", \"Latvian\"), (\"lt\", \"Lithuanian\"), (\"hr\", \"Croatian\"),\n    (\"sr\", \"Serbian\"), (\"sl\", \"Slovenian\"), (\"mk\", \"Macedonian\"), (\"sq\", \"Albanian\"), (\"bs\", \"Bosnian\"),",
        "detail": "apps.orchestrations.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "ORCHESTRATION_RESPONSE_LANGUAGES",
        "kind": 5,
        "importPath": "apps.orchestrations.utils.constant_utils",
        "description": "apps.orchestrations.utils.constant_utils",
        "peekOfCode": "ORCHESTRATION_RESPONSE_LANGUAGES = [ORCHESTRATION_RESPONSE_LANGUAGES[0]] + sorted(ORCHESTRATION_RESPONSE_LANGUAGES[1:],\n                                                                                  key=lambda x: x[1])\nMAESTRO_ADMIN_LIST = [\n    \"name\",\n    \"organization\",\n    \"llm_model\",\n    \"created_by_user\",\n    \"last_updated_by_user\",\n    \"created_at\",\n    \"updated_at\",",
        "detail": "apps.orchestrations.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MAESTRO_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.orchestrations.utils.constant_utils",
        "description": "apps.orchestrations.utils.constant_utils",
        "peekOfCode": "MAESTRO_ADMIN_LIST = [\n    \"name\",\n    \"organization\",\n    \"llm_model\",\n    \"created_by_user\",\n    \"last_updated_by_user\",\n    \"created_at\",\n    \"updated_at\",\n]\nMAESTRO_ADMIN_SEARCH = [",
        "detail": "apps.orchestrations.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MAESTRO_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.orchestrations.utils.constant_utils",
        "description": "apps.orchestrations.utils.constant_utils",
        "peekOfCode": "MAESTRO_ADMIN_SEARCH = [\n    \"name\",\n    \"organization\",\n    \"llm_model\",\n    \"created_by_user\",\n    \"last_updated_by_user\",\n]\nMAESTRO_ADMIN_FILTER = [\n    \"organization\",\n    \"llm_model\",",
        "detail": "apps.orchestrations.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MAESTRO_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.orchestrations.utils.constant_utils",
        "description": "apps.orchestrations.utils.constant_utils",
        "peekOfCode": "MAESTRO_ADMIN_FILTER = [\n    \"organization\",\n    \"llm_model\",\n    \"created_by_user\",\n    \"last_updated_by_user\",\n    \"created_at\",\n    \"updated_at\",\n]\nMAESTRO_QUERY_ADMIN_LIST = ['maestro', 'query_text', 'created_by_user', 'last_updated_by_user', 'created_at',\n                            'updated_at']",
        "detail": "apps.orchestrations.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MAESTRO_QUERY_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.orchestrations.utils.constant_utils",
        "description": "apps.orchestrations.utils.constant_utils",
        "peekOfCode": "MAESTRO_QUERY_ADMIN_LIST = ['maestro', 'query_text', 'created_by_user', 'last_updated_by_user', 'created_at',\n                            'updated_at']\nMAESTRO_QUERY_ADMIN_SEARCH = ['maestro', 'query_text', 'created_by_user', 'last_updated_by_user']\nMAESTRO_QUERY_ADMIN_FILTER = ['maestro', 'created_by_user', 'last_updated_by_user', 'created_at', 'updated_at']\nMAESTRO_QUERY_LOG_ADMIN_LIST = ['orchestration_query', 'log_text_content', 'created_at']\nMAESTRO_QUERY_LOG_ADMIN_SEARCH = ['orchestration_query', 'log_text_content']\nMAESTRO_QUERY_LOG_ADMIN_FILTER = ['orchestration_query', 'created_at']",
        "detail": "apps.orchestrations.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MAESTRO_QUERY_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.orchestrations.utils.constant_utils",
        "description": "apps.orchestrations.utils.constant_utils",
        "peekOfCode": "MAESTRO_QUERY_ADMIN_SEARCH = ['maestro', 'query_text', 'created_by_user', 'last_updated_by_user']\nMAESTRO_QUERY_ADMIN_FILTER = ['maestro', 'created_by_user', 'last_updated_by_user', 'created_at', 'updated_at']\nMAESTRO_QUERY_LOG_ADMIN_LIST = ['orchestration_query', 'log_text_content', 'created_at']\nMAESTRO_QUERY_LOG_ADMIN_SEARCH = ['orchestration_query', 'log_text_content']\nMAESTRO_QUERY_LOG_ADMIN_FILTER = ['orchestration_query', 'created_at']",
        "detail": "apps.orchestrations.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MAESTRO_QUERY_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.orchestrations.utils.constant_utils",
        "description": "apps.orchestrations.utils.constant_utils",
        "peekOfCode": "MAESTRO_QUERY_ADMIN_FILTER = ['maestro', 'created_by_user', 'last_updated_by_user', 'created_at', 'updated_at']\nMAESTRO_QUERY_LOG_ADMIN_LIST = ['orchestration_query', 'log_text_content', 'created_at']\nMAESTRO_QUERY_LOG_ADMIN_SEARCH = ['orchestration_query', 'log_text_content']\nMAESTRO_QUERY_LOG_ADMIN_FILTER = ['orchestration_query', 'created_at']",
        "detail": "apps.orchestrations.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MAESTRO_QUERY_LOG_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.orchestrations.utils.constant_utils",
        "description": "apps.orchestrations.utils.constant_utils",
        "peekOfCode": "MAESTRO_QUERY_LOG_ADMIN_LIST = ['orchestration_query', 'log_text_content', 'created_at']\nMAESTRO_QUERY_LOG_ADMIN_SEARCH = ['orchestration_query', 'log_text_content']\nMAESTRO_QUERY_LOG_ADMIN_FILTER = ['orchestration_query', 'created_at']",
        "detail": "apps.orchestrations.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MAESTRO_QUERY_LOG_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.orchestrations.utils.constant_utils",
        "description": "apps.orchestrations.utils.constant_utils",
        "peekOfCode": "MAESTRO_QUERY_LOG_ADMIN_SEARCH = ['orchestration_query', 'log_text_content']\nMAESTRO_QUERY_LOG_ADMIN_FILTER = ['orchestration_query', 'created_at']",
        "detail": "apps.orchestrations.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MAESTRO_QUERY_LOG_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.orchestrations.utils.constant_utils",
        "description": "apps.orchestrations.utils.constant_utils",
        "peekOfCode": "MAESTRO_QUERY_LOG_ADMIN_FILTER = ['orchestration_query', 'created_at']",
        "detail": "apps.orchestrations.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "OrchestrationView_Create",
        "kind": 6,
        "importPath": "apps.orchestrations.views.orchestration.create_orchestration_views",
        "description": "apps.orchestrations.views.orchestration.create_orchestration_views",
        "peekOfCode": "class OrchestrationView_Create(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['form'] = MaestroForm()\n        context['organizations'] = Organization.objects.filter(users=self.request.user)\n        context['llm_models'] = LLMCore.objects.filter(organization__in=context['organizations'])\n        context['assistants'] = Assistant.objects.filter(organization__in=context['organizations'])\n        return context\n    def post(self, request, *args, **kwargs):\n        form = MaestroForm(request.POST, request.FILES)",
        "detail": "apps.orchestrations.views.orchestration.create_orchestration_views",
        "documentation": {}
    },
    {
        "label": "OrchestrationView_Delete",
        "kind": 6,
        "importPath": "apps.orchestrations.views.orchestration.delete_orchestration_views",
        "description": "apps.orchestrations.views.orchestration.delete_orchestration_views",
        "peekOfCode": "class OrchestrationView_Delete(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        orchestration = get_object_or_404(Maestro, pk=kwargs['pk'])\n        context['orchestration'] = orchestration\n        return context\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - DELETE_ORCHESTRATIONS\n        if not UserPermissionManager.is_authorized(user=self.request.user,",
        "detail": "apps.orchestrations.views.orchestration.delete_orchestration_views",
        "documentation": {}
    },
    {
        "label": "OrchestrationView_List",
        "kind": 6,
        "importPath": "apps.orchestrations.views.orchestration.list_orchestrations_views",
        "description": "apps.orchestrations.views.orchestration.list_orchestrations_views",
        "peekOfCode": "class OrchestrationView_List(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_ORCHESTRATIONS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_ORCHESTRATIONS):\n            messages.error(self.request, \"You do not have permission to list orchestrations.\")\n            return context\n        ##############################",
        "detail": "apps.orchestrations.views.orchestration.list_orchestrations_views",
        "documentation": {}
    },
    {
        "label": "OrchestrationView_Update",
        "kind": 6,
        "importPath": "apps.orchestrations.views.orchestration.update_orchestration_views",
        "description": "apps.orchestrations.views.orchestration.update_orchestration_views",
        "peekOfCode": "class OrchestrationView_Update(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        orchestration = get_object_or_404(Maestro, pk=kwargs['pk'])\n        context['form'] = MaestroForm(instance=orchestration)\n        context['orchestration'] = orchestration\n        context['organizations'] = Organization.objects.filter(users=self.request.user)\n        context['llm_models'] = LLMCore.objects.filter(organization__in=context['organizations'])\n        context['assistants'] = Assistant.objects.filter(organization__in=context['organizations'])\n        context['selected_workers'] = orchestration.workers.all().values_list('id', flat=True)",
        "detail": "apps.orchestrations.views.orchestration.update_orchestration_views",
        "documentation": {}
    },
    {
        "label": "OrchestrationView_QueryDelete",
        "kind": 6,
        "importPath": "apps.orchestrations.views.query.delete_orchestration_query_views",
        "description": "apps.orchestrations.views.query.delete_orchestration_query_views",
        "peekOfCode": "class OrchestrationView_QueryDelete(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        query_id = self.kwargs['query_id']\n        context['query'] = get_object_or_404(OrchestrationQuery, pk=query_id)\n        context['orchestration'] = context['query'].maestro\n        return context\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - REMOVE_ORCHESTRATION_CHATS",
        "detail": "apps.orchestrations.views.query.delete_orchestration_query_views",
        "documentation": {}
    },
    {
        "label": "OrchestrationView_QueryDetail",
        "kind": 6,
        "importPath": "apps.orchestrations.views.query.detail_orchestration_query_views",
        "description": "apps.orchestrations.views.query.detail_orchestration_query_views",
        "peekOfCode": "class OrchestrationView_QueryDetail(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - CREATE_AND_USE_ORCHESTRATION_CHATS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.CREATE_AND_USE_ORCHESTRATION_CHATS):\n            messages.error(self.request, \"You do not have permission to create and use orchestration queries.\")\n            return context\n        ##############################",
        "detail": "apps.orchestrations.views.query.detail_orchestration_query_views",
        "documentation": {}
    },
    {
        "label": "OrchestrationView_QueryList",
        "kind": 6,
        "importPath": "apps.orchestrations.views.query.list_orchestration_queries_views",
        "description": "apps.orchestrations.views.query.list_orchestration_queries_views",
        "peekOfCode": "class OrchestrationView_QueryList(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        maestro_id = kwargs['pk']\n        maestro = get_object_or_404(Maestro, id=maestro_id)\n        query_chats = OrchestrationQuery.objects.filter(created_by_user=self.request.user, maestro=maestro)\n        context['maestro'] = maestro\n        context['query_chats'] = query_chats\n        context['maestro_list'] = Maestro.objects.all()\n        return context",
        "detail": "apps.orchestrations.views.query.list_orchestration_queries_views",
        "documentation": {}
    },
    {
        "label": "OrchestrationView_QueryRerun",
        "kind": 6,
        "importPath": "apps.orchestrations.views.query.rerun_orchestration_query_views",
        "description": "apps.orchestrations.views.query.rerun_orchestration_query_views",
        "peekOfCode": "class OrchestrationView_QueryRerun(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context\n    def get(self, request, *args, **kwargs):\n        #############################\n        # PERMISSION CHECK FOR - CREATE_AND_USE_ORCHESTRATION_CHATS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.CREATE_AND_USE_ORCHESTRATION_CHATS):\n            messages.error(self.request, \"You do not have permission to create and use orchestration queries.\")",
        "detail": "apps.orchestrations.views.query.rerun_orchestration_query_views",
        "documentation": {}
    },
    {
        "label": "OrchestrationsConfig",
        "kind": 6,
        "importPath": "apps.orchestrations.apps",
        "description": "apps.orchestrations.apps",
        "peekOfCode": "class OrchestrationsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.orchestrations'",
        "detail": "apps.orchestrations.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.orchestrations.urls",
        "description": "apps.orchestrations.urls",
        "peekOfCode": "app_name = \"orchestrations\"\nurlpatterns = [\n    path(\"create/\", OrchestrationView_Create.as_view(\n        template_name=\"orchestrations/create_orchestration.html\"), name=\"create\"),\n    path(\"list/\", OrchestrationView_List.as_view(\n        template_name=\"orchestrations/list_orchestrations.html\"), name=\"list\"),\n    path(\"update/<int:pk>/\", OrchestrationView_Update.as_view(\n        template_name=\"orchestrations/update_orchestration.html\"), name=\"update\"),\n    path(\"delete/<int:pk>/\", OrchestrationView_Delete.as_view(\n        template_name=\"orchestrations/delete_orchestration.html\"), name=\"delete\"),",
        "detail": "apps.orchestrations.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.orchestrations.urls",
        "description": "apps.orchestrations.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"create/\", OrchestrationView_Create.as_view(\n        template_name=\"orchestrations/create_orchestration.html\"), name=\"create\"),\n    path(\"list/\", OrchestrationView_List.as_view(\n        template_name=\"orchestrations/list_orchestrations.html\"), name=\"list\"),\n    path(\"update/<int:pk>/\", OrchestrationView_Update.as_view(\n        template_name=\"orchestrations/update_orchestration.html\"), name=\"update\"),\n    path(\"delete/<int:pk>/\", OrchestrationView_Delete.as_view(\n        template_name=\"orchestrations/delete_orchestration.html\"), name=\"delete\"),\n    path(\"query/<int:pk>/list/\", OrchestrationView_QueryList.as_view(",
        "detail": "apps.orchestrations.urls",
        "documentation": {}
    },
    {
        "label": "OrganizationAdmin",
        "kind": 6,
        "importPath": "apps.organization.admin.organization_admin",
        "description": "apps.organization.admin.organization_admin",
        "peekOfCode": "class OrganizationAdmin(admin.ModelAdmin):\n    list_display = ORGANIZATION_ADMIN_LIST\n    list_filter = ORGANIZATION_ADMIN_FILTER\n    search_fields = ORGANIZATION_ADMIN_SEARCH\n    date_hierarchy = \"created_at\"\n    ordering = [\"-created_at\"]",
        "detail": "apps.organization.admin.organization_admin",
        "documentation": {}
    },
    {
        "label": "OrganizationForm",
        "kind": 6,
        "importPath": "apps.organization.forms.organization_forms",
        "description": "apps.organization.forms.organization_forms",
        "peekOfCode": "class OrganizationForm(forms.ModelForm):\n    class Meta:\n        model = Organization\n        fields = [\n            'name', 'email', 'phone', 'address', 'city', 'country', 'postal_code', 'industry', 'organization_image',\n        ]\n        exclude = ['created_by_user', 'last_updated_by_user', 'users']",
        "detail": "apps.organization.forms.organization_forms",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.organization.migrations.0001_initial",
        "description": "apps.organization.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('llm_transaction', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Organization',\n            fields=[",
        "detail": "apps.organization.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Organization",
        "kind": 6,
        "importPath": "apps.organization.models.organization_models",
        "description": "apps.organization.models.organization_models",
        "peekOfCode": "class Organization(models.Model):\n    name = models.CharField(max_length=255)\n    email = models.EmailField()\n    phone = models.CharField(max_length=20)\n    address = models.TextField()\n    city = models.CharField(max_length=100, blank=True, null=True)\n    country = models.CharField(max_length=100, blank=True, null=True)\n    postal_code = models.CharField(max_length=100, blank=True, null=True)\n    industry = models.CharField(max_length=255)\n    is_active = models.BooleanField(default=True)",
        "detail": "apps.organization.models.organization_models",
        "documentation": {}
    },
    {
        "label": "fixture_test_organizations",
        "kind": 2,
        "importPath": "apps.organization.tests.conftest",
        "description": "apps.organization.tests.conftest",
        "peekOfCode": "def fixture_test_organizations():\n    return True",
        "detail": "apps.organization.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_organization_test_forms",
        "kind": 2,
        "importPath": "apps.organization.tests.test_forms",
        "description": "apps.organization.tests.test_forms",
        "peekOfCode": "def test_init_organization_test_forms():\n    assert True",
        "detail": "apps.organization.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_organization_test_models",
        "kind": 2,
        "importPath": "apps.organization.tests.test_models",
        "description": "apps.organization.tests.test_models",
        "peekOfCode": "def test_init_organization_test_models():\n    assert True",
        "detail": "apps.organization.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_organization_test_utils",
        "kind": 2,
        "importPath": "apps.organization.tests.test_utils",
        "description": "apps.organization.tests.test_utils",
        "peekOfCode": "def test_init_organization_test_utils():\n    assert True",
        "detail": "apps.organization.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_organization_test_views",
        "kind": 2,
        "importPath": "apps.organization.tests.test_views",
        "description": "apps.organization.tests.test_views",
        "peekOfCode": "def test_init_organization_test_views():\n    assert True",
        "detail": "apps.organization.tests.test_views",
        "documentation": {}
    },
    {
        "label": "ORGANIZATION_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.organization.utils.constant_utils",
        "description": "apps.organization.utils.constant_utils",
        "peekOfCode": "ORGANIZATION_ADMIN_LIST = (\n    \"name\", \"email\", \"phone\", \"address\", \"industry\", \"is_active\", \"created_at\", \"updated_at\"\n)\nORGANIZATION_ADMIN_FILTER = (\"is_active\", \"industry\", \"created_at\", \"updated_at\")\nORGANIZATION_ADMIN_SEARCH = (\"name\", \"email\", \"phone\", \"address\", \"industry\")",
        "detail": "apps.organization.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "ORGANIZATION_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.organization.utils.constant_utils",
        "description": "apps.organization.utils.constant_utils",
        "peekOfCode": "ORGANIZATION_ADMIN_FILTER = (\"is_active\", \"industry\", \"created_at\", \"updated_at\")\nORGANIZATION_ADMIN_SEARCH = (\"name\", \"email\", \"phone\", \"address\", \"industry\")",
        "detail": "apps.organization.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "ORGANIZATION_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.organization.utils.constant_utils",
        "description": "apps.organization.utils.constant_utils",
        "peekOfCode": "ORGANIZATION_ADMIN_SEARCH = (\"name\", \"email\", \"phone\", \"address\", \"industry\")",
        "detail": "apps.organization.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "build_randomized_string_of_length",
        "kind": 2,
        "importPath": "apps.organization.utils.function_utils",
        "description": "apps.organization.utils.function_utils",
        "peekOfCode": "def build_randomized_string_of_length(length=16):\n    return ''.join(random.choice(string.ascii_letters + string.digits) for _ in range(length))",
        "detail": "apps.organization.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "OrganizationView_AddBalanceCredits",
        "kind": 6,
        "importPath": "apps.organization.views.balance.add_balance_views",
        "description": "apps.organization.views.balance.add_balance_views",
        "peekOfCode": "class OrganizationView_AddBalanceCredits(TemplateView, LoginRequiredMixin):\n    def post(self, request, *args, **kwargs):\n        context_user = self.request.user\n        ##############################\n        # PERMISSION CHECK FOR - ADD_BALANCE_TO_ORGANIZATION\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.ADD_BALANCE_TO_ORGANIZATION):\n            messages.error(self.request, \"You do not have permission to add balance to organizations.\")\n            return redirect('llm_transaction:list')\n        ##############################",
        "detail": "apps.organization.views.balance.add_balance_views",
        "documentation": {}
    },
    {
        "label": "OrganizationView_AddGiftCredits",
        "kind": 6,
        "importPath": "apps.organization.views.balance.add_gift_balance_views",
        "description": "apps.organization.views.balance.add_gift_balance_views",
        "peekOfCode": "class OrganizationView_AddGiftCredits(LoginRequiredMixin, View):\n    def get(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - ADD_BALANCE_TO_ORGANIZATION\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.ADD_BALANCE_TO_ORGANIZATION):\n            messages.error(self.request, \"You do not have permission to add balance to organizations.\")\n            return redirect('llm_transaction:list')\n        ##############################\n        org_id = kwargs.get('pk')",
        "detail": "apps.organization.views.balance.add_gift_balance_views",
        "documentation": {}
    },
    {
        "label": "OrganizationView_TransferBalance",
        "kind": 6,
        "importPath": "apps.organization.views.balance.transfer_balance_views",
        "description": "apps.organization.views.balance.transfer_balance_views",
        "peekOfCode": "class OrganizationView_TransferBalance(LoginRequiredMixin, View):\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - TRANSFER_BALANCE_BETWEEN_ORGANIZATIONS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.TRANSFER_BALANCE_BETWEEN_ORGANIZATIONS):\n            messages.error(self.request, \"You do not have permission to transfer balance between organizations.\")\n            return redirect('llm_transaction:list')\n        ##############################\n        source_org_id = request.POST.get('source_org')",
        "detail": "apps.organization.views.balance.transfer_balance_views",
        "documentation": {}
    },
    {
        "label": "OrganizationView_OrganizationCreate",
        "kind": 6,
        "importPath": "apps.organization.views.organization.create_organization_views",
        "description": "apps.organization.views.organization.create_organization_views",
        "peekOfCode": "class OrganizationView_OrganizationCreate(TemplateView, LoginRequiredMixin):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['form'] = OrganizationForm()\n        return context\n    def post(self, request, *args, **kwargs):\n        form = OrganizationForm(request.POST, request.FILES)\n        ##############################\n        # PERMISSION CHECK FOR - ADD_ORGANIZATIONS\n        if not UserPermissionManager.is_authorized(user=self.request.user,",
        "detail": "apps.organization.views.organization.create_organization_views",
        "documentation": {}
    },
    {
        "label": "OrganizationView_OrganizationDelete",
        "kind": 6,
        "importPath": "apps.organization.views.organization.delete_organization_views",
        "description": "apps.organization.views.organization.delete_organization_views",
        "peekOfCode": "class OrganizationView_OrganizationDelete(DeleteView, LoginRequiredMixin):\n    model = Organization\n    context_object_name = 'organization'\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        user_orgs = Organization.objects.filter(users__in=[self.request.user])\n        context['user_organizations'] = user_orgs\n        context['user_organizations_count'] = user_orgs.count()\n        return context\n    def post(self, request, *args, **kwargs):",
        "detail": "apps.organization.views.organization.delete_organization_views",
        "documentation": {}
    },
    {
        "label": "OrganizationView_OrganizationList",
        "kind": 6,
        "importPath": "apps.organization.views.organization.list_organization_views",
        "description": "apps.organization.views.organization.list_organization_views",
        "peekOfCode": "class OrganizationView_OrganizationList(TemplateView, LoginRequiredMixin):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_ORGANIZATIONS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_ORGANIZATIONS):\n            messages.error(self.request, \"You do not have permission to list organizations.\")\n            return context\n        ##############################",
        "detail": "apps.organization.views.organization.list_organization_views",
        "documentation": {}
    },
    {
        "label": "OrganizationView_OrganizationUpdate",
        "kind": 6,
        "importPath": "apps.organization.views.organization.update_organization_views",
        "description": "apps.organization.views.organization.update_organization_views",
        "peekOfCode": "class OrganizationView_OrganizationUpdate(TemplateView, LoginRequiredMixin):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context_user = self.request.user\n        org = Organization.objects.filter(users__in=[context_user], id=kwargs['pk']).first()\n        context['organization'] = org\n        context['user'] = context_user\n        context['form'] = OrganizationForm(instance=org)\n        return context\n    def post(self, request, *args, **kwargs):",
        "detail": "apps.organization.views.organization.update_organization_views",
        "documentation": {}
    },
    {
        "label": "OrganizationConfig",
        "kind": 6,
        "importPath": "apps.organization.apps",
        "description": "apps.organization.apps",
        "peekOfCode": "class OrganizationConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.organization'",
        "detail": "apps.organization.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.organization.urls",
        "description": "apps.organization.urls",
        "peekOfCode": "app_name = \"organization\"\nurlpatterns = [\n    path('create/',\n         OrganizationView_OrganizationCreate.as_view(template_name=\"organization/create_organization.html\"),\n         name=\"create\"),\n    path('list/', OrganizationView_OrganizationList.as_view(template_name=\"organization/list_organizations.html\"),\n         name=\"list\"),\n    path('update/<int:pk>/', OrganizationView_OrganizationUpdate.as_view(\n        template_name=\"organization/update_organization.html\"), name=\"update\"),\n    path('delete/<int:pk>/', OrganizationView_OrganizationDelete.as_view(),",
        "detail": "apps.organization.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.organization.urls",
        "description": "apps.organization.urls",
        "peekOfCode": "urlpatterns = [\n    path('create/',\n         OrganizationView_OrganizationCreate.as_view(template_name=\"organization/create_organization.html\"),\n         name=\"create\"),\n    path('list/', OrganizationView_OrganizationList.as_view(template_name=\"organization/list_organizations.html\"),\n         name=\"list\"),\n    path('update/<int:pk>/', OrganizationView_OrganizationUpdate.as_view(\n        template_name=\"organization/update_organization.html\"), name=\"update\"),\n    path('delete/<int:pk>/', OrganizationView_OrganizationDelete.as_view(),\n         name=\"delete\"),",
        "detail": "apps.organization.urls",
        "documentation": {}
    },
    {
        "label": "StarredMessageAdmin",
        "kind": 6,
        "importPath": "apps.starred_messages.admin.starred_message_admin",
        "description": "apps.starred_messages.admin.starred_message_admin",
        "peekOfCode": "class StarredMessageAdmin(admin.ModelAdmin):\n    list_display = STARRED_MESSAGE_ADMIN_LIST\n    list_filter = STARRED_MESSAGE_ADMIN_FILTER\n    search_fields = STARRED_MESSAGE_ADMIN_SEARCH\n    ordering = [\"-starred_at\"]",
        "detail": "apps.starred_messages.admin.starred_message_admin",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.starred_messages.migrations.0001_initial",
        "description": "apps.starred_messages.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('assistants', '0003_initial'),\n        ('multimodal_chat', '0001_initial'),\n        ('organization', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(",
        "detail": "apps.starred_messages.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "StarredMessage",
        "kind": 6,
        "importPath": "apps.starred_messages.models.starred_message_models",
        "description": "apps.starred_messages.models.starred_message_models",
        "peekOfCode": "class StarredMessage(models.Model):\n    user = models.ForeignKey(\"auth.User\", on_delete=models.CASCADE)\n    organization = models.ForeignKey(\"organization.Organization\", on_delete=models.CASCADE)\n    assistant = models.ForeignKey(\"assistants.Assistant\", on_delete=models.CASCADE)\n    chat = models.ForeignKey(\"multimodal_chat.MultimodalChat\", on_delete=models.CASCADE,\n                             related_name=\"starred_messages\")\n    chat_message = models.ForeignKey(\"multimodal_chat.MultimodalChatMessage\", on_delete=models.CASCADE)\n    sender_type = models.CharField(max_length=10, choices=STARRED_MESSAGE_SENDER_TYPES, default=\"USER\")\n    message_text = models.TextField(blank=True, null=True)\n    message_image_urls = models.JSONField(blank=True, null=True)",
        "detail": "apps.starred_messages.models.starred_message_models",
        "documentation": {}
    },
    {
        "label": "fixture_starred_messages_init",
        "kind": 2,
        "importPath": "apps.starred_messages.tests.conftest",
        "description": "apps.starred_messages.tests.conftest",
        "peekOfCode": "def fixture_starred_messages_init():\n    return True",
        "detail": "apps.starred_messages.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_starred_messages_test_forms",
        "kind": 2,
        "importPath": "apps.starred_messages.tests.test_forms",
        "description": "apps.starred_messages.tests.test_forms",
        "peekOfCode": "def test_init_starred_messages_test_forms():\n    assert True",
        "detail": "apps.starred_messages.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_starred_messages_test_models",
        "kind": 2,
        "importPath": "apps.starred_messages.tests.test_models",
        "description": "apps.starred_messages.tests.test_models",
        "peekOfCode": "def test_init_starred_messages_test_models():\n    assert True",
        "detail": "apps.starred_messages.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_starred_messages_test_utils",
        "kind": 2,
        "importPath": "apps.starred_messages.tests.test_utils",
        "description": "apps.starred_messages.tests.test_utils",
        "peekOfCode": "def test_init_starred_messages_test_utils():\n    assert True",
        "detail": "apps.starred_messages.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_starred_messages_test_views",
        "kind": 2,
        "importPath": "apps.starred_messages.tests.test_views",
        "description": "apps.starred_messages.tests.test_views",
        "peekOfCode": "def test_init_starred_messages_test_views():\n    assert True",
        "detail": "apps.starred_messages.tests.test_views",
        "documentation": {}
    },
    {
        "label": "STARRED_MESSAGE_SENDER_TYPES",
        "kind": 5,
        "importPath": "apps.starred_messages.utils.constant_utils",
        "description": "apps.starred_messages.utils.constant_utils",
        "peekOfCode": "STARRED_MESSAGE_SENDER_TYPES = [\n    (\"USER\", \"User\"),\n    (\"ASSISTANT\", \"Assistant\"),\n]\nSTARRED_MESSAGE_ADMIN_LIST = [\"user\", \"organization\", \"assistant\", \"chat\", \"chat_message\", \"starred_at\",\n                              \"message_text\"]\nSTARRED_MESSAGE_ADMIN_FILTER = [\"user\", \"organization\", \"assistant\", \"chat\", \"chat_message\", \"starred_at\",\n                                \"message_text\"]\nSTARRED_MESSAGE_ADMIN_SEARCH = [\"user\", \"organization\", \"assistant\", \"chat\", \"chat_message\", \"starred_at\",\n                                \"message_text\"]",
        "detail": "apps.starred_messages.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "STARRED_MESSAGE_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.starred_messages.utils.constant_utils",
        "description": "apps.starred_messages.utils.constant_utils",
        "peekOfCode": "STARRED_MESSAGE_ADMIN_LIST = [\"user\", \"organization\", \"assistant\", \"chat\", \"chat_message\", \"starred_at\",\n                              \"message_text\"]\nSTARRED_MESSAGE_ADMIN_FILTER = [\"user\", \"organization\", \"assistant\", \"chat\", \"chat_message\", \"starred_at\",\n                                \"message_text\"]\nSTARRED_MESSAGE_ADMIN_SEARCH = [\"user\", \"organization\", \"assistant\", \"chat\", \"chat_message\", \"starred_at\",\n                                \"message_text\"]",
        "detail": "apps.starred_messages.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "STARRED_MESSAGE_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.starred_messages.utils.constant_utils",
        "description": "apps.starred_messages.utils.constant_utils",
        "peekOfCode": "STARRED_MESSAGE_ADMIN_FILTER = [\"user\", \"organization\", \"assistant\", \"chat\", \"chat_message\", \"starred_at\",\n                                \"message_text\"]\nSTARRED_MESSAGE_ADMIN_SEARCH = [\"user\", \"organization\", \"assistant\", \"chat\", \"chat_message\", \"starred_at\",\n                                \"message_text\"]",
        "detail": "apps.starred_messages.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "STARRED_MESSAGE_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.starred_messages.utils.constant_utils",
        "description": "apps.starred_messages.utils.constant_utils",
        "peekOfCode": "STARRED_MESSAGE_ADMIN_SEARCH = [\"user\", \"organization\", \"assistant\", \"chat\", \"chat_message\", \"starred_at\",\n                                \"message_text\"]",
        "detail": "apps.starred_messages.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "StarredMessageView_Delete",
        "kind": 6,
        "importPath": "apps.starred_messages.views.delete_starred_messages_views",
        "description": "apps.starred_messages.views.delete_starred_messages_views",
        "peekOfCode": "class StarredMessageView_Delete(LoginRequiredMixin, DeleteView):\n    model = StarredMessage\n    success_url = 'starred_messages:list'\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context\n    def get(self, request, *args, **kwargs):\n        return self.post(request, *args, **kwargs)\n    def post(self, request, *args, **kwargs):\n        context_user = request.user",
        "detail": "apps.starred_messages.views.delete_starred_messages_views",
        "documentation": {}
    },
    {
        "label": "StarredMessageView_List",
        "kind": 6,
        "importPath": "apps.starred_messages.views.list_starred_messages_views",
        "description": "apps.starred_messages.views.list_starred_messages_views",
        "peekOfCode": "class StarredMessageView_List(TemplateView, LoginRequiredMixin):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_STARRED_MESSAGES\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_STARRED_MESSAGES):\n            messages.error(self.request, \"You do not have permission to view starred messages.\")\n            return context\n        ##############################",
        "detail": "apps.starred_messages.views.list_starred_messages_views",
        "documentation": {}
    },
    {
        "label": "StarredMessagesConfig",
        "kind": 6,
        "importPath": "apps.starred_messages.apps",
        "description": "apps.starred_messages.apps",
        "peekOfCode": "class StarredMessagesConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.starred_messages'",
        "detail": "apps.starred_messages.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.starred_messages.urls",
        "description": "apps.starred_messages.urls",
        "peekOfCode": "app_name = \"starred_messages\"\nurlpatterns = [\n    path(\"list/\", StarredMessageView_List.as_view(template_name=\"starred_messages/list_starred_messages.html\"),\n         name=\"list\"),\n    path(\"delete/<int:pk>/\", StarredMessageView_Delete.as_view(), name=\"delete\"),\n]",
        "detail": "apps.starred_messages.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.starred_messages.urls",
        "description": "apps.starred_messages.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"list/\", StarredMessageView_List.as_view(template_name=\"starred_messages/list_starred_messages.html\"),\n         name=\"list\"),\n    path(\"delete/<int:pk>/\", StarredMessageView_Delete.as_view(), name=\"delete\"),\n]",
        "detail": "apps.starred_messages.urls",
        "documentation": {}
    },
    {
        "label": "SupportTicketAdmin",
        "kind": 6,
        "importPath": "apps.support_system.admin.support_ticket_admin",
        "description": "apps.support_system.admin.support_ticket_admin",
        "peekOfCode": "class SupportTicketAdmin(admin.ModelAdmin):\n    list_display = SUPPORT_TICKET_SYSTEM_ADMIN_LIST\n    list_filter = SUPPORT_TICKET_SYSTEM_ADMIN_FILTER\n    search_fields = SUPPORT_TICKET_SYSTEM_ADMIN_SEARCH\n    date_hierarchy = 'created_at'",
        "detail": "apps.support_system.admin.support_ticket_admin",
        "documentation": {}
    },
    {
        "label": "SupportTicketResponseAdmin",
        "kind": 6,
        "importPath": "apps.support_system.admin.support_ticket_response_admin",
        "description": "apps.support_system.admin.support_ticket_response_admin",
        "peekOfCode": "class SupportTicketResponseAdmin(admin.ModelAdmin):\n    list_display = SUPPORT_TICKET_RESPONSE_ADMIN_LIST\n    search_fields = SUPPORT_TICKET_RESPONSE_ADMIN_SEARCH\n    date_hierarchy = 'created_at'",
        "detail": "apps.support_system.admin.support_ticket_response_admin",
        "documentation": {}
    },
    {
        "label": "SupportTicketForm",
        "kind": 6,
        "importPath": "apps.support_system.forms.support_ticket_forms",
        "description": "apps.support_system.forms.support_ticket_forms",
        "peekOfCode": "class SupportTicketForm(forms.ModelForm):\n    class Meta:\n        model = SupportTicket\n        fields = ['title', 'issue_description', 'priority', 'attachment']",
        "detail": "apps.support_system.forms.support_ticket_forms",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.support_system.migrations.0001_initial",
        "description": "apps.support_system.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='SupportTicket',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "apps.support_system.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "SupportTicket",
        "kind": 6,
        "importPath": "apps.support_system.models.support_ticket_models",
        "description": "apps.support_system.models.support_ticket_models",
        "peekOfCode": "class SupportTicket(models.Model):\n    user = models.ForeignKey('auth.User', on_delete=models.CASCADE)\n    title = models.CharField(max_length=255)\n    issue_description = models.TextField()\n    status = models.CharField(max_length=50, choices=STATUSES_FOR_SUPPORT_TICKETS, default='open')\n    priority = models.CharField(max_length=50, choices=PRIORITY_CATEGORY_OF_SUPPORT_TICKETS, default='low')\n    attachment = models.FileField(upload_to='tickets/attachments/%Y/%m/%d/', blank=True, null=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    def __str__(self):",
        "detail": "apps.support_system.models.support_ticket_models",
        "documentation": {}
    },
    {
        "label": "SupportTicketResponse",
        "kind": 6,
        "importPath": "apps.support_system.models.support_ticket_response_models",
        "description": "apps.support_system.models.support_ticket_response_models",
        "peekOfCode": "class SupportTicketResponse(models.Model):\n    ticket = models.ForeignKey(SupportTicket, on_delete=models.CASCADE, related_name='responses')\n    user = models.ForeignKey('auth.User', on_delete=models.CASCADE)\n    response = models.TextField()\n    created_at = models.DateTimeField(auto_now_add=True)\n    class Meta:\n        ordering = ['created_at']\n        verbose_name = 'Support Ticket Response'\n        verbose_name_plural = 'Support Ticket Responses'\n        indexes = [",
        "detail": "apps.support_system.models.support_ticket_response_models",
        "documentation": {}
    },
    {
        "label": "fixture_support_system_init",
        "kind": 2,
        "importPath": "apps.support_system.tests.conftest",
        "description": "apps.support_system.tests.conftest",
        "peekOfCode": "def fixture_support_system_init():\n    return True",
        "detail": "apps.support_system.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_support_system_test_forms",
        "kind": 2,
        "importPath": "apps.support_system.tests.test_forms",
        "description": "apps.support_system.tests.test_forms",
        "peekOfCode": "def test_init_support_system_test_forms():\n    assert True",
        "detail": "apps.support_system.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_support_system_test_models",
        "kind": 2,
        "importPath": "apps.support_system.tests.test_models",
        "description": "apps.support_system.tests.test_models",
        "peekOfCode": "def test_init_support_system_test_models():\n    assert True",
        "detail": "apps.support_system.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_support_system_test_utils",
        "kind": 2,
        "importPath": "apps.support_system.tests.test_utils",
        "description": "apps.support_system.tests.test_utils",
        "peekOfCode": "def test_init_support_system_test_utils():\n    assert True",
        "detail": "apps.support_system.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_support_system_test_views",
        "kind": 2,
        "importPath": "apps.support_system.tests.test_views",
        "description": "apps.support_system.tests.test_views",
        "peekOfCode": "def test_init_support_system_test_views():\n    assert True",
        "detail": "apps.support_system.tests.test_views",
        "documentation": {}
    },
    {
        "label": "TicketStatusPriorityMapScoreNames",
        "kind": 6,
        "importPath": "apps.support_system.utils.constant_utils",
        "description": "apps.support_system.utils.constant_utils",
        "peekOfCode": "class TicketStatusPriorityMapScoreNames:\n    OPEN = 3\n    IN_PROGRESS = 2\n    RESOLVED = 1\n    CLOSED = 0\nTICKET_STATUS_PRIORITY_MAP = {\n    'open': TicketStatusPriorityMapScoreNames.OPEN,\n    'in_progress': TicketStatusPriorityMapScoreNames.IN_PROGRESS,\n    'resolved': TicketStatusPriorityMapScoreNames.RESOLVED,\n    'closed': TicketStatusPriorityMapScoreNames.CLOSED",
        "detail": "apps.support_system.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "STATUSES_FOR_SUPPORT_TICKETS",
        "kind": 5,
        "importPath": "apps.support_system.utils.constant_utils",
        "description": "apps.support_system.utils.constant_utils",
        "peekOfCode": "STATUSES_FOR_SUPPORT_TICKETS = [\n    ('open', 'Open'),\n    ('in_progress', 'In Progress'),\n    ('closed', 'Closed'),\n    ('resolved', 'Resolved'),\n]\nPRIORITY_CATEGORY_OF_SUPPORT_TICKETS = [\n    ('recommendation', 'Recommendation'),\n    ('low', 'Low'),\n    ('medium', 'Medium'),",
        "detail": "apps.support_system.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "PRIORITY_CATEGORY_OF_SUPPORT_TICKETS",
        "kind": 5,
        "importPath": "apps.support_system.utils.constant_utils",
        "description": "apps.support_system.utils.constant_utils",
        "peekOfCode": "PRIORITY_CATEGORY_OF_SUPPORT_TICKETS = [\n    ('recommendation', 'Recommendation'),\n    ('low', 'Low'),\n    ('medium', 'Medium'),\n    ('high', 'High'),\n    ('critical', 'Critical'),\n]\nSUPPORT_TICKET_SYSTEM_ADMIN_LIST = ['title', 'status', 'priority', 'created_at']\nSUPPORT_TICKET_SYSTEM_ADMIN_FILTER = ['status', 'priority']\nSUPPORT_TICKET_SYSTEM_ADMIN_SEARCH = ['title', 'issue_description']",
        "detail": "apps.support_system.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "SUPPORT_TICKET_SYSTEM_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.support_system.utils.constant_utils",
        "description": "apps.support_system.utils.constant_utils",
        "peekOfCode": "SUPPORT_TICKET_SYSTEM_ADMIN_LIST = ['title', 'status', 'priority', 'created_at']\nSUPPORT_TICKET_SYSTEM_ADMIN_FILTER = ['status', 'priority']\nSUPPORT_TICKET_SYSTEM_ADMIN_SEARCH = ['title', 'issue_description']\nSUPPORT_TICKET_RESPONSE_ADMIN_LIST = ['ticket', 'user', 'created_at']\nSUPPORT_TICKET_RESPONSE_ADMIN_SEARCH = ['ticket__title', 'response']\nclass TicketStatusPriorityMapScoreNames:\n    OPEN = 3\n    IN_PROGRESS = 2\n    RESOLVED = 1\n    CLOSED = 0",
        "detail": "apps.support_system.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "SUPPORT_TICKET_SYSTEM_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.support_system.utils.constant_utils",
        "description": "apps.support_system.utils.constant_utils",
        "peekOfCode": "SUPPORT_TICKET_SYSTEM_ADMIN_FILTER = ['status', 'priority']\nSUPPORT_TICKET_SYSTEM_ADMIN_SEARCH = ['title', 'issue_description']\nSUPPORT_TICKET_RESPONSE_ADMIN_LIST = ['ticket', 'user', 'created_at']\nSUPPORT_TICKET_RESPONSE_ADMIN_SEARCH = ['ticket__title', 'response']\nclass TicketStatusPriorityMapScoreNames:\n    OPEN = 3\n    IN_PROGRESS = 2\n    RESOLVED = 1\n    CLOSED = 0\nTICKET_STATUS_PRIORITY_MAP = {",
        "detail": "apps.support_system.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "SUPPORT_TICKET_SYSTEM_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.support_system.utils.constant_utils",
        "description": "apps.support_system.utils.constant_utils",
        "peekOfCode": "SUPPORT_TICKET_SYSTEM_ADMIN_SEARCH = ['title', 'issue_description']\nSUPPORT_TICKET_RESPONSE_ADMIN_LIST = ['ticket', 'user', 'created_at']\nSUPPORT_TICKET_RESPONSE_ADMIN_SEARCH = ['ticket__title', 'response']\nclass TicketStatusPriorityMapScoreNames:\n    OPEN = 3\n    IN_PROGRESS = 2\n    RESOLVED = 1\n    CLOSED = 0\nTICKET_STATUS_PRIORITY_MAP = {\n    'open': TicketStatusPriorityMapScoreNames.OPEN,",
        "detail": "apps.support_system.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "SUPPORT_TICKET_RESPONSE_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.support_system.utils.constant_utils",
        "description": "apps.support_system.utils.constant_utils",
        "peekOfCode": "SUPPORT_TICKET_RESPONSE_ADMIN_LIST = ['ticket', 'user', 'created_at']\nSUPPORT_TICKET_RESPONSE_ADMIN_SEARCH = ['ticket__title', 'response']\nclass TicketStatusPriorityMapScoreNames:\n    OPEN = 3\n    IN_PROGRESS = 2\n    RESOLVED = 1\n    CLOSED = 0\nTICKET_STATUS_PRIORITY_MAP = {\n    'open': TicketStatusPriorityMapScoreNames.OPEN,\n    'in_progress': TicketStatusPriorityMapScoreNames.IN_PROGRESS,",
        "detail": "apps.support_system.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "SUPPORT_TICKET_RESPONSE_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.support_system.utils.constant_utils",
        "description": "apps.support_system.utils.constant_utils",
        "peekOfCode": "SUPPORT_TICKET_RESPONSE_ADMIN_SEARCH = ['ticket__title', 'response']\nclass TicketStatusPriorityMapScoreNames:\n    OPEN = 3\n    IN_PROGRESS = 2\n    RESOLVED = 1\n    CLOSED = 0\nTICKET_STATUS_PRIORITY_MAP = {\n    'open': TicketStatusPriorityMapScoreNames.OPEN,\n    'in_progress': TicketStatusPriorityMapScoreNames.IN_PROGRESS,\n    'resolved': TicketStatusPriorityMapScoreNames.RESOLVED,",
        "detail": "apps.support_system.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "TICKET_STATUS_PRIORITY_MAP",
        "kind": 5,
        "importPath": "apps.support_system.utils.constant_utils",
        "description": "apps.support_system.utils.constant_utils",
        "peekOfCode": "TICKET_STATUS_PRIORITY_MAP = {\n    'open': TicketStatusPriorityMapScoreNames.OPEN,\n    'in_progress': TicketStatusPriorityMapScoreNames.IN_PROGRESS,\n    'resolved': TicketStatusPriorityMapScoreNames.RESOLVED,\n    'closed': TicketStatusPriorityMapScoreNames.CLOSED\n}",
        "detail": "apps.support_system.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "SupportView_TicketCreate",
        "kind": 6,
        "importPath": "apps.support_system.views.create_support_ticket_views",
        "description": "apps.support_system.views.create_support_ticket_views",
        "peekOfCode": "class SupportView_TicketCreate(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['form'] = SupportTicketForm()\n        return context\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - CREATE_SUPPORT_TICKETS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.CREATE_SUPPORT_TICKETS):",
        "detail": "apps.support_system.views.create_support_ticket_views",
        "documentation": {}
    },
    {
        "label": "SupportView_TicketDetail",
        "kind": 6,
        "importPath": "apps.support_system.views.detail_support_ticket_views",
        "description": "apps.support_system.views.detail_support_ticket_views",
        "peekOfCode": "class SupportView_TicketDetail(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_SUPPORT_TICKETS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_SUPPORT_TICKETS):\n            messages.error(self.request, \"You do not have permission to view support tickets.\")\n            return context\n        ##############################",
        "detail": "apps.support_system.views.detail_support_ticket_views",
        "documentation": {}
    },
    {
        "label": "SupportView_TicketList",
        "kind": 6,
        "importPath": "apps.support_system.views.list_support_tickets_views",
        "description": "apps.support_system.views.list_support_tickets_views",
        "peekOfCode": "class SupportView_TicketList(LoginRequiredMixin, TemplateView):\n    paginate_by = 10\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_SUPPORT_TICKETS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_SUPPORT_TICKETS):\n            messages.error(self.request, \"You do not have permission to view support tickets.\")\n            return context",
        "detail": "apps.support_system.views.list_support_tickets_views",
        "documentation": {}
    },
    {
        "label": "SupportSystemConfig",
        "kind": 6,
        "importPath": "apps.support_system.apps",
        "description": "apps.support_system.apps",
        "peekOfCode": "class SupportSystemConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.support_system'",
        "detail": "apps.support_system.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.support_system.urls",
        "description": "apps.support_system.urls",
        "peekOfCode": "app_name = 'support_system'\nurlpatterns = [\n    path('create/', SupportView_TicketCreate.as_view(template_name='support_system/create_support_ticket.html'),\n         name='create'),\n    path('list/', SupportView_TicketList.as_view(template_name='support_system/list_support_tickets.html'),\n         name='list'),\n    path('list/<int:pk>/', SupportView_TicketDetail.as_view(template_name='support_system/support_ticket_detail.html'),\n         name='detail'),\n]",
        "detail": "apps.support_system.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.support_system.urls",
        "description": "apps.support_system.urls",
        "peekOfCode": "urlpatterns = [\n    path('create/', SupportView_TicketCreate.as_view(template_name='support_system/create_support_ticket.html'),\n         name='create'),\n    path('list/', SupportView_TicketList.as_view(template_name='support_system/list_support_tickets.html'),\n         name='list'),\n    path('list/<int:pk>/', SupportView_TicketDetail.as_view(template_name='support_system/support_ticket_detail.html'),\n         name='detail'),\n]",
        "detail": "apps.support_system.urls",
        "documentation": {}
    },
    {
        "label": "AcademyConfig",
        "kind": 6,
        "importPath": "apps.theme.academy.apps",
        "description": "apps.theme.academy.apps",
        "peekOfCode": "class AcademyConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.theme.academy\"",
        "detail": "apps.theme.academy.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.theme.academy.urls",
        "description": "apps.theme.academy.urls",
        "peekOfCode": "urlpatterns = [\n    path(\n        \"app/academy/dashboard/\",\n        login_required(AcademyView.as_view(template_name=\"app_academy_dashboard.html\")),\n        name=\"app-academy-dashboard\",\n    ),\n    path(\n        \"app/academy/course/\",\n        login_required(AcademyView.as_view(template_name=\"app_academy_course.html\")),\n        name=\"app-academy-course\",",
        "detail": "apps.theme.academy.urls",
        "documentation": {}
    },
    {
        "label": "AcademyView",
        "kind": 6,
        "importPath": "apps.theme.academy.views",
        "description": "apps.theme.academy.views",
        "peekOfCode": "class AcademyView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context",
        "detail": "apps.theme.academy.views",
        "documentation": {}
    },
    {
        "label": "AccessConfig",
        "kind": 6,
        "importPath": "apps.theme.access.apps",
        "description": "apps.theme.access.apps",
        "peekOfCode": "class AccessConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.theme.access\"",
        "detail": "apps.theme.access.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.theme.access.urls",
        "description": "apps.theme.access.urls",
        "peekOfCode": "urlpatterns = [\n    path(\n        \"app/access/roles/\",\n        login_required(AccessView.as_view(template_name=\"app_access_roles.html\")),\n        name=\"app-access-roles\",\n    ),\n    path(\n        \"app/access/permission/\",\n        login_required(AccessView.as_view(template_name=\"app_access_permission.html\")),\n        name=\"app-access-permission\",",
        "detail": "apps.theme.access.urls",
        "documentation": {}
    },
    {
        "label": "AccessView",
        "kind": 6,
        "importPath": "apps.theme.access.views",
        "description": "apps.theme.access.views",
        "peekOfCode": "class AccessView(PermissionRequiredMixin, TemplateView):\n    permission_required = (\"permission.view_permission\", \"permission.delete_permission\", \"permission.change_permission\", \"permission.add_permission\")\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context",
        "detail": "apps.theme.access.views",
        "documentation": {}
    },
    {
        "label": "AuthenticationConfig",
        "kind": 6,
        "importPath": "apps.theme.authentication.apps",
        "description": "apps.theme.authentication.apps",
        "peekOfCode": "class AuthenticationConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.theme.authentication\"",
        "detail": "apps.theme.authentication.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.theme.authentication.urls",
        "description": "apps.theme.authentication.urls",
        "peekOfCode": "urlpatterns = [\n    path(\n        \"auth/login/basic/\",\n        AuthView.as_view(template_name=\"auth_login_basic.html\"),\n        name=\"auth-login-basic\",\n    ),\n    path(\n        \"auth/login/cover/\",\n        AuthView.as_view(template_name=\"auth_login_cover.html\"),\n        name=\"auth-login-cover\",",
        "detail": "apps.theme.authentication.urls",
        "documentation": {}
    },
    {
        "label": "AuthView",
        "kind": 6,
        "importPath": "apps.theme.authentication.views",
        "description": "apps.theme.authentication.views",
        "peekOfCode": "class AuthView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        # Update the context\n        context.update(\n            {\n                \"layout_path\": TemplateHelper.set_layout(\"layout_blank.html\", context),\n            }",
        "detail": "apps.theme.authentication.views",
        "documentation": {}
    },
    {
        "label": "CardsConfig",
        "kind": 6,
        "importPath": "apps.theme.cards.apps",
        "description": "apps.theme.cards.apps",
        "peekOfCode": "class CardsConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.theme.cards\"",
        "detail": "apps.theme.cards.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.theme.cards.urls",
        "description": "apps.theme.cards.urls",
        "peekOfCode": "urlpatterns = [\n    path(\n        \"cards/basic/\",\n        login_required(CardView.as_view(template_name=\"cards_basic.html\")),\n        name=\"cards-basic\",\n    ),\n    path(\n        \"cards/advance/\",\n        login_required(CardView.as_view(template_name=\"cards_advance.html\")),\n        name=\"cards-advance\",",
        "detail": "apps.theme.cards.urls",
        "documentation": {}
    },
    {
        "label": "CardView",
        "kind": 6,
        "importPath": "apps.theme.cards.views",
        "description": "apps.theme.cards.views",
        "peekOfCode": "class CardView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context",
        "detail": "apps.theme.cards.views",
        "documentation": {}
    },
    {
        "label": "ChartsConfig",
        "kind": 6,
        "importPath": "apps.theme.charts.apps",
        "description": "apps.theme.charts.apps",
        "peekOfCode": "class ChartsConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.theme.charts\"",
        "detail": "apps.theme.charts.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.theme.charts.urls",
        "description": "apps.theme.charts.urls",
        "peekOfCode": "urlpatterns = [\n    path(\n        \"charts/apex/\",\n        login_required(ChartsView.as_view(template_name=\"charts_apex.html\")),\n        name=\"charts-apex\",\n    ),\n    path(\n        \"charts/chartjs/\",\n        login_required(ChartsView.as_view(template_name=\"charts_chartjs.html\")),\n        name=\"charts-chartjs\",",
        "detail": "apps.theme.charts.urls",
        "documentation": {}
    },
    {
        "label": "ChartsView",
        "kind": 6,
        "importPath": "apps.theme.charts.views",
        "description": "apps.theme.charts.views",
        "peekOfCode": "class ChartsView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context",
        "detail": "apps.theme.charts.views",
        "documentation": {}
    },
    {
        "label": "ChatConfig",
        "kind": 6,
        "importPath": "apps.theme.chat.apps",
        "description": "apps.theme.chat.apps",
        "peekOfCode": "class ChatConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.theme.chat\"",
        "detail": "apps.theme.chat.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.theme.chat.urls",
        "description": "apps.theme.chat.urls",
        "peekOfCode": "urlpatterns = [\n    path(\n        \"app/chat/\",\n        login_required(ChatView.as_view(template_name=\"app_chat.html\")),\n        name=\"app-chat\",\n    ),\n]",
        "detail": "apps.theme.chat.urls",
        "documentation": {}
    },
    {
        "label": "ChatView",
        "kind": 6,
        "importPath": "apps.theme.chat.views",
        "description": "apps.theme.chat.views",
        "peekOfCode": "class ChatView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context",
        "detail": "apps.theme.chat.views",
        "documentation": {}
    },
    {
        "label": "DashboardsConfig",
        "kind": 6,
        "importPath": "apps.theme.dashboards.apps",
        "description": "apps.theme.dashboards.apps",
        "peekOfCode": "class DashboardsConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.theme.dashboards\"",
        "detail": "apps.theme.dashboards.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.theme.dashboards.urls",
        "description": "apps.theme.dashboards.urls",
        "peekOfCode": "urlpatterns = [\n    path(\n        \"\",\n        login_required(DashboardsView.as_view(template_name=\"dashboard_analytics.html\")),\n        name=\"index\",\n    ),\n    path(\n        \"dashboard/crm/\",\n        login_required(DashboardsView.as_view(template_name=\"dashboard_crm.html\")),\n        name=\"dashboard-crm\",",
        "detail": "apps.theme.dashboards.urls",
        "documentation": {}
    },
    {
        "label": "DashboardsView",
        "kind": 6,
        "importPath": "apps.theme.dashboards.views",
        "description": "apps.theme.dashboards.views",
        "peekOfCode": "class DashboardsView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context",
        "detail": "apps.theme.dashboards.views",
        "documentation": {}
    },
    {
        "label": "EcommerceConfig",
        "kind": 6,
        "importPath": "apps.theme.ecommerce.apps",
        "description": "apps.theme.ecommerce.apps",
        "peekOfCode": "class EcommerceConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.theme.ecommerce\"",
        "detail": "apps.theme.ecommerce.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.theme.ecommerce.urls",
        "description": "apps.theme.ecommerce.urls",
        "peekOfCode": "urlpatterns = [\n    path(\n        \"app/ecommerce/dashboard/\",\n        login_required(eCommerceView.as_view(template_name=\"app_ecommerce_dashboard.html\")),\n        name=\"app-ecommerce-dashboard\",\n    ),\n    path(\n        \"app/ecommerce/product/list/\",\n        login_required(eCommerceView.as_view(template_name=\"app_ecommerce_product_list.html\")),\n        name=\"app-ecommerce-product-list\",",
        "detail": "apps.theme.ecommerce.urls",
        "documentation": {}
    },
    {
        "label": "eCommerceView",
        "kind": 6,
        "importPath": "apps.theme.ecommerce.views",
        "description": "apps.theme.ecommerce.views",
        "peekOfCode": "class eCommerceView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context",
        "detail": "apps.theme.ecommerce.views",
        "documentation": {}
    },
    {
        "label": "ExtendedUiConfig",
        "kind": 6,
        "importPath": "apps.theme.extended_ui.apps",
        "description": "apps.theme.extended_ui.apps",
        "peekOfCode": "class ExtendedUiConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.theme.extended_ui\"",
        "detail": "apps.theme.extended_ui.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.theme.extended_ui.urls",
        "description": "apps.theme.extended_ui.urls",
        "peekOfCode": "urlpatterns = [\n    path(\n        \"extended_ui/avatar/\",\n        login_required(ExtendedUiView.as_view(template_name=\"extended_ui_avatar.html\")),\n        name=\"extended-ui-avatar\",\n    ),\n    path(\n        \"extended_ui/blockui/\",\n        login_required(ExtendedUiView.as_view(template_name=\"extended_ui_blockui.html\")),\n        name=\"extended-ui-blockui\",",
        "detail": "apps.theme.extended_ui.urls",
        "documentation": {}
    },
    {
        "label": "ExtendedUiView",
        "kind": 6,
        "importPath": "apps.theme.extended_ui.views",
        "description": "apps.theme.extended_ui.views",
        "peekOfCode": "class ExtendedUiView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context",
        "detail": "apps.theme.extended_ui.views",
        "documentation": {}
    },
    {
        "label": "FormlayoutsConfig",
        "kind": 6,
        "importPath": "apps.theme.form_layouts.apps",
        "description": "apps.theme.form_layouts.apps",
        "peekOfCode": "class FormlayoutsConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.theme.form_layouts\"",
        "detail": "apps.theme.form_layouts.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.theme.form_layouts.urls",
        "description": "apps.theme.form_layouts.urls",
        "peekOfCode": "urlpatterns = [\n    path(\n        \"form/layouts_vertical/\",\n        login_required(FormLayoutsView.as_view(template_name=\"form_layouts_vertical.html\")),\n        name=\"form-layouts-vertical\",\n    ),\n    path(\n        \"form/layouts_horizontal/\",\n        login_required(FormLayoutsView.as_view(template_name=\"form_layouts_horizontal.html\")),\n        name=\"form-layouts-horizontal\",",
        "detail": "apps.theme.form_layouts.urls",
        "documentation": {}
    },
    {
        "label": "FormLayoutsView",
        "kind": 6,
        "importPath": "apps.theme.form_layouts.views",
        "description": "apps.theme.form_layouts.views",
        "peekOfCode": "class FormLayoutsView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context",
        "detail": "apps.theme.form_layouts.views",
        "documentation": {}
    },
    {
        "label": "FormvalidationConfig",
        "kind": 6,
        "importPath": "apps.theme.form_validation.apps",
        "description": "apps.theme.form_validation.apps",
        "peekOfCode": "class FormvalidationConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.theme.form_validation\"",
        "detail": "apps.theme.form_validation.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.theme.form_validation.urls",
        "description": "apps.theme.form_validation.urls",
        "peekOfCode": "urlpatterns = [\n    path(\n        \"form/validation/\",\n        login_required(FormValidationView.as_view(template_name=\"form_validation.html\")),\n        name=\"form-validation\",\n    ),\n]",
        "detail": "apps.theme.form_validation.urls",
        "documentation": {}
    },
    {
        "label": "FormValidationView",
        "kind": 6,
        "importPath": "apps.theme.form_validation.views",
        "description": "apps.theme.form_validation.views",
        "peekOfCode": "class FormValidationView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context",
        "detail": "apps.theme.form_validation.views",
        "documentation": {}
    },
    {
        "label": "FormwizardConfig",
        "kind": 6,
        "importPath": "apps.theme.form_wizard.apps",
        "description": "apps.theme.form_wizard.apps",
        "peekOfCode": "class FormwizardConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.theme.form_wizard\"",
        "detail": "apps.theme.form_wizard.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.theme.form_wizard.urls",
        "description": "apps.theme.form_wizard.urls",
        "peekOfCode": "urlpatterns = [\n    path(\n        \"form/wizard_numbered/\",\n        login_required(FormWizardView.as_view(template_name=\"form_wizard_numbered.html\")),\n        name=\"form-wizard-numbered\",\n    ),\n    path(\n        \"form/wizard_icons/\",\n        login_required(FormWizardView.as_view(template_name=\"form_wizard_icons.html\")),\n        name=\"form-wizard-icons\",",
        "detail": "apps.theme.form_wizard.urls",
        "documentation": {}
    },
    {
        "label": "FormWizardView",
        "kind": 6,
        "importPath": "apps.theme.form_wizard.views",
        "description": "apps.theme.form_wizard.views",
        "peekOfCode": "class FormWizardView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context",
        "detail": "apps.theme.form_wizard.views",
        "documentation": {}
    },
    {
        "label": "FormsConfig",
        "kind": 6,
        "importPath": "apps.theme.forms.apps",
        "description": "apps.theme.forms.apps",
        "peekOfCode": "class FormsConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.theme.forms\"",
        "detail": "apps.theme.forms.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.theme.forms.urls",
        "description": "apps.theme.forms.urls",
        "peekOfCode": "urlpatterns = [\n    path(\n        \"forms/basic_inputs/\",\n        login_required(FormsView.as_view(template_name=\"forms_basic_inputs.html\")),\n        name=\"forms-basic-inputs\",\n    ),\n    path(\n        \"forms/input_groups/\",\n        login_required(FormsView.as_view(template_name=\"forms_input_groups.html\")),\n        name=\"forms-input-groups\",",
        "detail": "apps.theme.forms.urls",
        "documentation": {}
    },
    {
        "label": "FormsView",
        "kind": 6,
        "importPath": "apps.theme.forms.views",
        "description": "apps.theme.forms.views",
        "peekOfCode": "class FormsView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context",
        "detail": "apps.theme.forms.views",
        "documentation": {}
    },
    {
        "label": "FrontPagesConfig",
        "kind": 6,
        "importPath": "apps.theme.front_pages.apps",
        "description": "apps.theme.front_pages.apps",
        "peekOfCode": "class FrontPagesConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.theme.front_pages\"",
        "detail": "apps.theme.front_pages.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.theme.front_pages.urls",
        "description": "apps.theme.front_pages.urls",
        "peekOfCode": "urlpatterns = [\n    path(\n        \"front/landing/\",\n        FrontPagesView.as_view(template_name=\"landing_page.html\"),\n        name=\"landing-page\",\n    ),\n    path(\n        \"front/pricing/\",\n        FrontPagesView.as_view(template_name=\"pricing_page.html\"),\n        name=\"pricing-page\",",
        "detail": "apps.theme.front_pages.urls",
        "documentation": {}
    },
    {
        "label": "FrontPagesView",
        "kind": 6,
        "importPath": "apps.theme.front_pages.views",
        "description": "apps.theme.front_pages.views",
        "peekOfCode": "class FrontPagesView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        # Update the context\n        context.update(\n            {\n                \"layout\": \"front\",\n                \"layout_path\": TemplateHelper.set_layout(\"layout_front.html\", context),",
        "detail": "apps.theme.front_pages.views",
        "documentation": {}
    },
    {
        "label": "IconsConfig",
        "kind": 6,
        "importPath": "apps.theme.icons.apps",
        "description": "apps.theme.icons.apps",
        "peekOfCode": "class IconsConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.theme.icons\"",
        "detail": "apps.theme.icons.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.theme.icons.urls",
        "description": "apps.theme.icons.urls",
        "peekOfCode": "urlpatterns = [\n    path(\n        \"icons/tabler/\",\n        login_required(IconsView.as_view(template_name=\"icons_tabler.html\")),\n        name=\"icons-tabler\",\n    ),\n    path(\n        \"icons/font_awesome/\",\n        login_required(IconsView.as_view(template_name=\"icons_font_awesome.html\")),\n        name=\"icons-font-awesome\",",
        "detail": "apps.theme.icons.urls",
        "documentation": {}
    },
    {
        "label": "IconsView",
        "kind": 6,
        "importPath": "apps.theme.icons.views",
        "description": "apps.theme.icons.views",
        "peekOfCode": "class IconsView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context",
        "detail": "apps.theme.icons.views",
        "documentation": {}
    },
    {
        "label": "InvoiceConfig",
        "kind": 6,
        "importPath": "apps.theme.invoice.apps",
        "description": "apps.theme.invoice.apps",
        "peekOfCode": "class InvoiceConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.theme.invoice\"",
        "detail": "apps.theme.invoice.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.theme.invoice.urls",
        "description": "apps.theme.invoice.urls",
        "peekOfCode": "urlpatterns = [\n    path(\n        \"app/invoice/list/\",\n        login_required(InvoiceView.as_view(template_name=\"app_invoice_list.html\")),\n        name=\"app-invoice-list\",\n    ),\n    path(\n        \"app/invoice/preview/\",\n        login_required(InvoiceView.as_view(template_name=\"app_invoice_preview.html\")),\n        name=\"app-invoice-preview\",",
        "detail": "apps.theme.invoice.urls",
        "documentation": {}
    },
    {
        "label": "InvoiceView",
        "kind": 6,
        "importPath": "apps.theme.invoice.views",
        "description": "apps.theme.invoice.views",
        "peekOfCode": "class InvoiceView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context\nclass InvoicePrintView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file",
        "detail": "apps.theme.invoice.views",
        "documentation": {}
    },
    {
        "label": "InvoicePrintView",
        "kind": 6,
        "importPath": "apps.theme.invoice.views",
        "description": "apps.theme.invoice.views",
        "peekOfCode": "class InvoicePrintView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        # Update the context\n        context.update(\n            {\n                \"layout_path\": TemplateHelper.set_layout(\"layout_blank.html\", context),\n            }",
        "detail": "apps.theme.invoice.views",
        "documentation": {}
    },
    {
        "label": "KanbanConfig",
        "kind": 6,
        "importPath": "apps.theme.kanban.apps",
        "description": "apps.theme.kanban.apps",
        "peekOfCode": "class KanbanConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.theme.kanban\"",
        "detail": "apps.theme.kanban.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.theme.kanban.urls",
        "description": "apps.theme.kanban.urls",
        "peekOfCode": "urlpatterns = [\n    path(\n        \"app/kanban/\",\n        login_required(KanbanView.as_view(template_name=\"app_kanban.html\")),\n        name=\"app-kanban\",\n    ),\n]",
        "detail": "apps.theme.kanban.urls",
        "documentation": {}
    },
    {
        "label": "KanbanView",
        "kind": 6,
        "importPath": "apps.theme.kanban.views",
        "description": "apps.theme.kanban.views",
        "peekOfCode": "class KanbanView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context",
        "detail": "apps.theme.kanban.views",
        "documentation": {}
    },
    {
        "label": "LayoutsConfig",
        "kind": 6,
        "importPath": "apps.theme.layouts.apps",
        "description": "apps.theme.layouts.apps",
        "peekOfCode": "class LayoutsConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.theme.layouts\"",
        "detail": "apps.theme.layouts.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.theme.layouts.urls",
        "description": "apps.theme.layouts.urls",
        "peekOfCode": "urlpatterns = [\n    path(\n        \"layouts/collapsed_menu/\",\n        login_required(CollapsedMenuView.as_view(template_name=\"layouts_collapsed_menu.html\")),\n        name=\"layouts-collapsed-menu\",\n    ),\n    path(\n        \"layouts/content_navbar/\",\n        login_required(VerticalView.as_view(template_name=\"layouts_content_navbar.html\")),\n        name=\"layouts-content-navbar\",",
        "detail": "apps.theme.layouts.urls",
        "documentation": {}
    },
    {
        "label": "CollapsedMenuView",
        "kind": 6,
        "importPath": "apps.theme.layouts.views",
        "description": "apps.theme.layouts.views",
        "peekOfCode": "class CollapsedMenuView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        # Update the context\n        context.update(\n            {\n                \"menu_collapsed\": True,\n            }",
        "detail": "apps.theme.layouts.views",
        "documentation": {}
    },
    {
        "label": "ContentNavSidebarView",
        "kind": 6,
        "importPath": "apps.theme.layouts.views",
        "description": "apps.theme.layouts.views",
        "peekOfCode": "class ContentNavSidebarView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        # Update the context\n        context.update(\n            {\n                \"is_flex\": True,\n            }",
        "detail": "apps.theme.layouts.views",
        "documentation": {}
    },
    {
        "label": "VerticalView",
        "kind": 6,
        "importPath": "apps.theme.layouts.views",
        "description": "apps.theme.layouts.views",
        "peekOfCode": "class VerticalView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        # Update the context\n        context.update(\n            {\n                \"layout\": \"vertical\",\n                \"navbar_full\": False,",
        "detail": "apps.theme.layouts.views",
        "documentation": {}
    },
    {
        "label": "HorizontalView",
        "kind": 6,
        "importPath": "apps.theme.layouts.views",
        "description": "apps.theme.layouts.views",
        "peekOfCode": "class HorizontalView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        # Update the context\n        context.update(\n            {\n                \"layout\": \"horizontal\",\n                \"layout_path\": TemplateHelper.set_layout(",
        "detail": "apps.theme.layouts.views",
        "documentation": {}
    },
    {
        "label": "WithoutMenuView",
        "kind": 6,
        "importPath": "apps.theme.layouts.views",
        "description": "apps.theme.layouts.views",
        "peekOfCode": "class WithoutMenuView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        # Update the context\n        context.update(\n            {\n                \"is_menu\": False,\n            }",
        "detail": "apps.theme.layouts.views",
        "documentation": {}
    },
    {
        "label": "WithoutNavView",
        "kind": 6,
        "importPath": "apps.theme.layouts.views",
        "description": "apps.theme.layouts.views",
        "peekOfCode": "class WithoutNavView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        # Update the context\n        context.update(\n            {\n                \"is_navbar\": False,\n                \"navbar_type\": \"hidden\",",
        "detail": "apps.theme.layouts.views",
        "documentation": {}
    },
    {
        "label": "FluidView",
        "kind": 6,
        "importPath": "apps.theme.layouts.views",
        "description": "apps.theme.layouts.views",
        "peekOfCode": "class FluidView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        # Update the context\n        context.update(\n            {\n                \"content_layout\": \"wide\",\n            }",
        "detail": "apps.theme.layouts.views",
        "documentation": {}
    },
    {
        "label": "ContainerView",
        "kind": 6,
        "importPath": "apps.theme.layouts.views",
        "description": "apps.theme.layouts.views",
        "peekOfCode": "class ContainerView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        # Update the context\n        context.update(\n            {\n                \"content_layout\": \"compact\",\n            }",
        "detail": "apps.theme.layouts.views",
        "documentation": {}
    },
    {
        "label": "BlankView",
        "kind": 6,
        "importPath": "apps.theme.layouts.views",
        "description": "apps.theme.layouts.views",
        "peekOfCode": "class BlankView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        # Update the context\n        context.update(\n            {\n                \"layout_path\": TemplateHelper.set_layout(\"layout_blank.html\", context),\n            }",
        "detail": "apps.theme.layouts.views",
        "documentation": {}
    },
    {
        "label": "LogisticsConfig",
        "kind": 6,
        "importPath": "apps.theme.logistics.apps",
        "description": "apps.theme.logistics.apps",
        "peekOfCode": "class LogisticsConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.theme.logistics\"",
        "detail": "apps.theme.logistics.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.theme.logistics.urls",
        "description": "apps.theme.logistics.urls",
        "peekOfCode": "urlpatterns = [\n    path(\n        \"app/logistics/dashboard/\",\n        login_required(LogisticsView.as_view(template_name=\"app_logistics_dashboard.html\")),\n        name=\"app-logistics-dashboard\",\n    ),\n    path(\n        \"app/logistics/fleet/\",\n        login_required(LogisticsView.as_view(template_name=\"app_logistics_fleet.html\")),\n        name=\"app-logistics-fleet\",",
        "detail": "apps.theme.logistics.urls",
        "documentation": {}
    },
    {
        "label": "LogisticsView",
        "kind": 6,
        "importPath": "apps.theme.logistics.views",
        "description": "apps.theme.logistics.views",
        "peekOfCode": "class LogisticsView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context",
        "detail": "apps.theme.logistics.views",
        "documentation": {}
    },
    {
        "label": "MailConfig",
        "kind": 6,
        "importPath": "apps.theme.mail.apps",
        "description": "apps.theme.mail.apps",
        "peekOfCode": "class MailConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.theme.mail\"",
        "detail": "apps.theme.mail.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.theme.mail.urls",
        "description": "apps.theme.mail.urls",
        "peekOfCode": "urlpatterns = [\n    path(\n        \"app/email/\",\n        login_required(EmailView.as_view(template_name=\"app_email.html\")),\n        name=\"app-email\",\n    ),\n]",
        "detail": "apps.theme.mail.urls",
        "documentation": {}
    },
    {
        "label": "EmailView",
        "kind": 6,
        "importPath": "apps.theme.mail.views",
        "description": "apps.theme.mail.views",
        "peekOfCode": "class EmailView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context",
        "detail": "apps.theme.mail.views",
        "documentation": {}
    },
    {
        "label": "MapsConfig",
        "kind": 6,
        "importPath": "apps.theme.maps.apps",
        "description": "apps.theme.maps.apps",
        "peekOfCode": "class MapsConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.theme.maps\"",
        "detail": "apps.theme.maps.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.theme.maps.urls",
        "description": "apps.theme.maps.urls",
        "peekOfCode": "urlpatterns = [\n    path(\n        \"maps/leaflet/\",\n       login_required(MapView.as_view(template_name=\"maps_leaflet.html\")),\n        name=\"maps-leaflet\",\n    ),\n]",
        "detail": "apps.theme.maps.urls",
        "documentation": {}
    },
    {
        "label": "MapView",
        "kind": 6,
        "importPath": "apps.theme.maps.views",
        "description": "apps.theme.maps.views",
        "peekOfCode": "class MapView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context",
        "detail": "apps.theme.maps.views",
        "documentation": {}
    },
    {
        "label": "ModalExampleConfig",
        "kind": 6,
        "importPath": "apps.theme.modal_examples.apps",
        "description": "apps.theme.modal_examples.apps",
        "peekOfCode": "class ModalExampleConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.theme.modal_examples\"",
        "detail": "apps.theme.modal_examples.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.theme.modal_examples.urls",
        "description": "apps.theme.modal_examples.urls",
        "peekOfCode": "urlpatterns = [\n    path(\n        \"modal_examples/\",\n        login_required(ModalExampleView.as_view(template_name=\"modal_examples.html\")),\n        name=\"modal-examples\",\n    ),\n]",
        "detail": "apps.theme.modal_examples.urls",
        "documentation": {}
    },
    {
        "label": "ModalExampleView",
        "kind": 6,
        "importPath": "apps.theme.modal_examples.views",
        "description": "apps.theme.modal_examples.views",
        "peekOfCode": "class ModalExampleView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context",
        "detail": "apps.theme.modal_examples.views",
        "documentation": {}
    },
    {
        "label": "MyCalendarConfig",
        "kind": 6,
        "importPath": "apps.theme.my_calendar.apps",
        "description": "apps.theme.my_calendar.apps",
        "peekOfCode": "class MyCalendarConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.theme.my_calendar\"",
        "detail": "apps.theme.my_calendar.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.theme.my_calendar.urls",
        "description": "apps.theme.my_calendar.urls",
        "peekOfCode": "urlpatterns = [\n    path(\n        \"app/calendar/\",\n        login_required(CalendarView.as_view(template_name=\"app_calendar.html\")),\n        name=\"app-calendar\",\n    ),\n]",
        "detail": "apps.theme.my_calendar.urls",
        "documentation": {}
    },
    {
        "label": "CalendarView",
        "kind": 6,
        "importPath": "apps.theme.my_calendar.views",
        "description": "apps.theme.my_calendar.views",
        "peekOfCode": "class CalendarView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context",
        "detail": "apps.theme.my_calendar.views",
        "documentation": {}
    },
    {
        "label": "PagesConfig",
        "kind": 6,
        "importPath": "apps.theme.pages.apps",
        "description": "apps.theme.pages.apps",
        "peekOfCode": "class PagesConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.theme.pages\"",
        "detail": "apps.theme.pages.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.theme.pages.urls",
        "description": "apps.theme.pages.urls",
        "peekOfCode": "urlpatterns = [\n    path(\n        \"pages/profile/user/\",\n        login_required(PagesView.as_view(template_name=\"pages_profile_user.html\")),\n        name=\"pages-profile-user\",\n    ),\n    path(\n        \"pages/profile/teams/\",\n        login_required(PagesView.as_view(template_name=\"pages_profile_teams.html\")),\n        name=\"pages-profile-teams\",",
        "detail": "apps.theme.pages.urls",
        "documentation": {}
    },
    {
        "label": "PagesView",
        "kind": 6,
        "importPath": "apps.theme.pages.views",
        "description": "apps.theme.pages.views",
        "peekOfCode": "class PagesView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context",
        "detail": "apps.theme.pages.views",
        "documentation": {}
    },
    {
        "label": "MiscPagesView",
        "kind": 6,
        "importPath": "apps.theme.pages.views_misc",
        "description": "apps.theme.pages.views_misc",
        "peekOfCode": "class MiscPagesView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        # Update the context\n        context.update(\n            {\n                \"layout_path\": TemplateHelper.set_layout(\"layout_blank.html\", context),\n            }",
        "detail": "apps.theme.pages.views_misc",
        "documentation": {}
    },
    {
        "label": "TablesConfig",
        "kind": 6,
        "importPath": "apps.theme.tables.apps",
        "description": "apps.theme.tables.apps",
        "peekOfCode": "class TablesConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.theme.tables\"",
        "detail": "apps.theme.tables.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.theme.tables.urls",
        "description": "apps.theme.tables.urls",
        "peekOfCode": "urlpatterns = [\n    path(\n        \"tables/basic/\",\n        login_required(TableView.as_view(template_name=\"tables_basic.html\")),\n        name=\"tables-basic\",\n    ),\n    path(\n        \"tables/datatables_basic/\",\n        login_required(TableView.as_view(template_name=\"tables_datatables_basic.html\")),\n        name=\"tables-datatables-basic\",",
        "detail": "apps.theme.tables.urls",
        "documentation": {}
    },
    {
        "label": "TableView",
        "kind": 6,
        "importPath": "apps.theme.tables.views",
        "description": "apps.theme.tables.views",
        "peekOfCode": "class TableView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context",
        "detail": "apps.theme.tables.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.theme.transactions.migrations.0001_initial",
        "description": "apps.theme.transactions.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Transaction',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('customer', models.CharField(max_length=150)),",
        "detail": "apps.theme.transactions.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "TransactionAddView",
        "kind": 6,
        "importPath": "apps.theme.transactions.transaction_add.views",
        "description": "apps.theme.transactions.transaction_add.views",
        "peekOfCode": "class TransactionAddView(PermissionRequiredMixin, TemplateView):\n    permission_required = (\"llm_transaction.add_transaction\")\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['current_date'] = date.today().strftime(\"%Y-%m-%d\")\n        return context\n    def post(self, request):\n        form = TransactionForm(request.POST)\n        if form.is_valid():\n            if not self.transaction_exists(form.cleaned_data):",
        "detail": "apps.theme.transactions.transaction_add.views",
        "documentation": {}
    },
    {
        "label": "TransactionDeleteView",
        "kind": 6,
        "importPath": "apps.theme.transactions.transaction_delete.views",
        "description": "apps.theme.transactions.transaction_delete.views",
        "peekOfCode": "class TransactionDeleteView(PermissionRequiredMixin, DeleteView):\n    permission_required = (\"llm_transaction.delete_transaction\")\n    def get(self, request, pk):\n        transaction = get_object_or_404(Transaction, id=pk)\n        transaction.delete()\n        messages.success(request, 'Transaction Deleted')\n        return redirect('llm_transaction')",
        "detail": "apps.theme.transactions.transaction_delete.views",
        "documentation": {}
    },
    {
        "label": "TransactionListView",
        "kind": 6,
        "importPath": "apps.theme.transactions.transaction_list.views",
        "description": "apps.theme.transactions.transaction_list.views",
        "peekOfCode": "class TransactionListView(TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        transactions = self.get_annotated_transactions()\n        # Update the context\n        context.update(\n            {\n                \"llm_transaction\": transactions,\n                \"transactions_count\": Transaction.objects.count(),\n                \"due_count\": self.get_total_due(),",
        "detail": "apps.theme.transactions.transaction_list.views",
        "documentation": {}
    },
    {
        "label": "TransactionUpdateView",
        "kind": 6,
        "importPath": "apps.theme.transactions.transaction_update.views",
        "description": "apps.theme.transactions.transaction_update.views",
        "peekOfCode": "class TransactionUpdateView(PermissionRequiredMixin, TemplateView):\n    permission_required = (\"llm_transaction.update_transaction\")\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['transaction_id'] = self.get_transaction(self.kwargs['pk'])\n        return context\n    def post(self, request, pk):\n        transaction = self.get_transaction(pk)\n        form = TransactionForm(request.POST, instance=transaction)\n        if form.is_valid():",
        "detail": "apps.theme.transactions.transaction_update.views",
        "documentation": {}
    },
    {
        "label": "TransactionAdmin",
        "kind": 6,
        "importPath": "apps.theme.transactions.admin",
        "description": "apps.theme.transactions.admin",
        "peekOfCode": "class TransactionAdmin(admin.ModelAdmin):\n    list_display = ('customer', 'transaction_date', 'due_date', 'total', 'status')\n    list_filter = ('customer', 'transaction_date', 'due_date', 'total', 'status')\n    search_fields = ('customer', 'transaction_date', 'due_date', 'total', 'status')\n    ordering = ('customer', 'transaction_date', 'due_date', 'total', 'status')\n    list_per_page = 10\nadmin.site.register(Transaction, TransactionAdmin)\n\"\"\"",
        "detail": "apps.theme.transactions.admin",
        "documentation": {}
    },
    {
        "label": "TransactionsConfig",
        "kind": 6,
        "importPath": "apps.theme.transactions.apps",
        "description": "apps.theme.transactions.apps",
        "peekOfCode": "class TransactionsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.theme.transactions'",
        "detail": "apps.theme.transactions.apps",
        "documentation": {}
    },
    {
        "label": "TransactionForm",
        "kind": 6,
        "importPath": "apps.theme.transactions.forms",
        "description": "apps.theme.transactions.forms",
        "peekOfCode": "class TransactionForm(forms.ModelForm):\n    class Meta:\n        model = Transaction\n        fields = '__all__'",
        "detail": "apps.theme.transactions.forms",
        "documentation": {}
    },
    {
        "label": "Transaction",
        "kind": 6,
        "importPath": "apps.theme.transactions.models",
        "description": "apps.theme.transactions.models",
        "peekOfCode": "class Transaction(models.Model):\n    customer = models.CharField(max_length=150)\n    transaction_date = models.DateField()\n    due_date = models.DateField()\n    total = models.DecimalField(max_digits=20, decimal_places=2)\n    status = models.CharField(max_length=20, choices=[(\"Paid\", \"Paid\"), (\"Due\", \"Due\"), (\"Canceled\", \"Canceled\")])\n    def __str__(self):\n        return self.customer",
        "detail": "apps.theme.transactions.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.theme.transactions.urls",
        "description": "apps.theme.transactions.urls",
        "peekOfCode": "urlpatterns = [\n    path(\n        \"llm_transaction/list/\",\n        login_required(TransactionListView.as_view(template_name=\"transactions_list.html\")),\n        name=\"llm_transaction\",\n    ),\n    path(\n        \"llm_transaction/add/\",\n        login_required(TransactionAddView.as_view(template_name=\"transactions_add.html\")),\n        name=\"llm_transaction-add\",",
        "detail": "apps.theme.transactions.urls",
        "documentation": {}
    },
    {
        "label": "UiConfig",
        "kind": 6,
        "importPath": "apps.theme.ui.apps",
        "description": "apps.theme.ui.apps",
        "peekOfCode": "class UiConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.theme.ui\"",
        "detail": "apps.theme.ui.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.theme.ui.urls",
        "description": "apps.theme.ui.urls",
        "peekOfCode": "urlpatterns = [\n    path(\n        \"ui/accordion/\",\n        login_required(UIView.as_view(template_name=\"ui_accordion.html\")),\n        name=\"ui-accordion\",\n    ),\n    path(\n        \"ui/alerts/\",\n        login_required(UIView.as_view(template_name=\"ui_alerts.html\")),\n        name=\"ui-alerts\",",
        "detail": "apps.theme.ui.urls",
        "documentation": {}
    },
    {
        "label": "UIView",
        "kind": 6,
        "importPath": "apps.theme.ui.views",
        "description": "apps.theme.ui.views",
        "peekOfCode": "class UIView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context",
        "detail": "apps.theme.ui.views",
        "documentation": {}
    },
    {
        "label": "UsersConfig",
        "kind": 6,
        "importPath": "apps.theme.users.apps",
        "description": "apps.theme.users.apps",
        "peekOfCode": "class UsersConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.theme.users\"",
        "detail": "apps.theme.users.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.theme.users.urls",
        "description": "apps.theme.users.urls",
        "peekOfCode": "urlpatterns = [\n    path(\n        \"app/user/list/\",\n        login_required(UsersView.as_view(template_name=\"app_user_list.html\")),\n        name=\"app-user-list\",\n    ),\n    path(\n        \"app/user/view/account/\",\n        login_required(UsersView.as_view(template_name=\"app_user_view_account.html\")),\n        name=\"app-user-view-account\",",
        "detail": "apps.theme.users.urls",
        "documentation": {}
    },
    {
        "label": "UsersView",
        "kind": 6,
        "importPath": "apps.theme.users.views",
        "description": "apps.theme.users.views",
        "peekOfCode": "class UsersView(PermissionRequiredMixin, TemplateView):\n    permission_required = (\"user.view_user\", \"user.delete_user\", \"user.change_user\", \"user.add_user\")\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context",
        "detail": "apps.theme.users.views",
        "documentation": {}
    },
    {
        "label": "WizardExamplesConfig",
        "kind": 6,
        "importPath": "apps.theme.wizard_examples.apps",
        "description": "apps.theme.wizard_examples.apps",
        "peekOfCode": "class WizardExamplesConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"apps.theme.wizard_examples\"",
        "detail": "apps.theme.wizard_examples.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.theme.wizard_examples.urls",
        "description": "apps.theme.wizard_examples.urls",
        "peekOfCode": "urlpatterns = [\n    path(\n        \"wizard_ex/checkout/\",\n        login_required(WizardExamplesView.as_view(template_name=\"wizard_ex_checkout.html\")),\n        name=\"wizard-ex-checkout\",\n    ),\n    path(\n        \"wizard_ex/property_listing/\",\n        login_required(WizardExamplesView.as_view(template_name=\"wizard_ex_property_listing.html\")),\n        name=\"wizard-ex-property-listing\",",
        "detail": "apps.theme.wizard_examples.urls",
        "documentation": {}
    },
    {
        "label": "WizardExamplesView",
        "kind": 6,
        "importPath": "apps.theme.wizard_examples.views",
        "description": "apps.theme.wizard_examples.views",
        "peekOfCode": "class WizardExamplesView(TemplateView):\n    # Predefined function\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context",
        "detail": "apps.theme.wizard_examples.views",
        "documentation": {}
    },
    {
        "label": "UserStatusForm",
        "kind": 6,
        "importPath": "apps.user_management.forms.user_status_forms",
        "description": "apps.user_management.forms.user_status_forms",
        "peekOfCode": "class UserStatusForm(forms.ModelForm):\n    class Meta:\n        model = Profile\n        fields = ['is_active']\n        widgets = {'is_active': forms.CheckboxInput(attrs={'class': 'form-check-input'})}",
        "detail": "apps.user_management.forms.user_status_forms",
        "documentation": {}
    },
    {
        "label": "fixture_user_management_init",
        "kind": 2,
        "importPath": "apps.user_management.tests.conftest",
        "description": "apps.user_management.tests.conftest",
        "peekOfCode": "def fixture_user_management_init():\n    return True",
        "detail": "apps.user_management.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_user_management_test_forms",
        "kind": 2,
        "importPath": "apps.user_management.tests.test_forms",
        "description": "apps.user_management.tests.test_forms",
        "peekOfCode": "def test_init_user_management_test_forms():\n    assert True",
        "detail": "apps.user_management.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_user_management_test_models",
        "kind": 2,
        "importPath": "apps.user_management.tests.test_models",
        "description": "apps.user_management.tests.test_models",
        "peekOfCode": "def test_init_user_management_test_models():\n    assert True",
        "detail": "apps.user_management.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_user_management_test_utils",
        "kind": 2,
        "importPath": "apps.user_management.tests.test_utils",
        "description": "apps.user_management.tests.test_utils",
        "peekOfCode": "def test_init_user_management_test_utils():\n    assert True",
        "detail": "apps.user_management.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_user_management_test_views",
        "kind": 2,
        "importPath": "apps.user_management.tests.test_views",
        "description": "apps.user_management.tests.test_views",
        "peekOfCode": "def test_init_user_management_test_views():\n    assert True",
        "detail": "apps.user_management.tests.test_views",
        "documentation": {}
    },
    {
        "label": "UserManagementView_ConnectUser",
        "kind": 6,
        "importPath": "apps.user_management.views.connect_user_to_organization_views",
        "description": "apps.user_management.views.connect_user_to_organization_views",
        "peekOfCode": "class UserManagementView_ConnectUser(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context_user = self.request.user\n        context_sub_users = context_user.profile.sub_users.all()\n        context['users'] = context_sub_users\n        context['organizations'] = Organization.objects.filter(users__in=[self.request.user])\n        return context\n    def post(self, request, *args, **kwargs):\n        context_user = self.request.user",
        "detail": "apps.user_management.views.connect_user_to_organization_views",
        "documentation": {}
    },
    {
        "label": "UserManagementView_UserInvite",
        "kind": 6,
        "importPath": "apps.user_management.views.create_user_views",
        "description": "apps.user_management.views.create_user_views",
        "peekOfCode": "class UserManagementView_UserInvite(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['organizations'] = Organization.objects.filter(users__in=[self.request.user])\n        return context\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - ADD_USERS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.ADD_USERS):",
        "detail": "apps.user_management.views.create_user_views",
        "documentation": {}
    },
    {
        "label": "UserManagementView_UserDelete",
        "kind": 6,
        "importPath": "apps.user_management.views.delete_user_views",
        "description": "apps.user_management.views.delete_user_views",
        "peekOfCode": "class UserManagementView_UserDelete(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        user = get_object_or_404(User, id=kwargs['pk'])\n        context['user_to_delete'] = user\n        return context\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - DELETE_USERS\n        if not UserPermissionManager.is_authorized(user=self.request.user,",
        "detail": "apps.user_management.views.delete_user_views",
        "documentation": {}
    },
    {
        "label": "UserManagementView_UserList",
        "kind": 6,
        "importPath": "apps.user_management.views.list_users_views",
        "description": "apps.user_management.views.list_users_views",
        "peekOfCode": "class UserManagementView_UserList(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_USERS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_USERS):\n            messages.error(self.request, \"You do not have permission to list users.\")\n            return context\n        ##############################",
        "detail": "apps.user_management.views.list_users_views",
        "documentation": {}
    },
    {
        "label": "UserManagementView_UserRemoveFromAll",
        "kind": 6,
        "importPath": "apps.user_management.views.remove_user_from_all_organizations_views",
        "description": "apps.user_management.views.remove_user_from_all_organizations_views",
        "peekOfCode": "class UserManagementView_UserRemoveFromAll(TemplateView, LoginRequiredMixin):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        user = get_object_or_404(User, id=kwargs['pk'])\n        context['user_to_remove'] = user\n        return context\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - REMOVE_USER_FROM_ORGANIZATION\n        if not UserPermissionManager.is_authorized(user=self.request.user,",
        "detail": "apps.user_management.views.remove_user_from_all_organizations_views",
        "documentation": {}
    },
    {
        "label": "UserManagementView_UserRemoveFromOrganization",
        "kind": 6,
        "importPath": "apps.user_management.views.remove_user_from_organization_views",
        "description": "apps.user_management.views.remove_user_from_organization_views",
        "peekOfCode": "class UserManagementView_UserRemoveFromOrganization(TemplateView, LoginRequiredMixin):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        user = get_object_or_404(User, id=kwargs['pk'])\n        org = get_object_or_404(Organization, id=kwargs['org_id'])\n        context['user_to_remove'] = user\n        context['organization'] = org\n        return context\n    def post(self, request, *args, **kwargs):\n        ##############################",
        "detail": "apps.user_management.views.remove_user_from_organization_views",
        "documentation": {}
    },
    {
        "label": "UserManagementView_UserUpdateStatus",
        "kind": 6,
        "importPath": "apps.user_management.views.update_user_status_views",
        "description": "apps.user_management.views.update_user_status_views",
        "peekOfCode": "class UserManagementView_UserUpdateStatus(LoginRequiredMixin, TemplateView):\n    def post(self, request, *args, **kwargs):\n        user_id = request.POST.get('user_id')\n        is_active = request.POST.get('is_active') == 'true'\n        ##############################\n        # PERMISSION CHECK FOR - UPDATE_USERS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.UPDATE_USERS):\n            messages.error(self.request, \"You do not have permission to update/modify user accounts.\")\n            return redirect('user_management:list')",
        "detail": "apps.user_management.views.update_user_status_views",
        "documentation": {}
    },
    {
        "label": "UserManagementConfig",
        "kind": 6,
        "importPath": "apps.user_management.apps",
        "description": "apps.user_management.apps",
        "peekOfCode": "class UserManagementConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.user_management'",
        "detail": "apps.user_management.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.user_management.urls",
        "description": "apps.user_management.urls",
        "peekOfCode": "app_name = \"user_management\"\nurlpatterns = [\n    path('add/', UserManagementView_UserInvite.as_view(template_name=\"user_management/users/add_new_user.html\"),\n         name=\"add\"),\n    path('list/', UserManagementView_UserList.as_view(template_name=\"user_management/users/list_users.html\"),\n         name=\"list\"),\n    path('remove/<int:pk>/', UserManagementView_UserDelete.as_view(\n        template_name=\"user_management/users/confirm_remove_user.html\"), name=\"remove\"),\n    path('update_user_status/', UserManagementView_UserUpdateStatus.as_view(), name='update_user_status'),\n    path('add_user_to_organization/', UserManagementView_ConnectUser.as_view(",
        "detail": "apps.user_management.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.user_management.urls",
        "description": "apps.user_management.urls",
        "peekOfCode": "urlpatterns = [\n    path('add/', UserManagementView_UserInvite.as_view(template_name=\"user_management/users/add_new_user.html\"),\n         name=\"add\"),\n    path('list/', UserManagementView_UserList.as_view(template_name=\"user_management/users/list_users.html\"),\n         name=\"list\"),\n    path('remove/<int:pk>/', UserManagementView_UserDelete.as_view(\n        template_name=\"user_management/users/confirm_remove_user.html\"), name=\"remove\"),\n    path('update_user_status/', UserManagementView_UserUpdateStatus.as_view(), name='update_user_status'),\n    path('add_user_to_organization/', UserManagementView_ConnectUser.as_view(\n        template_name=\"user_management/connections/add_user_to_organization.html\"), name='add_user_to_organization'),",
        "detail": "apps.user_management.urls",
        "documentation": {}
    },
    {
        "label": "UserPermissionsAdmin",
        "kind": 6,
        "importPath": "apps.user_permissions.admin.user_permission_admin",
        "description": "apps.user_permissions.admin.user_permission_admin",
        "peekOfCode": "class UserPermissionsAdmin(admin.ModelAdmin):\n    list_display = USER_PERMISSIONS_ADMIN_LIST\n    list_filter = USER_PERMISSIONS_ADMIN_FILTER\n    search_fields = USER_PERMISSIONS_ADMIN_SEARCH\n    date_hierarchy = \"created_at\"\n    ordering = [\"-created_at\"]",
        "detail": "apps.user_permissions.admin.user_permission_admin",
        "documentation": {}
    },
    {
        "label": "UserRoleAdmin",
        "kind": 6,
        "importPath": "apps.user_permissions.admin.user_roles_admin",
        "description": "apps.user_permissions.admin.user_roles_admin",
        "peekOfCode": "class UserRoleAdmin(admin.ModelAdmin):\n    list_display = USER_ROLES_ADMIN_LIST\n    list_filter = USER_ROLES_ADMIN_FILTER\n    search_fields = USER_ROLES_ADMIN_SEARCH\n    date_hierarchy = 'created_at'\n    ordering = ('-created_at',)",
        "detail": "apps.user_permissions.admin.user_roles_admin",
        "documentation": {}
    },
    {
        "label": "AddUserToRoleForm",
        "kind": 6,
        "importPath": "apps.user_permissions.forms.add_user_to_role_forms",
        "description": "apps.user_permissions.forms.add_user_to_role_forms",
        "peekOfCode": "class AddUserToRoleForm(forms.Form):\n    user = forms.ModelChoiceField(queryset=User.objects.all(), widget=forms.Select(attrs={'class': 'form-select'}))\n    role = forms.ModelChoiceField(queryset=UserRole.objects.all(), widget=forms.Select(attrs={'class': 'form-select'}))\n    class Meta:\n        fields = ['user', 'role']",
        "detail": "apps.user_permissions.forms.add_user_to_role_forms",
        "documentation": {}
    },
    {
        "label": "UserRoleForm",
        "kind": 6,
        "importPath": "apps.user_permissions.forms.user_role_forms",
        "description": "apps.user_permissions.forms.user_role_forms",
        "peekOfCode": "class UserRoleForm(forms.ModelForm):\n    role_permissions = forms.MultipleChoiceField(\n        choices=PERMISSION_TYPES, widget=forms.SelectMultiple(attrs={'class': 'form-select', 'multiple': 'multiple'}),\n        required=True)\n    class Meta:\n        model = UserRole\n        fields = ['organization', 'role_name', 'role_description', 'role_permissions']",
        "detail": "apps.user_permissions.forms.user_role_forms",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.user_permissions.migrations.0001_initial",
        "description": "apps.user_permissions.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='UserPermission',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "apps.user_permissions.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.user_permissions.migrations.0002_alter_userpermission_permission_type",
        "description": "apps.user_permissions.migrations.0002_alter_userpermission_permission_type",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user_permissions', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='userpermission',\n            name='permission_type',\n            field=models.CharField(choices=[('add_organizations', 'Add Organizations'), ('update_organizations', 'Update Organizations'), ('list_organizations', 'List Organizations'), ('delete_organizations', 'Delete Organizations'), ('add_llm_cores', 'Add LLM Cores'), ('update_llm_cores', 'Update LLM Cores'), ('list_llm_cores', 'List LLM Cores'), ('delete_llm_cores', 'Delete LLM Cores'), ('list_transactions', 'List Transactions'), ('add_users', 'Add Users'), ('update_users', 'Update Users'), ('list_users', 'List Users'), ('delete_users', 'Delete Users'), ('modify_user_permissions', 'Modify User Permissions'), ('list_user_permissions', 'List User Permissions'), ('add_assistants', 'Add Assistants'), ('update_assistants', 'Update Assistants'), ('list_assistants', 'List Assistants'), ('delete_assistants', 'Delete Assistants'), ('create_and_use_chats', 'Create and Use Chats'), ('remove_chats', 'Remove Chats'), ('add_assistant_memories', 'Add Assistant Memories'), ('update_assistant_memories', 'Update Assistant Memories'), ('list_assistant_memories', 'List Assistant Memories'), ('delete_assistant_memories', 'Delete Assistant Memories'), ('add_export_assistant', 'Add Export Assistant'), ('update_export_assistant', 'Update Export Assistant'), ('list_export_assistant', 'List Export Assistant'), ('delete_export_assistant', 'Delete Export Assistant'), ('add_orchestrations', 'Add Orchestrations'), ('update_orchestrations', 'Update Orchestrations'), ('list_orchestrations', 'List Orchestrations'), ('delete_orchestrations', 'Delete Orchestrations'), ('add_file_systems', 'Add File Systems'), ('update_file_systems', 'Update File Systems'), ('list_file_systems', 'List File Systems'), ('delete_file_systems', 'Delete File Systems'), ('add_web_browsers', 'Add Web Browsers'), ('update_web_browsers', 'Update Web Browsers'), ('list_web_browsers', 'List Web Browsers'), ('delete_web_browsers', 'Delete Web Browsers'), ('add_sql_databases', 'Add SQL Databases'), ('update_sql_databases', 'Update SQL Databases'), ('list_sql_databases', 'List SQL Databases'), ('delete_sql_databases', 'Delete SQL Databases'), ('add_nosql_databases', 'Add NoSQL Databases'), ('update_nosql_databases', 'Update NoSQL Databases'), ('list_nosql_databases', 'List NoSQL Databases'), ('delete_nosql_databases', 'Delete NoSQL Databases'), ('add_knowledge_bases', 'Add Knowledge Bases'), ('update_knowledge_bases', 'Update Knowledge Bases'), ('list_knowledge_bases', 'List Knowledge Bases'), ('delete_knowledge_bases', 'Delete Knowledge Bases'), ('add_media_storages', 'Add Media Storages'), ('update_media_storages', 'Update Media Storages'), ('list_media_storages', 'List Media Storages'), ('delete_media_storages', 'Delete Media Storages'), ('add_ml_model_connections', 'Add ML Model Connections'), ('update_ml_model_connections', 'Update ML Model Connections'), ('list_ml_model_connections', 'List ML Model Connections'), ('delete_ml_model_connections', 'Delete ML Model Connections'), ('add_functions', 'Add Functions'), ('update_functions', 'Update Functions'), ('list_functions', 'List Functions'), ('delete_functions', 'Delete Functions'), ('add_apis', 'Add APIs'), ('update_apis', 'Update APIs'), ('list_apis', 'List APIs'), ('delete_apis', 'Delete APIs'), ('add_scripts', 'Add Scripts'), ('update_scripts', 'Update Scripts'), ('list_scripts', 'List Scripts'), ('delete_scripts', 'Delete Scripts'), ('add_scheduled_jobs', 'Add Scheduled Jobs'), ('update_scheduled_jobs', 'Update Scheduled Jobs'), ('list_scheduled_jobs', 'List Scheduled Jobs'), ('delete_scheduled_jobs', 'Delete Scheduled Jobs'), ('add_triggers', 'Add Triggers'), ('update_triggers', 'Update Triggers'), ('list_triggers', 'List Triggers'), ('delete_triggers', 'Delete Triggers'), ('can_generate_images', 'Can Generate Images'), ('can_generate_audio', 'Can Generate Audio'), ('add_integrations', 'Add Integrations'), ('update_integrations', 'Update Integrations'), ('list_integrations', 'List Integrations'), ('delete_integrations', 'Delete Integrations'), ('add_meta_integrations', 'Add Meta Integrations'), ('update_meta_integrations', 'Update Meta Integrations'), ('list_meta_integrations', 'List Meta Integrations'), ('delete_meta_integrations', 'Delete Meta Integrations'), ('add_starred_messages', 'Add Starred Messages'), ('list_starred_messages', 'List Starred Messages'), ('remove_starred_messages', 'Remove Starred Messages'), ('add_template_messages', 'Add Template Messages'), ('list_template_messages', 'List Template Messages'), ('update_template_messages', 'Update Template Messages'), ('remove_template_messages', 'Remove Template Messages'), ('add_data_security', 'Add Data Security'), ('update_data_security', 'Update Data Security'), ('list_data_security', 'List Data Security'), ('delete_data_security', 'Delete Data Security'), ('add_code_base', 'Add Code Base'), ('update_code_base', 'Update Code Base'), ('list_code_base', 'List Code Base'), ('delete_code_base', 'Delete Code Base'), ('add_code_repository', 'Add Code Repository'), ('update_code_repository', 'Update Code Repository'), ('list_code_repository', 'List Code Repository'), ('delete_code_repository', 'Delete Code Repository'), ('add_knowledge_base_docs', 'Add Knowledge Base Docs'), ('update_knowledge_base_docs', 'Update Knowledge Base Docs'), ('list_knowledge_base_docs', 'List Knowledge Base Docs'), ('delete_knowledge_base_docs', 'Delete Knowledge Base Docs'), ('add_storage_files', 'Add Storage Files'), ('update_storage_files', 'Update Storage Files'), ('list_storage_files', 'List Storage Files'), ('delete_storage_files', 'Delete Storage Files'), ('add_ml_model_files', 'Add ML Model Files'), ('update_ml_model_files', 'Update ML Model Files'), ('list_ml_model_files', 'List ML Model Files'), ('delete_ml_model_files', 'Delete ML Model Files'), ('add_custom_sql_queries', 'Add Custom SQL Queries'), ('update_custom_sql_queries', 'Update Custom SQL Queries'), ('list_custom_sql_queries', 'List Custom SQL Queries'), ('delete_custom_sql_queries', 'Delete Custom SQL Queries'), ('add_export_leanmod', 'Add Export LeanMod'), ('update_export_leanmod', 'Update Export LeanMod'), ('list_export_leanmod', 'List Export LeanMod'), ('delete_export_leanmod', 'Delete Export LeanMod'), ('add_export_orchestration', 'Add Export Orchestration'), ('update_export_orchestration', 'Update Export Orchestration'), ('list_export_orchestration', 'List Export Orchestration'), ('delete_export_orchestration', 'Delete Export Orchestration'), ('add_finetuning_model', 'Add Finetuning Model'), ('update_finetuning_model', 'Update Finetuning Model'), ('list_finetuning_model', 'List Finetuning Model'), ('delete_finetuning_model', 'Delete Finetuning Model'), ('add_lean_assistant', 'Add Lean Assistant'), ('update_lean_assistant', 'Update Lean Assistant'), ('list_lean_assistant', 'List Lean Assistant'), ('delete_lean_assistant', 'Delete Lean Assistant'), ('archive_chats', 'Archive Chats'), ('unarchive_chats', 'Unarchive Chats'), ('create_and_use_lean_chats', 'Create and Use Lean Chats'), ('remove_lean_chats', 'Remove Lean Chats'), ('archive_lean_chats', 'Archive Lean Chats'), ('unarchive_lean_chats', 'Unarchive Lean Chats'), ('create_and_use_orchestration_chats', 'Create and Use Orchestration Chats'), ('remove_orchestration_chats', 'Remove Orchestration Chats'), ('create_support_tickets', 'Create Support Tickets'), ('list_support_tickets', 'List Support Tickets'), ('update_support_tickets', 'Update Support Tickets')], max_length=255),\n        ),",
        "detail": "apps.user_permissions.migrations.0002_alter_userpermission_permission_type",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.user_permissions.migrations.0003_alter_userpermission_permission_type",
        "description": "apps.user_permissions.migrations.0003_alter_userpermission_permission_type",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user_permissions', '0002_alter_userpermission_permission_type'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='userpermission',\n            name='permission_type',\n            field=models.CharField(choices=[('add_organizations', 'Add Organizations'), ('update_organizations', 'Update Organizations'), ('list_organizations', 'List Organizations'), ('delete_organizations', 'Delete Organizations'), ('add_llm_cores', 'Add LLM Cores'), ('update_llm_cores', 'Update LLM Cores'), ('list_llm_cores', 'List LLM Cores'), ('delete_llm_cores', 'Delete LLM Cores'), ('list_transactions', 'List Transactions'), ('add_users', 'Add Users'), ('update_users', 'Update Users'), ('list_users', 'List Users'), ('delete_users', 'Delete Users'), ('modify_user_permissions', 'Modify User Permissions'), ('list_user_permissions', 'List User Permissions'), ('add_assistants', 'Add Assistants'), ('update_assistants', 'Update Assistants'), ('list_assistants', 'List Assistants'), ('delete_assistants', 'Delete Assistants'), ('create_and_use_chats', 'Create and Use Chats'), ('remove_chats', 'Remove Chats'), ('add_assistant_memories', 'Add Assistant Memories'), ('update_assistant_memories', 'Update Assistant Memories'), ('list_assistant_memories', 'List Assistant Memories'), ('delete_assistant_memories', 'Delete Assistant Memories'), ('add_export_assistant', 'Add Export Assistant'), ('update_export_assistant', 'Update Export Assistant'), ('list_export_assistant', 'List Export Assistant'), ('delete_export_assistant', 'Delete Export Assistant'), ('add_orchestrations', 'Add Orchestrations'), ('update_orchestrations', 'Update Orchestrations'), ('list_orchestrations', 'List Orchestrations'), ('delete_orchestrations', 'Delete Orchestrations'), ('add_file_systems', 'Add File Systems'), ('update_file_systems', 'Update File Systems'), ('list_file_systems', 'List File Systems'), ('delete_file_systems', 'Delete File Systems'), ('add_web_browsers', 'Add Web Browsers'), ('update_web_browsers', 'Update Web Browsers'), ('list_web_browsers', 'List Web Browsers'), ('delete_web_browsers', 'Delete Web Browsers'), ('add_sql_databases', 'Add SQL Databases'), ('update_sql_databases', 'Update SQL Databases'), ('list_sql_databases', 'List SQL Databases'), ('delete_sql_databases', 'Delete SQL Databases'), ('add_nosql_databases', 'Add NoSQL Databases'), ('update_nosql_databases', 'Update NoSQL Databases'), ('list_nosql_databases', 'List NoSQL Databases'), ('delete_nosql_databases', 'Delete NoSQL Databases'), ('add_knowledge_bases', 'Add Knowledge Bases'), ('update_knowledge_bases', 'Update Knowledge Bases'), ('list_knowledge_bases', 'List Knowledge Bases'), ('delete_knowledge_bases', 'Delete Knowledge Bases'), ('add_media_storages', 'Add Media Storages'), ('update_media_storages', 'Update Media Storages'), ('list_media_storages', 'List Media Storages'), ('delete_media_storages', 'Delete Media Storages'), ('add_ml_model_connections', 'Add ML Model Connections'), ('update_ml_model_connections', 'Update ML Model Connections'), ('list_ml_model_connections', 'List ML Model Connections'), ('delete_ml_model_connections', 'Delete ML Model Connections'), ('add_functions', 'Add Functions'), ('update_functions', 'Update Functions'), ('list_functions', 'List Functions'), ('delete_functions', 'Delete Functions'), ('add_apis', 'Add APIs'), ('update_apis', 'Update APIs'), ('list_apis', 'List APIs'), ('delete_apis', 'Delete APIs'), ('add_scripts', 'Add Scripts'), ('update_scripts', 'Update Scripts'), ('list_scripts', 'List Scripts'), ('delete_scripts', 'Delete Scripts'), ('add_scheduled_jobs', 'Add Scheduled Jobs'), ('update_scheduled_jobs', 'Update Scheduled Jobs'), ('list_scheduled_jobs', 'List Scheduled Jobs'), ('delete_scheduled_jobs', 'Delete Scheduled Jobs'), ('add_triggers', 'Add Triggers'), ('update_triggers', 'Update Triggers'), ('list_triggers', 'List Triggers'), ('delete_triggers', 'Delete Triggers'), ('can_generate_images', 'Can Generate Images'), ('can_generate_audio', 'Can Generate Audio'), ('add_integrations', 'Add Integrations'), ('update_integrations', 'Update Integrations'), ('list_integrations', 'List Integrations'), ('delete_integrations', 'Delete Integrations'), ('add_meta_integrations', 'Add Meta Integrations'), ('update_meta_integrations', 'Update Meta Integrations'), ('list_meta_integrations', 'List Meta Integrations'), ('delete_meta_integrations', 'Delete Meta Integrations'), ('add_starred_messages', 'Add Starred Messages'), ('list_starred_messages', 'List Starred Messages'), ('remove_starred_messages', 'Remove Starred Messages'), ('add_template_messages', 'Add Template Messages'), ('list_template_messages', 'List Template Messages'), ('update_template_messages', 'Update Template Messages'), ('remove_template_messages', 'Remove Template Messages'), ('add_data_security', 'Add Data Security'), ('update_data_security', 'Update Data Security'), ('list_data_security', 'List Data Security'), ('delete_data_security', 'Delete Data Security'), ('add_code_base', 'Add Code Base'), ('update_code_base', 'Update Code Base'), ('list_code_base', 'List Code Base'), ('delete_code_base', 'Delete Code Base'), ('add_code_repository', 'Add Code Repository'), ('update_code_repository', 'Update Code Repository'), ('list_code_repository', 'List Code Repository'), ('delete_code_repository', 'Delete Code Repository'), ('add_knowledge_base_docs', 'Add Knowledge Base Docs'), ('update_knowledge_base_docs', 'Update Knowledge Base Docs'), ('list_knowledge_base_docs', 'List Knowledge Base Docs'), ('delete_knowledge_base_docs', 'Delete Knowledge Base Docs'), ('add_storage_files', 'Add Storage Files'), ('update_storage_files', 'Update Storage Files'), ('list_storage_files', 'List Storage Files'), ('delete_storage_files', 'Delete Storage Files'), ('add_ml_model_files', 'Add ML Model Files'), ('update_ml_model_files', 'Update ML Model Files'), ('list_ml_model_files', 'List ML Model Files'), ('delete_ml_model_files', 'Delete ML Model Files'), ('add_custom_sql_queries', 'Add Custom SQL Queries'), ('update_custom_sql_queries', 'Update Custom SQL Queries'), ('list_custom_sql_queries', 'List Custom SQL Queries'), ('delete_custom_sql_queries', 'Delete Custom SQL Queries'), ('add_export_leanmod', 'Add Export LeanMod'), ('update_export_leanmod', 'Update Export LeanMod'), ('list_export_leanmod', 'List Export LeanMod'), ('delete_export_leanmod', 'Delete Export LeanMod'), ('add_expert_networks', 'Add Expert Networks'), ('update_expert_networks', 'Update Expert Networks'), ('list_expert_networks', 'List Expert Networks'), ('delete_expert_networks', 'Delete Expert Networks'), ('add_export_orchestration', 'Add Export Orchestration'), ('update_export_orchestration', 'Update Export Orchestration'), ('list_export_orchestration', 'List Export Orchestration'), ('delete_export_orchestration', 'Delete Export Orchestration'), ('add_finetuning_model', 'Add Finetuning Model'), ('update_finetuning_model', 'Update Finetuning Model'), ('list_finetuning_model', 'List Finetuning Model'), ('delete_finetuning_model', 'Delete Finetuning Model'), ('add_lean_assistant', 'Add Lean Assistant'), ('update_lean_assistant', 'Update Lean Assistant'), ('list_lean_assistant', 'List Lean Assistant'), ('delete_lean_assistant', 'Delete Lean Assistant'), ('archive_chats', 'Archive Chats'), ('unarchive_chats', 'Unarchive Chats'), ('create_and_use_lean_chats', 'Create and Use Lean Chats'), ('remove_lean_chats', 'Remove Lean Chats'), ('archive_lean_chats', 'Archive Lean Chats'), ('unarchive_lean_chats', 'Unarchive Lean Chats'), ('create_and_use_orchestration_chats', 'Create and Use Orchestration Chats'), ('remove_orchestration_chats', 'Remove Orchestration Chats'), ('create_support_tickets', 'Create Support Tickets'), ('list_support_tickets', 'List Support Tickets'), ('update_support_tickets', 'Update Support Tickets')], max_length=255),\n        ),",
        "detail": "apps.user_permissions.migrations.0003_alter_userpermission_permission_type",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.user_permissions.migrations.0004_alter_userpermission_permission_type",
        "description": "apps.user_permissions.migrations.0004_alter_userpermission_permission_type",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user_permissions', '0003_alter_userpermission_permission_type'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='userpermission',\n            name='permission_type',\n            field=models.CharField(choices=[('add_organizations', 'Add Organizations'), ('update_organizations', 'Update Organizations'), ('list_organizations', 'List Organizations'), ('delete_organizations', 'Delete Organizations'), ('add_balance_to_organization', 'Add Balance to Organization'), ('transfer_balance_between_organizations', 'Transfer Balance Between Organizations'), ('add_llm_cores', 'Add LLM Cores'), ('update_llm_cores', 'Update LLM Cores'), ('list_llm_cores', 'List LLM Cores'), ('delete_llm_cores', 'Delete LLM Cores'), ('list_transactions', 'List Transactions'), ('add_users', 'Add Users'), ('update_users', 'Update Users'), ('list_users', 'List Users'), ('delete_users', 'Delete Users'), ('connect_user_to_organization', 'Connect User to Organization'), ('remove_user_from_organization', 'Remove User from Organization'), ('modify_user_permissions', 'Modify User Permissions'), ('list_user_permissions', 'List User Permissions'), ('add_assistants', 'Add Assistants'), ('update_assistants', 'Update Assistants'), ('list_assistants', 'List Assistants'), ('delete_assistants', 'Delete Assistants'), ('create_and_use_chats', 'Create and Use Chats'), ('remove_chats', 'Remove Chats'), ('add_assistant_memories', 'Add Assistant Memories'), ('update_assistant_memories', 'Update Assistant Memories'), ('list_assistant_memories', 'List Assistant Memories'), ('delete_assistant_memories', 'Delete Assistant Memories'), ('add_export_assistant', 'Add Export Assistant'), ('update_export_assistant', 'Update Export Assistant'), ('list_export_assistant', 'List Export Assistant'), ('delete_export_assistant', 'Delete Export Assistant'), ('add_orchestrations', 'Add Orchestrations'), ('update_orchestrations', 'Update Orchestrations'), ('list_orchestrations', 'List Orchestrations'), ('delete_orchestrations', 'Delete Orchestrations'), ('add_file_systems', 'Add File Systems'), ('update_file_systems', 'Update File Systems'), ('list_file_systems', 'List File Systems'), ('delete_file_systems', 'Delete File Systems'), ('add_web_browsers', 'Add Web Browsers'), ('update_web_browsers', 'Update Web Browsers'), ('list_web_browsers', 'List Web Browsers'), ('delete_web_browsers', 'Delete Web Browsers'), ('add_sql_databases', 'Add SQL Databases'), ('update_sql_databases', 'Update SQL Databases'), ('list_sql_databases', 'List SQL Databases'), ('delete_sql_databases', 'Delete SQL Databases'), ('add_nosql_databases', 'Add NoSQL Databases'), ('update_nosql_databases', 'Update NoSQL Databases'), ('list_nosql_databases', 'List NoSQL Databases'), ('delete_nosql_databases', 'Delete NoSQL Databases'), ('add_knowledge_bases', 'Add Knowledge Bases'), ('update_knowledge_bases', 'Update Knowledge Bases'), ('list_knowledge_bases', 'List Knowledge Bases'), ('delete_knowledge_bases', 'Delete Knowledge Bases'), ('add_media_storages', 'Add Media Storages'), ('update_media_storages', 'Update Media Storages'), ('list_media_storages', 'List Media Storages'), ('delete_media_storages', 'Delete Media Storages'), ('add_ml_model_connections', 'Add ML Model Connections'), ('update_ml_model_connections', 'Update ML Model Connections'), ('list_ml_model_connections', 'List ML Model Connections'), ('delete_ml_model_connections', 'Delete ML Model Connections'), ('add_functions', 'Add Functions'), ('update_functions', 'Update Functions'), ('list_functions', 'List Functions'), ('delete_functions', 'Delete Functions'), ('add_apis', 'Add APIs'), ('update_apis', 'Update APIs'), ('list_apis', 'List APIs'), ('delete_apis', 'Delete APIs'), ('add_scripts', 'Add Scripts'), ('update_scripts', 'Update Scripts'), ('list_scripts', 'List Scripts'), ('delete_scripts', 'Delete Scripts'), ('add_scheduled_jobs', 'Add Scheduled Jobs'), ('update_scheduled_jobs', 'Update Scheduled Jobs'), ('list_scheduled_jobs', 'List Scheduled Jobs'), ('delete_scheduled_jobs', 'Delete Scheduled Jobs'), ('add_triggers', 'Add Triggers'), ('update_triggers', 'Update Triggers'), ('list_triggers', 'List Triggers'), ('delete_triggers', 'Delete Triggers'), ('can_generate_images', 'Can Generate Images'), ('can_generate_audio', 'Can Generate Audio'), ('add_integrations', 'Add Integrations'), ('update_integrations', 'Update Integrations'), ('list_integrations', 'List Integrations'), ('delete_integrations', 'Delete Integrations'), ('add_meta_integrations', 'Add Meta Integrations'), ('update_meta_integrations', 'Update Meta Integrations'), ('list_meta_integrations', 'List Meta Integrations'), ('delete_meta_integrations', 'Delete Meta Integrations'), ('add_starred_messages', 'Add Starred Messages'), ('list_starred_messages', 'List Starred Messages'), ('remove_starred_messages', 'Remove Starred Messages'), ('add_template_messages', 'Add Template Messages'), ('list_template_messages', 'List Template Messages'), ('update_template_messages', 'Update Template Messages'), ('remove_template_messages', 'Remove Template Messages'), ('add_data_security', 'Add Data Security'), ('update_data_security', 'Update Data Security'), ('list_data_security', 'List Data Security'), ('delete_data_security', 'Delete Data Security'), ('add_code_base', 'Add Code Base'), ('update_code_base', 'Update Code Base'), ('list_code_base', 'List Code Base'), ('delete_code_base', 'Delete Code Base'), ('add_code_repository', 'Add Code Repository'), ('update_code_repository', 'Update Code Repository'), ('list_code_repository', 'List Code Repository'), ('delete_code_repository', 'Delete Code Repository'), ('add_knowledge_base_docs', 'Add Knowledge Base Docs'), ('update_knowledge_base_docs', 'Update Knowledge Base Docs'), ('list_knowledge_base_docs', 'List Knowledge Base Docs'), ('delete_knowledge_base_docs', 'Delete Knowledge Base Docs'), ('add_storage_files', 'Add Storage Files'), ('update_storage_files', 'Update Storage Files'), ('list_storage_files', 'List Storage Files'), ('delete_storage_files', 'Delete Storage Files'), ('add_ml_model_files', 'Add ML Model Files'), ('update_ml_model_files', 'Update ML Model Files'), ('list_ml_model_files', 'List ML Model Files'), ('delete_ml_model_files', 'Delete ML Model Files'), ('add_custom_sql_queries', 'Add Custom SQL Queries'), ('update_custom_sql_queries', 'Update Custom SQL Queries'), ('list_custom_sql_queries', 'List Custom SQL Queries'), ('delete_custom_sql_queries', 'Delete Custom SQL Queries'), ('add_export_leanmod', 'Add Export LeanMod'), ('update_export_leanmod', 'Update Export LeanMod'), ('list_export_leanmod', 'List Export LeanMod'), ('delete_export_leanmod', 'Delete Export LeanMod'), ('add_expert_networks', 'Add Expert Networks'), ('update_expert_networks', 'Update Expert Networks'), ('list_expert_networks', 'List Expert Networks'), ('delete_expert_networks', 'Delete Expert Networks'), ('add_export_orchestration', 'Add Export Orchestration'), ('update_export_orchestration', 'Update Export Orchestration'), ('list_export_orchestration', 'List Export Orchestration'), ('delete_export_orchestration', 'Delete Export Orchestration'), ('add_finetuning_model', 'Add Finetuning Model'), ('update_finetuning_model', 'Update Finetuning Model'), ('list_finetuning_model', 'List Finetuning Model'), ('delete_finetuning_model', 'Delete Finetuning Model'), ('add_lean_assistant', 'Add Lean Assistant'), ('update_lean_assistant', 'Update Lean Assistant'), ('list_lean_assistant', 'List Lean Assistant'), ('delete_lean_assistant', 'Delete Lean Assistant'), ('archive_chats', 'Archive Chats'), ('unarchive_chats', 'Unarchive Chats'), ('create_and_use_lean_chats', 'Create and Use Lean Chats'), ('remove_lean_chats', 'Remove Lean Chats'), ('archive_lean_chats', 'Archive Lean Chats'), ('unarchive_lean_chats', 'Unarchive Lean Chats'), ('create_and_use_orchestration_chats', 'Create and Use Orchestration Chats'), ('remove_orchestration_chats', 'Remove Orchestration Chats'), ('create_support_tickets', 'Create Support Tickets'), ('list_support_tickets', 'List Support Tickets'), ('update_support_tickets', 'Update Support Tickets')], max_length=255),\n        ),",
        "detail": "apps.user_permissions.migrations.0004_alter_userpermission_permission_type",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.user_permissions.migrations.0005_userrole",
        "description": "apps.user_permissions.migrations.0005_userrole",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('organization', '0001_initial'),\n        ('user_permissions', '0004_alter_userpermission_permission_type'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='UserRole',\n            fields=[",
        "detail": "apps.user_permissions.migrations.0005_userrole",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.user_permissions.migrations.0006_remove_userrole_role_permissions_and_more",
        "description": "apps.user_permissions.migrations.0006_remove_userrole_role_permissions_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user_permissions', '0005_userrole'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='userrole',\n            name='role_permissions',\n        ),\n        migrations.AddField(",
        "detail": "apps.user_permissions.migrations.0006_remove_userrole_role_permissions_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.user_permissions.migrations.0007_userrole_users",
        "description": "apps.user_permissions.migrations.0007_userrole_users",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user_permissions', '0006_remove_userrole_role_permissions_and_more'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='userrole',\n            name='users',\n            field=models.ManyToManyField(related_name='roles', to=settings.AUTH_USER_MODEL),",
        "detail": "apps.user_permissions.migrations.0007_userrole_users",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.user_permissions.migrations.0008_alter_userpermission_permission_type",
        "description": "apps.user_permissions.migrations.0008_alter_userpermission_permission_type",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user_permissions', '0007_userrole_users'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='userpermission',\n            name='permission_type',\n            field=models.CharField(choices=[('add_organizations', 'Add Organizations'), ('update_organizations', 'Update Organizations'), ('list_organizations', 'List Organizations'), ('delete_organizations', 'Delete Organizations'), ('add_balance_to_organization', 'Add Balance to Organization'), ('transfer_balance_between_organizations', 'Transfer Balance Between Organizations'), ('add_llm_cores', 'Add LLM Cores'), ('update_llm_cores', 'Update LLM Cores'), ('list_llm_cores', 'List LLM Cores'), ('delete_llm_cores', 'Delete LLM Cores'), ('list_transactions', 'List Transactions'), ('add_users', 'Add Users'), ('update_users', 'Update Users'), ('list_users', 'List Users'), ('delete_users', 'Delete Users'), ('connect_user_to_organization', 'Connect User to Organization'), ('remove_user_from_organization', 'Remove User from Organization'), ('modify_user_permissions', 'Modify User Permissions'), ('list_user_permissions', 'List User Permissions'), ('add_assistants', 'Add Assistants'), ('update_assistants', 'Update Assistants'), ('list_assistants', 'List Assistants'), ('delete_assistants', 'Delete Assistants'), ('create_and_use_chats', 'Create and Use Chats'), ('remove_chats', 'Remove Chats'), ('add_assistant_memories', 'Add Assistant Memories'), ('update_assistant_memories', 'Update Assistant Memories'), ('list_assistant_memories', 'List Assistant Memories'), ('delete_assistant_memories', 'Delete Assistant Memories'), ('add_export_assistant', 'Add Export Assistant'), ('update_export_assistant', 'Update Export Assistant'), ('list_export_assistant', 'List Export Assistant'), ('delete_export_assistant', 'Delete Export Assistant'), ('add_orchestrations', 'Add Orchestrations'), ('update_orchestrations', 'Update Orchestrations'), ('list_orchestrations', 'List Orchestrations'), ('delete_orchestrations', 'Delete Orchestrations'), ('add_file_systems', 'Add File Systems'), ('update_file_systems', 'Update File Systems'), ('list_file_systems', 'List File Systems'), ('delete_file_systems', 'Delete File Systems'), ('add_web_browsers', 'Add Web Browsers'), ('update_web_browsers', 'Update Web Browsers'), ('list_web_browsers', 'List Web Browsers'), ('delete_web_browsers', 'Delete Web Browsers'), ('add_sql_databases', 'Add SQL Databases'), ('update_sql_databases', 'Update SQL Databases'), ('list_sql_databases', 'List SQL Databases'), ('delete_sql_databases', 'Delete SQL Databases'), ('add_nosql_databases', 'Add NoSQL Databases'), ('update_nosql_databases', 'Update NoSQL Databases'), ('list_nosql_databases', 'List NoSQL Databases'), ('delete_nosql_databases', 'Delete NoSQL Databases'), ('add_knowledge_bases', 'Add Knowledge Bases'), ('update_knowledge_bases', 'Update Knowledge Bases'), ('list_knowledge_bases', 'List Knowledge Bases'), ('delete_knowledge_bases', 'Delete Knowledge Bases'), ('add_media_storages', 'Add Media Storages'), ('update_media_storages', 'Update Media Storages'), ('list_media_storages', 'List Media Storages'), ('delete_media_storages', 'Delete Media Storages'), ('add_ml_model_connections', 'Add ML Model Connections'), ('update_ml_model_connections', 'Update ML Model Connections'), ('list_ml_model_connections', 'List ML Model Connections'), ('delete_ml_model_connections', 'Delete ML Model Connections'), ('add_functions', 'Add Functions'), ('update_functions', 'Update Functions'), ('list_functions', 'List Functions'), ('delete_functions', 'Delete Functions'), ('add_apis', 'Add APIs'), ('update_apis', 'Update APIs'), ('list_apis', 'List APIs'), ('delete_apis', 'Delete APIs'), ('add_scripts', 'Add Scripts'), ('update_scripts', 'Update Scripts'), ('list_scripts', 'List Scripts'), ('delete_scripts', 'Delete Scripts'), ('add_scheduled_jobs', 'Add Scheduled Jobs'), ('update_scheduled_jobs', 'Update Scheduled Jobs'), ('list_scheduled_jobs', 'List Scheduled Jobs'), ('delete_scheduled_jobs', 'Delete Scheduled Jobs'), ('add_triggers', 'Add Triggers'), ('update_triggers', 'Update Triggers'), ('list_triggers', 'List Triggers'), ('delete_triggers', 'Delete Triggers'), ('can_generate_images', 'Can Generate Images'), ('can_generate_audio', 'Can Generate Audio'), ('add_integrations', 'Add Integrations'), ('update_integrations', 'Update Integrations'), ('list_integrations', 'List Integrations'), ('delete_integrations', 'Delete Integrations'), ('add_meta_integrations', 'Add Meta Integrations'), ('update_meta_integrations', 'Update Meta Integrations'), ('list_meta_integrations', 'List Meta Integrations'), ('delete_meta_integrations', 'Delete Meta Integrations'), ('add_starred_messages', 'Add Starred Messages'), ('list_starred_messages', 'List Starred Messages'), ('remove_starred_messages', 'Remove Starred Messages'), ('add_template_messages', 'Add Template Messages'), ('list_template_messages', 'List Template Messages'), ('update_template_messages', 'Update Template Messages'), ('remove_template_messages', 'Remove Template Messages'), ('add_data_security', 'Add Data Security'), ('update_data_security', 'Update Data Security'), ('list_data_security', 'List Data Security'), ('delete_data_security', 'Delete Data Security'), ('add_code_base', 'Add Code Base'), ('update_code_base', 'Update Code Base'), ('list_code_base', 'List Code Base'), ('delete_code_base', 'Delete Code Base'), ('add_code_repository', 'Add Code Repository'), ('update_code_repository', 'Update Code Repository'), ('list_code_repository', 'List Code Repository'), ('delete_code_repository', 'Delete Code Repository'), ('add_knowledge_base_docs', 'Add Knowledge Base Docs'), ('update_knowledge_base_docs', 'Update Knowledge Base Docs'), ('list_knowledge_base_docs', 'List Knowledge Base Docs'), ('delete_knowledge_base_docs', 'Delete Knowledge Base Docs'), ('add_storage_files', 'Add Storage Files'), ('update_storage_files', 'Update Storage Files'), ('list_storage_files', 'List Storage Files'), ('delete_storage_files', 'Delete Storage Files'), ('add_ml_model_files', 'Add ML Model Files'), ('update_ml_model_files', 'Update ML Model Files'), ('list_ml_model_files', 'List ML Model Files'), ('delete_ml_model_files', 'Delete ML Model Files'), ('add_custom_sql_queries', 'Add Custom SQL Queries'), ('update_custom_sql_queries', 'Update Custom SQL Queries'), ('list_custom_sql_queries', 'List Custom SQL Queries'), ('delete_custom_sql_queries', 'Delete Custom SQL Queries'), ('add_export_leanmod', 'Add Export LeanMod'), ('update_export_leanmod', 'Update Export LeanMod'), ('list_export_leanmod', 'List Export LeanMod'), ('delete_export_leanmod', 'Delete Export LeanMod'), ('add_expert_networks', 'Add Expert Networks'), ('update_expert_networks', 'Update Expert Networks'), ('list_expert_networks', 'List Expert Networks'), ('delete_expert_networks', 'Delete Expert Networks'), ('add_export_orchestration', 'Add Export Orchestration'), ('update_export_orchestration', 'Update Export Orchestration'), ('list_export_orchestration', 'List Export Orchestration'), ('delete_export_orchestration', 'Delete Export Orchestration'), ('add_finetuning_model', 'Add Finetuning Model'), ('update_finetuning_model', 'Update Finetuning Model'), ('list_finetuning_model', 'List Finetuning Model'), ('delete_finetuning_model', 'Delete Finetuning Model'), ('add_lean_assistant', 'Add Lean Assistant'), ('update_lean_assistant', 'Update Lean Assistant'), ('list_lean_assistant', 'List Lean Assistant'), ('delete_lean_assistant', 'Delete Lean Assistant'), ('archive_chats', 'Archive Chats'), ('unarchive_chats', 'Unarchive Chats'), ('create_and_use_lean_chats', 'Create and Use Lean Chats'), ('remove_lean_chats', 'Remove Lean Chats'), ('archive_lean_chats', 'Archive Lean Chats'), ('unarchive_lean_chats', 'Unarchive Lean Chats'), ('create_and_use_orchestration_chats', 'Create and Use Orchestration Chats'), ('remove_orchestration_chats', 'Remove Orchestration Chats'), ('create_support_tickets', 'Create Support Tickets'), ('list_support_tickets', 'List Support Tickets'), ('update_support_tickets', 'Update Support Tickets'), ('create_user_roles', 'Create User Roles'), ('list_user_roles', 'List User Roles'), ('update_user_roles', 'Update User Roles'), ('delete_user_roles', 'Delete User Roles')], max_length=255),\n        ),",
        "detail": "apps.user_permissions.migrations.0008_alter_userpermission_permission_type",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.user_permissions.migrations.0009_alter_userpermission_permission_type",
        "description": "apps.user_permissions.migrations.0009_alter_userpermission_permission_type",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user_permissions', '0008_alter_userpermission_permission_type'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='userpermission',\n            name='permission_type',\n            field=models.CharField(choices=[('add_organizations', 'Add Organizations'), ('update_organizations', 'Update Organizations'), ('list_organizations', 'List Organizations'), ('delete_organizations', 'Delete Organizations'), ('add_balance_to_organization', 'Add Balance to Organization'), ('transfer_balance_between_organizations', 'Transfer Balance Between Organizations'), ('add_llm_cores', 'Add LLM Cores'), ('update_llm_cores', 'Update LLM Cores'), ('list_llm_cores', 'List LLM Cores'), ('delete_llm_cores', 'Delete LLM Cores'), ('list_transactions', 'List Transactions'), ('add_users', 'Add Users'), ('update_users', 'Update Users'), ('list_users', 'List Users'), ('delete_users', 'Delete Users'), ('connect_user_to_organization', 'Connect User to Organization'), ('remove_user_from_organization', 'Remove User from Organization'), ('modify_user_permissions', 'Modify User Permissions'), ('list_user_permissions', 'List User Permissions'), ('add_assistants', 'Add Assistants'), ('update_assistants', 'Update Assistants'), ('list_assistants', 'List Assistants'), ('delete_assistants', 'Delete Assistants'), ('create_and_use_chats', 'Create and Use Chats'), ('remove_chats', 'Remove Chats'), ('add_assistant_memories', 'Add Assistant Memories'), ('update_assistant_memories', 'Update Assistant Memories'), ('list_assistant_memories', 'List Assistant Memories'), ('delete_assistant_memories', 'Delete Assistant Memories'), ('add_export_assistant', 'Add Export Assistant'), ('update_export_assistant', 'Update Export Assistant'), ('list_export_assistant', 'List Export Assistant'), ('delete_export_assistant', 'Delete Export Assistant'), ('add_orchestrations', 'Add Orchestrations'), ('update_orchestrations', 'Update Orchestrations'), ('list_orchestrations', 'List Orchestrations'), ('delete_orchestrations', 'Delete Orchestrations'), ('add_file_systems', 'Add File Systems'), ('update_file_systems', 'Update File Systems'), ('list_file_systems', 'List File Systems'), ('delete_file_systems', 'Delete File Systems'), ('add_web_browsers', 'Add Web Browsers'), ('update_web_browsers', 'Update Web Browsers'), ('list_web_browsers', 'List Web Browsers'), ('delete_web_browsers', 'Delete Web Browsers'), ('add_sql_databases', 'Add SQL Databases'), ('update_sql_databases', 'Update SQL Databases'), ('list_sql_databases', 'List SQL Databases'), ('delete_sql_databases', 'Delete SQL Databases'), ('add_nosql_databases', 'Add NoSQL Databases'), ('update_nosql_databases', 'Update NoSQL Databases'), ('list_nosql_databases', 'List NoSQL Databases'), ('delete_nosql_databases', 'Delete NoSQL Databases'), ('add_knowledge_bases', 'Add Knowledge Bases'), ('update_knowledge_bases', 'Update Knowledge Bases'), ('list_knowledge_bases', 'List Knowledge Bases'), ('delete_knowledge_bases', 'Delete Knowledge Bases'), ('add_media_storages', 'Add Media Storages'), ('update_media_storages', 'Update Media Storages'), ('list_media_storages', 'List Media Storages'), ('delete_media_storages', 'Delete Media Storages'), ('add_ml_model_connections', 'Add ML Model Connections'), ('update_ml_model_connections', 'Update ML Model Connections'), ('list_ml_model_connections', 'List ML Model Connections'), ('delete_ml_model_connections', 'Delete ML Model Connections'), ('add_functions', 'Add Functions'), ('update_functions', 'Update Functions'), ('list_functions', 'List Functions'), ('delete_functions', 'Delete Functions'), ('add_apis', 'Add APIs'), ('update_apis', 'Update APIs'), ('list_apis', 'List APIs'), ('delete_apis', 'Delete APIs'), ('add_scripts', 'Add Scripts'), ('update_scripts', 'Update Scripts'), ('list_scripts', 'List Scripts'), ('delete_scripts', 'Delete Scripts'), ('add_scheduled_jobs', 'Add Scheduled Jobs'), ('update_scheduled_jobs', 'Update Scheduled Jobs'), ('list_scheduled_jobs', 'List Scheduled Jobs'), ('delete_scheduled_jobs', 'Delete Scheduled Jobs'), ('add_triggers', 'Add Triggers'), ('update_triggers', 'Update Triggers'), ('list_triggers', 'List Triggers'), ('delete_triggers', 'Delete Triggers'), ('can_generate_images', 'Can Generate Images'), ('can_generate_audio', 'Can Generate Audio'), ('add_integrations', 'Add Integrations'), ('update_integrations', 'Update Integrations'), ('list_integrations', 'List Integrations'), ('delete_integrations', 'Delete Integrations'), ('add_meta_integrations', 'Add Meta Integrations'), ('update_meta_integrations', 'Update Meta Integrations'), ('list_meta_integrations', 'List Meta Integrations'), ('delete_meta_integrations', 'Delete Meta Integrations'), ('add_starred_messages', 'Add Starred Messages'), ('list_starred_messages', 'List Starred Messages'), ('remove_starred_messages', 'Remove Starred Messages'), ('add_template_messages', 'Add Template Messages'), ('list_template_messages', 'List Template Messages'), ('update_template_messages', 'Update Template Messages'), ('remove_template_messages', 'Remove Template Messages'), ('add_data_security', 'Add Data Security'), ('update_data_security', 'Update Data Security'), ('list_data_security', 'List Data Security'), ('delete_data_security', 'Delete Data Security'), ('add_code_base', 'Add Code Base'), ('update_code_base', 'Update Code Base'), ('list_code_base', 'List Code Base'), ('delete_code_base', 'Delete Code Base'), ('add_code_repository', 'Add Code Repository'), ('update_code_repository', 'Update Code Repository'), ('list_code_repository', 'List Code Repository'), ('delete_code_repository', 'Delete Code Repository'), ('add_knowledge_base_docs', 'Add Knowledge Base Docs'), ('update_knowledge_base_docs', 'Update Knowledge Base Docs'), ('list_knowledge_base_docs', 'List Knowledge Base Docs'), ('delete_knowledge_base_docs', 'Delete Knowledge Base Docs'), ('add_storage_files', 'Add Storage Files'), ('update_storage_files', 'Update Storage Files'), ('list_storage_files', 'List Storage Files'), ('delete_storage_files', 'Delete Storage Files'), ('add_ml_model_files', 'Add ML Model Files'), ('update_ml_model_files', 'Update ML Model Files'), ('list_ml_model_files', 'List ML Model Files'), ('delete_ml_model_files', 'Delete ML Model Files'), ('add_custom_sql_queries', 'Add Custom SQL Queries'), ('update_custom_sql_queries', 'Update Custom SQL Queries'), ('list_custom_sql_queries', 'List Custom SQL Queries'), ('delete_custom_sql_queries', 'Delete Custom SQL Queries'), ('add_export_leanmod', 'Add Export LeanMod'), ('update_export_leanmod', 'Update Export LeanMod'), ('list_export_leanmod', 'List Export LeanMod'), ('delete_export_leanmod', 'Delete Export LeanMod'), ('add_expert_networks', 'Add Expert Networks'), ('update_expert_networks', 'Update Expert Networks'), ('list_expert_networks', 'List Expert Networks'), ('delete_expert_networks', 'Delete Expert Networks'), ('add_export_orchestration', 'Add Export Orchestration'), ('update_export_orchestration', 'Update Export Orchestration'), ('list_export_orchestration', 'List Export Orchestration'), ('delete_export_orchestration', 'Delete Export Orchestration'), ('add_finetuning_model', 'Add Finetuning Model'), ('update_finetuning_model', 'Update Finetuning Model'), ('list_finetuning_model', 'List Finetuning Model'), ('delete_finetuning_model', 'Delete Finetuning Model'), ('add_lean_assistant', 'Add Lean Assistant'), ('update_lean_assistant', 'Update Lean Assistant'), ('list_lean_assistant', 'List Lean Assistant'), ('delete_lean_assistant', 'Delete Lean Assistant'), ('archive_chats', 'Archive Chats'), ('unarchive_chats', 'Unarchive Chats'), ('create_and_use_lean_chats', 'Create and Use Lean Chats'), ('remove_lean_chats', 'Remove Lean Chats'), ('archive_lean_chats', 'Archive Lean Chats'), ('unarchive_lean_chats', 'Unarchive Lean Chats'), ('create_and_use_orchestration_chats', 'Create and Use Orchestration Chats'), ('remove_orchestration_chats', 'Remove Orchestration Chats'), ('create_support_tickets', 'Create Support Tickets'), ('list_support_tickets', 'List Support Tickets'), ('update_support_tickets', 'Update Support Tickets'), ('create_user_roles', 'Create User Roles'), ('list_user_roles', 'List User Roles'), ('update_user_roles', 'Update User Roles'), ('delete_user_roles', 'Delete User Roles'), ('create_data_backups', 'Create Data Backups'), ('list_data_backups', 'List Data Backups'), ('delete_data_backups', 'Delete Data Backups'), ('restore_data_backups', 'Restore Data Backups'), ('create_brainstorming_sessions', 'Create Brainstorming Sessions'), ('list_brainstorming_sessions', 'List Brainstorming Sessions'), ('update_brainstorming_sessions', 'Update Brainstorming Sessions'), ('delete_brainstorming_sessions', 'Delete Brainstorming Sessions'), ('create_brainstorming_ideas', 'Create Brainstorming Ideas'), ('delete_brainstorming_ideas', 'Delete Brainstorming Ideas'), ('create_brainstorming_syntheses', 'Create Brainstorming Syntheses'), ('bookmark_brainstorming_ideas', 'Bookmark Brainstorming Ideas')], max_length=255),\n        ),",
        "detail": "apps.user_permissions.migrations.0009_alter_userpermission_permission_type",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.user_permissions.migrations.0010_alter_userpermission_permission_type",
        "description": "apps.user_permissions.migrations.0010_alter_userpermission_permission_type",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user_permissions', '0009_alter_userpermission_permission_type'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='userpermission',\n            name='permission_type',\n            field=models.CharField(choices=[('add_organizations', 'Add Organizations'), ('update_organizations', 'Update Organizations'), ('list_organizations', 'List Organizations'), ('delete_organizations', 'Delete Organizations'), ('add_balance_to_organization', 'Add Balance to Organization'), ('transfer_balance_between_organizations', 'Transfer Balance Between Organizations'), ('add_llm_cores', 'Add LLM Cores'), ('update_llm_cores', 'Update LLM Cores'), ('list_llm_cores', 'List LLM Cores'), ('delete_llm_cores', 'Delete LLM Cores'), ('list_transactions', 'List Transactions'), ('add_users', 'Add Users'), ('update_users', 'Update Users'), ('list_users', 'List Users'), ('delete_users', 'Delete Users'), ('connect_user_to_organization', 'Connect User to Organization'), ('remove_user_from_organization', 'Remove User from Organization'), ('modify_user_permissions', 'Modify User Permissions'), ('list_user_permissions', 'List User Permissions'), ('add_assistants', 'Add Assistants'), ('update_assistants', 'Update Assistants'), ('list_assistants', 'List Assistants'), ('delete_assistants', 'Delete Assistants'), ('create_and_use_chats', 'Create and Use Chats'), ('remove_chats', 'Remove Chats'), ('add_assistant_memories', 'Add Assistant Memories'), ('update_assistant_memories', 'Update Assistant Memories'), ('list_assistant_memories', 'List Assistant Memories'), ('delete_assistant_memories', 'Delete Assistant Memories'), ('add_export_assistant', 'Add Export Assistant'), ('update_export_assistant', 'Update Export Assistant'), ('list_export_assistant', 'List Export Assistant'), ('delete_export_assistant', 'Delete Export Assistant'), ('add_orchestrations', 'Add Orchestrations'), ('update_orchestrations', 'Update Orchestrations'), ('list_orchestrations', 'List Orchestrations'), ('delete_orchestrations', 'Delete Orchestrations'), ('add_file_systems', 'Add File Systems'), ('update_file_systems', 'Update File Systems'), ('list_file_systems', 'List File Systems'), ('delete_file_systems', 'Delete File Systems'), ('add_web_browsers', 'Add Web Browsers'), ('update_web_browsers', 'Update Web Browsers'), ('list_web_browsers', 'List Web Browsers'), ('delete_web_browsers', 'Delete Web Browsers'), ('add_sql_databases', 'Add SQL Databases'), ('update_sql_databases', 'Update SQL Databases'), ('list_sql_databases', 'List SQL Databases'), ('delete_sql_databases', 'Delete SQL Databases'), ('add_nosql_databases', 'Add NoSQL Databases'), ('update_nosql_databases', 'Update NoSQL Databases'), ('list_nosql_databases', 'List NoSQL Databases'), ('delete_nosql_databases', 'Delete NoSQL Databases'), ('add_knowledge_bases', 'Add Knowledge Bases'), ('update_knowledge_bases', 'Update Knowledge Bases'), ('list_knowledge_bases', 'List Knowledge Bases'), ('delete_knowledge_bases', 'Delete Knowledge Bases'), ('add_media_storages', 'Add Media Storages'), ('update_media_storages', 'Update Media Storages'), ('list_media_storages', 'List Media Storages'), ('delete_media_storages', 'Delete Media Storages'), ('add_ml_model_connections', 'Add ML Model Connections'), ('update_ml_model_connections', 'Update ML Model Connections'), ('list_ml_model_connections', 'List ML Model Connections'), ('delete_ml_model_connections', 'Delete ML Model Connections'), ('add_functions', 'Add Functions'), ('update_functions', 'Update Functions'), ('list_functions', 'List Functions'), ('delete_functions', 'Delete Functions'), ('add_apis', 'Add APIs'), ('update_apis', 'Update APIs'), ('list_apis', 'List APIs'), ('delete_apis', 'Delete APIs'), ('add_scripts', 'Add Scripts'), ('update_scripts', 'Update Scripts'), ('list_scripts', 'List Scripts'), ('delete_scripts', 'Delete Scripts'), ('add_scheduled_jobs', 'Add Scheduled Jobs'), ('update_scheduled_jobs', 'Update Scheduled Jobs'), ('list_scheduled_jobs', 'List Scheduled Jobs'), ('delete_scheduled_jobs', 'Delete Scheduled Jobs'), ('add_triggers', 'Add Triggers'), ('update_triggers', 'Update Triggers'), ('list_triggers', 'List Triggers'), ('delete_triggers', 'Delete Triggers'), ('can_generate_images', 'Can Generate Images'), ('can_generate_audio', 'Can Generate Audio'), ('add_integrations', 'Add Integrations'), ('update_integrations', 'Update Integrations'), ('list_integrations', 'List Integrations'), ('delete_integrations', 'Delete Integrations'), ('add_meta_integrations', 'Add Meta Integrations'), ('update_meta_integrations', 'Update Meta Integrations'), ('list_meta_integrations', 'List Meta Integrations'), ('delete_meta_integrations', 'Delete Meta Integrations'), ('add_starred_messages', 'Add Starred Messages'), ('list_starred_messages', 'List Starred Messages'), ('remove_starred_messages', 'Remove Starred Messages'), ('add_template_messages', 'Add Template Messages'), ('list_template_messages', 'List Template Messages'), ('update_template_messages', 'Update Template Messages'), ('remove_template_messages', 'Remove Template Messages'), ('add_data_security', 'Add Data Security'), ('update_data_security', 'Update Data Security'), ('list_data_security', 'List Data Security'), ('delete_data_security', 'Delete Data Security'), ('add_code_base', 'Add Code Base'), ('update_code_base', 'Update Code Base'), ('list_code_base', 'List Code Base'), ('delete_code_base', 'Delete Code Base'), ('add_code_repository', 'Add Code Repository'), ('update_code_repository', 'Update Code Repository'), ('list_code_repository', 'List Code Repository'), ('delete_code_repository', 'Delete Code Repository'), ('add_knowledge_base_docs', 'Add Knowledge Base Docs'), ('update_knowledge_base_docs', 'Update Knowledge Base Docs'), ('list_knowledge_base_docs', 'List Knowledge Base Docs'), ('delete_knowledge_base_docs', 'Delete Knowledge Base Docs'), ('add_storage_files', 'Add Storage Files'), ('update_storage_files', 'Update Storage Files'), ('list_storage_files', 'List Storage Files'), ('delete_storage_files', 'Delete Storage Files'), ('add_ml_model_files', 'Add ML Model Files'), ('update_ml_model_files', 'Update ML Model Files'), ('list_ml_model_files', 'List ML Model Files'), ('delete_ml_model_files', 'Delete ML Model Files'), ('add_custom_sql_queries', 'Add Custom SQL Queries'), ('update_custom_sql_queries', 'Update Custom SQL Queries'), ('list_custom_sql_queries', 'List Custom SQL Queries'), ('delete_custom_sql_queries', 'Delete Custom SQL Queries'), ('add_export_leanmod', 'Add Export LeanMod'), ('update_export_leanmod', 'Update Export LeanMod'), ('list_export_leanmod', 'List Export LeanMod'), ('delete_export_leanmod', 'Delete Export LeanMod'), ('add_expert_networks', 'Add Expert Networks'), ('update_expert_networks', 'Update Expert Networks'), ('list_expert_networks', 'List Expert Networks'), ('delete_expert_networks', 'Delete Expert Networks'), ('add_export_orchestration', 'Add Export Orchestration'), ('update_export_orchestration', 'Update Export Orchestration'), ('list_export_orchestration', 'List Export Orchestration'), ('delete_export_orchestration', 'Delete Export Orchestration'), ('add_finetuning_model', 'Add Finetuning Model'), ('update_finetuning_model', 'Update Finetuning Model'), ('list_finetuning_model', 'List Finetuning Model'), ('delete_finetuning_model', 'Delete Finetuning Model'), ('add_lean_assistant', 'Add Lean Assistant'), ('update_lean_assistant', 'Update Lean Assistant'), ('list_lean_assistant', 'List Lean Assistant'), ('delete_lean_assistant', 'Delete Lean Assistant'), ('archive_chats', 'Archive Chats'), ('unarchive_chats', 'Unarchive Chats'), ('create_and_use_lean_chats', 'Create and Use Lean Chats'), ('remove_lean_chats', 'Remove Lean Chats'), ('archive_lean_chats', 'Archive Lean Chats'), ('unarchive_lean_chats', 'Unarchive Lean Chats'), ('create_and_use_orchestration_chats', 'Create and Use Orchestration Chats'), ('remove_orchestration_chats', 'Remove Orchestration Chats'), ('create_support_tickets', 'Create Support Tickets'), ('list_support_tickets', 'List Support Tickets'), ('update_support_tickets', 'Update Support Tickets'), ('create_user_roles', 'Create User Roles'), ('list_user_roles', 'List User Roles'), ('update_user_roles', 'Update User Roles'), ('delete_user_roles', 'Delete User Roles'), ('create_data_backups', 'Create Data Backups'), ('list_data_backups', 'List Data Backups'), ('delete_data_backups', 'Delete Data Backups'), ('restore_data_backups', 'Restore Data Backups'), ('create_brainstorming_sessions', 'Create Brainstorming Sessions'), ('list_brainstorming_sessions', 'List Brainstorming Sessions'), ('update_brainstorming_sessions', 'Update Brainstorming Sessions'), ('delete_brainstorming_sessions', 'Delete Brainstorming Sessions'), ('create_brainstorming_ideas', 'Create Brainstorming Ideas'), ('delete_brainstorming_ideas', 'Delete Brainstorming Ideas'), ('create_brainstorming_syntheses', 'Create Brainstorming Syntheses'), ('bookmark_brainstorming_ideas', 'Bookmark Brainstorming Ideas'), ('create_video_generator_connections', 'Create Video Generator Connections'), ('list_video_generator_connections', 'List Video Generator Connections'), ('update_video_generator_connections', 'Update Video Generator Connections'), ('delete_video_generator_connections', 'Delete Video Generator Connections')], max_length=255),\n        ),",
        "detail": "apps.user_permissions.migrations.0010_alter_userpermission_permission_type",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.user_permissions.migrations.0011_alter_userpermission_permission_type",
        "description": "apps.user_permissions.migrations.0011_alter_userpermission_permission_type",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user_permissions', '0010_alter_userpermission_permission_type'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='userpermission',\n            name='permission_type',\n            field=models.CharField(choices=[('add_organizations', 'Add Organizations'), ('update_organizations', 'Update Organizations'), ('list_organizations', 'List Organizations'), ('delete_organizations', 'Delete Organizations'), ('add_balance_to_organization', 'Add Balance to Organization'), ('transfer_balance_between_organizations', 'Transfer Balance Between Organizations'), ('add_llm_cores', 'Add LLM Cores'), ('update_llm_cores', 'Update LLM Cores'), ('list_llm_cores', 'List LLM Cores'), ('delete_llm_cores', 'Delete LLM Cores'), ('list_transactions', 'List Transactions'), ('add_users', 'Add Users'), ('update_users', 'Update Users'), ('list_users', 'List Users'), ('delete_users', 'Delete Users'), ('connect_user_to_organization', 'Connect User to Organization'), ('remove_user_from_organization', 'Remove User from Organization'), ('modify_user_permissions', 'Modify User Permissions'), ('list_user_permissions', 'List User Permissions'), ('add_assistants', 'Add Assistants'), ('update_assistants', 'Update Assistants'), ('list_assistants', 'List Assistants'), ('delete_assistants', 'Delete Assistants'), ('add_harmoniq_agents', 'Add Harmoniq Agents'), ('update_harmoniq_agents', 'Update Harmoniq Agents'), ('list_harmoniq_agents', 'List Harmoniq Agents'), ('delete_harmoniq_agents', 'Delete Harmoniq Agents'), ('chat_with_harmoniq_agents', 'Chat with Harmoniq Agents'), ('create_and_use_chats', 'Create and Use Chats'), ('remove_chats', 'Remove Chats'), ('add_assistant_memories', 'Add Assistant Memories'), ('update_assistant_memories', 'Update Assistant Memories'), ('list_assistant_memories', 'List Assistant Memories'), ('delete_assistant_memories', 'Delete Assistant Memories'), ('add_export_assistant', 'Add Export Assistant'), ('update_export_assistant', 'Update Export Assistant'), ('list_export_assistant', 'List Export Assistant'), ('delete_export_assistant', 'Delete Export Assistant'), ('add_orchestrations', 'Add Orchestrations'), ('update_orchestrations', 'Update Orchestrations'), ('list_orchestrations', 'List Orchestrations'), ('delete_orchestrations', 'Delete Orchestrations'), ('add_file_systems', 'Add File Systems'), ('update_file_systems', 'Update File Systems'), ('list_file_systems', 'List File Systems'), ('delete_file_systems', 'Delete File Systems'), ('add_web_browsers', 'Add Web Browsers'), ('update_web_browsers', 'Update Web Browsers'), ('list_web_browsers', 'List Web Browsers'), ('delete_web_browsers', 'Delete Web Browsers'), ('add_sql_databases', 'Add SQL Databases'), ('update_sql_databases', 'Update SQL Databases'), ('list_sql_databases', 'List SQL Databases'), ('delete_sql_databases', 'Delete SQL Databases'), ('add_nosql_databases', 'Add NoSQL Databases'), ('update_nosql_databases', 'Update NoSQL Databases'), ('list_nosql_databases', 'List NoSQL Databases'), ('delete_nosql_databases', 'Delete NoSQL Databases'), ('add_knowledge_bases', 'Add Knowledge Bases'), ('update_knowledge_bases', 'Update Knowledge Bases'), ('list_knowledge_bases', 'List Knowledge Bases'), ('delete_knowledge_bases', 'Delete Knowledge Bases'), ('add_media_storages', 'Add Media Storages'), ('update_media_storages', 'Update Media Storages'), ('list_media_storages', 'List Media Storages'), ('delete_media_storages', 'Delete Media Storages'), ('add_ml_model_connections', 'Add ML Model Connections'), ('update_ml_model_connections', 'Update ML Model Connections'), ('list_ml_model_connections', 'List ML Model Connections'), ('delete_ml_model_connections', 'Delete ML Model Connections'), ('add_functions', 'Add Functions'), ('update_functions', 'Update Functions'), ('list_functions', 'List Functions'), ('delete_functions', 'Delete Functions'), ('add_apis', 'Add APIs'), ('update_apis', 'Update APIs'), ('list_apis', 'List APIs'), ('delete_apis', 'Delete APIs'), ('add_scripts', 'Add Scripts'), ('update_scripts', 'Update Scripts'), ('list_scripts', 'List Scripts'), ('delete_scripts', 'Delete Scripts'), ('add_scheduled_jobs', 'Add Scheduled Jobs'), ('update_scheduled_jobs', 'Update Scheduled Jobs'), ('list_scheduled_jobs', 'List Scheduled Jobs'), ('delete_scheduled_jobs', 'Delete Scheduled Jobs'), ('add_triggers', 'Add Triggers'), ('update_triggers', 'Update Triggers'), ('list_triggers', 'List Triggers'), ('delete_triggers', 'Delete Triggers'), ('can_generate_images', 'Can Generate Images'), ('can_generate_audio', 'Can Generate Audio'), ('add_integrations', 'Add Integrations'), ('update_integrations', 'Update Integrations'), ('list_integrations', 'List Integrations'), ('delete_integrations', 'Delete Integrations'), ('add_meta_integrations', 'Add Meta Integrations'), ('update_meta_integrations', 'Update Meta Integrations'), ('list_meta_integrations', 'List Meta Integrations'), ('delete_meta_integrations', 'Delete Meta Integrations'), ('add_starred_messages', 'Add Starred Messages'), ('list_starred_messages', 'List Starred Messages'), ('remove_starred_messages', 'Remove Starred Messages'), ('add_template_messages', 'Add Template Messages'), ('list_template_messages', 'List Template Messages'), ('update_template_messages', 'Update Template Messages'), ('remove_template_messages', 'Remove Template Messages'), ('add_data_security', 'Add Data Security'), ('update_data_security', 'Update Data Security'), ('list_data_security', 'List Data Security'), ('delete_data_security', 'Delete Data Security'), ('add_code_base', 'Add Code Base'), ('update_code_base', 'Update Code Base'), ('list_code_base', 'List Code Base'), ('delete_code_base', 'Delete Code Base'), ('add_code_repository', 'Add Code Repository'), ('update_code_repository', 'Update Code Repository'), ('list_code_repository', 'List Code Repository'), ('delete_code_repository', 'Delete Code Repository'), ('add_knowledge_base_docs', 'Add Knowledge Base Docs'), ('update_knowledge_base_docs', 'Update Knowledge Base Docs'), ('list_knowledge_base_docs', 'List Knowledge Base Docs'), ('delete_knowledge_base_docs', 'Delete Knowledge Base Docs'), ('add_storage_files', 'Add Storage Files'), ('update_storage_files', 'Update Storage Files'), ('list_storage_files', 'List Storage Files'), ('delete_storage_files', 'Delete Storage Files'), ('add_ml_model_files', 'Add ML Model Files'), ('update_ml_model_files', 'Update ML Model Files'), ('list_ml_model_files', 'List ML Model Files'), ('delete_ml_model_files', 'Delete ML Model Files'), ('add_custom_sql_queries', 'Add Custom SQL Queries'), ('update_custom_sql_queries', 'Update Custom SQL Queries'), ('list_custom_sql_queries', 'List Custom SQL Queries'), ('delete_custom_sql_queries', 'Delete Custom SQL Queries'), ('add_export_leanmod', 'Add Export LeanMod'), ('update_export_leanmod', 'Update Export LeanMod'), ('list_export_leanmod', 'List Export LeanMod'), ('delete_export_leanmod', 'Delete Export LeanMod'), ('add_expert_networks', 'Add Expert Networks'), ('update_expert_networks', 'Update Expert Networks'), ('list_expert_networks', 'List Expert Networks'), ('delete_expert_networks', 'Delete Expert Networks'), ('add_export_orchestration', 'Add Export Orchestration'), ('update_export_orchestration', 'Update Export Orchestration'), ('list_export_orchestration', 'List Export Orchestration'), ('delete_export_orchestration', 'Delete Export Orchestration'), ('add_finetuning_model', 'Add Finetuning Model'), ('update_finetuning_model', 'Update Finetuning Model'), ('list_finetuning_model', 'List Finetuning Model'), ('delete_finetuning_model', 'Delete Finetuning Model'), ('add_lean_assistant', 'Add Lean Assistant'), ('update_lean_assistant', 'Update Lean Assistant'), ('list_lean_assistant', 'List Lean Assistant'), ('delete_lean_assistant', 'Delete Lean Assistant'), ('archive_chats', 'Archive Chats'), ('unarchive_chats', 'Unarchive Chats'), ('create_and_use_lean_chats', 'Create and Use Lean Chats'), ('remove_lean_chats', 'Remove Lean Chats'), ('archive_lean_chats', 'Archive Lean Chats'), ('unarchive_lean_chats', 'Unarchive Lean Chats'), ('create_and_use_orchestration_chats', 'Create and Use Orchestration Chats'), ('remove_orchestration_chats', 'Remove Orchestration Chats'), ('create_support_tickets', 'Create Support Tickets'), ('list_support_tickets', 'List Support Tickets'), ('update_support_tickets', 'Update Support Tickets'), ('create_user_roles', 'Create User Roles'), ('list_user_roles', 'List User Roles'), ('update_user_roles', 'Update User Roles'), ('delete_user_roles', 'Delete User Roles'), ('create_data_backups', 'Create Data Backups'), ('list_data_backups', 'List Data Backups'), ('delete_data_backups', 'Delete Data Backups'), ('restore_data_backups', 'Restore Data Backups'), ('create_brainstorming_sessions', 'Create Brainstorming Sessions'), ('list_brainstorming_sessions', 'List Brainstorming Sessions'), ('update_brainstorming_sessions', 'Update Brainstorming Sessions'), ('delete_brainstorming_sessions', 'Delete Brainstorming Sessions'), ('create_brainstorming_ideas', 'Create Brainstorming Ideas'), ('delete_brainstorming_ideas', 'Delete Brainstorming Ideas'), ('create_brainstorming_syntheses', 'Create Brainstorming Syntheses'), ('bookmark_brainstorming_ideas', 'Bookmark Brainstorming Ideas'), ('create_video_generator_connections', 'Create Video Generator Connections'), ('list_video_generator_connections', 'List Video Generator Connections'), ('update_video_generator_connections', 'Update Video Generator Connections'), ('delete_video_generator_connections', 'Delete Video Generator Connections')], max_length=255),\n        ),",
        "detail": "apps.user_permissions.migrations.0011_alter_userpermission_permission_type",
        "documentation": {}
    },
    {
        "label": "ActiveUserPermissionManager",
        "kind": 6,
        "importPath": "apps.user_permissions.models.user_permission_models",
        "description": "apps.user_permissions.models.user_permission_models",
        "peekOfCode": "class ActiveUserPermissionManager(models.Manager):\n    def get_queryset(self):\n        return super().get_queryset().filter(is_active=True)\nclass UserPermission(models.Model):\n    user = models.ForeignKey(\"auth.User\", on_delete=models.CASCADE, related_name=\"permissions\", null=True)\n    permission_type = models.CharField(max_length=255, choices=PERMISSION_TYPES)\n    is_active = models.BooleanField(default=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    objects = models.Manager()  # The default manager.\n    active_permissions = ActiveUserPermissionManager()  # Custom manager for active permissions.",
        "detail": "apps.user_permissions.models.user_permission_models",
        "documentation": {}
    },
    {
        "label": "UserPermission",
        "kind": 6,
        "importPath": "apps.user_permissions.models.user_permission_models",
        "description": "apps.user_permissions.models.user_permission_models",
        "peekOfCode": "class UserPermission(models.Model):\n    user = models.ForeignKey(\"auth.User\", on_delete=models.CASCADE, related_name=\"permissions\", null=True)\n    permission_type = models.CharField(max_length=255, choices=PERMISSION_TYPES)\n    is_active = models.BooleanField(default=True)\n    created_at = models.DateTimeField(auto_now_add=True)\n    objects = models.Manager()  # The default manager.\n    active_permissions = ActiveUserPermissionManager()  # Custom manager for active permissions.\n    class Meta:\n        verbose_name = \"User Permission\"\n        verbose_name_plural = \"User Permissions\"",
        "detail": "apps.user_permissions.models.user_permission_models",
        "documentation": {}
    },
    {
        "label": "UserRole",
        "kind": 6,
        "importPath": "apps.user_permissions.models.user_roles_models",
        "description": "apps.user_permissions.models.user_roles_models",
        "peekOfCode": "class UserRole(models.Model):\n    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE)\n    role_name = models.CharField(max_length=1000)\n    role_description = models.TextField(null=True, blank=True)\n    role_permissions = models.JSONField(default=list)\n    users = models.ManyToManyField(User, related_name='roles')\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    created_by_user = models.ForeignKey('auth.User', on_delete=models.SET_NULL, null=True, related_name='created_roles')\n    class Meta:",
        "detail": "apps.user_permissions.models.user_roles_models",
        "documentation": {}
    },
    {
        "label": "fixture_user_permissions_init",
        "kind": 2,
        "importPath": "apps.user_permissions.tests.conftest",
        "description": "apps.user_permissions.tests.conftest",
        "peekOfCode": "def fixture_user_permissions_init():\n    return True",
        "detail": "apps.user_permissions.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_user_permissions_test_forms",
        "kind": 2,
        "importPath": "apps.user_permissions.tests.test_forms",
        "description": "apps.user_permissions.tests.test_forms",
        "peekOfCode": "def test_init_user_permissions_test_forms():\n    assert True",
        "detail": "apps.user_permissions.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_user_permissions_test_models",
        "kind": 2,
        "importPath": "apps.user_permissions.tests.test_models",
        "description": "apps.user_permissions.tests.test_models",
        "peekOfCode": "def test_init_user_permissions_test_models():\n    assert True\nfrom django.contrib.auth import get_user_model\nUser = get_user_model()",
        "detail": "apps.user_permissions.tests.test_models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "apps.user_permissions.tests.test_models",
        "description": "apps.user_permissions.tests.test_models",
        "peekOfCode": "User = get_user_model()",
        "detail": "apps.user_permissions.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_user_permissions_test_utils",
        "kind": 2,
        "importPath": "apps.user_permissions.tests.test_utils",
        "description": "apps.user_permissions.tests.test_utils",
        "peekOfCode": "def test_init_user_permissions_test_utils():\n    assert True",
        "detail": "apps.user_permissions.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_user_permissions_test_views",
        "kind": 2,
        "importPath": "apps.user_permissions.tests.test_views",
        "description": "apps.user_permissions.tests.test_views",
        "peekOfCode": "def test_init_user_permissions_test_views():\n    assert True",
        "detail": "apps.user_permissions.tests.test_views",
        "documentation": {}
    },
    {
        "label": "PermissionNames",
        "kind": 6,
        "importPath": "apps.user_permissions.utils.constant_utils",
        "description": "apps.user_permissions.utils.constant_utils",
        "peekOfCode": "class PermissionNames:\n    ADD_LLM_CORES = 'add_llm_cores'\n    UPDATE_LLM_CORES = 'update_llm_cores'\n    LIST_LLM_CORES = 'list_llm_cores'\n    DELETE_LLM_CORES = 'delete_llm_cores'\n    ADD_ORGANIZATIONS = 'add_organizations'\n    UPDATE_ORGANIZATIONS = 'update_organizations'\n    LIST_ORGANIZATIONS = 'list_organizations'\n    DELETE_ORGANIZATIONS = 'delete_organizations'\n    ADD_BALANCE_TO_ORGANIZATION = 'add_balance_to_organization'",
        "detail": "apps.user_permissions.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "PredefinedRolePackages",
        "kind": 6,
        "importPath": "apps.user_permissions.utils.constant_utils",
        "description": "apps.user_permissions.utils.constant_utils",
        "peekOfCode": "class PredefinedRolePackages:\n    ADMIN_ALL_PACKAGE = PERMISSION_TYPES\n    READ_ALL_PACKAGE = [\n        ('list_organizations', 'List Organizations'),\n        ('list_llm_cores', 'List LLM Cores'),\n        ('list_transactions', 'List Transactions'),\n        ('list_users', 'List Users'),\n        ('list_user_permissions', 'List User Permissions'),\n        ('list_assistants', 'List Assistants'),\n        ('list_assistant_memories', 'List Assistant Memories'),",
        "detail": "apps.user_permissions.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "PERMISSION_TYPES",
        "kind": 5,
        "importPath": "apps.user_permissions.utils.constant_utils",
        "description": "apps.user_permissions.utils.constant_utils",
        "peekOfCode": "PERMISSION_TYPES = [\n    ('add_organizations', 'Add Organizations'),\n    ('update_organizations', 'Update Organizations'),\n    ('list_organizations', 'List Organizations'),\n    ('delete_organizations', 'Delete Organizations'),\n    ('add_balance_to_organization', 'Add Balance to Organization'),\n    ('transfer_balance_between_organizations', 'Transfer Balance Between Organizations'),\n    ('add_llm_cores', 'Add LLM Cores'),\n    ('update_llm_cores', 'Update LLM Cores'),\n    ('list_llm_cores', 'List LLM Cores'),",
        "detail": "apps.user_permissions.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "USER_PERMISSIONS_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.user_permissions.utils.constant_utils",
        "description": "apps.user_permissions.utils.constant_utils",
        "peekOfCode": "USER_PERMISSIONS_ADMIN_LIST = (\"user\", \"permission_type\", \"created_at\",)\nUSER_PERMISSIONS_ADMIN_FILTER = (\"user\", \"permission_type\", \"created_at\")\nUSER_PERMISSIONS_ADMIN_SEARCH = (\"user\", \"permission_type\")\nUSER_ROLES_ADMIN_LIST = (\n    \"organization\",\n    \"role_name\",\n    \"role_description\",\n    \"created_at\",\n    \"updated_at\",\n)",
        "detail": "apps.user_permissions.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "USER_PERMISSIONS_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.user_permissions.utils.constant_utils",
        "description": "apps.user_permissions.utils.constant_utils",
        "peekOfCode": "USER_PERMISSIONS_ADMIN_FILTER = (\"user\", \"permission_type\", \"created_at\")\nUSER_PERMISSIONS_ADMIN_SEARCH = (\"user\", \"permission_type\")\nUSER_ROLES_ADMIN_LIST = (\n    \"organization\",\n    \"role_name\",\n    \"role_description\",\n    \"created_at\",\n    \"updated_at\",\n)\nUSER_ROLES_ADMIN_FILTER = (",
        "detail": "apps.user_permissions.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "USER_PERMISSIONS_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.user_permissions.utils.constant_utils",
        "description": "apps.user_permissions.utils.constant_utils",
        "peekOfCode": "USER_PERMISSIONS_ADMIN_SEARCH = (\"user\", \"permission_type\")\nUSER_ROLES_ADMIN_LIST = (\n    \"organization\",\n    \"role_name\",\n    \"role_description\",\n    \"created_at\",\n    \"updated_at\",\n)\nUSER_ROLES_ADMIN_FILTER = (\n    \"organization\",",
        "detail": "apps.user_permissions.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "USER_ROLES_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.user_permissions.utils.constant_utils",
        "description": "apps.user_permissions.utils.constant_utils",
        "peekOfCode": "USER_ROLES_ADMIN_LIST = (\n    \"organization\",\n    \"role_name\",\n    \"role_description\",\n    \"created_at\",\n    \"updated_at\",\n)\nUSER_ROLES_ADMIN_FILTER = (\n    \"organization\",\n    \"created_at\",",
        "detail": "apps.user_permissions.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "USER_ROLES_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.user_permissions.utils.constant_utils",
        "description": "apps.user_permissions.utils.constant_utils",
        "peekOfCode": "USER_ROLES_ADMIN_FILTER = (\n    \"organization\",\n    \"created_at\",\n    \"updated_at\",\n)\nUSER_ROLES_ADMIN_SEARCH = (\n    \"organization__name\",\n    \"role_name\",\n    \"role_description\",\n)",
        "detail": "apps.user_permissions.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "USER_ROLES_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.user_permissions.utils.constant_utils",
        "description": "apps.user_permissions.utils.constant_utils",
        "peekOfCode": "USER_ROLES_ADMIN_SEARCH = (\n    \"organization__name\",\n    \"role_name\",\n    \"role_description\",\n)",
        "detail": "apps.user_permissions.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "get_permissions_grouped",
        "kind": 2,
        "importPath": "apps.user_permissions.utils.function_utils",
        "description": "apps.user_permissions.utils.function_utils",
        "peekOfCode": "def get_permissions_grouped():\n    permissions_grouped = {\n        \"Organization Permissions\": [\n            ('add_organizations', 'Add Organizations'),\n            ('update_organizations', 'Update Organizations'),\n            ('list_organizations', 'List Organizations'),\n            ('delete_organizations', 'Delete Organizations'),\n            ('add_balance_to_organization', 'Add Balance to Organization'),\n            ('transfer_balance_between_organizations', 'Transfer Balance Between Organizations'),\n        ],",
        "detail": "apps.user_permissions.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "PermissionView_PermissionCreate",
        "kind": 6,
        "importPath": "apps.user_permissions.views.permission.create_permission_views",
        "description": "apps.user_permissions.views.permission.create_permission_views",
        "peekOfCode": "class PermissionView_PermissionCreate(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['organizations'] = Organization.objects.filter(users__in=[self.request.user])\n        context['users'] = []\n        context['permissions'] = get_permissions_grouped()\n        if 'organization' in self.request.GET:\n            org_id = self.request.GET.get('organization')\n            org = get_object_or_404(Organization, id=org_id)\n            context['selected_organization'] = org",
        "detail": "apps.user_permissions.views.permission.create_permission_views",
        "documentation": {}
    },
    {
        "label": "PermissionView_PermissionList",
        "kind": 6,
        "importPath": "apps.user_permissions.views.permission.list_permissions_views",
        "description": "apps.user_permissions.views.permission.list_permissions_views",
        "peekOfCode": "class PermissionView_PermissionList(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_USER_PERMISSIONS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_USER_PERMISSIONS):\n            messages.error(self.request, \"You do not have permission to view user permissions.\")\n            return context\n        ##############################",
        "detail": "apps.user_permissions.views.permission.list_permissions_views",
        "documentation": {}
    },
    {
        "label": "PermissionView_UserRoleCreate",
        "kind": 6,
        "importPath": "apps.user_permissions.views.user_role.create_user_role_views",
        "description": "apps.user_permissions.views.user_role.create_user_role_views",
        "peekOfCode": "class PermissionView_UserRoleCreate(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        form = UserRoleForm()\n        orgs = Organization.objects.filter(users__in=[self.request.user])\n        available_permissions = PERMISSION_TYPES\n        context['form'] = form\n        context['organizations'] = orgs\n        context['available_permissions'] = available_permissions\n        return context",
        "detail": "apps.user_permissions.views.user_role.create_user_role_views",
        "documentation": {}
    },
    {
        "label": "PermissionView_UserRoleDelete",
        "kind": 6,
        "importPath": "apps.user_permissions.views.user_role.delete_user_role_views",
        "description": "apps.user_permissions.views.user_role.delete_user_role_views",
        "peekOfCode": "class PermissionView_UserRoleDelete(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        role_id = kwargs.get(\"pk\")\n        role = get_object_or_404(UserRole, pk=role_id, organization__users__in=[self.request.user])\n        context.update({\"role\": role})\n        return context\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - DELETE_USER_ROLES",
        "detail": "apps.user_permissions.views.user_role.delete_user_role_views",
        "documentation": {}
    },
    {
        "label": "PermissionView_UserRoleList",
        "kind": 6,
        "importPath": "apps.user_permissions.views.user_role.list_user_roles_views",
        "description": "apps.user_permissions.views.user_role.list_user_roles_views",
        "peekOfCode": "class PermissionView_UserRoleList(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_USER_ROLES\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_USER_ROLES):\n            messages.error(self.request, \"You do not have permission to list user roles.\")\n            return context\n        ##############################",
        "detail": "apps.user_permissions.views.user_role.list_user_roles_views",
        "documentation": {}
    },
    {
        "label": "PermissionView_UserRoleManage",
        "kind": 6,
        "importPath": "apps.user_permissions.views.user_role.manage_user_roles_views",
        "description": "apps.user_permissions.views.user_role.manage_user_roles_views",
        "peekOfCode": "class PermissionView_UserRoleManage(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['organizations'] = Organization.objects.prefetch_related('users')\n        context['roles'] = UserRole.objects.filter(organization__users__in=[self.request.user])\n        return context\n    def _update_user_permissions(self, user, role, add=True):\n        for perm_code in role.role_permissions:\n            if add:\n                try:",
        "detail": "apps.user_permissions.views.user_role.manage_user_roles_views",
        "documentation": {}
    },
    {
        "label": "PermissionView_UserRoleUpdate",
        "kind": 6,
        "importPath": "apps.user_permissions.views.user_role.update_user_role_views",
        "description": "apps.user_permissions.views.user_role.update_user_role_views",
        "peekOfCode": "class PermissionView_UserRoleUpdate(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        role_id = kwargs.get('pk')\n        role = get_object_or_404(UserRole, pk=role_id)\n        form = UserRoleForm(instance=role)\n        orgs = Organization.objects.filter(users__in=[self.request.user])\n        available_permissions = PERMISSION_TYPES\n        selected_permissions = role.role_permissions\n        context['role'] = role",
        "detail": "apps.user_permissions.views.user_role.update_user_role_views",
        "documentation": {}
    },
    {
        "label": "UserPermissionsConfig",
        "kind": 6,
        "importPath": "apps.user_permissions.apps",
        "description": "apps.user_permissions.apps",
        "peekOfCode": "class UserPermissionsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.user_permissions'",
        "detail": "apps.user_permissions.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.user_permissions.urls",
        "description": "apps.user_permissions.urls",
        "peekOfCode": "app_name = \"user_permissions\"\nurlpatterns = [\n    path('add/', PermissionView_PermissionCreate.as_view(\n        template_name=\"user_permissions/permissions/add_permissions.html\"), name=\"add_permissions\"),\n    path('list/', PermissionView_PermissionList.as_view(\n        template_name=\"user_permissions/permissions/list_permissions.html\"), name=\"list_permissions\"),\n    path('roles/add/', PermissionView_UserRoleCreate.as_view(\n        template_name=\"user_permissions/roles/add_user_role.html\"), name=\"add_user_role\"),\n    path('roles/list/', PermissionView_UserRoleList.as_view(\n        template_name=\"user_permissions/roles/list_user_roles.html\"), name=\"list_user_roles\"),",
        "detail": "apps.user_permissions.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.user_permissions.urls",
        "description": "apps.user_permissions.urls",
        "peekOfCode": "urlpatterns = [\n    path('add/', PermissionView_PermissionCreate.as_view(\n        template_name=\"user_permissions/permissions/add_permissions.html\"), name=\"add_permissions\"),\n    path('list/', PermissionView_PermissionList.as_view(\n        template_name=\"user_permissions/permissions/list_permissions.html\"), name=\"list_permissions\"),\n    path('roles/add/', PermissionView_UserRoleCreate.as_view(\n        template_name=\"user_permissions/roles/add_user_role.html\"), name=\"add_user_role\"),\n    path('roles/list/', PermissionView_UserRoleList.as_view(\n        template_name=\"user_permissions/roles/list_user_roles.html\"), name=\"list_user_roles\"),\n    path('roles/manage/', PermissionView_UserRoleManage.as_view(",
        "detail": "apps.user_permissions.urls",
        "documentation": {}
    },
    {
        "label": "CreditCardForm",
        "kind": 6,
        "importPath": "apps.user_profile_management.forms.credit_card.credit_card_forms",
        "description": "apps.user_profile_management.forms.credit_card.credit_card_forms",
        "peekOfCode": "class CreditCardForm(forms.ModelForm):\n    class Meta:\n        model = UserCreditCard\n        fields = ['name_on_card', 'card_number', 'card_expiration_month', 'card_expiration_year', 'card_cvc']",
        "detail": "apps.user_profile_management.forms.credit_card.credit_card_forms",
        "documentation": {}
    },
    {
        "label": "ProfileUpdateForm",
        "kind": 6,
        "importPath": "apps.user_profile_management.forms.profile.profile_update_forms",
        "description": "apps.user_profile_management.forms.profile.profile_update_forms",
        "peekOfCode": "class ProfileUpdateForm(forms.ModelForm):\n    class Meta:\n        model = Profile\n        fields = ['first_name', 'last_name', 'email', 'phone_number', 'birthdate',\n                  'address', 'city', 'country', 'postal_code', 'profile_picture']",
        "detail": "apps.user_profile_management.forms.profile.profile_update_forms",
        "documentation": {}
    },
    {
        "label": "fixture_user_profile_management_init",
        "kind": 2,
        "importPath": "apps.user_profile_management.tests.conftest",
        "description": "apps.user_profile_management.tests.conftest",
        "peekOfCode": "def fixture_user_profile_management_init():\n    return True",
        "detail": "apps.user_profile_management.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_user_profile_management_test_forms",
        "kind": 2,
        "importPath": "apps.user_profile_management.tests.test_forms",
        "description": "apps.user_profile_management.tests.test_forms",
        "peekOfCode": "def test_init_user_profile_management_test_forms():\n    assert True",
        "detail": "apps.user_profile_management.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_user_profile_management_test_models",
        "kind": 2,
        "importPath": "apps.user_profile_management.tests.test_models",
        "description": "apps.user_profile_management.tests.test_models",
        "peekOfCode": "def test_init_user_profile_management_test_models():\n    assert True",
        "detail": "apps.user_profile_management.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_user_profile_management_test_utils",
        "kind": 2,
        "importPath": "apps.user_profile_management.tests.test_utils",
        "description": "apps.user_profile_management.tests.test_utils",
        "peekOfCode": "def test_init_user_profile_management_test_utils():\n    assert True",
        "detail": "apps.user_profile_management.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_user_profile_management_test_views",
        "kind": 2,
        "importPath": "apps.user_profile_management.tests.test_views",
        "description": "apps.user_profile_management.tests.test_views",
        "peekOfCode": "def test_init_user_profile_management_test_views():\n    assert True",
        "detail": "apps.user_profile_management.tests.test_views",
        "documentation": {}
    },
    {
        "label": "infer_credit_card_type",
        "kind": 2,
        "importPath": "apps.user_profile_management.utils.function_utils",
        "description": "apps.user_profile_management.utils.function_utils",
        "peekOfCode": "def infer_credit_card_type(card_number):\n    card_types = {\n        'visa': r'^4[0-9]{12}(?:[0-9]{3})?$',\n        'mastercard': r'^5[1-5][0-9]{14}$',\n        'amex': r'^3[47][0-9]{13}$',\n    }\n    for card_type, pattern in card_types.items():\n        if re.match(pattern, card_number):\n            return card_type\n    return \"visa\"",
        "detail": "apps.user_profile_management.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "UserProfileView_List",
        "kind": 6,
        "importPath": "apps.user_profile_management.views.list_user_profile_views",
        "description": "apps.user_profile_management.views.list_user_profile_views",
        "peekOfCode": "class UserProfileView_List(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['countries'] = COUNTRIES\n        context['profile_form'] = ProfileUpdateForm(instance=self.request.user.profile)\n        context['credit_card_form'] = CreditCardForm()\n        saved_cards = self.request.user.credit_cards.all()\n        cards_with_types = []\n        for card in saved_cards:\n            card_type = infer_credit_card_type(card.card_number)",
        "detail": "apps.user_profile_management.views.list_user_profile_views",
        "documentation": {}
    },
    {
        "label": "UserProfileView_CreditCardRemove",
        "kind": 6,
        "importPath": "apps.user_profile_management.views.remove_credit_card_views",
        "description": "apps.user_profile_management.views.remove_credit_card_views",
        "peekOfCode": "class UserProfileView_CreditCardRemove(LoginRequiredMixin, TemplateView):\n    def post(self, request, card_id, *args, **kwargs):\n        try:\n            card = request.user.credit_cards.get(id=card_id)\n            card.delete()\n            messages.success(request, 'Credit card removed successfully.')\n        except UserCreditCard.DoesNotExist:\n            messages.error(request, 'Credit card not found.')\n        return redirect('user_profile_management:list')",
        "detail": "apps.user_profile_management.views.remove_credit_card_views",
        "documentation": {}
    },
    {
        "label": "UserProfileView_ResetPassword",
        "kind": 6,
        "importPath": "apps.user_profile_management.views.reset_password_user_profile_views",
        "description": "apps.user_profile_management.views.reset_password_user_profile_views",
        "peekOfCode": "class UserProfileView_ResetPassword(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['pk'] = self.kwargs.get('pk')\n        return context\n    def get(self, request, *args, **kwargs):\n        pk = self.get_context_data()['pk']\n        try:\n            user = User.objects.get(pk=pk)\n            email = user.email",
        "detail": "apps.user_profile_management.views.reset_password_user_profile_views",
        "documentation": {}
    },
    {
        "label": "UserProfileManagementConfig",
        "kind": 6,
        "importPath": "apps.user_profile_management.apps",
        "description": "apps.user_profile_management.apps",
        "peekOfCode": "class UserProfileManagementConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.user_profile_management'",
        "detail": "apps.user_profile_management.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.user_profile_management.urls",
        "description": "apps.user_profile_management.urls",
        "peekOfCode": "app_name = \"user_profile_management\"\nurlpatterns = [\n    path(\"profile/\", UserProfileView_List.as_view(\n        template_name=\"user_profile_management/profiles/user_profile_list.html\"), name=\"list\"),\n    path(\"reset_password/<int:pk>\", UserProfileView_ResetPassword.as_view(\n        template_name=\"user_profile_management/profiles/user_profile_list.html\"), name=\"reset_password\"),\n    path('billing/update/', UserProfileView_List.as_view(\n        template_name=\"user_profile_management/billings/billing.html\"), name='billing'),\n    path('remove_card/<int:card_id>/', UserProfileView_CreditCardRemove.as_view(), name='remove_card'),\n]",
        "detail": "apps.user_profile_management.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.user_profile_management.urls",
        "description": "apps.user_profile_management.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"profile/\", UserProfileView_List.as_view(\n        template_name=\"user_profile_management/profiles/user_profile_list.html\"), name=\"list\"),\n    path(\"reset_password/<int:pk>\", UserProfileView_ResetPassword.as_view(\n        template_name=\"user_profile_management/profiles/user_profile_list.html\"), name=\"reset_password\"),\n    path('billing/update/', UserProfileView_List.as_view(\n        template_name=\"user_profile_management/billings/billing.html\"), name='billing'),\n    path('remove_card/<int:card_id>/', UserProfileView_CreditCardRemove.as_view(), name='remove_card'),\n]",
        "detail": "apps.user_profile_management.urls",
        "documentation": {}
    },
    {
        "label": "initiate_automated_backups",
        "kind": 2,
        "importPath": "apps.user_settings.tasks.automated_backups_tasks",
        "description": "apps.user_settings.tasks.automated_backups_tasks",
        "peekOfCode": "def initiate_automated_backups():\n    users = User.objects.filter(profile__automated_data_backups=True)\n    user_orgs = Organization.objects.filter(users__in=users).distinct()\n    for org in user_orgs:\n        backup_types = BackupTypesNames.as_list()\n        for backup_type in backup_types:\n            try:\n                if backup_type == BackupTypesNames.LLM_MODELS:\n                    sample_number = str(random.randint(10000000, 99999999))\n                    backup_name = f\"PW: {sample_number} | Auto-Backup | LLM Models | {timezone.now().strftime('%Y-%m-%d')}\"",
        "detail": "apps.user_settings.tasks.automated_backups_tasks",
        "documentation": {}
    },
    {
        "label": "fixture_user_settings_init",
        "kind": 2,
        "importPath": "apps.user_settings.tests.conftest",
        "description": "apps.user_settings.tests.conftest",
        "peekOfCode": "def fixture_user_settings_init():\n    return True",
        "detail": "apps.user_settings.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_user_settings_test_forms",
        "kind": 2,
        "importPath": "apps.user_settings.tests.test_forms",
        "description": "apps.user_settings.tests.test_forms",
        "peekOfCode": "def test_init_user_settings_test_forms():\n    assert True",
        "detail": "apps.user_settings.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_user_settings_test_models",
        "kind": 2,
        "importPath": "apps.user_settings.tests.test_models",
        "description": "apps.user_settings.tests.test_models",
        "peekOfCode": "def test_init_user_settings_test_models():\n    assert True",
        "detail": "apps.user_settings.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_user_settings_test_utils",
        "kind": 2,
        "importPath": "apps.user_settings.tests.test_utils",
        "description": "apps.user_settings.tests.test_utils",
        "peekOfCode": "def test_init_user_settings_test_utils():\n    assert True",
        "detail": "apps.user_settings.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_user_settings_test_views",
        "kind": 2,
        "importPath": "apps.user_settings.tests.test_views",
        "description": "apps.user_settings.tests.test_views",
        "peekOfCode": "def test_init_user_settings_test_views():\n    assert True",
        "detail": "apps.user_settings.tests.test_views",
        "documentation": {}
    },
    {
        "label": "SettingsView_ToggleAutoBackups",
        "kind": 6,
        "importPath": "apps.user_settings.views.automated_backups.toggle_automated_backups_views",
        "description": "apps.user_settings.views.automated_backups.toggle_automated_backups_views",
        "peekOfCode": "class SettingsView_ToggleAutoBackups(LoginRequiredMixin, View):\n    def post(self, request, *args, **kwargs):\n        try:\n            user = request.user\n            user.profile.automated_data_backups = not user.profile.automated_data_backups\n            user.profile.save()\n        except Exception as e:\n            messages.error(request, f\"An error occurred while trying to toggle automated backups: {str(e)}\")\n            return redirect('user_settings:settings')\n        messages.success(request,",
        "detail": "apps.user_settings.views.automated_backups.toggle_automated_backups_views",
        "documentation": {}
    },
    {
        "label": "SettingsView_DeleteAllAssistants",
        "kind": 6,
        "importPath": "apps.user_settings.views.deletions.delete_all_assistants_views",
        "description": "apps.user_settings.views.deletions.delete_all_assistants_views",
        "peekOfCode": "class SettingsView_DeleteAllAssistants(View, LoginRequiredMixin):\n    def post(self, request, *args, **kwargs):\n        user = request.user\n        user_agents = Assistant.objects.filter(organization__users__in=[user]).all()\n        confirmation_field = request.POST.get('confirmation', None)\n        if confirmation_field != 'CONFIRM DELETING ALL ASSISTANTS':\n            messages.error(request, \"Invalid confirmation field. Please confirm the deletion by typing \"\n                                    \"exactly 'CONFIRM DELETING ALL ASSISTANTS'.\")\n            return redirect('user_settings:settings')\n        ##############################",
        "detail": "apps.user_settings.views.deletions.delete_all_assistants_views",
        "documentation": {}
    },
    {
        "label": "SettingsView_DeleteAllChats",
        "kind": 6,
        "importPath": "apps.user_settings.views.deletions.delete_all_chats_views",
        "description": "apps.user_settings.views.deletions.delete_all_chats_views",
        "peekOfCode": "class SettingsView_DeleteAllChats(View, LoginRequiredMixin):\n    def post(self, request, *args, **kwargs):\n        user = request.user\n        user_chats = MultimodalChat.objects.filter(organization__users__in=[user]).all()\n        confirmation_field = request.POST.get('confirmation', None)\n        if confirmation_field != 'CONFIRM DELETING ALL CHATS':\n            messages.error(request, \"Invalid confirmation field. Please confirm the deletion by typing \"\n                                    \"exactly 'CONFIRM DELETING ALL CHATS'.\")\n            return redirect('user_settings:settings')\n        ##############################",
        "detail": "apps.user_settings.views.deletions.delete_all_chats_views",
        "documentation": {}
    },
    {
        "label": "SettingsView_DeleteAllCodeRepos",
        "kind": 6,
        "importPath": "apps.user_settings.views.deletions.delete_all_code_repositories_views",
        "description": "apps.user_settings.views.deletions.delete_all_code_repositories_views",
        "peekOfCode": "class SettingsView_DeleteAllCodeRepos(View, LoginRequiredMixin):\n    def post(self, request, *args, **kwargs):\n        user = request.user\n        user_repositories = CodeBaseRepository.objects.filter(\n            knowledge_base__assistant__organization__users__in=[user]).all()\n        confirmation_field = request.POST.get('confirmation', None)\n        if confirmation_field != 'CONFIRM DELETING ALL REPOSITORIES':\n            messages.error(request, \"Invalid confirmation field. Please confirm the deletion by typing \"\n                                    \"exactly 'CONFIRM DELETING ALL REPOSITORIES'.\")\n            return redirect('user_settings:settings')",
        "detail": "apps.user_settings.views.deletions.delete_all_code_repositories_views",
        "documentation": {}
    },
    {
        "label": "SettingsView_DeleteAllCodeStorages",
        "kind": 6,
        "importPath": "apps.user_settings.views.deletions.delete_all_code_storages_views",
        "description": "apps.user_settings.views.deletions.delete_all_code_storages_views",
        "peekOfCode": "class SettingsView_DeleteAllCodeStorages(View, LoginRequiredMixin):\n    def post(self, request, *args, **kwargs):\n        user = request.user\n        user_code_storages = CodeRepositoryStorageConnection.objects.filter(\n            assistant__organization__users__in=[user]).all()\n        confirmation_field = request.POST.get('confirmation', None)\n        if confirmation_field != 'CONFIRM DELETING ALL CODE STORAGES':\n            messages.error(request, \"Invalid confirmation field. Please confirm the deletion by typing \"\n                                    \"exactly 'CONFIRM DELETING ALL CODE STORAGES'.\")\n            return redirect('user_settings:settings')",
        "detail": "apps.user_settings.views.deletions.delete_all_code_storages_views",
        "documentation": {}
    },
    {
        "label": "SettingsView_DeleteAllAPIs",
        "kind": 6,
        "importPath": "apps.user_settings.views.deletions.delete_all_custom_apis_views",
        "description": "apps.user_settings.views.deletions.delete_all_custom_apis_views",
        "peekOfCode": "class SettingsView_DeleteAllAPIs(View, LoginRequiredMixin):\n    def post(self, request, *args, **kwargs):\n        user = request.user\n        user_apis = CustomAPI.objects.filter(created_by_user=user).all()\n        confirmation_field = request.POST.get('confirmation', None)\n        if confirmation_field != 'CONFIRM DELETING ALL APIS':\n            messages.error(request, \"Invalid confirmation field. Please confirm the deletion by typing \"\n                                    \"exactly 'CONFIRM DELETING ALL APIS'.\")\n            return redirect('user_settings:settings')\n        ##############################",
        "detail": "apps.user_settings.views.deletions.delete_all_custom_apis_views",
        "documentation": {}
    },
    {
        "label": "SettingsView_DeleteAllFunctions",
        "kind": 6,
        "importPath": "apps.user_settings.views.deletions.delete_all_custom_functions_views",
        "description": "apps.user_settings.views.deletions.delete_all_custom_functions_views",
        "peekOfCode": "class SettingsView_DeleteAllFunctions(View, LoginRequiredMixin):\n    def post(self, request, *args, **kwargs):\n        user = request.user\n        user_functions = CustomFunction.objects.filter(created_by_user=user).all()\n        confirmation_field = request.POST.get('confirmation', None)\n        if confirmation_field != 'CONFIRM DELETING ALL FUNCTIONS':\n            messages.error(request, \"Invalid confirmation field. Please confirm the deletion by typing \"\n                                    \"exactly 'CONFIRM DELETING ALL FUNCTIONS'.\")\n            return redirect('user_settings:settings')\n        ##############################",
        "detail": "apps.user_settings.views.deletions.delete_all_custom_functions_views",
        "documentation": {}
    },
    {
        "label": "SettingsView_DeleteAllScripts",
        "kind": 6,
        "importPath": "apps.user_settings.views.deletions.delete_all_custom_scripts_views",
        "description": "apps.user_settings.views.deletions.delete_all_custom_scripts_views",
        "peekOfCode": "class SettingsView_DeleteAllScripts(View, LoginRequiredMixin):\n    def post(self, request, *args, **kwargs):\n        user = request.user\n        user_scripts = CustomScript.objects.filter(created_by_user=user).all()\n        confirmation_field = request.POST.get('confirmation', None)\n        if confirmation_field != 'CONFIRM DELETING ALL SCRIPTS':\n            messages.error(request, \"Invalid confirmation field. Please confirm the deletion by typing \"\n                                    \"exactly 'CONFIRM DELETING ALL SCRIPTS'.\")\n            return redirect('user_settings:settings')\n        ##############################",
        "detail": "apps.user_settings.views.deletions.delete_all_custom_scripts_views",
        "documentation": {}
    },
    {
        "label": "SettingsView_DeleteAllSQLQueries",
        "kind": 6,
        "importPath": "apps.user_settings.views.deletions.delete_all_custom_sql_queries_views",
        "description": "apps.user_settings.views.deletions.delete_all_custom_sql_queries_views",
        "peekOfCode": "class SettingsView_DeleteAllSQLQueries(View, LoginRequiredMixin):\n    def post(self, request, *args, **kwargs):\n        user = request.user\n        user_custom_sql_queries = CustomSQLQuery.objects.filter(\n            database_connection__assistant__organization__users__in=[user]).all()\n        confirmation_field = request.POST.get('confirmation', None)\n        if confirmation_field != 'CONFIRM DELETING ALL CUSTOM SQL QUERIES':\n            messages.error(request, \"Invalid confirmation field. Please confirm the deletion by typing \"\n                                    \"exactly 'CONFIRM DELETING ALL CUSTOM SQL QUERIES'.\")\n            return redirect('user_settings:settings')",
        "detail": "apps.user_settings.views.deletions.delete_all_custom_sql_queries_views",
        "documentation": {}
    },
    {
        "label": "SettingsView_DeleteAllExpertNets",
        "kind": 6,
        "importPath": "apps.user_settings.views.deletions.delete_all_expert_networks_views",
        "description": "apps.user_settings.views.deletions.delete_all_expert_networks_views",
        "peekOfCode": "class SettingsView_DeleteAllExpertNets(View, LoginRequiredMixin):\n    def post(self, request, *args, **kwargs):\n        user = request.user\n        expert_networks = ExpertNetwork.objects.filter(organization__users__in=[user]).all()\n        confirmation_field = request.POST.get('confirmation', None)\n        if confirmation_field != 'CONFIRM DELETING ALL EXPERT NETWORKS':\n            messages.error(request, \"Invalid confirmation field. Please confirm the deletion by typing \"\n                                    \"exactly 'CONFIRM DELETING ALL EXPERT NETWORKS'.\")\n            return redirect('user_settings:settings')\n        ##############################",
        "detail": "apps.user_settings.views.deletions.delete_all_expert_networks_views",
        "documentation": {}
    },
    {
        "label": "SettingsView_DeleteAllExportAssistants",
        "kind": 6,
        "importPath": "apps.user_settings.views.deletions.delete_all_export_assistants_views",
        "description": "apps.user_settings.views.deletions.delete_all_export_assistants_views",
        "peekOfCode": "class SettingsView_DeleteAllExportAssistants(View, LoginRequiredMixin):\n    def post(self, request, *args, **kwargs):\n        user = request.user\n        user_exp_agents = ExportAssistantAPI.objects.filter(assistant__organization__users__in=[user]).all()\n        confirmation_field = request.POST.get('confirmation', None)\n        if confirmation_field != 'CONFIRM DELETING ALL EXPORTED ASSISTANTS':\n            messages.error(request, \"Invalid confirmation field. Please confirm the deletion by typing \"\n                                    \"exactly 'CONFIRM DELETING ALL EXPORTED ASSISTANTS'.\")\n            return redirect('user_settings:settings')\n        ##############################",
        "detail": "apps.user_settings.views.deletions.delete_all_export_assistants_views",
        "documentation": {}
    },
    {
        "label": "SettingsView_DeleteAllFileSystems",
        "kind": 6,
        "importPath": "apps.user_settings.views.deletions.delete_all_file_systems_views",
        "description": "apps.user_settings.views.deletions.delete_all_file_systems_views",
        "peekOfCode": "class SettingsView_DeleteAllFileSystems(View, LoginRequiredMixin):\n    def post(self, request, *args, **kwargs):\n        user = request.user\n        user_file_systems = DataSourceFileSystem.objects.filter(assistant__organization__users__in=[user]).all()\n        confirmation_field = request.POST.get('confirmation', None)\n        if confirmation_field != 'CONFIRM DELETING ALL FILE SYSTEMS':\n            messages.error(request, \"Invalid confirmation field. Please confirm the deletion by typing \"\n                                    \"exactly 'CONFIRM DELETING ALL FILE SYSTEMS'.\")\n            return redirect('user_settings:settings')\n        ##############################",
        "detail": "apps.user_settings.views.deletions.delete_all_file_systems_views",
        "documentation": {}
    },
    {
        "label": "SettingsView_DeleteAllVectorStoreDocuments",
        "kind": 6,
        "importPath": "apps.user_settings.views.deletions.delete_all_knowledge_base_documents_views",
        "description": "apps.user_settings.views.deletions.delete_all_knowledge_base_documents_views",
        "peekOfCode": "class SettingsView_DeleteAllVectorStoreDocuments(View, LoginRequiredMixin):\n    def post(self, request, *args, **kwargs):\n        user = request.user\n        user_vector_store_docs = KnowledgeBaseDocument.objects.filter(\n            knowledge_base__assistant__organization__users__in=[user]).all()\n        confirmation_field = request.POST.get('confirmation', None)\n        if confirmation_field != 'CONFIRM DELETING ALL KNOWLEDGE BASE DOCUMENTS':\n            messages.error(request, \"Invalid confirmation field. Please confirm the deletion by typing \"\n                                    \"exactly 'CONFIRM DELETING ALL KNOWLEDGE BASE DOCUMENTS'.\")\n            return redirect('user_settings:settings')",
        "detail": "apps.user_settings.views.deletions.delete_all_knowledge_base_documents_views",
        "documentation": {}
    },
    {
        "label": "SettingsView_DeleteAllVectorStoreManagers",
        "kind": 6,
        "importPath": "apps.user_settings.views.deletions.delete_all_knowledge_bases_views",
        "description": "apps.user_settings.views.deletions.delete_all_knowledge_bases_views",
        "peekOfCode": "class SettingsView_DeleteAllVectorStoreManagers(View, LoginRequiredMixin):\n    def post(self, request, *args, **kwargs):\n        user = request.user\n        user_vector_stores = DocumentKnowledgeBaseConnection.objects.filter(\n            assistant__organization__users__in=[user]).all()\n        confirmation_field = request.POST.get('confirmation', None)\n        if confirmation_field != 'CONFIRM DELETING ALL KNOWLEDGE BASES':\n            messages.error(request, \"Invalid confirmation field. Please confirm the deletion by typing \"\n                                    \"exactly 'CONFIRM DELETING ALL KNOWLEDGE BASES'.\")\n            return redirect('user_settings:settings')",
        "detail": "apps.user_settings.views.deletions.delete_all_knowledge_bases_views",
        "documentation": {}
    },
    {
        "label": "SettingsView_DeleteAllLeanModAssistants",
        "kind": 6,
        "importPath": "apps.user_settings.views.deletions.delete_all_lean_assistants_views",
        "description": "apps.user_settings.views.deletions.delete_all_lean_assistants_views",
        "peekOfCode": "class SettingsView_DeleteAllLeanModAssistants(View, LoginRequiredMixin):\n    def post(self, request, *args, **kwargs):\n        user = request.user\n        user_leanmod_agents = LeanAssistant.objects.filter(organization__users__in=[user]).all()\n        confirmation_field = request.POST.get('confirmation', None)\n        if confirmation_field != 'CONFIRM DELETING ALL LEAN ASSISTANTS':\n            messages.error(request, \"Invalid confirmation field. Please confirm the deletion by typing \"\n                                    \"exactly 'CONFIRM DELETING ALL LEAN ASSISTANTS'.\")\n            return redirect('user_settings:settings')\n        ##############################",
        "detail": "apps.user_settings.views.deletions.delete_all_lean_assistants_views",
        "documentation": {}
    },
    {
        "label": "SettingsView_DeleteAllLeanModChats",
        "kind": 6,
        "importPath": "apps.user_settings.views.deletions.delete_all_lean_chats_views",
        "description": "apps.user_settings.views.deletions.delete_all_lean_chats_views",
        "peekOfCode": "class SettingsView_DeleteAllLeanModChats(View, LoginRequiredMixin):\n    def post(self, request, *args, **kwargs):\n        user = request.user\n        user_chats = MultimodalLeanChat.objects.filter(organization__users__in=[user]).all()\n        confirmation_field = request.POST.get('confirmation', None)\n        if confirmation_field != 'CONFIRM DELETING ALL LEANMOD CHATS':\n            messages.error(request, \"Invalid confirmation field. Please confirm the deletion by typing \"\n                                    \"exactly 'CONFIRM DELETING ALL LEANMOD CHATS'.\")\n            return redirect('user_settings:settings')\n        ##############################",
        "detail": "apps.user_settings.views.deletions.delete_all_lean_chats_views",
        "documentation": {}
    },
    {
        "label": "SettingsView_DeleteAllLLMModels",
        "kind": 6,
        "importPath": "apps.user_settings.views.deletions.delete_all_llm_models_views",
        "description": "apps.user_settings.views.deletions.delete_all_llm_models_views",
        "peekOfCode": "class SettingsView_DeleteAllLLMModels(View, LoginRequiredMixin):\n    def post(self, request, *args, **kwargs):\n        user = request.user\n        user_llm_models = LLMCore.objects.filter(organization__users__in=[user]).all()\n        confirmation_field = request.POST.get('confirmation', None)\n        if confirmation_field != 'CONFIRM DELETING ALL LLM MODELS':\n            messages.error(request, \"Invalid confirmation field. Please confirm the deletion by typing \"\n                                    \"exactly 'CONFIRM DELETING ALL LLM MODELS'.\")\n            return redirect('user_settings:settings')\n        ##############################",
        "detail": "apps.user_settings.views.deletions.delete_all_llm_models_views",
        "documentation": {}
    },
    {
        "label": "SettingsView_DeleteAllMediaItems",
        "kind": 6,
        "importPath": "apps.user_settings.views.deletions.delete_all_media_files_views",
        "description": "apps.user_settings.views.deletions.delete_all_media_files_views",
        "peekOfCode": "class SettingsView_DeleteAllMediaItems(View, LoginRequiredMixin):\n    def post(self, request, *args, **kwargs):\n        user = request.user\n        user_multimedia_files = DataSourceMediaStorageItem.objects.filter(\n            storage_base__assistant__organization__users__in=[user]).all()\n        confirmation_field = request.POST.get('confirmation', None)\n        if confirmation_field != 'CONFIRM DELETING ALL MULTIMEDIA FILES':\n            messages.error(request, \"Invalid confirmation field. Please confirm the deletion by typing \"\n                                    \"exactly 'CONFIRM DELETING ALL MULTIMEDIA FILES'.\")\n            return redirect('user_settings:settings')",
        "detail": "apps.user_settings.views.deletions.delete_all_media_files_views",
        "documentation": {}
    },
    {
        "label": "SettingsView_DeleteAllMediaManagers",
        "kind": 6,
        "importPath": "apps.user_settings.views.deletions.delete_all_media_storages_views",
        "description": "apps.user_settings.views.deletions.delete_all_media_storages_views",
        "peekOfCode": "class SettingsView_DeleteAllMediaManagers(View, LoginRequiredMixin):\n    def post(self, request, *args, **kwargs):\n        user = request.user\n        user_media_managers = DataSourceMediaStorageConnection.objects.filter(\n            assistant__organization__users__in=[user]).all()\n        confirmation_field = request.POST.get('confirmation', None)\n        if confirmation_field != 'CONFIRM DELETING ALL MEDIA STORAGES':\n            messages.error(request, \"Invalid confirmation field. Please confirm the deletion by typing \"\n                                    \"exactly 'CONFIRM DELETING ALL MEDIA STORAGES'.\")\n            return redirect('user_settings:settings')",
        "detail": "apps.user_settings.views.deletions.delete_all_media_storages_views",
        "documentation": {}
    },
    {
        "label": "SettingsView_DeleteAllStandardMemories",
        "kind": 6,
        "importPath": "apps.user_settings.views.deletions.delete_all_memories_views",
        "description": "apps.user_settings.views.deletions.delete_all_memories_views",
        "peekOfCode": "class SettingsView_DeleteAllStandardMemories(View, LoginRequiredMixin):\n    def post(self, request, *args, **kwargs):\n        user = request.user\n        user_std_memories = AssistantMemory.objects.filter(user=user).all()\n        confirmation_field = request.POST.get('confirmation', None)\n        if confirmation_field != 'CONFIRM DELETING ALL MEMORIES':\n            messages.error(request, \"Invalid confirmation field. Please confirm the deletion by typing \"\n                                    \"exactly 'CONFIRM DELETING ALL MEMORIES'.\")\n            return redirect('user_settings:settings')\n        ##############################",
        "detail": "apps.user_settings.views.deletions.delete_all_memories_views",
        "documentation": {}
    },
    {
        "label": "SettingsView_DeleteAllMessageTemplates",
        "kind": 6,
        "importPath": "apps.user_settings.views.deletions.delete_all_message_templates_views",
        "description": "apps.user_settings.views.deletions.delete_all_message_templates_views",
        "peekOfCode": "class SettingsView_DeleteAllMessageTemplates(View, LoginRequiredMixin):\n    def post(self, request, *args, **kwargs):\n        user = request.user\n        user_message_templates = MessageTemplate.objects.filter(user=user).all()\n        confirmation_field = request.POST.get('confirmation', None)\n        if confirmation_field != 'CONFIRM DELETING ALL MESSAGE TEMPLATES':\n            messages.error(request, \"Invalid confirmation field. Please confirm the deletion by typing \"\n                                    \"exactly 'CONFIRM DELETING ALL MESSAGE TEMPLATES'.\")\n            return redirect('user_settings:settings')\n        ##############################",
        "detail": "apps.user_settings.views.deletions.delete_all_message_templates_views",
        "documentation": {}
    },
    {
        "label": "SettingsView_DeleteAllMLModels",
        "kind": 6,
        "importPath": "apps.user_settings.views.deletions.delete_all_ml_models_views",
        "description": "apps.user_settings.views.deletions.delete_all_ml_models_views",
        "peekOfCode": "class SettingsView_DeleteAllMLModels(View, LoginRequiredMixin):\n    def post(self, request, *args, **kwargs):\n        user = request.user\n        user_ml_models = DataSourceMLModelItem.objects.filter(\n            ml_model_base__assistant__organization__users__in=[user]).all()\n        confirmation_field = request.POST.get('confirmation', None)\n        if confirmation_field != 'CONFIRM DELETING ALL ML MODELS':\n            messages.error(request, \"Invalid confirmation field. Please confirm the deletion by typing \"\n                                    \"exactly 'CONFIRM DELETING ALL ML MODELS'.\")\n            return redirect('user_settings:settings')",
        "detail": "apps.user_settings.views.deletions.delete_all_ml_models_views",
        "documentation": {}
    },
    {
        "label": "SettingsView_DeleteAllMLManagers",
        "kind": 6,
        "importPath": "apps.user_settings.views.deletions.delete_all_ml_storages_views",
        "description": "apps.user_settings.views.deletions.delete_all_ml_storages_views",
        "peekOfCode": "class SettingsView_DeleteAllMLManagers(View, LoginRequiredMixin):\n    def post(self, request, *args, **kwargs):\n        user = request.user\n        user_ml_managers = DataSourceMLModelConnection.objects.filter(\n            assistant__organization__users__in=[user]).all()\n        confirmation_field = request.POST.get('confirmation', None)\n        if confirmation_field != 'CONFIRM DELETING ALL ML MODEL STORAGES':\n            messages.error(request, \"Invalid confirmation field. Please confirm the deletion by typing \"\n                                    \"exactly 'CONFIRM DELETING ALL ML MODEL STORAGES'.\")\n            return redirect('user_settings:settings')",
        "detail": "apps.user_settings.views.deletions.delete_all_ml_storages_views",
        "documentation": {}
    },
    {
        "label": "SettingsView_DeleteAllOrchestrations",
        "kind": 6,
        "importPath": "apps.user_settings.views.deletions.delete_all_orchestrations_views",
        "description": "apps.user_settings.views.deletions.delete_all_orchestrations_views",
        "peekOfCode": "class SettingsView_DeleteAllOrchestrations(View, LoginRequiredMixin):\n    def post(self, request, *args, **kwargs):\n        user = request.user\n        user_orchestrations = Maestro.objects.filter(organization__users__in=[user]).all()\n        confirmation_field = request.POST.get('confirmation', None)\n        if confirmation_field != 'CONFIRM DELETING ALL ORCHESTRATIONS':\n            messages.error(request, \"Invalid confirmation field. Please confirm the deletion by typing \"\n                                    \"exactly 'CONFIRM DELETING ALL ORCHESTRATIONS'.\")\n            return redirect('user_settings:settings')\n        ##############################",
        "detail": "apps.user_settings.views.deletions.delete_all_orchestrations_views",
        "documentation": {}
    },
    {
        "label": "SettingsView_DeleteAllOrganizations",
        "kind": 6,
        "importPath": "apps.user_settings.views.deletions.delete_all_organizations_views",
        "description": "apps.user_settings.views.deletions.delete_all_organizations_views",
        "peekOfCode": "class SettingsView_DeleteAllOrganizations(View, LoginRequiredMixin):\n    def post(self, request, *args, **kwargs):\n        user = request.user\n        user_orgs: Organization = Organization.objects.filter(users__in=[user]).all()\n        confirmation_field = request.POST.get('confirmation', None)\n        if confirmation_field != 'CONFIRM DELETING ALL ORGANIZATIONS':\n            messages.error(request, \"Invalid confirmation field. Please confirm the deletion by typing \"\n                                    \"exactly 'CONFIRM DELETING ALL ORGANIZATIONS'.\")\n            return redirect('user_settings:settings')\n        ##############################",
        "detail": "apps.user_settings.views.deletions.delete_all_organizations_views",
        "documentation": {}
    },
    {
        "label": "SettingsView_DeleteAllScheduledJobs",
        "kind": 6,
        "importPath": "apps.user_settings.views.deletions.delete_all_scheduled_jobs_views",
        "description": "apps.user_settings.views.deletions.delete_all_scheduled_jobs_views",
        "peekOfCode": "class SettingsView_DeleteAllScheduledJobs(View, LoginRequiredMixin):\n    def post(self, request, *args, **kwargs):\n        user = request.user\n        user_scheduled_jobs = ScheduledJob.objects.filter(assistant__organization__users__in=[user]).all()\n        confirmation_field = request.POST.get('confirmation', None)\n        if confirmation_field != 'CONFIRM DELETING ALL SCHEDULED JOBS':\n            messages.error(request, \"Invalid confirmation field. Please confirm the deletion by typing \"\n                                    \"exactly 'CONFIRM DELETING ALL SCHEDULED JOBS'.\")\n            return redirect('user_settings:settings')\n        ##############################",
        "detail": "apps.user_settings.views.deletions.delete_all_scheduled_jobs_views",
        "documentation": {}
    },
    {
        "label": "SettingsView_DeleteAllSQLDBs",
        "kind": 6,
        "importPath": "apps.user_settings.views.deletions.delete_all_sql_databases_views",
        "description": "apps.user_settings.views.deletions.delete_all_sql_databases_views",
        "peekOfCode": "class SettingsView_DeleteAllSQLDBs(View, LoginRequiredMixin):\n    def post(self, request, *args, **kwargs):\n        user = request.user\n        user_sql_databases = SQLDatabaseConnection.objects.filter(assistant__organization__users__in=[user]).all()\n        confirmation_field = request.POST.get('confirmation', None)\n        if confirmation_field != 'CONFIRM DELETING ALL SQL DATABASES':\n            messages.error(request, \"Invalid confirmation field. Please confirm the deletion by typing \"\n                                    \"exactly 'CONFIRM DELETING ALL SQL DATABASES'.\")\n            return redirect('user_settings:settings')\n        ##############################",
        "detail": "apps.user_settings.views.deletions.delete_all_sql_databases_views",
        "documentation": {}
    },
    {
        "label": "SettingsView_DeleteAllStarredMessages",
        "kind": 6,
        "importPath": "apps.user_settings.views.deletions.delete_all_starred_messages_views",
        "description": "apps.user_settings.views.deletions.delete_all_starred_messages_views",
        "peekOfCode": "class SettingsView_DeleteAllStarredMessages(View, LoginRequiredMixin):\n    def post(self, request, *args, **kwargs):\n        user = request.user\n        user_starred_messages = StarredMessage.objects.filter(user=user).all()\n        confirmation_field = request.POST.get('confirmation', None)\n        if confirmation_field != 'CONFIRM DELETING ALL STARRED MESSAGES':\n            messages.error(request, \"Invalid confirmation field. Please confirm the deletion by typing \"\n                                    \"exactly 'CONFIRM DELETING ALL STARRED MESSAGES'.\")\n            return redirect('user_settings:settings')\n        ##############################",
        "detail": "apps.user_settings.views.deletions.delete_all_starred_messages_views",
        "documentation": {}
    },
    {
        "label": "SettingsView_DeleteAllTriggeredJobs",
        "kind": 6,
        "importPath": "apps.user_settings.views.deletions.delete_all_triggered_jobs_views",
        "description": "apps.user_settings.views.deletions.delete_all_triggered_jobs_views",
        "peekOfCode": "class SettingsView_DeleteAllTriggeredJobs(View, LoginRequiredMixin):\n    def post(self, request, *args, **kwargs):\n        user = request.user\n        user_triggered_jobs = TriggeredJob.objects.filter(trigger_assistant__organization__users__in=[user]).all()\n        confirmation_field = request.POST.get('confirmation', None)\n        if confirmation_field != 'CONFIRM DELETING ALL TRIGGERED JOBS':\n            messages.error(request, \"Invalid confirmation field. Please confirm the deletion by typing \"\n                                    \"exactly 'CONFIRM DELETING ALL TRIGGERED JOBS'.\")\n            return redirect('user_settings:settings')\n        ##############################",
        "detail": "apps.user_settings.views.deletions.delete_all_triggered_jobs_views",
        "documentation": {}
    },
    {
        "label": "SettingsView_DeleteAllBrowsers",
        "kind": 6,
        "importPath": "apps.user_settings.views.deletions.delete_all_web_browsers_views",
        "description": "apps.user_settings.views.deletions.delete_all_web_browsers_views",
        "peekOfCode": "class SettingsView_DeleteAllBrowsers(View, LoginRequiredMixin):\n    def post(self, request, *args, **kwargs):\n        user = request.user\n        user_web_browsers = DataSourceBrowserConnection.objects.filter(assistant__organization__users__in=[user]).all()\n        confirmation_field = request.POST.get('confirmation', None)\n        if confirmation_field != 'CONFIRM DELETING ALL WEB BROWSERS':\n            messages.error(request, \"Invalid confirmation field. Please confirm the deletion by typing \"\n                                    \"exactly 'CONFIRM DELETING ALL WEB BROWSERS'.\")\n            return redirect('user_settings:settings')\n        ##############################",
        "detail": "apps.user_settings.views.deletions.delete_all_web_browsers_views",
        "documentation": {}
    },
    {
        "label": "SettingsView_UserSettings",
        "kind": 6,
        "importPath": "apps.user_settings.views.settings.user_settings_views",
        "description": "apps.user_settings.views.settings.user_settings_views",
        "peekOfCode": "class SettingsView_UserSettings(TemplateView, LoginRequiredMixin):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        return context",
        "detail": "apps.user_settings.views.settings.user_settings_views",
        "documentation": {}
    },
    {
        "label": "UserSettingsConfig",
        "kind": 6,
        "importPath": "apps.user_settings.apps",
        "description": "apps.user_settings.apps",
        "peekOfCode": "class UserSettingsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.user_settings'",
        "detail": "apps.user_settings.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.user_settings.urls",
        "description": "apps.user_settings.urls",
        "peekOfCode": "app_name = \"user_settings\"\nurlpatterns = [\n    path('settings/', SettingsView_UserSettings.as_view(template_name=\"user_settings/settings.html\"),\n         name='settings'),\n    path('delete/all/llm_models/', SettingsView_DeleteAllLLMModels.as_view(),\n         name='delete_all_llm_models'),\n    path('delete/all/assistants/', SettingsView_DeleteAllAssistants.as_view(),\n         name='delete_all_assistants'),\n    path('delete/all/lean_assistants/', SettingsView_DeleteAllLeanModAssistants.as_view(),\n         name='delete_all_lean_assistants'),",
        "detail": "apps.user_settings.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.user_settings.urls",
        "description": "apps.user_settings.urls",
        "peekOfCode": "urlpatterns = [\n    path('settings/', SettingsView_UserSettings.as_view(template_name=\"user_settings/settings.html\"),\n         name='settings'),\n    path('delete/all/llm_models/', SettingsView_DeleteAllLLMModels.as_view(),\n         name='delete_all_llm_models'),\n    path('delete/all/assistants/', SettingsView_DeleteAllAssistants.as_view(),\n         name='delete_all_assistants'),\n    path('delete/all/lean_assistants/', SettingsView_DeleteAllLeanModAssistants.as_view(),\n         name='delete_all_lean_assistants'),\n    path('delete/all/expert_networks/', SettingsView_DeleteAllExpertNets.as_view(),",
        "detail": "apps.user_settings.urls",
        "documentation": {}
    },
    {
        "label": "GeneratedVideoAdmin",
        "kind": 6,
        "importPath": "apps.video_generations.admin.generated_video_admin",
        "description": "apps.video_generations.admin.generated_video_admin",
        "peekOfCode": "class GeneratedVideoAdmin(admin.ModelAdmin):\n    list_display = GENERATED_VIDEO_ADMIN_LIST\n    list_filter = GENERATED_VIDEO_ADMIN_FILTER\n    search_fields = GENERATED_VIDEO_ADMIN_SEARCH\n    ordering = ('created_at', 'updated_at')",
        "detail": "apps.video_generations.admin.generated_video_admin",
        "documentation": {}
    },
    {
        "label": "VideoGeneratorConnectionAdmin",
        "kind": 6,
        "importPath": "apps.video_generations.admin.video_generator_connection_admin",
        "description": "apps.video_generations.admin.video_generator_connection_admin",
        "peekOfCode": "class VideoGeneratorConnectionAdmin(admin.ModelAdmin):\n    list_display = VIDEO_GENERATOR_ADMIN_LIST\n    search_fields = VIDEO_GENERATOR_ADMIN_SEARCH\n    list_filter = VIDEO_GENERATOR_ADMIN_FILTER",
        "detail": "apps.video_generations.admin.video_generator_connection_admin",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.video_generations.migrations.0001_initial",
        "description": "apps.video_generations.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('assistants', '0003_initial'),\n        ('organization', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='VideoGeneratorConnection',",
        "detail": "apps.video_generations.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.video_generations.migrations.0002_rename_video_gener_organiz_ce8595_idx_video_gener_organiz_c6643a_idx_and_more",
        "description": "apps.video_generations.migrations.0002_rename_video_gener_organiz_ce8595_idx_video_gener_organiz_c6643a_idx_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('video_generations', '0001_initial'),\n    ]\n    operations = [\n        migrations.RenameIndex(\n            model_name='videogeneratorconnection',\n            new_name='video_gener_organiz_c6643a_idx',\n            old_name='video_gener_organiz_ce8595_idx',\n        ),",
        "detail": "apps.video_generations.migrations.0002_rename_video_gener_organiz_ce8595_idx_video_gener_organiz_c6643a_idx_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.video_generations.migrations.0003_generatedvideo",
        "description": "apps.video_generations.migrations.0003_generatedvideo",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('assistants', '0003_initial'),\n        ('multimodal_chat', '0001_initial'),\n        ('organization', '0001_initial'),\n        ('video_generations', '0002_rename_video_gener_organiz_ce8595_idx_video_gener_organiz_c6643a_idx_and_more'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(",
        "detail": "apps.video_generations.migrations.0003_generatedvideo",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.video_generations.migrations.0004_generatedvideo_multimodal_chat_message",
        "description": "apps.video_generations.migrations.0004_generatedvideo_multimodal_chat_message",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('multimodal_chat', '0001_initial'),\n        ('video_generations', '0003_generatedvideo'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='generatedvideo',\n            name='multimodal_chat_message',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='generated_videos', to='multimodal_chat.multimodalchatmessage'),",
        "detail": "apps.video_generations.migrations.0004_generatedvideo_multimodal_chat_message",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.video_generations.migrations.0005_remove_generatedvideo_multimodal_chat_message",
        "description": "apps.video_generations.migrations.0005_remove_generatedvideo_multimodal_chat_message",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('video_generations', '0004_generatedvideo_multimodal_chat_message'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='generatedvideo',\n            name='multimodal_chat_message',\n        ),\n    ]",
        "detail": "apps.video_generations.migrations.0005_remove_generatedvideo_multimodal_chat_message",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.video_generations.migrations.0006_alter_generatedvideo_options_and_more",
        "description": "apps.video_generations.migrations.0006_alter_generatedvideo_options_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('assistants', '0003_initial'),\n        ('multimodal_chat', '0001_initial'),\n        ('organization', '0001_initial'),\n        ('video_generations', '0005_remove_generatedvideo_multimodal_chat_message'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.AlterModelOptions(",
        "detail": "apps.video_generations.migrations.0006_alter_generatedvideo_options_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.video_generations.migrations.0007_alter_videogeneratorconnection_provider",
        "description": "apps.video_generations.migrations.0007_alter_videogeneratorconnection_provider",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('video_generations', '0006_alter_generatedvideo_options_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='videogeneratorconnection',\n            name='provider',\n            field=models.CharField(choices=[('luma-ai', 'Luma AI')], max_length=255),\n        ),",
        "detail": "apps.video_generations.migrations.0007_alter_videogeneratorconnection_provider",
        "documentation": {}
    },
    {
        "label": "GeneratedVideo",
        "kind": 6,
        "importPath": "apps.video_generations.models.generated_video_models",
        "description": "apps.video_generations.models.generated_video_models",
        "peekOfCode": "class GeneratedVideo(models.Model):\n    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE,\n                                     related_name='generated_videos')\n    assistant = models.ForeignKey('assistants.Assistant', on_delete=models.CASCADE,\n                                  related_name='generated_videos')\n    multimodal_chat = models.ForeignKey('multimodal_chat.MultimodalChat', on_delete=models.CASCADE,\n                                        related_name='generated_videos')\n    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE,\n                                        related_name='generated_videos')\n    video_url = models.URLField()",
        "detail": "apps.video_generations.models.generated_video_models",
        "documentation": {}
    },
    {
        "label": "VideoGeneratorConnection",
        "kind": 6,
        "importPath": "apps.video_generations.models.video_generator_connection_models",
        "description": "apps.video_generations.models.video_generator_connection_models",
        "peekOfCode": "class VideoGeneratorConnection(models.Model):\n    organization = models.ForeignKey('organization.Organization', on_delete=models.CASCADE)\n    assistant = models.ForeignKey('assistants.Assistant', on_delete=models.CASCADE)\n    created_by_user = models.ForeignKey('auth.User', on_delete=models.CASCADE)\n    name = models.CharField(max_length=1000)\n    description = models.TextField()\n    provider = models.CharField(max_length=255, choices=VIDEO_GENERATOR_PROVIDER_TYPES)\n    provider_api_key = models.CharField(max_length=100000)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)",
        "detail": "apps.video_generations.models.video_generator_connection_models",
        "documentation": {}
    },
    {
        "label": "fixture_video_generations_init",
        "kind": 2,
        "importPath": "apps.video_generations.tests.conftest",
        "description": "apps.video_generations.tests.conftest",
        "peekOfCode": "def fixture_video_generations_init():\n    return True",
        "detail": "apps.video_generations.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_video_generations_test_forms",
        "kind": 2,
        "importPath": "apps.video_generations.tests.test_forms",
        "description": "apps.video_generations.tests.test_forms",
        "peekOfCode": "def test_init_video_generations_test_forms():\n    assert True",
        "detail": "apps.video_generations.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_video_generations_test_models",
        "kind": 2,
        "importPath": "apps.video_generations.tests.test_models",
        "description": "apps.video_generations.tests.test_models",
        "peekOfCode": "def test_init_video_generations_test_models():\n    assert True",
        "detail": "apps.video_generations.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_video_generations_test_utils",
        "kind": 2,
        "importPath": "apps.video_generations.tests.test_utils",
        "description": "apps.video_generations.tests.test_utils",
        "peekOfCode": "def test_init_video_generations_test_utils():\n    assert True",
        "detail": "apps.video_generations.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_video_generations_test_views",
        "kind": 2,
        "importPath": "apps.video_generations.tests.test_views",
        "description": "apps.video_generations.tests.test_views",
        "peekOfCode": "def test_init_video_generations_test_views():\n    assert True",
        "detail": "apps.video_generations.tests.test_views",
        "documentation": {}
    },
    {
        "label": "GENERATED_VIDEO_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.video_generations.utils.constant_utils",
        "description": "apps.video_generations.utils.constant_utils",
        "peekOfCode": "GENERATED_VIDEO_ADMIN_LIST = ('organization', 'assistant', 'multimodal_chat', 'created_by_user', 'created_at',\n                              'updated_at')\nGENERATED_VIDEO_ADMIN_FILTER = ('organization', 'assistant', 'multimodal_chat', 'created_by_user', 'created_at',\n                                'updated_at')\nGENERATED_VIDEO_ADMIN_SEARCH = ('organization', 'assistant', 'multimodal_chat', 'created_by_user', 'created_at',\n                                'updated_at')\nVIDEO_GENERATOR_ADMIN_LIST = ('name', 'provider', 'organization', 'assistant')\nVIDEO_GENERATOR_ADMIN_FILTER = ('provider', 'organization', 'assistant')\nVIDEO_GENERATOR_ADMIN_SEARCH = ('name', 'provider', 'organization__name', 'assistant__name')",
        "detail": "apps.video_generations.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "GENERATED_VIDEO_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.video_generations.utils.constant_utils",
        "description": "apps.video_generations.utils.constant_utils",
        "peekOfCode": "GENERATED_VIDEO_ADMIN_FILTER = ('organization', 'assistant', 'multimodal_chat', 'created_by_user', 'created_at',\n                                'updated_at')\nGENERATED_VIDEO_ADMIN_SEARCH = ('organization', 'assistant', 'multimodal_chat', 'created_by_user', 'created_at',\n                                'updated_at')\nVIDEO_GENERATOR_ADMIN_LIST = ('name', 'provider', 'organization', 'assistant')\nVIDEO_GENERATOR_ADMIN_FILTER = ('provider', 'organization', 'assistant')\nVIDEO_GENERATOR_ADMIN_SEARCH = ('name', 'provider', 'organization__name', 'assistant__name')",
        "detail": "apps.video_generations.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "GENERATED_VIDEO_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.video_generations.utils.constant_utils",
        "description": "apps.video_generations.utils.constant_utils",
        "peekOfCode": "GENERATED_VIDEO_ADMIN_SEARCH = ('organization', 'assistant', 'multimodal_chat', 'created_by_user', 'created_at',\n                                'updated_at')\nVIDEO_GENERATOR_ADMIN_LIST = ('name', 'provider', 'organization', 'assistant')\nVIDEO_GENERATOR_ADMIN_FILTER = ('provider', 'organization', 'assistant')\nVIDEO_GENERATOR_ADMIN_SEARCH = ('name', 'provider', 'organization__name', 'assistant__name')",
        "detail": "apps.video_generations.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "VIDEO_GENERATOR_ADMIN_LIST",
        "kind": 5,
        "importPath": "apps.video_generations.utils.constant_utils",
        "description": "apps.video_generations.utils.constant_utils",
        "peekOfCode": "VIDEO_GENERATOR_ADMIN_LIST = ('name', 'provider', 'organization', 'assistant')\nVIDEO_GENERATOR_ADMIN_FILTER = ('provider', 'organization', 'assistant')\nVIDEO_GENERATOR_ADMIN_SEARCH = ('name', 'provider', 'organization__name', 'assistant__name')",
        "detail": "apps.video_generations.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "VIDEO_GENERATOR_ADMIN_FILTER",
        "kind": 5,
        "importPath": "apps.video_generations.utils.constant_utils",
        "description": "apps.video_generations.utils.constant_utils",
        "peekOfCode": "VIDEO_GENERATOR_ADMIN_FILTER = ('provider', 'organization', 'assistant')\nVIDEO_GENERATOR_ADMIN_SEARCH = ('name', 'provider', 'organization__name', 'assistant__name')",
        "detail": "apps.video_generations.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "VIDEO_GENERATOR_ADMIN_SEARCH",
        "kind": 5,
        "importPath": "apps.video_generations.utils.constant_utils",
        "description": "apps.video_generations.utils.constant_utils",
        "peekOfCode": "VIDEO_GENERATOR_ADMIN_SEARCH = ('name', 'provider', 'organization__name', 'assistant__name')",
        "detail": "apps.video_generations.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "VideoGeneratorView_ConfirmDelete",
        "kind": 6,
        "importPath": "apps.video_generations.views.confirm_delete_video_generator_connection_views",
        "description": "apps.video_generations.views.confirm_delete_video_generator_connection_views",
        "peekOfCode": "class VideoGeneratorView_ConfirmDelete(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        pk = self.kwargs.get('pk')\n        video_generator_connection = get_object_or_404(VideoGeneratorConnection, pk=pk)\n        context['video_generator_connection'] = video_generator_connection\n        return context\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - DELETE_VIDEO_GENERATOR_CONNECTIONS",
        "detail": "apps.video_generations.views.confirm_delete_video_generator_connection_views",
        "documentation": {}
    },
    {
        "label": "VideoGeneratorView_Create",
        "kind": 6,
        "importPath": "apps.video_generations.views.create_video_generator_connection_views",
        "description": "apps.video_generations.views.create_video_generator_connection_views",
        "peekOfCode": "class VideoGeneratorView_Create(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context['organizations'] = Organization.objects.filter(users__in=[self.request.user])\n        context['assistants'] = Assistant.objects.filter(organization__in=context['organizations'])\n        context['provider_choices'] = VIDEO_GENERATOR_PROVIDER_TYPES\n        return context\n    def post(self, request, *args, **kwargs):\n        ##############################\n        # PERMISSION CHECK FOR - CREATE_VIDEO_GENERATOR_CONNECTIONS",
        "detail": "apps.video_generations.views.create_video_generator_connection_views",
        "documentation": {}
    },
    {
        "label": "VideoGeneratorView_Connections",
        "kind": 6,
        "importPath": "apps.video_generations.views.list_video_generator_connections_views",
        "description": "apps.video_generations.views.list_video_generator_connections_views",
        "peekOfCode": "class VideoGeneratorView_Connections(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        ##############################\n        # PERMISSION CHECK FOR - LIST_VIDEO_GENERATOR_CONNECTIONS\n        if not UserPermissionManager.is_authorized(user=self.request.user,\n                                                   operation=PermissionNames.LIST_VIDEO_GENERATOR_CONNECTIONS):\n            messages.error(self.request, \"You do not have permission to list video generator connections.\")\n            return context\n        ##############################",
        "detail": "apps.video_generations.views.list_video_generator_connections_views",
        "documentation": {}
    },
    {
        "label": "VideoGeneratorView_Update",
        "kind": 6,
        "importPath": "apps.video_generations.views.update_video_generator_connection_views",
        "description": "apps.video_generations.views.update_video_generator_connection_views",
        "peekOfCode": "class VideoGeneratorView_Update(LoginRequiredMixin, TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        pk = self.kwargs.get('pk')\n        video_generator_connection = get_object_or_404(VideoGeneratorConnection, pk=pk)\n        context['video_generator_connection'] = video_generator_connection\n        context['organizations'] = Organization.objects.filter(users__in=[self.request.user])\n        context['assistants'] = Assistant.objects.filter(organization__in=context['organizations'])\n        context['provider_choices'] = VIDEO_GENERATOR_PROVIDER_TYPES\n        return context",
        "detail": "apps.video_generations.views.update_video_generator_connection_views",
        "documentation": {}
    },
    {
        "label": "VideoGenerationsConfig",
        "kind": 6,
        "importPath": "apps.video_generations.apps",
        "description": "apps.video_generations.apps",
        "peekOfCode": "class VideoGenerationsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'apps.video_generations'",
        "detail": "apps.video_generations.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "apps.video_generations.urls",
        "description": "apps.video_generations.urls",
        "peekOfCode": "app_name = 'video_generations'\nurlpatterns = [\n    path('create/', VideoGeneratorView_Create.as_view(\n        template_name='video_generations/connection/create_video_generator_connection.html'), name='create'),\n    path('update/<int:pk>/', VideoGeneratorView_Update.as_view(\n        template_name='video_generations/connection/update_video_generator_connection.html'), name='update'),\n    path('list/', VideoGeneratorView_Connections.as_view(\n        template_name='video_generations/connection/list_video_generator_connections.html'), name='list'),\n    path('delete/<int:pk>/', VideoGeneratorView_ConfirmDelete.as_view(\n        template_name='video_generations/connection/confirm_delete_video_generator_connection.html'), name='delete'),",
        "detail": "apps.video_generations.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.video_generations.urls",
        "description": "apps.video_generations.urls",
        "peekOfCode": "urlpatterns = [\n    path('create/', VideoGeneratorView_Create.as_view(\n        template_name='video_generations/connection/create_video_generator_connection.html'), name='create'),\n    path('update/<int:pk>/', VideoGeneratorView_Update.as_view(\n        template_name='video_generations/connection/update_video_generator_connection.html'), name='update'),\n    path('list/', VideoGeneratorView_Connections.as_view(\n        template_name='video_generations/connection/list_video_generator_connections.html'), name='list'),\n    path('delete/<int:pk>/', VideoGeneratorView_ConfirmDelete.as_view(\n        template_name='video_generations/connection/confirm_delete_video_generator_connection.html'), name='delete'),\n]",
        "detail": "apps.video_generations.urls",
        "documentation": {}
    },
    {
        "label": "Member",
        "kind": 6,
        "importPath": "auth.admin.member_admin",
        "description": "auth.admin.member_admin",
        "peekOfCode": "class Member(admin.ModelAdmin):\n    list_display = MEMBER_ADMIN_LIST\nadmin.site.register(Profile, Member)",
        "detail": "auth.admin.member_admin",
        "documentation": {}
    },
    {
        "label": "PromoCodeAdmin",
        "kind": 6,
        "importPath": "auth.admin.promo_code_admin",
        "description": "auth.admin.promo_code_admin",
        "peekOfCode": "class PromoCodeAdmin(admin.ModelAdmin):\n    list_display = PROMO_CODE_ADMIN_LIST",
        "detail": "auth.admin.promo_code_admin",
        "documentation": {}
    },
    {
        "label": "UserCreditCardAdmin",
        "kind": 6,
        "importPath": "auth.admin.user_credit_card_admin",
        "description": "auth.admin.user_credit_card_admin",
        "peekOfCode": "class UserCreditCardAdmin(admin.ModelAdmin):\n    list_display = CREDIT_CARD_ADMIN_LIST",
        "detail": "auth.admin.user_credit_card_admin",
        "documentation": {}
    },
    {
        "label": "ForgetPasswordView",
        "kind": 6,
        "importPath": "auth.forgot_password.views",
        "description": "auth.forgot_password.views",
        "peekOfCode": "class ForgetPasswordView(AuthView):\n    def get(self, request):\n        if request.user.is_authenticated:\n            return redirect(\"dashboard:main-dashboard\")\n        return super().get(request)\n    def post(self, request):\n        if request.method == \"POST\":\n            email = request.POST.get(\"email\")\n            user = User.objects.filter(email=email).first()\n            if not user:",
        "detail": "auth.forgot_password.views",
        "documentation": {}
    },
    {
        "label": "LoginView",
        "kind": 6,
        "importPath": "auth.login.views",
        "description": "auth.login.views",
        "peekOfCode": "class LoginView(AuthView):\n    def get(self, request):\n        if request.user.is_authenticated:\n            return redirect(\"dashboard:main-dashboard\")\n        return super().get(request)\n    def post(self, request):\n        if request.method == \"POST\":\n            username = request.POST.get(\"email-username\")\n            password = request.POST.get(\"password\")\n            if not (username and password):",
        "detail": "auth.login.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "auth.migrations.0001_initial",
        "description": "auth.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='PromoCode',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "auth.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "auth.migrations.0002_usercreditcard_automated_data_backups",
        "description": "auth.migrations.0002_usercreditcard_automated_data_backups",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('accounts', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='usercreditcard',\n            name='automated_data_backups',\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "auth.migrations.0002_usercreditcard_automated_data_backups",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "auth.migrations.0003_remove_usercreditcard_automated_data_backups_and_more",
        "description": "auth.migrations.0003_remove_usercreditcard_automated_data_backups_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('accounts', '0002_usercreditcard_automated_data_backups'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='usercreditcard',\n            name='automated_data_backups',\n        ),\n        migrations.AddField(",
        "detail": "auth.migrations.0003_remove_usercreditcard_automated_data_backups_and_more",
        "documentation": {}
    },
    {
        "label": "Profile",
        "kind": 6,
        "importPath": "auth.models.member_models",
        "description": "auth.models.member_models",
        "peekOfCode": "class Profile(models.Model):\n    user = models.OneToOneField(User, on_delete=models.CASCADE, related_name='profile', blank=True, null=True)\n    email = models.EmailField(max_length=100, unique=True)\n    email_token = models.CharField(max_length=100, blank=True, null=True)\n    forget_password_token = models.CharField(max_length=100, blank=True, null=True)\n    is_verified = models.BooleanField(default=False)\n    created_at = models.DateTimeField(auto_now_add=True)\n    updated_at = models.DateTimeField(auto_now=True)\n    username = models.CharField(max_length=100, blank=True, null=True)\n    first_name = models.CharField(max_length=250, blank=True, null=True)",
        "detail": "auth.models.member_models",
        "documentation": {}
    },
    {
        "label": "PromoCode",
        "kind": 6,
        "importPath": "auth.models.promo_code_models",
        "description": "auth.models.promo_code_models",
        "peekOfCode": "class PromoCode(models.Model):\n    user = models.ForeignKey(\"auth.User\", on_delete=models.CASCADE, related_name=\"promo_codes\")\n    code = models.CharField(max_length=255)\n    bonus_percentage_referrer = models.IntegerField(default=REFERRAL_DEFAULT_BONUS_PERCENTAGE)\n    bonus_percentage_referee = models.IntegerField(default=REFERRAL_DEFAULT_BONUS_PERCENTAGE)\n    is_active = models.BooleanField(default=True)\n    current_referrals = models.IntegerField(default=0)\n    max_referral_limit = models.IntegerField(default=0)\n    datetime_limit = models.DateTimeField(null=True, blank=True)\n    created_at = models.DateTimeField(auto_now_add=True)",
        "detail": "auth.models.promo_code_models",
        "documentation": {}
    },
    {
        "label": "UserCreditCard",
        "kind": 6,
        "importPath": "auth.models.user_credit_card_models",
        "description": "auth.models.user_credit_card_models",
        "peekOfCode": "class UserCreditCard(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE, related_name='credit_cards', blank=True, null=True)\n    profile = models.ForeignKey('Profile', on_delete=models.CASCADE, related_name='credit_cards', blank=True,\n                                null=True)\n    name_on_card = models.CharField(max_length=255, null=False, blank=False)\n    card_number = models.CharField(max_length=16, null=False, blank=False)\n    card_expiration_month = models.CharField(max_length=2, null=False, blank=False)\n    card_expiration_year = models.CharField(max_length=2, null=False, blank=False)\n    card_cvc = models.CharField(max_length=4, null=False, blank=False)\n    created_at = models.DateTimeField(auto_now_add=True)",
        "detail": "auth.models.user_credit_card_models",
        "documentation": {}
    },
    {
        "label": "RegisterView",
        "kind": 6,
        "importPath": "auth.register.views",
        "description": "auth.register.views",
        "peekOfCode": "class RegisterView(AuthView):\n    def get(self, request):\n        if request.user.is_authenticated:\n            return redirect(\"dashboard:main-dashboard\")\n        context = self.get_context_data()\n        return super().get(request, context)\n    def post(self, request):\n        username = request.POST.get(\"username\")\n        email = request.POST.get(\"email\")\n        password = request.POST.get(\"password\")",
        "detail": "auth.register.views",
        "documentation": {}
    },
    {
        "label": "ResetPasswordView",
        "kind": 6,
        "importPath": "auth.reset_password.views",
        "description": "auth.reset_password.views",
        "peekOfCode": "class ResetPasswordView(AuthView):\n    def get(self, request, token):\n        if request.user.is_authenticated:\n            return redirect(\"dashboard:main-dashboard\")\n        return super().get(request)\n    def post(self, request, token):\n        try:\n            profile = Profile.objects.get(forget_password_token=token)\n        except Profile.DoesNotExist:\n            messages.error(request, \"Invalid or expired token.\")",
        "detail": "auth.reset_password.views",
        "documentation": {}
    },
    {
        "label": "fixture_auth_init",
        "kind": 2,
        "importPath": "auth.tests.conftest",
        "description": "auth.tests.conftest",
        "peekOfCode": "def fixture_auth_init():\n    return True",
        "detail": "auth.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_auth_test_forms",
        "kind": 2,
        "importPath": "auth.tests.test_forms",
        "description": "auth.tests.test_forms",
        "peekOfCode": "def test_init_auth_test_forms():\n    assert True",
        "detail": "auth.tests.test_forms",
        "documentation": {}
    },
    {
        "label": "test_init_auth_test_models",
        "kind": 2,
        "importPath": "auth.tests.test_models",
        "description": "auth.tests.test_models",
        "peekOfCode": "def test_init_auth_test_models():\n    assert True",
        "detail": "auth.tests.test_models",
        "documentation": {}
    },
    {
        "label": "test_init_auth_test_utils",
        "kind": 2,
        "importPath": "auth.tests.test_utils",
        "description": "auth.tests.test_utils",
        "peekOfCode": "def test_init_auth_test_utils():\n    assert True",
        "detail": "auth.tests.test_utils",
        "documentation": {}
    },
    {
        "label": "test_init_auth_test_views",
        "kind": 2,
        "importPath": "auth.tests.test_views",
        "description": "auth.tests.test_views",
        "peekOfCode": "def test_init_auth_test_views():\n    assert True",
        "detail": "auth.tests.test_views",
        "documentation": {}
    },
    {
        "label": "ForumRewardActionsNames",
        "kind": 6,
        "importPath": "auth.utils.constant_utils",
        "description": "auth.utils.constant_utils",
        "peekOfCode": "class ForumRewardActionsNames:\n    ASK_QUESTION = 'ask_question'\n    ADD_COMMENT = 'add_comment'\n    GET_LIKE = 'get_like'\n    GET_MERIT = 'get_merit'\nMEMBER_ADMIN_LIST = (\"user\", \"email\", \"is_verified\", \"is_accredited_by_staff\", \"created_at\",)\nPROMO_CODE_ADMIN_LIST = (\"user\", \"code\", \"bonus_percentage_referrer\", \"bonus_percentage_referee\", \"is_active\",\n                         \"current_referrals\", \"max_referral_limit\", \"datetime_limit\", \"created_at\",)\nCREDIT_CARD_ADMIN_LIST = (\"name_on_card\", \"card_number\", \"card_expiration_month\", \"card_expiration_year\",\n                          \"card_cvc\", \"created_at\",)",
        "detail": "auth.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "REFERRAL_DEFAULT_BONUS_PERCENTAGE",
        "kind": 5,
        "importPath": "auth.utils.constant_utils",
        "description": "auth.utils.constant_utils",
        "peekOfCode": "REFERRAL_DEFAULT_BONUS_PERCENTAGE = 50\nUSER_FORUM_ROLES = [\n    ('bimod', 'Bimod'),\n    ('client_admin', 'Client Admin'),\n    ('client_user', 'Client User'),\n]\nUSER_FORUM_RANKS = [\n    ('unranked', 'Unranked'),\n    ('wood', 'Wood'),\n    ('iron', 'Iron'),",
        "detail": "auth.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "USER_FORUM_ROLES",
        "kind": 5,
        "importPath": "auth.utils.constant_utils",
        "description": "auth.utils.constant_utils",
        "peekOfCode": "USER_FORUM_ROLES = [\n    ('bimod', 'Bimod'),\n    ('client_admin', 'Client Admin'),\n    ('client_user', 'Client User'),\n]\nUSER_FORUM_RANKS = [\n    ('unranked', 'Unranked'),\n    ('wood', 'Wood'),\n    ('iron', 'Iron'),\n    ('bronze', 'Bronze'),",
        "detail": "auth.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "USER_FORUM_RANKS",
        "kind": 5,
        "importPath": "auth.utils.constant_utils",
        "description": "auth.utils.constant_utils",
        "peekOfCode": "USER_FORUM_RANKS = [\n    ('unranked', 'Unranked'),\n    ('wood', 'Wood'),\n    ('iron', 'Iron'),\n    ('bronze', 'Bronze'),\n    ('silver', 'Silver'),\n    ('gold', 'Gold'),\n    ('platinum', 'Platinum'),\n    ('diamond', 'Diamond'),\n    ('master', 'Master'),",
        "detail": "auth.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "RANK_POINT_REQUIREMENTS",
        "kind": 5,
        "importPath": "auth.utils.constant_utils",
        "description": "auth.utils.constant_utils",
        "peekOfCode": "RANK_POINT_REQUIREMENTS = {\n    'wood': 0,\n    'iron': 50,\n    'bronze': 100,\n    'silver': 200,\n    'gold': 500,\n    'platinum': 1_000,\n    'diamond': 2_000,\n    'master': 5_000,\n    'grandmaster': 10_000,",
        "detail": "auth.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "UNIT_REWARD_FOR_POINTS",
        "kind": 5,
        "importPath": "auth.utils.constant_utils",
        "description": "auth.utils.constant_utils",
        "peekOfCode": "UNIT_REWARD_FOR_POINTS = {\n    'wood': 0.030,\n    'iron': 0.040,\n    'bronze': 0.050,\n    'silver': 0.060,\n    'gold': 0.070,\n    'platinum': 0.080,\n    'diamond': 0.090,\n    'master': 0.100,\n    'grandmaster': 0.100,",
        "detail": "auth.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "POINT_REWARDS",
        "kind": 5,
        "importPath": "auth.utils.constant_utils",
        "description": "auth.utils.constant_utils",
        "peekOfCode": "POINT_REWARDS = {\n    'ask_question': 1,\n    'add_comment': 1,\n    'get_like': 2,\n    'get_merit': 5,\n}\nclass ForumRewardActionsNames:\n    ASK_QUESTION = 'ask_question'\n    ADD_COMMENT = 'add_comment'\n    GET_LIKE = 'get_like'",
        "detail": "auth.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "MEMBER_ADMIN_LIST",
        "kind": 5,
        "importPath": "auth.utils.constant_utils",
        "description": "auth.utils.constant_utils",
        "peekOfCode": "MEMBER_ADMIN_LIST = (\"user\", \"email\", \"is_verified\", \"is_accredited_by_staff\", \"created_at\",)\nPROMO_CODE_ADMIN_LIST = (\"user\", \"code\", \"bonus_percentage_referrer\", \"bonus_percentage_referee\", \"is_active\",\n                         \"current_referrals\", \"max_referral_limit\", \"datetime_limit\", \"created_at\",)\nCREDIT_CARD_ADMIN_LIST = (\"name_on_card\", \"card_number\", \"card_expiration_month\", \"card_expiration_year\",\n                          \"card_cvc\", \"created_at\",)",
        "detail": "auth.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "PROMO_CODE_ADMIN_LIST",
        "kind": 5,
        "importPath": "auth.utils.constant_utils",
        "description": "auth.utils.constant_utils",
        "peekOfCode": "PROMO_CODE_ADMIN_LIST = (\"user\", \"code\", \"bonus_percentage_referrer\", \"bonus_percentage_referee\", \"is_active\",\n                         \"current_referrals\", \"max_referral_limit\", \"datetime_limit\", \"created_at\",)\nCREDIT_CARD_ADMIN_LIST = (\"name_on_card\", \"card_number\", \"card_expiration_month\", \"card_expiration_year\",\n                          \"card_cvc\", \"created_at\",)",
        "detail": "auth.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "CREDIT_CARD_ADMIN_LIST",
        "kind": 5,
        "importPath": "auth.utils.constant_utils",
        "description": "auth.utils.constant_utils",
        "peekOfCode": "CREDIT_CARD_ADMIN_LIST = (\"name_on_card\", \"card_number\", \"card_expiration_month\", \"card_expiration_year\",\n                          \"card_cvc\", \"created_at\",)",
        "detail": "auth.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "COUNTRIES",
        "kind": 5,
        "importPath": "auth.utils.countries",
        "description": "auth.utils.countries",
        "peekOfCode": "COUNTRIES = list(dict(countries_for_language('en')).values())",
        "detail": "auth.utils.countries",
        "documentation": {}
    },
    {
        "label": "send_email",
        "kind": 2,
        "importPath": "auth.utils.function_utils",
        "description": "auth.utils.function_utils",
        "peekOfCode": "def send_email(subject, email, html_content):\n    try:\n        email_from = settings.EMAIL_HOST_USER\n        recipient_list = [email]\n        email = EmailMultiAlternatives(subject, strip_tags(html_content), email_from, recipient_list)\n        email.attach_alternative(html_content, \"text/html\")\n        email.send()\n    except Exception as e:\n        pass\ndef get_absolute_url(path):",
        "detail": "auth.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "get_absolute_url",
        "kind": 2,
        "importPath": "auth.utils.function_utils",
        "description": "auth.utils.function_utils",
        "peekOfCode": "def get_absolute_url(path):\n    return settings.BASE_URL + path\ndef render_html_template(file_path, context):\n    with open(file_path, 'r') as file:\n        html_content = file.read()\n    for key, value in context.items():\n        html_content = html_content.replace(f'<[[{key}]]>', value)\n    return html_content\ndef send_verification_email(email, token):\n    subject = \"Bimod.io | Verify Email\"",
        "detail": "auth.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "render_html_template",
        "kind": 2,
        "importPath": "auth.utils.function_utils",
        "description": "auth.utils.function_utils",
        "peekOfCode": "def render_html_template(file_path, context):\n    with open(file_path, 'r') as file:\n        html_content = file.read()\n    for key, value in context.items():\n        html_content = html_content.replace(f'<[[{key}]]>', value)\n    return html_content\ndef send_verification_email(email, token):\n    subject = \"Bimod.io | Verify Email\"\n    verification_url = get_absolute_url(reverse('verify-email', kwargs={'token': token}))\n    context = {'VERIFICATION_LINK': verification_url}",
        "detail": "auth.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "send_verification_email",
        "kind": 2,
        "importPath": "auth.utils.function_utils",
        "description": "auth.utils.function_utils",
        "peekOfCode": "def send_verification_email(email, token):\n    subject = \"Bimod.io | Verify Email\"\n    verification_url = get_absolute_url(reverse('verify-email', kwargs={'token': token}))\n    context = {'VERIFICATION_LINK': verification_url}\n    file_path = os.path.join(os.path.dirname(__file__), 'helper_templates', 'verification_email_template.html')\n    html_content = render_html_template(file_path, context)\n    send_email(subject, email, html_content)\ndef send_invitation_email(email, token):\n    subject = \"Bimod.io | Invitation\"\n    set_password_url = get_absolute_url(reverse('reset-password', kwargs={'token': token}))",
        "detail": "auth.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "send_invitation_email",
        "kind": 2,
        "importPath": "auth.utils.function_utils",
        "description": "auth.utils.function_utils",
        "peekOfCode": "def send_invitation_email(email, token):\n    subject = \"Bimod.io | Invitation\"\n    set_password_url = get_absolute_url(reverse('reset-password', kwargs={'token': token}))\n    context = {'VERIFICATION_LINK': set_password_url}\n    file_path = os.path.join(os.path.dirname(__file__), 'helper_templates', 'invitation_email_template.html')\n    html_content = render_html_template(file_path, context)\n    send_email(subject, email, html_content)\ndef send_password_reset_email(email, token):\n    subject = \"Bimod.io | Reset Password\"\n    reset_url = get_absolute_url(reverse('reset-password', kwargs={'token': token}))",
        "detail": "auth.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "send_password_reset_email",
        "kind": 2,
        "importPath": "auth.utils.function_utils",
        "description": "auth.utils.function_utils",
        "peekOfCode": "def send_password_reset_email(email, token):\n    subject = \"Bimod.io | Reset Password\"\n    reset_url = get_absolute_url(reverse('reset-password', kwargs={'token': token}))\n    context = {'VERIFICATION_LINK': reset_url}\n    file_path = os.path.join(os.path.dirname(__file__), 'helper_templates', 'reset_password_email_template.html')\n    html_content = render_html_template(file_path, context)\n    send_email(subject, email, html_content)\ndef generate_random_string(length=16):\n    return ''.join(random.choice(string.ascii_letters + string.digits) for _ in range(length))\ndef generate_referral_code(length=16):",
        "detail": "auth.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "generate_random_string",
        "kind": 2,
        "importPath": "auth.utils.function_utils",
        "description": "auth.utils.function_utils",
        "peekOfCode": "def generate_random_string(length=16):\n    return ''.join(random.choice(string.ascii_letters + string.digits) for _ in range(length))\ndef generate_referral_code(length=16):\n    alphas = string.ascii_uppercase  # 26\n    numerics = string.digits  # 10\n    year = datetime.datetime.now().year.__str__()\n    month = datetime.datetime.now().month.__str__()\n    day = datetime.datetime.now().day.__str__()\n    generated_alpha = ''.join(random.choice(alphas) for _ in range(length // 2))\n    generated_numeric = ''.join(random.choice(numerics) for _ in range(length // 2))",
        "detail": "auth.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "generate_referral_code",
        "kind": 2,
        "importPath": "auth.utils.function_utils",
        "description": "auth.utils.function_utils",
        "peekOfCode": "def generate_referral_code(length=16):\n    alphas = string.ascii_uppercase  # 26\n    numerics = string.digits  # 10\n    year = datetime.datetime.now().year.__str__()\n    month = datetime.datetime.now().month.__str__()\n    day = datetime.datetime.now().day.__str__()\n    generated_alpha = ''.join(random.choice(alphas) for _ in range(length // 2))\n    generated_numeric = ''.join(random.choice(numerics) for _ in range(length // 2))\n    generated_date = f\"{year}-{month}{day}\"\n    return f\"{generated_alpha[0:4]}-{generated_alpha[4:]}-{generated_numeric[0:4]}-{generated_numeric[4:]}-{generated_date}0\"",
        "detail": "auth.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "is_valid_password",
        "kind": 2,
        "importPath": "auth.utils.function_utils",
        "description": "auth.utils.function_utils",
        "peekOfCode": "def is_valid_password(password: str) -> (bool, str):\n    if len(password) < 8:\n        return False, \"Password must be at least 8 characters long.\"\n    if not any(char.isdigit() for char in password):\n        return False, \"Password must contain at least one digit.\"\n    if not any(char.isupper() for char in password):\n        return False, \"Password must contain at least one uppercase letter.\"\n    if not any(char.islower() for char in password):\n        return False, \"Password must contain at least one lowercase letter.\"\n    if not any(char in string.punctuation for char in password):",
        "detail": "auth.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "VerifyEmailTokenView",
        "kind": 6,
        "importPath": "auth.verify_email.views",
        "description": "auth.verify_email.views",
        "peekOfCode": "class VerifyEmailTokenView(AuthView):\n    def get(self, request, token):\n        try:\n            profile = Profile.objects.filter(email_token=token).first()\n            profile.is_verified = True\n            profile.email_token = \"\"\n            profile.save()\n            if not request.user.is_authenticated:\n                messages.success(request, \"Email has been verified successfully\")\n            return redirect(\"login\")",
        "detail": "auth.verify_email.views",
        "documentation": {}
    },
    {
        "label": "VerifyEmailView",
        "kind": 6,
        "importPath": "auth.verify_email.views",
        "description": "auth.verify_email.views",
        "peekOfCode": "class VerifyEmailView(AuthView):\n    def get(self, request):\n        return super().get(request)\nclass SendVerificationView(AuthView):\n    def get(self, request):\n        email, message = self.get_email_and_message(request)\n        if email:\n            token = str(uuid.uuid4())\n            user_profile = Profile.objects.filter(email=email).first()\n            user_profile.email_token = token",
        "detail": "auth.verify_email.views",
        "documentation": {}
    },
    {
        "label": "SendVerificationView",
        "kind": 6,
        "importPath": "auth.verify_email.views",
        "description": "auth.verify_email.views",
        "peekOfCode": "class SendVerificationView(AuthView):\n    def get(self, request):\n        email, message = self.get_email_and_message(request)\n        if email:\n            token = str(uuid.uuid4())\n            user_profile = Profile.objects.filter(email=email).first()\n            user_profile.email_token = token\n            user_profile.save()\n            send_verification_email(email, token)\n            messages.success(request, message)",
        "detail": "auth.verify_email.views",
        "documentation": {}
    },
    {
        "label": "AuthConfig",
        "kind": 6,
        "importPath": "auth.apps",
        "description": "auth.apps",
        "peekOfCode": "class AuthConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'auth'\n    label = 'accounts'",
        "detail": "auth.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "auth.urls",
        "description": "auth.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", LoginView.as_view(template_name=\"auth/login.html\"),\n         name=\"login\"),\n    path(\"login/\", LoginView.as_view(template_name=\"auth/login.html\"),\n         name=\"login\"),\n    path(\"logout/\", LogoutView.as_view(),\n         name=\"logout\"),\n    path(\"register/\", RegisterView.as_view(template_name=\"auth/register.html\"),\n         name=\"register\"),\n    path(\"verify_email/\", VerifyEmailView.as_view(template_name=\"auth/verify_email.html\"),",
        "detail": "auth.urls",
        "documentation": {}
    },
    {
        "label": "AuthView",
        "kind": 6,
        "importPath": "auth.views",
        "description": "auth.views",
        "peekOfCode": "class AuthView(TemplateView):\n    def get_context_data(self, **kwargs):\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        context.update({\"layout_path\": TemplateHelper.set_layout(\"layout_blank.html\", context),\n                        \"countries\": COUNTRIES})\n        return context",
        "detail": "auth.views",
        "documentation": {}
    },
    {
        "label": "CONTENT_MIX",
        "kind": 5,
        "importPath": "config.consts.loading_bar_content",
        "description": "config.consts.loading_bar_content",
        "peekOfCode": "CONTENT_MIX = '''\n                <div id=\"loading-bar\" style=\"display:none; position:fixed; top:0; left:0; width:100%; height:100%; background-color:rgba(0, 0, 0, 0.5); z-index:9999; pointer-events:none;\">\n                    <img src=\"/static/img/loading/spinner-main.gif\" alt=\"Loading...\" style=\"position:absolute; top:50%; left:50%; transform:translate(-50%, -50%); max-width:30%;\" />\n                </div>\n                <script>\n                    const loadingBar = document.getElementById(\"loading-bar\");\n                    // Show the loading bar when the page is navigating or fetching resources\n                    window.addEventListener(\"beforeunload\", function() {\n                        loadingBar.style.display = \"block\";\n                    });",
        "detail": "config.consts.loading_bar_content",
        "documentation": {}
    },
    {
        "label": "LeanModLogConsumer",
        "kind": 6,
        "importPath": "config.consumers.leanmod_log_consumer",
        "description": "config.consumers.leanmod_log_consumer",
        "peekOfCode": "class LeanModLogConsumer(AsyncWebsocketConsumer):\n    async def connect(self):\n        lean_chat_id = self.scope['url_route']['kwargs']['lean_chat_id']\n        self.group_name = f'logs_{lean_chat_id}'\n        await self.channel_layer.group_add(self.group_name, self.channel_name)\n        await self.accept()\n    async def disconnect(self, close_code):\n        await self.channel_layer.group_discard(self.group_name, self.channel_name)\n    async def receive(self, text_data):\n        pass",
        "detail": "config.consumers.leanmod_log_consumer",
        "documentation": {}
    },
    {
        "label": "LogConsumer",
        "kind": 6,
        "importPath": "config.consumers.log_consumer",
        "description": "config.consumers.log_consumer",
        "peekOfCode": "class LogConsumer(AsyncWebsocketConsumer):\n    async def connect(self):\n        chat_id = self.scope['url_route']['kwargs']['chat_id']\n        self.group_name = f'logs_{chat_id}'\n        await self.channel_layer.group_add(self.group_name, self.channel_name)\n        await self.accept()\n    async def disconnect(self, close_code):\n        await self.channel_layer.group_discard(self.group_name, self.channel_name)\n    async def receive(self, text_data):\n        pass",
        "detail": "config.consumers.log_consumer",
        "documentation": {}
    },
    {
        "label": "OrchestrationGenericLogConsumer",
        "kind": 6,
        "importPath": "config.consumers.orchestration_generic_log_consumer",
        "description": "config.consumers.orchestration_generic_log_consumer",
        "peekOfCode": "class OrchestrationGenericLogConsumer(AsyncWebsocketConsumer):\n    async def connect(self):\n        maestro_id = self.scope['url_route']['kwargs']['maestro_id']\n        self.group_name = f'orchestration_generic_logs_{maestro_id}'\n        await self.channel_layer.group_add(self.group_name, self.channel_name)\n        await self.accept()\n    async def disconnect(self, close_code):\n        await self.channel_layer.group_discard(self.group_name, self.channel_name)\n    async def receive(self, text_data):\n        pass",
        "detail": "config.consumers.orchestration_generic_log_consumer",
        "documentation": {}
    },
    {
        "label": "OrchestrationLogConsumer",
        "kind": 6,
        "importPath": "config.consumers.orchestration_log_consumer",
        "description": "config.consumers.orchestration_log_consumer",
        "peekOfCode": "class OrchestrationLogConsumer(AsyncWebsocketConsumer):\n    async def connect(self):\n        query_id = self.scope['url_route']['kwargs']['query_id']\n        self.group_name = f'orchestration_logs_{query_id}'\n        await self.channel_layer.group_add(self.group_name, self.channel_name)\n        await self.accept()\n    async def disconnect(self, close_code):\n        await self.channel_layer.group_discard(self.group_name, self.channel_name)\n    async def receive(self, text_data):\n        pass",
        "detail": "config.consumers.orchestration_log_consumer",
        "documentation": {}
    },
    {
        "label": "VoidForgeOperationLogsConsumer",
        "kind": 6,
        "importPath": "config.consumers.voidforger_operation_logs_consumer",
        "description": "config.consumers.voidforger_operation_logs_consumer",
        "peekOfCode": "class VoidForgeOperationLogsConsumer(AsyncWebsocketConsumer):\n    async def connect(self):\n        self.group_name = f'voidforge_operation_logs'\n        await self.channel_layer.group_add(self.group_name, self.channel_name)\n        await self.accept()\n        await self.send_log()\n    async def disconnect(self, close_code):\n        await self.channel_layer.group_discard(self.group_name, self.channel_name)\n    async def receive(self, text_data):\n        pass",
        "detail": "config.consumers.voidforger_operation_logs_consumer",
        "documentation": {}
    },
    {
        "label": "AppendSlashMiddleware",
        "kind": 6,
        "importPath": "config.middleware.append_slash_middleware",
        "description": "config.middleware.append_slash_middleware",
        "peekOfCode": "class AppendSlashMiddleware:\n    def __init__(self, get_response):\n        self.get_response = get_response\n    def __call__(self, request):\n        if (not request.path.endswith('/')\n            and not request.path.startswith('/api/')\n            and not request.path.startswith('/app/export_assistants/api/v1/export')\n            and not request.path.startswith('/app/export_leanmods/api/v1/export')\n            and not request.path.startswith('/app/export_orchestrations/api/v1/export')):\n            return HttpResponsePermanentRedirect(request.path + '/')",
        "detail": "config.middleware.append_slash_middleware",
        "documentation": {}
    },
    {
        "label": "LoadingBarMiddleware",
        "kind": 6,
        "importPath": "config.middleware.loading_bar_middleware",
        "description": "config.middleware.loading_bar_middleware",
        "peekOfCode": "class LoadingBarMiddleware(MiddlewareMixin):\n    def process_template_response(self, request, response):\n        if 'text/html' in response['Content-Type']:\n            response.render()\n            content = response.content.decode()\n            loading_bar_html = CONTENT_MIX\n            response.content = content.replace('</body>', loading_bar_html + '</body>')\n        return response",
        "detail": "config.middleware.loading_bar_middleware",
        "documentation": {}
    },
    {
        "label": "SessionTimeoutMiddleware",
        "kind": 6,
        "importPath": "config.middleware.session_timeout_middleware",
        "description": "config.middleware.session_timeout_middleware",
        "peekOfCode": "class SessionTimeoutMiddleware(MiddlewareMixin):\n    def process_view(self, request, view_func, view_args, view_kwargs):\n        for excluded_page in settings.EXCLUDED_PAGES:\n            if SUFFIX_ANY in excluded_page:\n                if request.path.startswith(excluded_page.replace(SUFFIX_ANY, \"\")[:-1]):\n                    return None\n            else:\n                if request.path == excluded_page:\n                    return None\n        if not request.user.is_anonymous:",
        "detail": "config.middleware.session_timeout_middleware",
        "documentation": {}
    },
    {
        "label": "log_save",
        "kind": 2,
        "importPath": "config.signals.audit_log_signals",
        "description": "config.signals.audit_log_signals",
        "peekOfCode": "def log_save(sender, instance, created, **kwargs):\n    if sender in EXCLUDE_MODELS_FROM_AUDIT_LOGS:\n        return\n    with transaction.atomic():\n        if created:\n            if not hasattr(instance, 'id') or not instance.id:\n                pass\n            else:\n                AuditLog.objects.create(action='create', model_name=sender.__name__, object_id=instance.id)\n        else:",
        "detail": "config.signals.audit_log_signals",
        "documentation": {}
    },
    {
        "label": "log_delete",
        "kind": 2,
        "importPath": "config.signals.audit_log_signals",
        "description": "config.signals.audit_log_signals",
        "peekOfCode": "def log_delete(sender, instance, **kwargs):\n    if sender in EXCLUDE_MODELS_FROM_AUDIT_LOGS:\n        return\n    with transaction.atomic():\n        if not hasattr(instance, 'id') or not instance.id:\n            pass\n        else:\n            AuditLog.objects.create(action='delete', model_name=sender.__name__, object_id=instance.id)",
        "detail": "config.signals.audit_log_signals",
        "documentation": {}
    },
    {
        "label": "default_application_zoom",
        "kind": 2,
        "importPath": "config.templatetags.default_application_zoom",
        "description": "config.templatetags.default_application_zoom",
        "peekOfCode": "def default_application_zoom():\n    return str(str(settings.DEFAULT_APPLICATION_ZOOM) + \"%\")",
        "detail": "config.templatetags.default_application_zoom",
        "documentation": {}
    },
    {
        "label": "register",
        "kind": 5,
        "importPath": "config.templatetags.default_application_zoom",
        "description": "config.templatetags.default_application_zoom",
        "peekOfCode": "register = template.Library()\n@register.simple_tag\ndef default_application_zoom():\n    return str(str(settings.DEFAULT_APPLICATION_ZOOM) + \"%\")",
        "detail": "config.templatetags.default_application_zoom",
        "documentation": {}
    },
    {
        "label": "fixture_config_init",
        "kind": 2,
        "importPath": "config.tests.conftest",
        "description": "config.tests.conftest",
        "peekOfCode": "def fixture_config_init():\n    return True",
        "detail": "config.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_init_config_test_custom_storages",
        "kind": 2,
        "importPath": "config.tests.test_custom_storages",
        "description": "config.tests.test_custom_storages",
        "peekOfCode": "def test_init_config_test_custom_storages():\n    assert True",
        "detail": "config.tests.test_custom_storages",
        "documentation": {}
    },
    {
        "label": "test_init_config_test_middlewares",
        "kind": 2,
        "importPath": "config.tests.test_middlewares",
        "description": "config.tests.test_middlewares",
        "peekOfCode": "def test_init_config_test_middlewares():\n    assert True",
        "detail": "config.tests.test_middlewares",
        "documentation": {}
    },
    {
        "label": "HTTP_STATUS_QUERY_TAG",
        "kind": 5,
        "importPath": "config.utils.constant_utils",
        "description": "config.utils.constant_utils",
        "peekOfCode": "HTTP_STATUS_QUERY_TAG = 'http_status'\nHTTP_STATUS_ERROR_TAG_VALUE = 'error'\nEXCLUDE_MODELS_FROM_AUDIT_LOGS = [AuditLog, LogEntry]",
        "detail": "config.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "HTTP_STATUS_ERROR_TAG_VALUE",
        "kind": 5,
        "importPath": "config.utils.constant_utils",
        "description": "config.utils.constant_utils",
        "peekOfCode": "HTTP_STATUS_ERROR_TAG_VALUE = 'error'\nEXCLUDE_MODELS_FROM_AUDIT_LOGS = [AuditLog, LogEntry]",
        "detail": "config.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "EXCLUDE_MODELS_FROM_AUDIT_LOGS",
        "kind": 5,
        "importPath": "config.utils.constant_utils",
        "description": "config.utils.constant_utils",
        "peekOfCode": "EXCLUDE_MODELS_FROM_AUDIT_LOGS = [AuditLog, LogEntry]",
        "detail": "config.utils.constant_utils",
        "documentation": {}
    },
    {
        "label": "trigger_error",
        "kind": 2,
        "importPath": "config.utils.function_utils",
        "description": "config.utils.function_utils",
        "peekOfCode": "def trigger_error(request):\n    division_by_zero = 1 / 0\n    return division_by_zero\ndef docs_redirect_view(request):\n    return redirect('/static/docs/index.html')",
        "detail": "config.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "docs_redirect_view",
        "kind": 2,
        "importPath": "config.utils.function_utils",
        "description": "config.utils.function_utils",
        "peekOfCode": "def docs_redirect_view(request):\n    return redirect('/static/docs/index.html')",
        "detail": "config.utils.function_utils",
        "documentation": {}
    },
    {
        "label": "MainAppConfig",
        "kind": 6,
        "importPath": "config.apps",
        "description": "config.apps",
        "peekOfCode": "class MainAppConfig(AppConfig):\n    name = 'config'\n    def ready(self):\n        from data.loader import BoilerplateDataLoader\n        BoilerplateDataLoader.load()\n        from .signals import log_save, log_delete\n        for model in apps.get_models():\n            post_save.connect(log_save, sender=model)\n            post_delete.connect(log_delete, sender=model)\n        print(\"[MainAppConfig.ready]: The AuditLogs tracking system have been successfully registered.\")",
        "detail": "config.apps",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "config.asgi",
        "description": "config.asgi",
        "peekOfCode": "application = ProtocolTypeRouter({\"http\": get_asgi_application(),\n                                  \"websocket\": AuthMiddlewareStack(URLRouter(websocket_urlpatterns))})",
        "detail": "config.asgi",
        "documentation": {}
    },
    {
        "label": "debug_task",
        "kind": 2,
        "importPath": "config.celery_config",
        "description": "config.celery_config",
        "peekOfCode": "def debug_task(self):\n    print(f'Request: {self.request!r}')\nif settings.DEBUG:\n    app.conf.beat_max_loop_interval = 30\nelse:\n    app.conf.beat_max_loop_interval = 300\n@app.on_after_finalize.connect\ndef setup_tasks(sender, **kwargs):\n    print(f\"Registered tasks: {app.tasks.keys()}\")",
        "detail": "config.celery_config",
        "documentation": {}
    },
    {
        "label": "setup_tasks",
        "kind": 2,
        "importPath": "config.celery_config",
        "description": "config.celery_config",
        "peekOfCode": "def setup_tasks(sender, **kwargs):\n    print(f\"Registered tasks: {app.tasks.keys()}\")",
        "detail": "config.celery_config",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "config.celery_config",
        "description": "config.celery_config",
        "peekOfCode": "app = Celery('config')\napp.config_from_object('django.conf:settings', namespace='CELERY')\napp.autodiscover_tasks()\napp.conf.beat_schedule = {\n    'check-and-perform-auto-top-up-every-night': {\n        'task': 'apps.llm_transaction.tasks.check_and_perform_auto_topup_tasks.check_and_perform_auto_top_up',\n        'schedule': crontab(minute=0, hour=0),\n    },\n    'randomize_featured_functions-every-6-hours': {\n        'task': 'apps.mm_functions.tasks.randomize_featured_functions_tasks.randomize_featured_functions',",
        "detail": "config.celery_config",
        "documentation": {}
    },
    {
        "label": "app.conf.beat_schedule",
        "kind": 5,
        "importPath": "config.celery_config",
        "description": "config.celery_config",
        "peekOfCode": "app.conf.beat_schedule = {\n    'check-and-perform-auto-top-up-every-night': {\n        'task': 'apps.llm_transaction.tasks.check_and_perform_auto_topup_tasks.check_and_perform_auto_top_up',\n        'schedule': crontab(minute=0, hour=0),\n    },\n    'randomize_featured_functions-every-6-hours': {\n        'task': 'apps.mm_functions.tasks.randomize_featured_functions_tasks.randomize_featured_functions',\n        'schedule': crontab(minute=0, hour='*/6'),\n    },\n    'randomize_featured_apis-every-6-hours': {",
        "detail": "config.celery_config",
        "documentation": {}
    },
    {
        "label": "my_setting",
        "kind": 2,
        "importPath": "config.context_processors",
        "description": "config.context_processors",
        "peekOfCode": "def my_setting(request):\n    return {'MY_SETTING': settings}\ndef language_code(request):\n    return {\"LANGUAGE_CODE\": request.LANGUAGE_CODE}\ndef get_cookie(request):\n    return {\"COOKIES\": request.COOKIES}\ndef environment(request):\n    return {'ENVIRONMENT': settings.ENVIRONMENT}",
        "detail": "config.context_processors",
        "documentation": {}
    },
    {
        "label": "language_code",
        "kind": 2,
        "importPath": "config.context_processors",
        "description": "config.context_processors",
        "peekOfCode": "def language_code(request):\n    return {\"LANGUAGE_CODE\": request.LANGUAGE_CODE}\ndef get_cookie(request):\n    return {\"COOKIES\": request.COOKIES}\ndef environment(request):\n    return {'ENVIRONMENT': settings.ENVIRONMENT}",
        "detail": "config.context_processors",
        "documentation": {}
    },
    {
        "label": "get_cookie",
        "kind": 2,
        "importPath": "config.context_processors",
        "description": "config.context_processors",
        "peekOfCode": "def get_cookie(request):\n    return {\"COOKIES\": request.COOKIES}\ndef environment(request):\n    return {'ENVIRONMENT': settings.ENVIRONMENT}",
        "detail": "config.context_processors",
        "documentation": {}
    },
    {
        "label": "environment",
        "kind": 2,
        "importPath": "config.context_processors",
        "description": "config.context_processors",
        "peekOfCode": "def environment(request):\n    return {'ENVIRONMENT': settings.ENVIRONMENT}",
        "detail": "config.context_processors",
        "documentation": {}
    },
    {
        "label": "MediaStorage",
        "kind": 6,
        "importPath": "config.custom_storages",
        "description": "config.custom_storages",
        "peekOfCode": "class MediaStorage(S3Boto3Storage):\n    file_overwrite = True",
        "detail": "config.custom_storages",
        "documentation": {}
    },
    {
        "label": "websocket_urlpatterns",
        "kind": 5,
        "importPath": "config.routing",
        "description": "config.routing",
        "peekOfCode": "websocket_urlpatterns = [\n    re_path(r'ws/logs/(?P<chat_id>\\w+)/$', LogConsumer.as_asgi()),\n    re_path(r'ws/lean_logs/(?P<lean_chat_id>\\w+)/$', LeanModLogConsumer.as_asgi()),\n    re_path(r'ws/orchestration_logs/(?P<query_id>\\w+)/$', OrchestrationLogConsumer.as_asgi()),\n    re_path(r'ws/orchestration_generic_logs/(?P<maestro_id>\\w+)/$', OrchestrationGenericLogConsumer.as_asgi()),\n    path('ws/voidforge_operation_logs/', VoidForgeOperationLogsConsumer.as_asgi()),\n]",
        "detail": "config.routing",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\nAPPEND_SLASH = True\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = os.environ.get(\"SECRET_KEY\", default='')\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = os.environ.get(\"DEBUG\", 'True').lower() in ['true', 'yes', '1']\n# https://docs.djangoproject.com/en/dev/ref/settings/#allowed-hosts\nALLOWED_HOSTS = [\"localhost\", \"0.0.0.0\", \"127.0.0.1\", \"www.Bimod.io\", \"Bimod.io\", \"dev.Bimod.io\"]",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "APPEND_SLASH",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "APPEND_SLASH = True\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = os.environ.get(\"SECRET_KEY\", default='')\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = os.environ.get(\"DEBUG\", 'True').lower() in ['true', 'yes', '1']\n# https://docs.djangoproject.com/en/dev/ref/settings/#allowed-hosts\nALLOWED_HOSTS = [\"localhost\", \"0.0.0.0\", \"127.0.0.1\", \"www.Bimod.io\", \"Bimod.io\", \"dev.Bimod.io\"]\n# Current DJANGO_ENVIRONMENT",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "SECRET_KEY = os.environ.get(\"SECRET_KEY\", default='')\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = os.environ.get(\"DEBUG\", 'True').lower() in ['true', 'yes', '1']\n# https://docs.djangoproject.com/en/dev/ref/settings/#allowed-hosts\nALLOWED_HOSTS = [\"localhost\", \"0.0.0.0\", \"127.0.0.1\", \"www.Bimod.io\", \"Bimod.io\", \"dev.Bimod.io\"]\n# Current DJANGO_ENVIRONMENT\nENVIRONMENT = os.environ.get(\"DJANGO_ENVIRONMENT\", default=\"local\")\n# Application definition\nINSTALLED_APPS = [\n    \"config.apps.MainAppConfig\",",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "DEBUG = os.environ.get(\"DEBUG\", 'True').lower() in ['true', 'yes', '1']\n# https://docs.djangoproject.com/en/dev/ref/settings/#allowed-hosts\nALLOWED_HOSTS = [\"localhost\", \"0.0.0.0\", \"127.0.0.1\", \"www.Bimod.io\", \"Bimod.io\", \"dev.Bimod.io\"]\n# Current DJANGO_ENVIRONMENT\nENVIRONMENT = os.environ.get(\"DJANGO_ENVIRONMENT\", default=\"local\")\n# Application definition\nINSTALLED_APPS = [\n    \"config.apps.MainAppConfig\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "ALLOWED_HOSTS = [\"localhost\", \"0.0.0.0\", \"127.0.0.1\", \"www.Bimod.io\", \"Bimod.io\", \"dev.Bimod.io\"]\n# Current DJANGO_ENVIRONMENT\nENVIRONMENT = os.environ.get(\"DJANGO_ENVIRONMENT\", default=\"local\")\n# Application definition\nINSTALLED_APPS = [\n    \"config.apps.MainAppConfig\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "ENVIRONMENT",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "ENVIRONMENT = os.environ.get(\"DJANGO_ENVIRONMENT\", default=\"local\")\n# Application definition\nINSTALLED_APPS = [\n    \"config.apps.MainAppConfig\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"config.apps.MainAppConfig\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"django_celery_beat\",\n    'django_extensions',",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "CACHEOPS_GENERIC_CASH_TIME",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "CACHEOPS_GENERIC_CASH_TIME = 60 * 60  # 1 hour\nCACHEOPS_REDIS = {\n    'host': 'localhost',  # Redis server hostname\n    'port': 6379,  # Redis server port\n    'db': 1,  # Redis database number\n    'socket_timeout': 3,\n    'retry_on_timeout': True\n}\nCACHEOPS_DEFAULTS = {\n    'timeout': CACHEOPS_GENERIC_CASH_TIME,  # Cache timeout in seconds (60 minutes)",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "CACHEOPS_REDIS",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "CACHEOPS_REDIS = {\n    'host': 'localhost',  # Redis server hostname\n    'port': 6379,  # Redis server port\n    'db': 1,  # Redis database number\n    'socket_timeout': 3,\n    'retry_on_timeout': True\n}\nCACHEOPS_DEFAULTS = {\n    'timeout': CACHEOPS_GENERIC_CASH_TIME,  # Cache timeout in seconds (60 minutes)\n}",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "CACHEOPS_DEFAULTS",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "CACHEOPS_DEFAULTS = {\n    'timeout': CACHEOPS_GENERIC_CASH_TIME,  # Cache timeout in seconds (60 minutes)\n}\nCACHEOPS = {\n    'apps.assistants.Assistant': {'ops': 'all', 'timeout': CACHEOPS_GENERIC_CASH_TIME},\n    'apps.blog_app.BlogPost': {'ops': 'all', 'timeout': CACHEOPS_GENERIC_CASH_TIME},\n    'apps.blog_app.BlogTag': {'ops': 'all', 'timeout': CACHEOPS_GENERIC_CASH_TIME},\n    'apps.blog_app.BlogSEOMeta': {'ops': 'all', 'timeout': CACHEOPS_GENERIC_CASH_TIME},\n    'apps.community_forum.ForumCategory': {'ops': 'all', 'timeout': CACHEOPS_GENERIC_CASH_TIME},\n    'apps.community_forum.ForumThread': {'ops': 'all', 'timeout': CACHEOPS_GENERIC_CASH_TIME},",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "CACHEOPS",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "CACHEOPS = {\n    'apps.assistants.Assistant': {'ops': 'all', 'timeout': CACHEOPS_GENERIC_CASH_TIME},\n    'apps.blog_app.BlogPost': {'ops': 'all', 'timeout': CACHEOPS_GENERIC_CASH_TIME},\n    'apps.blog_app.BlogTag': {'ops': 'all', 'timeout': CACHEOPS_GENERIC_CASH_TIME},\n    'apps.blog_app.BlogSEOMeta': {'ops': 'all', 'timeout': CACHEOPS_GENERIC_CASH_TIME},\n    'apps.community_forum.ForumCategory': {'ops': 'all', 'timeout': CACHEOPS_GENERIC_CASH_TIME},\n    'apps.community_forum.ForumThread': {'ops': 'all', 'timeout': CACHEOPS_GENERIC_CASH_TIME},\n    'apps.community_forum.ForumPost': {'ops': 'all', 'timeout': CACHEOPS_GENERIC_CASH_TIME},\n    'apps.community_forum.ForumComment': {'ops': 'all', 'timeout': CACHEOPS_GENERIC_CASH_TIME},\n    'apps.community_forum.ForumLike': {'ops': 'all', 'timeout': CACHEOPS_GENERIC_CASH_TIME},",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "CACHEOPS_LRU",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "CACHEOPS_LRU = True\nMIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    'corsheaders.middleware.CorsMiddleware',\n    \"whitenoise.middleware.WhiteNoiseMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.locale.LocaleMiddleware\",\n    \"web_project.language_middleware.DefaultLanguageMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    'corsheaders.middleware.CorsMiddleware',\n    \"whitenoise.middleware.WhiteNoiseMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.locale.LocaleMiddleware\",\n    \"web_project.language_middleware.DefaultLanguageMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "ROOT_URLCONF = \"config.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [BASE_DIR / \"templates\"],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [BASE_DIR / \"templates\"],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "ASGI_APPLICATION",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "ASGI_APPLICATION = \"config.asgi.application\"\nWSGI_APPLICATION = \"config.wsgi.application\"\nCHANNEL_LAYERS = {\n    'default': {\n        'BACKEND': 'channels_redis.core.RedisChannelLayer',\n        'CONFIG': {\n            \"hosts\": [('127.0.0.1', 6379)],\n        },\n    },\n}",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "WSGI_APPLICATION = \"config.wsgi.application\"\nCHANNEL_LAYERS = {\n    'default': {\n        'BACKEND': 'channels_redis.core.RedisChannelLayer',\n        'CONFIG': {\n            \"hosts\": [('127.0.0.1', 6379)],\n        },\n    },\n}\n# Database",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "CHANNEL_LAYERS",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "CHANNEL_LAYERS = {\n    'default': {\n        'BACKEND': 'channels_redis.core.RedisChannelLayer',\n        'CONFIG': {\n            \"hosts\": [('127.0.0.1', 6379)],\n        },\n    },\n}\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': os.getenv('DB_NAME'),\n        'USER': os.getenv('DB_USER'),\n        'PASSWORD': os.getenv('DB_PASSWORD'),\n        'HOST': os.getenv('DB_HOST', 'localhost'),\n        'PORT': os.getenv('DB_PORT', ''),\n        'CONN_MAX_AGE': 3600 * 24 * 30,  # 30 days\n    }",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGES",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "LANGUAGES = [\n    # English\n    (\"en\", _(\"English\")),\n    # Turkish\n    (\"tr\", _(\"Turkish\")),\n]\n# Set default language\n# ! Make sure you have cleared the browser cache after changing the default language\nLANGUAGE_CODE = \"en\"\nTIME_ZONE = \"UTC\"",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "LANGUAGE_CODE = \"en\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\nLOCALE_PATHS = [\n    BASE_DIR / \"locale\",\n]\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"/static/\"",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\nLOCALE_PATHS = [\n    BASE_DIR / \"locale\",\n]\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"/static/\"\nSTATIC_ROOT = BASE_DIR / \"staticfiles\"",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\nLOCALE_PATHS = [\n    BASE_DIR / \"locale\",\n]\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"/static/\"\nSTATIC_ROOT = BASE_DIR / \"staticfiles\"\nSTATICFILES_DIRS = [",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "USE_TZ = True\nLOCALE_PATHS = [\n    BASE_DIR / \"locale\",\n]\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"/static/\"\nSTATIC_ROOT = BASE_DIR / \"staticfiles\"\nSTATICFILES_DIRS = [\n    BASE_DIR / \"src\" / \"assets\",",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "LOCALE_PATHS",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "LOCALE_PATHS = [\n    BASE_DIR / \"locale\",\n]\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"/static/\"\nSTATIC_ROOT = BASE_DIR / \"staticfiles\"\nSTATICFILES_DIRS = [\n    BASE_DIR / \"src\" / \"assets\",\n]",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "STATIC_URL = \"/static/\"\nSTATIC_ROOT = BASE_DIR / \"staticfiles\"\nSTATICFILES_DIRS = [\n    BASE_DIR / \"src\" / \"assets\",\n]\nBASE_URL = os.environ.get(\"BASE_URL\", default=\"http://127.0.0.1:8000\")\nAWS_ACCESS_KEY_ID = os.getenv('AWS_ACCESS_KEY_ID')\nAWS_SECRET_ACCESS_KEY = os.getenv('AWS_SECRET_ACCESS_KEY')\nAWS_STORAGE_BUCKET_NAME = os.getenv('AWS_STORAGE_BUCKET_NAME')\nAWS_S3_REGION_NAME = os.getenv('AWS_S3_REGION_NAME', 'eu-central-1')",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "STATIC_ROOT = BASE_DIR / \"staticfiles\"\nSTATICFILES_DIRS = [\n    BASE_DIR / \"src\" / \"assets\",\n]\nBASE_URL = os.environ.get(\"BASE_URL\", default=\"http://127.0.0.1:8000\")\nAWS_ACCESS_KEY_ID = os.getenv('AWS_ACCESS_KEY_ID')\nAWS_SECRET_ACCESS_KEY = os.getenv('AWS_SECRET_ACCESS_KEY')\nAWS_STORAGE_BUCKET_NAME = os.getenv('AWS_STORAGE_BUCKET_NAME')\nAWS_S3_REGION_NAME = os.getenv('AWS_S3_REGION_NAME', 'eu-central-1')\nAWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "STATICFILES_DIRS = [\n    BASE_DIR / \"src\" / \"assets\",\n]\nBASE_URL = os.environ.get(\"BASE_URL\", default=\"http://127.0.0.1:8000\")\nAWS_ACCESS_KEY_ID = os.getenv('AWS_ACCESS_KEY_ID')\nAWS_SECRET_ACCESS_KEY = os.getenv('AWS_SECRET_ACCESS_KEY')\nAWS_STORAGE_BUCKET_NAME = os.getenv('AWS_STORAGE_BUCKET_NAME')\nAWS_S3_REGION_NAME = os.getenv('AWS_S3_REGION_NAME', 'eu-central-1')\nAWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'\nDEFAULT_FILE_STORAGE = 'config.custom_storages.MediaStorage'",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "BASE_URL",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "BASE_URL = os.environ.get(\"BASE_URL\", default=\"http://127.0.0.1:8000\")\nAWS_ACCESS_KEY_ID = os.getenv('AWS_ACCESS_KEY_ID')\nAWS_SECRET_ACCESS_KEY = os.getenv('AWS_SECRET_ACCESS_KEY')\nAWS_STORAGE_BUCKET_NAME = os.getenv('AWS_STORAGE_BUCKET_NAME')\nAWS_S3_REGION_NAME = os.getenv('AWS_S3_REGION_NAME', 'eu-central-1')\nAWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'\nDEFAULT_FILE_STORAGE = 'config.custom_storages.MediaStorage'\nMEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/'\n__SERVICE_PROFIT_MARGIN = float(os.environ.get(\"SERVICE_PROFIT_MARGIN\", default=\"2.00\"))\n__SERVICE_TAX_RATE = float(os.environ.get(\"SERVICE_TAX_RATE\", default=\"0.18\"))",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "AWS_ACCESS_KEY_ID",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "AWS_ACCESS_KEY_ID = os.getenv('AWS_ACCESS_KEY_ID')\nAWS_SECRET_ACCESS_KEY = os.getenv('AWS_SECRET_ACCESS_KEY')\nAWS_STORAGE_BUCKET_NAME = os.getenv('AWS_STORAGE_BUCKET_NAME')\nAWS_S3_REGION_NAME = os.getenv('AWS_S3_REGION_NAME', 'eu-central-1')\nAWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'\nDEFAULT_FILE_STORAGE = 'config.custom_storages.MediaStorage'\nMEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/'\n__SERVICE_PROFIT_MARGIN = float(os.environ.get(\"SERVICE_PROFIT_MARGIN\", default=\"2.00\"))\n__SERVICE_TAX_RATE = float(os.environ.get(\"SERVICE_TAX_RATE\", default=\"0.18\"))\nENCRYPTION_SALT = os.environ.get(\"ENCRYPTION_SALT\", default=\"\")",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "AWS_SECRET_ACCESS_KEY",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "AWS_SECRET_ACCESS_KEY = os.getenv('AWS_SECRET_ACCESS_KEY')\nAWS_STORAGE_BUCKET_NAME = os.getenv('AWS_STORAGE_BUCKET_NAME')\nAWS_S3_REGION_NAME = os.getenv('AWS_S3_REGION_NAME', 'eu-central-1')\nAWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'\nDEFAULT_FILE_STORAGE = 'config.custom_storages.MediaStorage'\nMEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/'\n__SERVICE_PROFIT_MARGIN = float(os.environ.get(\"SERVICE_PROFIT_MARGIN\", default=\"2.00\"))\n__SERVICE_TAX_RATE = float(os.environ.get(\"SERVICE_TAX_RATE\", default=\"0.18\"))\nENCRYPTION_SALT = os.environ.get(\"ENCRYPTION_SALT\", default=\"\")\nMAX_ASSISTANT_EXPORTS_ORGANIZATION = int(os.environ.get(\"MAX_ASSISTANT_EXPORTS_ORGANIZATION\", default=\"5\"))",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "AWS_STORAGE_BUCKET_NAME",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "AWS_STORAGE_BUCKET_NAME = os.getenv('AWS_STORAGE_BUCKET_NAME')\nAWS_S3_REGION_NAME = os.getenv('AWS_S3_REGION_NAME', 'eu-central-1')\nAWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'\nDEFAULT_FILE_STORAGE = 'config.custom_storages.MediaStorage'\nMEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/'\n__SERVICE_PROFIT_MARGIN = float(os.environ.get(\"SERVICE_PROFIT_MARGIN\", default=\"2.00\"))\n__SERVICE_TAX_RATE = float(os.environ.get(\"SERVICE_TAX_RATE\", default=\"0.18\"))\nENCRYPTION_SALT = os.environ.get(\"ENCRYPTION_SALT\", default=\"\")\nMAX_ASSISTANT_EXPORTS_ORGANIZATION = int(os.environ.get(\"MAX_ASSISTANT_EXPORTS_ORGANIZATION\", default=\"5\"))\nMAX_LEANMODS_EXPORTS_ORGANIZATION = int(os.environ.get(\"MAX_LEANMODS_EXPORTS_ORGANIZATION\", default=\"5\"))",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "AWS_S3_REGION_NAME",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "AWS_S3_REGION_NAME = os.getenv('AWS_S3_REGION_NAME', 'eu-central-1')\nAWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'\nDEFAULT_FILE_STORAGE = 'config.custom_storages.MediaStorage'\nMEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/'\n__SERVICE_PROFIT_MARGIN = float(os.environ.get(\"SERVICE_PROFIT_MARGIN\", default=\"2.00\"))\n__SERVICE_TAX_RATE = float(os.environ.get(\"SERVICE_TAX_RATE\", default=\"0.18\"))\nENCRYPTION_SALT = os.environ.get(\"ENCRYPTION_SALT\", default=\"\")\nMAX_ASSISTANT_EXPORTS_ORGANIZATION = int(os.environ.get(\"MAX_ASSISTANT_EXPORTS_ORGANIZATION\", default=\"5\"))\nMAX_LEANMODS_EXPORTS_ORGANIZATION = int(os.environ.get(\"MAX_LEANMODS_EXPORTS_ORGANIZATION\", default=\"5\"))\nMAX_ORCHESTRATIONS_EXPORTS_ORGANIZATION = int(os.environ.get(\"MAX_ORCHESTRATIONS_EXPORTS_ORGANIZATION\", default=\"5\"))",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "AWS_S3_CUSTOM_DOMAIN",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'\nDEFAULT_FILE_STORAGE = 'config.custom_storages.MediaStorage'\nMEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/'\n__SERVICE_PROFIT_MARGIN = float(os.environ.get(\"SERVICE_PROFIT_MARGIN\", default=\"2.00\"))\n__SERVICE_TAX_RATE = float(os.environ.get(\"SERVICE_TAX_RATE\", default=\"0.18\"))\nENCRYPTION_SALT = os.environ.get(\"ENCRYPTION_SALT\", default=\"\")\nMAX_ASSISTANT_EXPORTS_ORGANIZATION = int(os.environ.get(\"MAX_ASSISTANT_EXPORTS_ORGANIZATION\", default=\"5\"))\nMAX_LEANMODS_EXPORTS_ORGANIZATION = int(os.environ.get(\"MAX_LEANMODS_EXPORTS_ORGANIZATION\", default=\"5\"))\nMAX_ORCHESTRATIONS_EXPORTS_ORGANIZATION = int(os.environ.get(\"MAX_ORCHESTRATIONS_EXPORTS_ORGANIZATION\", default=\"5\"))\nWEAVIATE_CLUSTER_URL = os.environ.get(\"WEAVIATE_CLUSTER_URL\", default=\"\")",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_FILE_STORAGE",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "DEFAULT_FILE_STORAGE = 'config.custom_storages.MediaStorage'\nMEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/'\n__SERVICE_PROFIT_MARGIN = float(os.environ.get(\"SERVICE_PROFIT_MARGIN\", default=\"2.00\"))\n__SERVICE_TAX_RATE = float(os.environ.get(\"SERVICE_TAX_RATE\", default=\"0.18\"))\nENCRYPTION_SALT = os.environ.get(\"ENCRYPTION_SALT\", default=\"\")\nMAX_ASSISTANT_EXPORTS_ORGANIZATION = int(os.environ.get(\"MAX_ASSISTANT_EXPORTS_ORGANIZATION\", default=\"5\"))\nMAX_LEANMODS_EXPORTS_ORGANIZATION = int(os.environ.get(\"MAX_LEANMODS_EXPORTS_ORGANIZATION\", default=\"5\"))\nMAX_ORCHESTRATIONS_EXPORTS_ORGANIZATION = int(os.environ.get(\"MAX_ORCHESTRATIONS_EXPORTS_ORGANIZATION\", default=\"5\"))\nWEAVIATE_CLUSTER_URL = os.environ.get(\"WEAVIATE_CLUSTER_URL\", default=\"\")\nWEAVIATE_API_KEY = os.environ.get(\"WEAVIATE_API_KEY\", default=\"\")",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "MEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/'\n__SERVICE_PROFIT_MARGIN = float(os.environ.get(\"SERVICE_PROFIT_MARGIN\", default=\"2.00\"))\n__SERVICE_TAX_RATE = float(os.environ.get(\"SERVICE_TAX_RATE\", default=\"0.18\"))\nENCRYPTION_SALT = os.environ.get(\"ENCRYPTION_SALT\", default=\"\")\nMAX_ASSISTANT_EXPORTS_ORGANIZATION = int(os.environ.get(\"MAX_ASSISTANT_EXPORTS_ORGANIZATION\", default=\"5\"))\nMAX_LEANMODS_EXPORTS_ORGANIZATION = int(os.environ.get(\"MAX_LEANMODS_EXPORTS_ORGANIZATION\", default=\"5\"))\nMAX_ORCHESTRATIONS_EXPORTS_ORGANIZATION = int(os.environ.get(\"MAX_ORCHESTRATIONS_EXPORTS_ORGANIZATION\", default=\"5\"))\nWEAVIATE_CLUSTER_URL = os.environ.get(\"WEAVIATE_CLUSTER_URL\", default=\"\")\nWEAVIATE_API_KEY = os.environ.get(\"WEAVIATE_API_KEY\", default=\"\")\nWEAVIATE_SINGLE_TIME_MEMORY_RETRIEVAL_LIMIT = int(",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "__SERVICE_PROFIT_MARGIN",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "__SERVICE_PROFIT_MARGIN = float(os.environ.get(\"SERVICE_PROFIT_MARGIN\", default=\"2.00\"))\n__SERVICE_TAX_RATE = float(os.environ.get(\"SERVICE_TAX_RATE\", default=\"0.18\"))\nENCRYPTION_SALT = os.environ.get(\"ENCRYPTION_SALT\", default=\"\")\nMAX_ASSISTANT_EXPORTS_ORGANIZATION = int(os.environ.get(\"MAX_ASSISTANT_EXPORTS_ORGANIZATION\", default=\"5\"))\nMAX_LEANMODS_EXPORTS_ORGANIZATION = int(os.environ.get(\"MAX_LEANMODS_EXPORTS_ORGANIZATION\", default=\"5\"))\nMAX_ORCHESTRATIONS_EXPORTS_ORGANIZATION = int(os.environ.get(\"MAX_ORCHESTRATIONS_EXPORTS_ORGANIZATION\", default=\"5\"))\nWEAVIATE_CLUSTER_URL = os.environ.get(\"WEAVIATE_CLUSTER_URL\", default=\"\")\nWEAVIATE_API_KEY = os.environ.get(\"WEAVIATE_API_KEY\", default=\"\")\nWEAVIATE_SINGLE_TIME_MEMORY_RETRIEVAL_LIMIT = int(\n    os.environ.get(\"WEAVIATE_SINGLE_TIME_MEMORY_RETRIEVAL_LIMIT\", default=\"10\"))",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "__SERVICE_TAX_RATE",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "__SERVICE_TAX_RATE = float(os.environ.get(\"SERVICE_TAX_RATE\", default=\"0.18\"))\nENCRYPTION_SALT = os.environ.get(\"ENCRYPTION_SALT\", default=\"\")\nMAX_ASSISTANT_EXPORTS_ORGANIZATION = int(os.environ.get(\"MAX_ASSISTANT_EXPORTS_ORGANIZATION\", default=\"5\"))\nMAX_LEANMODS_EXPORTS_ORGANIZATION = int(os.environ.get(\"MAX_LEANMODS_EXPORTS_ORGANIZATION\", default=\"5\"))\nMAX_ORCHESTRATIONS_EXPORTS_ORGANIZATION = int(os.environ.get(\"MAX_ORCHESTRATIONS_EXPORTS_ORGANIZATION\", default=\"5\"))\nWEAVIATE_CLUSTER_URL = os.environ.get(\"WEAVIATE_CLUSTER_URL\", default=\"\")\nWEAVIATE_API_KEY = os.environ.get(\"WEAVIATE_API_KEY\", default=\"\")\nWEAVIATE_SINGLE_TIME_MEMORY_RETRIEVAL_LIMIT = int(\n    os.environ.get(\"WEAVIATE_SINGLE_TIME_MEMORY_RETRIEVAL_LIMIT\", default=\"10\"))\n# Default primary key field type",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "ENCRYPTION_SALT",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "ENCRYPTION_SALT = os.environ.get(\"ENCRYPTION_SALT\", default=\"\")\nMAX_ASSISTANT_EXPORTS_ORGANIZATION = int(os.environ.get(\"MAX_ASSISTANT_EXPORTS_ORGANIZATION\", default=\"5\"))\nMAX_LEANMODS_EXPORTS_ORGANIZATION = int(os.environ.get(\"MAX_LEANMODS_EXPORTS_ORGANIZATION\", default=\"5\"))\nMAX_ORCHESTRATIONS_EXPORTS_ORGANIZATION = int(os.environ.get(\"MAX_ORCHESTRATIONS_EXPORTS_ORGANIZATION\", default=\"5\"))\nWEAVIATE_CLUSTER_URL = os.environ.get(\"WEAVIATE_CLUSTER_URL\", default=\"\")\nWEAVIATE_API_KEY = os.environ.get(\"WEAVIATE_API_KEY\", default=\"\")\nWEAVIATE_SINGLE_TIME_MEMORY_RETRIEVAL_LIMIT = int(\n    os.environ.get(\"WEAVIATE_SINGLE_TIME_MEMORY_RETRIEVAL_LIMIT\", default=\"10\"))\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MAX_ASSISTANT_EXPORTS_ORGANIZATION",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "MAX_ASSISTANT_EXPORTS_ORGANIZATION = int(os.environ.get(\"MAX_ASSISTANT_EXPORTS_ORGANIZATION\", default=\"5\"))\nMAX_LEANMODS_EXPORTS_ORGANIZATION = int(os.environ.get(\"MAX_LEANMODS_EXPORTS_ORGANIZATION\", default=\"5\"))\nMAX_ORCHESTRATIONS_EXPORTS_ORGANIZATION = int(os.environ.get(\"MAX_ORCHESTRATIONS_EXPORTS_ORGANIZATION\", default=\"5\"))\nWEAVIATE_CLUSTER_URL = os.environ.get(\"WEAVIATE_CLUSTER_URL\", default=\"\")\nWEAVIATE_API_KEY = os.environ.get(\"WEAVIATE_API_KEY\", default=\"\")\nWEAVIATE_SINGLE_TIME_MEMORY_RETRIEVAL_LIMIT = int(\n    os.environ.get(\"WEAVIATE_SINGLE_TIME_MEMORY_RETRIEVAL_LIMIT\", default=\"10\"))\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MAX_LEANMODS_EXPORTS_ORGANIZATION",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "MAX_LEANMODS_EXPORTS_ORGANIZATION = int(os.environ.get(\"MAX_LEANMODS_EXPORTS_ORGANIZATION\", default=\"5\"))\nMAX_ORCHESTRATIONS_EXPORTS_ORGANIZATION = int(os.environ.get(\"MAX_ORCHESTRATIONS_EXPORTS_ORGANIZATION\", default=\"5\"))\nWEAVIATE_CLUSTER_URL = os.environ.get(\"WEAVIATE_CLUSTER_URL\", default=\"\")\nWEAVIATE_API_KEY = os.environ.get(\"WEAVIATE_API_KEY\", default=\"\")\nWEAVIATE_SINGLE_TIME_MEMORY_RETRIEVAL_LIMIT = int(\n    os.environ.get(\"WEAVIATE_SINGLE_TIME_MEMORY_RETRIEVAL_LIMIT\", default=\"10\"))\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# Template Settings",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "MAX_ORCHESTRATIONS_EXPORTS_ORGANIZATION",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "MAX_ORCHESTRATIONS_EXPORTS_ORGANIZATION = int(os.environ.get(\"MAX_ORCHESTRATIONS_EXPORTS_ORGANIZATION\", default=\"5\"))\nWEAVIATE_CLUSTER_URL = os.environ.get(\"WEAVIATE_CLUSTER_URL\", default=\"\")\nWEAVIATE_API_KEY = os.environ.get(\"WEAVIATE_API_KEY\", default=\"\")\nWEAVIATE_SINGLE_TIME_MEMORY_RETRIEVAL_LIMIT = int(\n    os.environ.get(\"WEAVIATE_SINGLE_TIME_MEMORY_RETRIEVAL_LIMIT\", default=\"10\"))\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# Template Settings\n# ------------------------------------------------------------------------------",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "WEAVIATE_CLUSTER_URL",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "WEAVIATE_CLUSTER_URL = os.environ.get(\"WEAVIATE_CLUSTER_URL\", default=\"\")\nWEAVIATE_API_KEY = os.environ.get(\"WEAVIATE_API_KEY\", default=\"\")\nWEAVIATE_SINGLE_TIME_MEMORY_RETRIEVAL_LIMIT = int(\n    os.environ.get(\"WEAVIATE_SINGLE_TIME_MEMORY_RETRIEVAL_LIMIT\", default=\"10\"))\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# Template Settings\n# ------------------------------------------------------------------------------\nTHEME_LAYOUT_DIR = THEME_LAYOUT_DIR",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "WEAVIATE_API_KEY",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "WEAVIATE_API_KEY = os.environ.get(\"WEAVIATE_API_KEY\", default=\"\")\nWEAVIATE_SINGLE_TIME_MEMORY_RETRIEVAL_LIMIT = int(\n    os.environ.get(\"WEAVIATE_SINGLE_TIME_MEMORY_RETRIEVAL_LIMIT\", default=\"10\"))\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# Template Settings\n# ------------------------------------------------------------------------------\nTHEME_LAYOUT_DIR = THEME_LAYOUT_DIR\nTEMPLATE_CONFIG = TEMPLATE_CONFIG",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "WEAVIATE_SINGLE_TIME_MEMORY_RETRIEVAL_LIMIT",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "WEAVIATE_SINGLE_TIME_MEMORY_RETRIEVAL_LIMIT = int(\n    os.environ.get(\"WEAVIATE_SINGLE_TIME_MEMORY_RETRIEVAL_LIMIT\", default=\"10\"))\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# Template Settings\n# ------------------------------------------------------------------------------\nTHEME_LAYOUT_DIR = THEME_LAYOUT_DIR\nTEMPLATE_CONFIG = TEMPLATE_CONFIG\nTHEME_VARIABLES = THEME_VARIABLES",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# Template Settings\n# ------------------------------------------------------------------------------\nTHEME_LAYOUT_DIR = THEME_LAYOUT_DIR\nTEMPLATE_CONFIG = TEMPLATE_CONFIG\nTHEME_VARIABLES = THEME_VARIABLES\n# Email Settings\n# ------------------------------------------------------------------------------\n# Change this if you need to send real emails for testing purposes.\nFORCE_SMTP_USE = False",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "THEME_LAYOUT_DIR",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "THEME_LAYOUT_DIR = THEME_LAYOUT_DIR\nTEMPLATE_CONFIG = TEMPLATE_CONFIG\nTHEME_VARIABLES = THEME_VARIABLES\n# Email Settings\n# ------------------------------------------------------------------------------\n# Change this if you need to send real emails for testing purposes.\nFORCE_SMTP_USE = False\nif ENVIRONMENT != \"local\" or FORCE_SMTP_USE:\n    print(\"[settings.py] Email backend is set to SMTP for production environment.\")\n    EMAIL_BACKEND = \"django.core.mail.backends.smtp.EmailBackend\"",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATE_CONFIG",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "TEMPLATE_CONFIG = TEMPLATE_CONFIG\nTHEME_VARIABLES = THEME_VARIABLES\n# Email Settings\n# ------------------------------------------------------------------------------\n# Change this if you need to send real emails for testing purposes.\nFORCE_SMTP_USE = False\nif ENVIRONMENT != \"local\" or FORCE_SMTP_USE:\n    print(\"[settings.py] Email backend is set to SMTP for production environment.\")\n    EMAIL_BACKEND = \"django.core.mail.backends.smtp.EmailBackend\"\n    EMAIL_HOST = os.getenv('EMAIL_HOST', 'smtp.gmail.com')",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "THEME_VARIABLES",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "THEME_VARIABLES = THEME_VARIABLES\n# Email Settings\n# ------------------------------------------------------------------------------\n# Change this if you need to send real emails for testing purposes.\nFORCE_SMTP_USE = False\nif ENVIRONMENT != \"local\" or FORCE_SMTP_USE:\n    print(\"[settings.py] Email backend is set to SMTP for production environment.\")\n    EMAIL_BACKEND = \"django.core.mail.backends.smtp.EmailBackend\"\n    EMAIL_HOST = os.getenv('EMAIL_HOST', 'smtp.gmail.com')\n    EMAIL_PORT = os.getenv('EMAIL_PORT', 587)",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "FORCE_SMTP_USE",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "FORCE_SMTP_USE = False\nif ENVIRONMENT != \"local\" or FORCE_SMTP_USE:\n    print(\"[settings.py] Email backend is set to SMTP for production environment.\")\n    EMAIL_BACKEND = \"django.core.mail.backends.smtp.EmailBackend\"\n    EMAIL_HOST = os.getenv('EMAIL_HOST', 'smtp.gmail.com')\n    EMAIL_PORT = os.getenv('EMAIL_PORT', 587)\n    EMAIL_USE_SSL = os.getenv('EMAIL_USE_SSL', 'False').lower() in ['true', '1', 'yes']\n    EMAIL_USE_TLS = os.getenv('EMAIL_USE_TLS', 'True').lower() in ['true', '1', 'yes']\n    EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')\n    EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "LOGIN_URL",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "LOGIN_URL = \"/app/login/\"\nLOGOUT_REDIRECT_URL = \"/app/login/\"\n# Session\n# ------------------------------------------------------------------------------\nSESSION_ENGINE = \"django.contrib.sessions.backends.db\"\nSESSION_COOKIE_SECURE = True\nSESSION_COOKIE_HTTPONLY = True\nSESSION_COOKIE_SAMESITE = \"Lax\"\nSESSION_SAVE_EVERY_REQUEST = True\nSESSION_COOKIE_AGE = 60 * 60 * 24  # 1 day",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "LOGOUT_REDIRECT_URL",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "LOGOUT_REDIRECT_URL = \"/app/login/\"\n# Session\n# ------------------------------------------------------------------------------\nSESSION_ENGINE = \"django.contrib.sessions.backends.db\"\nSESSION_COOKIE_SECURE = True\nSESSION_COOKIE_HTTPONLY = True\nSESSION_COOKIE_SAMESITE = \"Lax\"\nSESSION_SAVE_EVERY_REQUEST = True\nSESSION_COOKIE_AGE = 60 * 60 * 24  # 1 day\nCSRF_TRUSTED_ORIGINS = [",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "SESSION_ENGINE",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "SESSION_ENGINE = \"django.contrib.sessions.backends.db\"\nSESSION_COOKIE_SECURE = True\nSESSION_COOKIE_HTTPONLY = True\nSESSION_COOKIE_SAMESITE = \"Lax\"\nSESSION_SAVE_EVERY_REQUEST = True\nSESSION_COOKIE_AGE = 60 * 60 * 24  # 1 day\nCSRF_TRUSTED_ORIGINS = [\n    \"http://localhost:5050\",\n    \"http://localhost:8000\",\n    \"http://0.0.0.0:8000\",",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "SESSION_COOKIE_SECURE",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "SESSION_COOKIE_SECURE = True\nSESSION_COOKIE_HTTPONLY = True\nSESSION_COOKIE_SAMESITE = \"Lax\"\nSESSION_SAVE_EVERY_REQUEST = True\nSESSION_COOKIE_AGE = 60 * 60 * 24  # 1 day\nCSRF_TRUSTED_ORIGINS = [\n    \"http://localhost:5050\",\n    \"http://localhost:8000\",\n    \"http://0.0.0.0:8000\",\n    \"http://127.0.0.1:8000\",",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "SESSION_COOKIE_HTTPONLY",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "SESSION_COOKIE_HTTPONLY = True\nSESSION_COOKIE_SAMESITE = \"Lax\"\nSESSION_SAVE_EVERY_REQUEST = True\nSESSION_COOKIE_AGE = 60 * 60 * 24  # 1 day\nCSRF_TRUSTED_ORIGINS = [\n    \"http://localhost:5050\",\n    \"http://localhost:8000\",\n    \"http://0.0.0.0:8000\",\n    \"http://127.0.0.1:8000\",\n    \"https://Bimod.io\",",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "SESSION_COOKIE_SAMESITE",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "SESSION_COOKIE_SAMESITE = \"Lax\"\nSESSION_SAVE_EVERY_REQUEST = True\nSESSION_COOKIE_AGE = 60 * 60 * 24  # 1 day\nCSRF_TRUSTED_ORIGINS = [\n    \"http://localhost:5050\",\n    \"http://localhost:8000\",\n    \"http://0.0.0.0:8000\",\n    \"http://127.0.0.1:8000\",\n    \"https://Bimod.io\",\n    \"https://dev.Bimod.io\",",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "SESSION_SAVE_EVERY_REQUEST",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "SESSION_SAVE_EVERY_REQUEST = True\nSESSION_COOKIE_AGE = 60 * 60 * 24  # 1 day\nCSRF_TRUSTED_ORIGINS = [\n    \"http://localhost:5050\",\n    \"http://localhost:8000\",\n    \"http://0.0.0.0:8000\",\n    \"http://127.0.0.1:8000\",\n    \"https://Bimod.io\",\n    \"https://dev.Bimod.io\",\n    \"https://www.Bimod.io\",",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "SESSION_COOKIE_AGE",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "SESSION_COOKIE_AGE = 60 * 60 * 24  # 1 day\nCSRF_TRUSTED_ORIGINS = [\n    \"http://localhost:5050\",\n    \"http://localhost:8000\",\n    \"http://0.0.0.0:8000\",\n    \"http://127.0.0.1:8000\",\n    \"https://Bimod.io\",\n    \"https://dev.Bimod.io\",\n    \"https://www.Bimod.io\",\n]",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "CSRF_TRUSTED_ORIGINS",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "CSRF_TRUSTED_ORIGINS = [\n    \"http://localhost:5050\",\n    \"http://localhost:8000\",\n    \"http://0.0.0.0:8000\",\n    \"http://127.0.0.1:8000\",\n    \"https://Bimod.io\",\n    \"https://dev.Bimod.io\",\n    \"https://www.Bimod.io\",\n]\nCORS_ALLOWED_ORIGINS = [",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOWED_ORIGINS",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "CORS_ALLOWED_ORIGINS = [\n    \"http://localhost:8000\",\n    \"http://localhost:5050\",\n    \"http://0.0.0.0:8000\",\n    \"http://127.0.0.1:8000\",\n    \"https://Bimod.io\",\n    \"https://dev.Bimod.io\",\n    \"https://www.Bimod.io\",\n]\nCORS_ALLOW_CREDENTIALS = True",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOW_CREDENTIALS",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "CORS_ALLOW_CREDENTIALS = True\nSUFFIX_ANY = \"*\"\nEXCLUDED_PAGES = [\n    \"/\",\n    \"/admin/*\",\n    \"/app/login/*\",\n    \"/app/logout/*\",\n    \"/app/register/*\",\n    \"/app/verify_email_page/*\",\n    \"/app/verify/email/*\",",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "SUFFIX_ANY",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "SUFFIX_ANY = \"*\"\nEXCLUDED_PAGES = [\n    \"/\",\n    \"/admin/*\",\n    \"/app/login/*\",\n    \"/app/logout/*\",\n    \"/app/register/*\",\n    \"/app/verify_email_page/*\",\n    \"/app/verify/email/*\",\n    \"/app/verify_email/*\",",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "EXCLUDED_PAGES",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "EXCLUDED_PAGES = [\n    \"/\",\n    \"/admin/*\",\n    \"/app/login/*\",\n    \"/app/logout/*\",\n    \"/app/register/*\",\n    \"/app/verify_email_page/*\",\n    \"/app/verify/email/*\",\n    \"/app/verify_email/*\",\n    \"/app/send_verification/*\",",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "DESIGN_DOCS_ROUTE",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "DESIGN_DOCS_ROUTE = 'dev/design/'\nEXPORT_API_BASE_URL = \"app/export_assistants/api/v1/export\"\nEXPORT_LEANMOD_API_BASE_URL = \"app/export_leanmods/api/v1/export\"\nEXPORT_ORCHESTRATION_API_BASE_URL = \"app/export_orchestrations/api/v1/export\"\nLEAN_BASE_URL = BASE_URL.split(\"://\")[-1].split(\":\")[0]\nCELERY_BROKER_URL = 'redis://localhost:6379/0'\nCELERY_RESULT_BACKEND = 'redis://localhost:6379/0'\nCELERY_ACCEPT_CONTENT = ['json']\nCELERY_TASK_SERIALIZER = 'json'\nCELERY_RESULT_SERIALIZER = 'json'",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "EXPORT_API_BASE_URL",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "EXPORT_API_BASE_URL = \"app/export_assistants/api/v1/export\"\nEXPORT_LEANMOD_API_BASE_URL = \"app/export_leanmods/api/v1/export\"\nEXPORT_ORCHESTRATION_API_BASE_URL = \"app/export_orchestrations/api/v1/export\"\nLEAN_BASE_URL = BASE_URL.split(\"://\")[-1].split(\":\")[0]\nCELERY_BROKER_URL = 'redis://localhost:6379/0'\nCELERY_RESULT_BACKEND = 'redis://localhost:6379/0'\nCELERY_ACCEPT_CONTENT = ['json']\nCELERY_TASK_SERIALIZER = 'json'\nCELERY_RESULT_SERIALIZER = 'json'\nCELERY_TIMEZONE = 'UTC'",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "EXPORT_LEANMOD_API_BASE_URL",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "EXPORT_LEANMOD_API_BASE_URL = \"app/export_leanmods/api/v1/export\"\nEXPORT_ORCHESTRATION_API_BASE_URL = \"app/export_orchestrations/api/v1/export\"\nLEAN_BASE_URL = BASE_URL.split(\"://\")[-1].split(\":\")[0]\nCELERY_BROKER_URL = 'redis://localhost:6379/0'\nCELERY_RESULT_BACKEND = 'redis://localhost:6379/0'\nCELERY_ACCEPT_CONTENT = ['json']\nCELERY_TASK_SERIALIZER = 'json'\nCELERY_RESULT_SERIALIZER = 'json'\nCELERY_TIMEZONE = 'UTC'\nCELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "EXPORT_ORCHESTRATION_API_BASE_URL",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "EXPORT_ORCHESTRATION_API_BASE_URL = \"app/export_orchestrations/api/v1/export\"\nLEAN_BASE_URL = BASE_URL.split(\"://\")[-1].split(\":\")[0]\nCELERY_BROKER_URL = 'redis://localhost:6379/0'\nCELERY_RESULT_BACKEND = 'redis://localhost:6379/0'\nCELERY_ACCEPT_CONTENT = ['json']\nCELERY_TASK_SERIALIZER = 'json'\nCELERY_RESULT_SERIALIZER = 'json'\nCELERY_TIMEZONE = 'UTC'\nCELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'\nCLEAN_DEBUG = True",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "LEAN_BASE_URL",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "LEAN_BASE_URL = BASE_URL.split(\"://\")[-1].split(\":\")[0]\nCELERY_BROKER_URL = 'redis://localhost:6379/0'\nCELERY_RESULT_BACKEND = 'redis://localhost:6379/0'\nCELERY_ACCEPT_CONTENT = ['json']\nCELERY_TASK_SERIALIZER = 'json'\nCELERY_RESULT_SERIALIZER = 'json'\nCELERY_TIMEZONE = 'UTC'\nCELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'\nCLEAN_DEBUG = True\nLOGGING = {",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "CELERY_BROKER_URL",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "CELERY_BROKER_URL = 'redis://localhost:6379/0'\nCELERY_RESULT_BACKEND = 'redis://localhost:6379/0'\nCELERY_ACCEPT_CONTENT = ['json']\nCELERY_TASK_SERIALIZER = 'json'\nCELERY_RESULT_SERIALIZER = 'json'\nCELERY_TIMEZONE = 'UTC'\nCELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'\nCLEAN_DEBUG = True\nLOGGING = {\n    'version': 1,",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "CELERY_RESULT_BACKEND",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'\nCELERY_ACCEPT_CONTENT = ['json']\nCELERY_TASK_SERIALIZER = 'json'\nCELERY_RESULT_SERIALIZER = 'json'\nCELERY_TIMEZONE = 'UTC'\nCELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'\nCLEAN_DEBUG = True\nLOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "CELERY_ACCEPT_CONTENT",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "CELERY_ACCEPT_CONTENT = ['json']\nCELERY_TASK_SERIALIZER = 'json'\nCELERY_RESULT_SERIALIZER = 'json'\nCELERY_TIMEZONE = 'UTC'\nCELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'\nCLEAN_DEBUG = True\nLOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'formatters': {",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "CELERY_TASK_SERIALIZER",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "CELERY_TASK_SERIALIZER = 'json'\nCELERY_RESULT_SERIALIZER = 'json'\nCELERY_TIMEZONE = 'UTC'\nCELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'\nCLEAN_DEBUG = True\nLOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'formatters': {\n        'verbose': {",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "CELERY_RESULT_SERIALIZER",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "CELERY_RESULT_SERIALIZER = 'json'\nCELERY_TIMEZONE = 'UTC'\nCELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'\nCLEAN_DEBUG = True\nLOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'formatters': {\n        'verbose': {\n            'format': '{levelname} {asctime} {module} {message}',",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "CELERY_TIMEZONE",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "CELERY_TIMEZONE = 'UTC'\nCELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'\nCLEAN_DEBUG = True\nLOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'formatters': {\n        'verbose': {\n            'format': '{levelname} {asctime} {module} {message}',\n            'style': '{',",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "CELERY_BEAT_SCHEDULER",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'\nCLEAN_DEBUG = True\nLOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'formatters': {\n        'verbose': {\n            'format': '{levelname} {asctime} {module} {message}',\n            'style': '{',\n        },",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "CLEAN_DEBUG",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "CLEAN_DEBUG = True\nLOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'formatters': {\n        'verbose': {\n            'format': '{levelname} {asctime} {module} {message}',\n            'style': '{',\n        },\n        'simple': {",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "LOGGING",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "LOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'formatters': {\n        'verbose': {\n            'format': '{levelname} {asctime} {module} {message}',\n            'style': '{',\n        },\n        'simple': {\n            'format': '{levelname} {message}',",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "CONTEXT_MEMORY",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "CONTEXT_MEMORY = os.environ.get(\"CONTEXT_MEMORY\", default=\"0\")\nCONTEXT_MEMORY_RETRIEVAL = os.environ.get(\"CONTEXT_MEMORY_RETRIEVAL\", default=\"0\")\nFILE_INTERPRETER = os.environ.get(\"FILE_INTERPRETER\", default=\"0\")\nIMAGE_INTERPRETER = os.environ.get(\"IMAGE_INTERPRETER\", default=\"0\")\nCODE_INTERPRETER = os.environ.get(\"CODE_INTERPRETER\", default=\"0\")\nDOWNLOAD_EXECUTOR = os.environ.get(\"DOWNLOAD_EXECUTOR\", default=\"0\")\nFILE_SYSTEMS_EXECUTOR = os.environ.get(\"FILE_SYSTEMS_EXECUTOR\", default=\"0\")\nKNOWLEDGE_BASE_EXECUTOR = os.environ.get(\"KNOWLEDGE_BASE_EXECUTOR\", default=\"0\")\nBROWSING_EXECUTOR = os.environ.get(\"BROWSING_EXECUTOR\", default=\"0\")\nCODE_REPOSITORY_EXECUTOR = os.environ.get(\"CODE_REPOSITORY_EXECUTOR\", default=\"0\")",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "CONTEXT_MEMORY_RETRIEVAL",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "CONTEXT_MEMORY_RETRIEVAL = os.environ.get(\"CONTEXT_MEMORY_RETRIEVAL\", default=\"0\")\nFILE_INTERPRETER = os.environ.get(\"FILE_INTERPRETER\", default=\"0\")\nIMAGE_INTERPRETER = os.environ.get(\"IMAGE_INTERPRETER\", default=\"0\")\nCODE_INTERPRETER = os.environ.get(\"CODE_INTERPRETER\", default=\"0\")\nDOWNLOAD_EXECUTOR = os.environ.get(\"DOWNLOAD_EXECUTOR\", default=\"0\")\nFILE_SYSTEMS_EXECUTOR = os.environ.get(\"FILE_SYSTEMS_EXECUTOR\", default=\"0\")\nKNOWLEDGE_BASE_EXECUTOR = os.environ.get(\"KNOWLEDGE_BASE_EXECUTOR\", default=\"0\")\nBROWSING_EXECUTOR = os.environ.get(\"BROWSING_EXECUTOR\", default=\"0\")\nCODE_REPOSITORY_EXECUTOR = os.environ.get(\"CODE_REPOSITORY_EXECUTOR\", default=\"0\")\nML_MODEL_EXECUTOR = os.environ.get(\"ML_MODEL_EXECUTOR\", default=\"0\")",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "FILE_INTERPRETER",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "FILE_INTERPRETER = os.environ.get(\"FILE_INTERPRETER\", default=\"0\")\nIMAGE_INTERPRETER = os.environ.get(\"IMAGE_INTERPRETER\", default=\"0\")\nCODE_INTERPRETER = os.environ.get(\"CODE_INTERPRETER\", default=\"0\")\nDOWNLOAD_EXECUTOR = os.environ.get(\"DOWNLOAD_EXECUTOR\", default=\"0\")\nFILE_SYSTEMS_EXECUTOR = os.environ.get(\"FILE_SYSTEMS_EXECUTOR\", default=\"0\")\nKNOWLEDGE_BASE_EXECUTOR = os.environ.get(\"KNOWLEDGE_BASE_EXECUTOR\", default=\"0\")\nBROWSING_EXECUTOR = os.environ.get(\"BROWSING_EXECUTOR\", default=\"0\")\nCODE_REPOSITORY_EXECUTOR = os.environ.get(\"CODE_REPOSITORY_EXECUTOR\", default=\"0\")\nML_MODEL_EXECUTOR = os.environ.get(\"ML_MODEL_EXECUTOR\", default=\"0\")\nINTERNAL_CUSTOM_FUNCTION_EXECUTOR = os.environ.get(\"INTERNAL_CUSTOM_FUNCTION_EXECUTOR\", default=\"0\")",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "IMAGE_INTERPRETER",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "IMAGE_INTERPRETER = os.environ.get(\"IMAGE_INTERPRETER\", default=\"0\")\nCODE_INTERPRETER = os.environ.get(\"CODE_INTERPRETER\", default=\"0\")\nDOWNLOAD_EXECUTOR = os.environ.get(\"DOWNLOAD_EXECUTOR\", default=\"0\")\nFILE_SYSTEMS_EXECUTOR = os.environ.get(\"FILE_SYSTEMS_EXECUTOR\", default=\"0\")\nKNOWLEDGE_BASE_EXECUTOR = os.environ.get(\"KNOWLEDGE_BASE_EXECUTOR\", default=\"0\")\nBROWSING_EXECUTOR = os.environ.get(\"BROWSING_EXECUTOR\", default=\"0\")\nCODE_REPOSITORY_EXECUTOR = os.environ.get(\"CODE_REPOSITORY_EXECUTOR\", default=\"0\")\nML_MODEL_EXECUTOR = os.environ.get(\"ML_MODEL_EXECUTOR\", default=\"0\")\nINTERNAL_CUSTOM_FUNCTION_EXECUTOR = os.environ.get(\"INTERNAL_CUSTOM_FUNCTION_EXECUTOR\", default=\"0\")\nEXTERNAL_CUSTOM_FUNCTION_EXECUTOR = os.environ.get(\"EXTERNAL_CUSTOM_FUNCTION_EXECUTOR\", default=\"0\")",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "CODE_INTERPRETER",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "CODE_INTERPRETER = os.environ.get(\"CODE_INTERPRETER\", default=\"0\")\nDOWNLOAD_EXECUTOR = os.environ.get(\"DOWNLOAD_EXECUTOR\", default=\"0\")\nFILE_SYSTEMS_EXECUTOR = os.environ.get(\"FILE_SYSTEMS_EXECUTOR\", default=\"0\")\nKNOWLEDGE_BASE_EXECUTOR = os.environ.get(\"KNOWLEDGE_BASE_EXECUTOR\", default=\"0\")\nBROWSING_EXECUTOR = os.environ.get(\"BROWSING_EXECUTOR\", default=\"0\")\nCODE_REPOSITORY_EXECUTOR = os.environ.get(\"CODE_REPOSITORY_EXECUTOR\", default=\"0\")\nML_MODEL_EXECUTOR = os.environ.get(\"ML_MODEL_EXECUTOR\", default=\"0\")\nINTERNAL_CUSTOM_FUNCTION_EXECUTOR = os.environ.get(\"INTERNAL_CUSTOM_FUNCTION_EXECUTOR\", default=\"0\")\nEXTERNAL_CUSTOM_FUNCTION_EXECUTOR = os.environ.get(\"EXTERNAL_CUSTOM_FUNCTION_EXECUTOR\", default=\"0\")\nINTERNAL_CUSTOM_API_EXECUTOR = os.environ.get(\"INTERNAL_CUSTOM_API_EXECUTOR\", default=\"0\")",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "DOWNLOAD_EXECUTOR",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "DOWNLOAD_EXECUTOR = os.environ.get(\"DOWNLOAD_EXECUTOR\", default=\"0\")\nFILE_SYSTEMS_EXECUTOR = os.environ.get(\"FILE_SYSTEMS_EXECUTOR\", default=\"0\")\nKNOWLEDGE_BASE_EXECUTOR = os.environ.get(\"KNOWLEDGE_BASE_EXECUTOR\", default=\"0\")\nBROWSING_EXECUTOR = os.environ.get(\"BROWSING_EXECUTOR\", default=\"0\")\nCODE_REPOSITORY_EXECUTOR = os.environ.get(\"CODE_REPOSITORY_EXECUTOR\", default=\"0\")\nML_MODEL_EXECUTOR = os.environ.get(\"ML_MODEL_EXECUTOR\", default=\"0\")\nINTERNAL_CUSTOM_FUNCTION_EXECUTOR = os.environ.get(\"INTERNAL_CUSTOM_FUNCTION_EXECUTOR\", default=\"0\")\nEXTERNAL_CUSTOM_FUNCTION_EXECUTOR = os.environ.get(\"EXTERNAL_CUSTOM_FUNCTION_EXECUTOR\", default=\"0\")\nINTERNAL_CUSTOM_API_EXECUTOR = os.environ.get(\"INTERNAL_CUSTOM_API_EXECUTOR\", default=\"0\")\nEXTERNAL_CUSTOM_API_EXECUTOR = os.environ.get(\"EXTERNAL_CUSTOM_API_EXECUTOR\", default=\"0\")",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "FILE_SYSTEMS_EXECUTOR",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "FILE_SYSTEMS_EXECUTOR = os.environ.get(\"FILE_SYSTEMS_EXECUTOR\", default=\"0\")\nKNOWLEDGE_BASE_EXECUTOR = os.environ.get(\"KNOWLEDGE_BASE_EXECUTOR\", default=\"0\")\nBROWSING_EXECUTOR = os.environ.get(\"BROWSING_EXECUTOR\", default=\"0\")\nCODE_REPOSITORY_EXECUTOR = os.environ.get(\"CODE_REPOSITORY_EXECUTOR\", default=\"0\")\nML_MODEL_EXECUTOR = os.environ.get(\"ML_MODEL_EXECUTOR\", default=\"0\")\nINTERNAL_CUSTOM_FUNCTION_EXECUTOR = os.environ.get(\"INTERNAL_CUSTOM_FUNCTION_EXECUTOR\", default=\"0\")\nEXTERNAL_CUSTOM_FUNCTION_EXECUTOR = os.environ.get(\"EXTERNAL_CUSTOM_FUNCTION_EXECUTOR\", default=\"0\")\nINTERNAL_CUSTOM_API_EXECUTOR = os.environ.get(\"INTERNAL_CUSTOM_API_EXECUTOR\", default=\"0\")\nEXTERNAL_CUSTOM_API_EXECUTOR = os.environ.get(\"EXTERNAL_CUSTOM_API_EXECUTOR\", default=\"0\")\nINTERNAL_CUSTOM_SCRIPT_EXECUTOR = os.environ.get(\"INTERNAL_CUSTOM_SCRIPT_EXECUTOR\", default=\"0\")",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "KNOWLEDGE_BASE_EXECUTOR",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "KNOWLEDGE_BASE_EXECUTOR = os.environ.get(\"KNOWLEDGE_BASE_EXECUTOR\", default=\"0\")\nBROWSING_EXECUTOR = os.environ.get(\"BROWSING_EXECUTOR\", default=\"0\")\nCODE_REPOSITORY_EXECUTOR = os.environ.get(\"CODE_REPOSITORY_EXECUTOR\", default=\"0\")\nML_MODEL_EXECUTOR = os.environ.get(\"ML_MODEL_EXECUTOR\", default=\"0\")\nINTERNAL_CUSTOM_FUNCTION_EXECUTOR = os.environ.get(\"INTERNAL_CUSTOM_FUNCTION_EXECUTOR\", default=\"0\")\nEXTERNAL_CUSTOM_FUNCTION_EXECUTOR = os.environ.get(\"EXTERNAL_CUSTOM_FUNCTION_EXECUTOR\", default=\"0\")\nINTERNAL_CUSTOM_API_EXECUTOR = os.environ.get(\"INTERNAL_CUSTOM_API_EXECUTOR\", default=\"0\")\nEXTERNAL_CUSTOM_API_EXECUTOR = os.environ.get(\"EXTERNAL_CUSTOM_API_EXECUTOR\", default=\"0\")\nINTERNAL_CUSTOM_SCRIPT_EXECUTOR = os.environ.get(\"INTERNAL_CUSTOM_SCRIPT_EXECUTOR\", default=\"0\")\nEXTERNAL_CUSTOM_SCRIPT_EXECUTOR = os.environ.get(\"EXTERNAL_CUSTOM_SCRIPT_EXECUTOR\", default=\"0\")",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "BROWSING_EXECUTOR",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "BROWSING_EXECUTOR = os.environ.get(\"BROWSING_EXECUTOR\", default=\"0\")\nCODE_REPOSITORY_EXECUTOR = os.environ.get(\"CODE_REPOSITORY_EXECUTOR\", default=\"0\")\nML_MODEL_EXECUTOR = os.environ.get(\"ML_MODEL_EXECUTOR\", default=\"0\")\nINTERNAL_CUSTOM_FUNCTION_EXECUTOR = os.environ.get(\"INTERNAL_CUSTOM_FUNCTION_EXECUTOR\", default=\"0\")\nEXTERNAL_CUSTOM_FUNCTION_EXECUTOR = os.environ.get(\"EXTERNAL_CUSTOM_FUNCTION_EXECUTOR\", default=\"0\")\nINTERNAL_CUSTOM_API_EXECUTOR = os.environ.get(\"INTERNAL_CUSTOM_API_EXECUTOR\", default=\"0\")\nEXTERNAL_CUSTOM_API_EXECUTOR = os.environ.get(\"EXTERNAL_CUSTOM_API_EXECUTOR\", default=\"0\")\nINTERNAL_CUSTOM_SCRIPT_EXECUTOR = os.environ.get(\"INTERNAL_CUSTOM_SCRIPT_EXECUTOR\", default=\"0\")\nEXTERNAL_CUSTOM_SCRIPT_EXECUTOR = os.environ.get(\"EXTERNAL_CUSTOM_SCRIPT_EXECUTOR\", default=\"0\")\nSQL_READ_EXECUTOR = os.environ.get(\"SQL_READ_EXECUTOR\", default=\"0\")",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "CODE_REPOSITORY_EXECUTOR",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "CODE_REPOSITORY_EXECUTOR = os.environ.get(\"CODE_REPOSITORY_EXECUTOR\", default=\"0\")\nML_MODEL_EXECUTOR = os.environ.get(\"ML_MODEL_EXECUTOR\", default=\"0\")\nINTERNAL_CUSTOM_FUNCTION_EXECUTOR = os.environ.get(\"INTERNAL_CUSTOM_FUNCTION_EXECUTOR\", default=\"0\")\nEXTERNAL_CUSTOM_FUNCTION_EXECUTOR = os.environ.get(\"EXTERNAL_CUSTOM_FUNCTION_EXECUTOR\", default=\"0\")\nINTERNAL_CUSTOM_API_EXECUTOR = os.environ.get(\"INTERNAL_CUSTOM_API_EXECUTOR\", default=\"0\")\nEXTERNAL_CUSTOM_API_EXECUTOR = os.environ.get(\"EXTERNAL_CUSTOM_API_EXECUTOR\", default=\"0\")\nINTERNAL_CUSTOM_SCRIPT_EXECUTOR = os.environ.get(\"INTERNAL_CUSTOM_SCRIPT_EXECUTOR\", default=\"0\")\nEXTERNAL_CUSTOM_SCRIPT_EXECUTOR = os.environ.get(\"EXTERNAL_CUSTOM_SCRIPT_EXECUTOR\", default=\"0\")\nSQL_READ_EXECUTOR = os.environ.get(\"SQL_READ_EXECUTOR\", default=\"0\")\nSQL_WRITE_EXECUTOR = os.environ.get(\"SQL_WRITE_EXECUTOR\", default=\"0\")",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "ML_MODEL_EXECUTOR",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "ML_MODEL_EXECUTOR = os.environ.get(\"ML_MODEL_EXECUTOR\", default=\"0\")\nINTERNAL_CUSTOM_FUNCTION_EXECUTOR = os.environ.get(\"INTERNAL_CUSTOM_FUNCTION_EXECUTOR\", default=\"0\")\nEXTERNAL_CUSTOM_FUNCTION_EXECUTOR = os.environ.get(\"EXTERNAL_CUSTOM_FUNCTION_EXECUTOR\", default=\"0\")\nINTERNAL_CUSTOM_API_EXECUTOR = os.environ.get(\"INTERNAL_CUSTOM_API_EXECUTOR\", default=\"0\")\nEXTERNAL_CUSTOM_API_EXECUTOR = os.environ.get(\"EXTERNAL_CUSTOM_API_EXECUTOR\", default=\"0\")\nINTERNAL_CUSTOM_SCRIPT_EXECUTOR = os.environ.get(\"INTERNAL_CUSTOM_SCRIPT_EXECUTOR\", default=\"0\")\nEXTERNAL_CUSTOM_SCRIPT_EXECUTOR = os.environ.get(\"EXTERNAL_CUSTOM_SCRIPT_EXECUTOR\", default=\"0\")\nSQL_READ_EXECUTOR = os.environ.get(\"SQL_READ_EXECUTOR\", default=\"0\")\nSQL_WRITE_EXECUTOR = os.environ.get(\"SQL_WRITE_EXECUTOR\", default=\"0\")\nSCHEDULED_JOB_EXECUTOR = os.environ.get(\"SCHEDULED_JOB_EXECUTOR\", default=\"0\")",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "INTERNAL_CUSTOM_FUNCTION_EXECUTOR",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "INTERNAL_CUSTOM_FUNCTION_EXECUTOR = os.environ.get(\"INTERNAL_CUSTOM_FUNCTION_EXECUTOR\", default=\"0\")\nEXTERNAL_CUSTOM_FUNCTION_EXECUTOR = os.environ.get(\"EXTERNAL_CUSTOM_FUNCTION_EXECUTOR\", default=\"0\")\nINTERNAL_CUSTOM_API_EXECUTOR = os.environ.get(\"INTERNAL_CUSTOM_API_EXECUTOR\", default=\"0\")\nEXTERNAL_CUSTOM_API_EXECUTOR = os.environ.get(\"EXTERNAL_CUSTOM_API_EXECUTOR\", default=\"0\")\nINTERNAL_CUSTOM_SCRIPT_EXECUTOR = os.environ.get(\"INTERNAL_CUSTOM_SCRIPT_EXECUTOR\", default=\"0\")\nEXTERNAL_CUSTOM_SCRIPT_EXECUTOR = os.environ.get(\"EXTERNAL_CUSTOM_SCRIPT_EXECUTOR\", default=\"0\")\nSQL_READ_EXECUTOR = os.environ.get(\"SQL_READ_EXECUTOR\", default=\"0\")\nSQL_WRITE_EXECUTOR = os.environ.get(\"SQL_WRITE_EXECUTOR\", default=\"0\")\nSCHEDULED_JOB_EXECUTOR = os.environ.get(\"SCHEDULED_JOB_EXECUTOR\", default=\"0\")\nTRIGGERED_JOB_EXECUTOR = os.environ.get(\"TRIGGERED_JOB_EXECUTOR\", default=\"0\")",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "EXTERNAL_CUSTOM_FUNCTION_EXECUTOR",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "EXTERNAL_CUSTOM_FUNCTION_EXECUTOR = os.environ.get(\"EXTERNAL_CUSTOM_FUNCTION_EXECUTOR\", default=\"0\")\nINTERNAL_CUSTOM_API_EXECUTOR = os.environ.get(\"INTERNAL_CUSTOM_API_EXECUTOR\", default=\"0\")\nEXTERNAL_CUSTOM_API_EXECUTOR = os.environ.get(\"EXTERNAL_CUSTOM_API_EXECUTOR\", default=\"0\")\nINTERNAL_CUSTOM_SCRIPT_EXECUTOR = os.environ.get(\"INTERNAL_CUSTOM_SCRIPT_EXECUTOR\", default=\"0\")\nEXTERNAL_CUSTOM_SCRIPT_EXECUTOR = os.environ.get(\"EXTERNAL_CUSTOM_SCRIPT_EXECUTOR\", default=\"0\")\nSQL_READ_EXECUTOR = os.environ.get(\"SQL_READ_EXECUTOR\", default=\"0\")\nSQL_WRITE_EXECUTOR = os.environ.get(\"SQL_WRITE_EXECUTOR\", default=\"0\")\nSCHEDULED_JOB_EXECUTOR = os.environ.get(\"SCHEDULED_JOB_EXECUTOR\", default=\"0\")\nTRIGGERED_JOB_EXECUTOR = os.environ.get(\"TRIGGERED_JOB_EXECUTOR\", default=\"0\")\nIMAGE_GENERATOR = os.environ.get(\"IMAGE_GENERATOR\", default=\"0\")",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "INTERNAL_CUSTOM_API_EXECUTOR",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "INTERNAL_CUSTOM_API_EXECUTOR = os.environ.get(\"INTERNAL_CUSTOM_API_EXECUTOR\", default=\"0\")\nEXTERNAL_CUSTOM_API_EXECUTOR = os.environ.get(\"EXTERNAL_CUSTOM_API_EXECUTOR\", default=\"0\")\nINTERNAL_CUSTOM_SCRIPT_EXECUTOR = os.environ.get(\"INTERNAL_CUSTOM_SCRIPT_EXECUTOR\", default=\"0\")\nEXTERNAL_CUSTOM_SCRIPT_EXECUTOR = os.environ.get(\"EXTERNAL_CUSTOM_SCRIPT_EXECUTOR\", default=\"0\")\nSQL_READ_EXECUTOR = os.environ.get(\"SQL_READ_EXECUTOR\", default=\"0\")\nSQL_WRITE_EXECUTOR = os.environ.get(\"SQL_WRITE_EXECUTOR\", default=\"0\")\nSCHEDULED_JOB_EXECUTOR = os.environ.get(\"SCHEDULED_JOB_EXECUTOR\", default=\"0\")\nTRIGGERED_JOB_EXECUTOR = os.environ.get(\"TRIGGERED_JOB_EXECUTOR\", default=\"0\")\nIMAGE_GENERATOR = os.environ.get(\"IMAGE_GENERATOR\", default=\"0\")\nIMAGE_MODIFICATION = os.environ.get(\"IMAGE_MODIFICATION\", default=\"0\")",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "EXTERNAL_CUSTOM_API_EXECUTOR",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "EXTERNAL_CUSTOM_API_EXECUTOR = os.environ.get(\"EXTERNAL_CUSTOM_API_EXECUTOR\", default=\"0\")\nINTERNAL_CUSTOM_SCRIPT_EXECUTOR = os.environ.get(\"INTERNAL_CUSTOM_SCRIPT_EXECUTOR\", default=\"0\")\nEXTERNAL_CUSTOM_SCRIPT_EXECUTOR = os.environ.get(\"EXTERNAL_CUSTOM_SCRIPT_EXECUTOR\", default=\"0\")\nSQL_READ_EXECUTOR = os.environ.get(\"SQL_READ_EXECUTOR\", default=\"0\")\nSQL_WRITE_EXECUTOR = os.environ.get(\"SQL_WRITE_EXECUTOR\", default=\"0\")\nSCHEDULED_JOB_EXECUTOR = os.environ.get(\"SCHEDULED_JOB_EXECUTOR\", default=\"0\")\nTRIGGERED_JOB_EXECUTOR = os.environ.get(\"TRIGGERED_JOB_EXECUTOR\", default=\"0\")\nIMAGE_GENERATOR = os.environ.get(\"IMAGE_GENERATOR\", default=\"0\")\nIMAGE_MODIFICATION = os.environ.get(\"IMAGE_MODIFICATION\", default=\"0\")\nIMAGE_VARIATION = os.environ.get(\"IMAGE_VARIATION\", default=\"0\")",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "INTERNAL_CUSTOM_SCRIPT_EXECUTOR",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "INTERNAL_CUSTOM_SCRIPT_EXECUTOR = os.environ.get(\"INTERNAL_CUSTOM_SCRIPT_EXECUTOR\", default=\"0\")\nEXTERNAL_CUSTOM_SCRIPT_EXECUTOR = os.environ.get(\"EXTERNAL_CUSTOM_SCRIPT_EXECUTOR\", default=\"0\")\nSQL_READ_EXECUTOR = os.environ.get(\"SQL_READ_EXECUTOR\", default=\"0\")\nSQL_WRITE_EXECUTOR = os.environ.get(\"SQL_WRITE_EXECUTOR\", default=\"0\")\nSCHEDULED_JOB_EXECUTOR = os.environ.get(\"SCHEDULED_JOB_EXECUTOR\", default=\"0\")\nTRIGGERED_JOB_EXECUTOR = os.environ.get(\"TRIGGERED_JOB_EXECUTOR\", default=\"0\")\nIMAGE_GENERATOR = os.environ.get(\"IMAGE_GENERATOR\", default=\"0\")\nIMAGE_MODIFICATION = os.environ.get(\"IMAGE_MODIFICATION\", default=\"0\")\nIMAGE_VARIATION = os.environ.get(\"IMAGE_VARIATION\", default=\"0\")\nAUDIO_PROCESSING_STT = os.environ.get(\"AUDIO_PROCESSING_STT\", default=\"0\")",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "EXTERNAL_CUSTOM_SCRIPT_EXECUTOR",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "EXTERNAL_CUSTOM_SCRIPT_EXECUTOR = os.environ.get(\"EXTERNAL_CUSTOM_SCRIPT_EXECUTOR\", default=\"0\")\nSQL_READ_EXECUTOR = os.environ.get(\"SQL_READ_EXECUTOR\", default=\"0\")\nSQL_WRITE_EXECUTOR = os.environ.get(\"SQL_WRITE_EXECUTOR\", default=\"0\")\nSCHEDULED_JOB_EXECUTOR = os.environ.get(\"SCHEDULED_JOB_EXECUTOR\", default=\"0\")\nTRIGGERED_JOB_EXECUTOR = os.environ.get(\"TRIGGERED_JOB_EXECUTOR\", default=\"0\")\nIMAGE_GENERATOR = os.environ.get(\"IMAGE_GENERATOR\", default=\"0\")\nIMAGE_MODIFICATION = os.environ.get(\"IMAGE_MODIFICATION\", default=\"0\")\nIMAGE_VARIATION = os.environ.get(\"IMAGE_VARIATION\", default=\"0\")\nAUDIO_PROCESSING_STT = os.environ.get(\"AUDIO_PROCESSING_STT\", default=\"0\")\nAUDIO_PROCESSING_TTS = os.environ.get(\"AUDIO_PROCESSING_TTS\", default=\"0\")",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "SQL_READ_EXECUTOR",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "SQL_READ_EXECUTOR = os.environ.get(\"SQL_READ_EXECUTOR\", default=\"0\")\nSQL_WRITE_EXECUTOR = os.environ.get(\"SQL_WRITE_EXECUTOR\", default=\"0\")\nSCHEDULED_JOB_EXECUTOR = os.environ.get(\"SCHEDULED_JOB_EXECUTOR\", default=\"0\")\nTRIGGERED_JOB_EXECUTOR = os.environ.get(\"TRIGGERED_JOB_EXECUTOR\", default=\"0\")\nIMAGE_GENERATOR = os.environ.get(\"IMAGE_GENERATOR\", default=\"0\")\nIMAGE_MODIFICATION = os.environ.get(\"IMAGE_MODIFICATION\", default=\"0\")\nIMAGE_VARIATION = os.environ.get(\"IMAGE_VARIATION\", default=\"0\")\nAUDIO_PROCESSING_STT = os.environ.get(\"AUDIO_PROCESSING_STT\", default=\"0\")\nAUDIO_PROCESSING_TTS = os.environ.get(\"AUDIO_PROCESSING_TTS\", default=\"0\")\nVIDEO_GENERATOR = os.environ.get(\"VIDEO_GENERATOR\", default=\"0\")",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "SQL_WRITE_EXECUTOR",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "SQL_WRITE_EXECUTOR = os.environ.get(\"SQL_WRITE_EXECUTOR\", default=\"0\")\nSCHEDULED_JOB_EXECUTOR = os.environ.get(\"SCHEDULED_JOB_EXECUTOR\", default=\"0\")\nTRIGGERED_JOB_EXECUTOR = os.environ.get(\"TRIGGERED_JOB_EXECUTOR\", default=\"0\")\nIMAGE_GENERATOR = os.environ.get(\"IMAGE_GENERATOR\", default=\"0\")\nIMAGE_MODIFICATION = os.environ.get(\"IMAGE_MODIFICATION\", default=\"0\")\nIMAGE_VARIATION = os.environ.get(\"IMAGE_VARIATION\", default=\"0\")\nAUDIO_PROCESSING_STT = os.environ.get(\"AUDIO_PROCESSING_STT\", default=\"0\")\nAUDIO_PROCESSING_TTS = os.environ.get(\"AUDIO_PROCESSING_TTS\", default=\"0\")\nVIDEO_GENERATOR = os.environ.get(\"VIDEO_GENERATOR\", default=\"0\")\nREASONING = os.environ.get(\"REASONING\", default=\"0\")",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "SCHEDULED_JOB_EXECUTOR",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "SCHEDULED_JOB_EXECUTOR = os.environ.get(\"SCHEDULED_JOB_EXECUTOR\", default=\"0\")\nTRIGGERED_JOB_EXECUTOR = os.environ.get(\"TRIGGERED_JOB_EXECUTOR\", default=\"0\")\nIMAGE_GENERATOR = os.environ.get(\"IMAGE_GENERATOR\", default=\"0\")\nIMAGE_MODIFICATION = os.environ.get(\"IMAGE_MODIFICATION\", default=\"0\")\nIMAGE_VARIATION = os.environ.get(\"IMAGE_VARIATION\", default=\"0\")\nAUDIO_PROCESSING_STT = os.environ.get(\"AUDIO_PROCESSING_STT\", default=\"0\")\nAUDIO_PROCESSING_TTS = os.environ.get(\"AUDIO_PROCESSING_TTS\", default=\"0\")\nVIDEO_GENERATOR = os.environ.get(\"VIDEO_GENERATOR\", default=\"0\")\nREASONING = os.environ.get(\"REASONING\", default=\"0\")\nCOSTS_MAP = {",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "TRIGGERED_JOB_EXECUTOR",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "TRIGGERED_JOB_EXECUTOR = os.environ.get(\"TRIGGERED_JOB_EXECUTOR\", default=\"0\")\nIMAGE_GENERATOR = os.environ.get(\"IMAGE_GENERATOR\", default=\"0\")\nIMAGE_MODIFICATION = os.environ.get(\"IMAGE_MODIFICATION\", default=\"0\")\nIMAGE_VARIATION = os.environ.get(\"IMAGE_VARIATION\", default=\"0\")\nAUDIO_PROCESSING_STT = os.environ.get(\"AUDIO_PROCESSING_STT\", default=\"0\")\nAUDIO_PROCESSING_TTS = os.environ.get(\"AUDIO_PROCESSING_TTS\", default=\"0\")\nVIDEO_GENERATOR = os.environ.get(\"VIDEO_GENERATOR\", default=\"0\")\nREASONING = os.environ.get(\"REASONING\", default=\"0\")\nCOSTS_MAP = {\n    \"CONTEXT_MEMORY\": float(CONTEXT_MEMORY),",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "IMAGE_GENERATOR",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "IMAGE_GENERATOR = os.environ.get(\"IMAGE_GENERATOR\", default=\"0\")\nIMAGE_MODIFICATION = os.environ.get(\"IMAGE_MODIFICATION\", default=\"0\")\nIMAGE_VARIATION = os.environ.get(\"IMAGE_VARIATION\", default=\"0\")\nAUDIO_PROCESSING_STT = os.environ.get(\"AUDIO_PROCESSING_STT\", default=\"0\")\nAUDIO_PROCESSING_TTS = os.environ.get(\"AUDIO_PROCESSING_TTS\", default=\"0\")\nVIDEO_GENERATOR = os.environ.get(\"VIDEO_GENERATOR\", default=\"0\")\nREASONING = os.environ.get(\"REASONING\", default=\"0\")\nCOSTS_MAP = {\n    \"CONTEXT_MEMORY\": float(CONTEXT_MEMORY),\n    \"CONTEXT_MEMORY_RETRIEVAL\": float(CONTEXT_MEMORY_RETRIEVAL),",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "IMAGE_MODIFICATION",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "IMAGE_MODIFICATION = os.environ.get(\"IMAGE_MODIFICATION\", default=\"0\")\nIMAGE_VARIATION = os.environ.get(\"IMAGE_VARIATION\", default=\"0\")\nAUDIO_PROCESSING_STT = os.environ.get(\"AUDIO_PROCESSING_STT\", default=\"0\")\nAUDIO_PROCESSING_TTS = os.environ.get(\"AUDIO_PROCESSING_TTS\", default=\"0\")\nVIDEO_GENERATOR = os.environ.get(\"VIDEO_GENERATOR\", default=\"0\")\nREASONING = os.environ.get(\"REASONING\", default=\"0\")\nCOSTS_MAP = {\n    \"CONTEXT_MEMORY\": float(CONTEXT_MEMORY),\n    \"CONTEXT_MEMORY_RETRIEVAL\": float(CONTEXT_MEMORY_RETRIEVAL),\n    \"FILE_INTERPRETER\": float(FILE_INTERPRETER),",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "IMAGE_VARIATION",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "IMAGE_VARIATION = os.environ.get(\"IMAGE_VARIATION\", default=\"0\")\nAUDIO_PROCESSING_STT = os.environ.get(\"AUDIO_PROCESSING_STT\", default=\"0\")\nAUDIO_PROCESSING_TTS = os.environ.get(\"AUDIO_PROCESSING_TTS\", default=\"0\")\nVIDEO_GENERATOR = os.environ.get(\"VIDEO_GENERATOR\", default=\"0\")\nREASONING = os.environ.get(\"REASONING\", default=\"0\")\nCOSTS_MAP = {\n    \"CONTEXT_MEMORY\": float(CONTEXT_MEMORY),\n    \"CONTEXT_MEMORY_RETRIEVAL\": float(CONTEXT_MEMORY_RETRIEVAL),\n    \"FILE_INTERPRETER\": float(FILE_INTERPRETER),\n    \"IMAGE_INTERPRETER\": float(IMAGE_INTERPRETER),",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "AUDIO_PROCESSING_STT",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "AUDIO_PROCESSING_STT = os.environ.get(\"AUDIO_PROCESSING_STT\", default=\"0\")\nAUDIO_PROCESSING_TTS = os.environ.get(\"AUDIO_PROCESSING_TTS\", default=\"0\")\nVIDEO_GENERATOR = os.environ.get(\"VIDEO_GENERATOR\", default=\"0\")\nREASONING = os.environ.get(\"REASONING\", default=\"0\")\nCOSTS_MAP = {\n    \"CONTEXT_MEMORY\": float(CONTEXT_MEMORY),\n    \"CONTEXT_MEMORY_RETRIEVAL\": float(CONTEXT_MEMORY_RETRIEVAL),\n    \"FILE_INTERPRETER\": float(FILE_INTERPRETER),\n    \"IMAGE_INTERPRETER\": float(IMAGE_INTERPRETER),\n    \"CODE_INTERPRETER\": float(CODE_INTERPRETER),",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "AUDIO_PROCESSING_TTS",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "AUDIO_PROCESSING_TTS = os.environ.get(\"AUDIO_PROCESSING_TTS\", default=\"0\")\nVIDEO_GENERATOR = os.environ.get(\"VIDEO_GENERATOR\", default=\"0\")\nREASONING = os.environ.get(\"REASONING\", default=\"0\")\nCOSTS_MAP = {\n    \"CONTEXT_MEMORY\": float(CONTEXT_MEMORY),\n    \"CONTEXT_MEMORY_RETRIEVAL\": float(CONTEXT_MEMORY_RETRIEVAL),\n    \"FILE_INTERPRETER\": float(FILE_INTERPRETER),\n    \"IMAGE_INTERPRETER\": float(IMAGE_INTERPRETER),\n    \"CODE_INTERPRETER\": float(CODE_INTERPRETER),\n    \"DOWNLOAD_EXECUTOR\": float(DOWNLOAD_EXECUTOR),",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "VIDEO_GENERATOR",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "VIDEO_GENERATOR = os.environ.get(\"VIDEO_GENERATOR\", default=\"0\")\nREASONING = os.environ.get(\"REASONING\", default=\"0\")\nCOSTS_MAP = {\n    \"CONTEXT_MEMORY\": float(CONTEXT_MEMORY),\n    \"CONTEXT_MEMORY_RETRIEVAL\": float(CONTEXT_MEMORY_RETRIEVAL),\n    \"FILE_INTERPRETER\": float(FILE_INTERPRETER),\n    \"IMAGE_INTERPRETER\": float(IMAGE_INTERPRETER),\n    \"CODE_INTERPRETER\": float(CODE_INTERPRETER),\n    \"DOWNLOAD_EXECUTOR\": float(DOWNLOAD_EXECUTOR),\n    \"FILE_SYSTEMS_EXECUTOR\": float(FILE_SYSTEMS_EXECUTOR),",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "REASONING",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "REASONING = os.environ.get(\"REASONING\", default=\"0\")\nCOSTS_MAP = {\n    \"CONTEXT_MEMORY\": float(CONTEXT_MEMORY),\n    \"CONTEXT_MEMORY_RETRIEVAL\": float(CONTEXT_MEMORY_RETRIEVAL),\n    \"FILE_INTERPRETER\": float(FILE_INTERPRETER),\n    \"IMAGE_INTERPRETER\": float(IMAGE_INTERPRETER),\n    \"CODE_INTERPRETER\": float(CODE_INTERPRETER),\n    \"DOWNLOAD_EXECUTOR\": float(DOWNLOAD_EXECUTOR),\n    \"FILE_SYSTEMS_EXECUTOR\": float(FILE_SYSTEMS_EXECUTOR),\n    \"KNOWLEDGE_BASE_EXECUTOR\": float(KNOWLEDGE_BASE_EXECUTOR),",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "COSTS_MAP",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "COSTS_MAP = {\n    \"CONTEXT_MEMORY\": float(CONTEXT_MEMORY),\n    \"CONTEXT_MEMORY_RETRIEVAL\": float(CONTEXT_MEMORY_RETRIEVAL),\n    \"FILE_INTERPRETER\": float(FILE_INTERPRETER),\n    \"IMAGE_INTERPRETER\": float(IMAGE_INTERPRETER),\n    \"CODE_INTERPRETER\": float(CODE_INTERPRETER),\n    \"DOWNLOAD_EXECUTOR\": float(DOWNLOAD_EXECUTOR),\n    \"FILE_SYSTEMS_EXECUTOR\": float(FILE_SYSTEMS_EXECUTOR),\n    \"KNOWLEDGE_BASE_EXECUTOR\": float(KNOWLEDGE_BASE_EXECUTOR),\n    \"CODE_BASE_EXECUTOR\": float(CODE_REPOSITORY_EXECUTOR),",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "TESTING",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "TESTING = sys.argv[0].endswith(\"pytest\")\nprint(\"[settings.py] Testing Mode: \", TESTING)\nif TESTING:\n    print(\"[settings.py] Integration Testing Mode is activated...\")\n    pass\nelse:\n    print(\"[settings.py] Integration Testing Mode is deactive, deploy mode is activated...\")\n    pass\nNEW_USER_FREE_CREDITS = int(os.environ.get(\"NEW_USER_FREE_CREDITS\", default=\"0\"))\nDEFAULT_APPLICATION_ZOOM = int(os.environ.get(\"DEFAULT_APPLICATION_ZOOM\", default=\"100\"))",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "NEW_USER_FREE_CREDITS",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "NEW_USER_FREE_CREDITS = int(os.environ.get(\"NEW_USER_FREE_CREDITS\", default=\"0\"))\nDEFAULT_APPLICATION_ZOOM = int(os.environ.get(\"DEFAULT_APPLICATION_ZOOM\", default=\"100\"))\nDATA_UPLOAD_MAX_NUMBER_FIELDS = 10_000",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_APPLICATION_ZOOM",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "DEFAULT_APPLICATION_ZOOM = int(os.environ.get(\"DEFAULT_APPLICATION_ZOOM\", default=\"100\"))\nDATA_UPLOAD_MAX_NUMBER_FIELDS = 10_000",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "DATA_UPLOAD_MAX_NUMBER_FIELDS",
        "kind": 5,
        "importPath": "config.settings",
        "description": "config.settings",
        "peekOfCode": "DATA_UPLOAD_MAX_NUMBER_FIELDS = 10_000",
        "detail": "config.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATE_CONFIG",
        "kind": 5,
        "importPath": "config.template",
        "description": "config.template",
        "peekOfCode": "TEMPLATE_CONFIG = {\n    \"layout\": \"vertical\",  # Options[String]: vertical(default), horizontal\n    \"theme\": \"theme-default\",  # Options[String]: theme-default(default), theme-bordered, theme-semi-dark\n    \"style\": \"dark\",  # Options[String]: light(default), dark, system mode\n    \"rtl_support\": True,  # options[Boolean]: True(default), False # To provide RTLSupport or not\n    \"rtl_mode\": False,\n    # options[Boolean]: False(default), True # To set layout to RTL layout  (myRTLSupport must be True for rtl mode)\n    \"has_customizer\": True,\n    # options[Boolean]: True(default), False # Display customizer or not THIS WILL REMOVE INCLUDED JS FILE. SO LOCAL STORAGE WON'T WORK\n    \"display_customizer\": True,",
        "detail": "config.template",
        "documentation": {}
    },
    {
        "label": "THEME_VARIABLES",
        "kind": 5,
        "importPath": "config.template",
        "description": "config.template",
        "peekOfCode": "THEME_VARIABLES = {\n    \"creator_name\": \"Bimod.io\",\n    \"creator_url\": \"https://www.Bimod.io/\",\n    \"template_name\": \"Bimod.io\",\n    \"template_suffix\": \"Bimod.io - Intelligent Assistant as a Service (AIaaS)\",\n    \"template_version\": \"2.0.0\",\n    \"template_free\": False,\n    \"template_description\": \"Bimod.io is an AI-powered AIaaS provider that helps you to build, train, and deploy your own AI assistant in minutes and automate your business processes.\",\n    \"template_keyword\": \"django, django admin, dashboard, bootstrap 5 dashboard, bootstrap 5 design, bootstrap 5\",\n    \"facebook_url\": \"https://www.facebook.com/pixinvents/\",",
        "detail": "config.template",
        "documentation": {}
    },
    {
        "label": "THEME_LAYOUT_DIR",
        "kind": 5,
        "importPath": "config.template",
        "description": "config.template",
        "peekOfCode": "THEME_LAYOUT_DIR = \"layout\"",
        "detail": "config.template",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", include(\"apps.landing.urls\", namespace=\"landing\")),\n    path(\"admin/\", admin.site.urls),\n    path(\"app/\", include(\"auth.urls\")),\n    path(\"audit_logs/\", include(\"apps.audit_logs.urls\", namespace=\"audit_logs\")),\n    path(\"app/user_profile_management/\", include(\"apps.user_profile_management.urls\", namespace=\"user_profile_management\")),\n    path(\"app/user_settings/\", include(\"apps.user_settings.urls\", namespace=\"user_settings\")),\n    path(\"app/dashboard/\", include(\"apps.dashboard.urls\", namespace=\"dashboard\")),\n    path(\"app/organization/\", include(\"apps.organization.urls\", namespace=\"organization\")),\n    path(\"app/llm_core/\", include(\"apps.llm_core.urls\", namespace=\"llm_core\")),",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "HANDLED_HTTP_NEGATIVE_RESPONSES",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "HANDLED_HTTP_NEGATIVE_RESPONSES = {\n    \"client_side\": [\n        400, 401, 402, 403, 404, 405, 406, 407, 408, 409,\n        410, 411, 412, 413, 414, 415, 416, 417, 418, 421,\n        422, 423, 424, 425, 426, 428, 429, 431, 451\n    ],\n    \"server_side\": [\n        500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511\n    ],\n}",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler400",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler400 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=400)\nhandler401 = SystemView.as_view(template_name=\"pages_misc_not_authorized.html\", status=401)\nhandler402 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=402)\nhandler403 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=403)\nhandler404 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=404)\nhandler405 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=405)\nhandler406 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=406)\nhandler407 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=407)\nhandler408 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=408)\nhandler409 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=409)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler401",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler401 = SystemView.as_view(template_name=\"pages_misc_not_authorized.html\", status=401)\nhandler402 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=402)\nhandler403 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=403)\nhandler404 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=404)\nhandler405 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=405)\nhandler406 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=406)\nhandler407 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=407)\nhandler408 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=408)\nhandler409 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=409)\nhandler410 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=410)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler402",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler402 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=402)\nhandler403 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=403)\nhandler404 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=404)\nhandler405 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=405)\nhandler406 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=406)\nhandler407 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=407)\nhandler408 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=408)\nhandler409 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=409)\nhandler410 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=410)\nhandler411 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=411)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler403",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler403 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=403)\nhandler404 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=404)\nhandler405 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=405)\nhandler406 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=406)\nhandler407 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=407)\nhandler408 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=408)\nhandler409 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=409)\nhandler410 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=410)\nhandler411 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=411)\nhandler412 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=412)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler404",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler404 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=404)\nhandler405 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=405)\nhandler406 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=406)\nhandler407 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=407)\nhandler408 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=408)\nhandler409 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=409)\nhandler410 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=410)\nhandler411 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=411)\nhandler412 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=412)\nhandler413 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=413)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler405",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler405 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=405)\nhandler406 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=406)\nhandler407 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=407)\nhandler408 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=408)\nhandler409 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=409)\nhandler410 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=410)\nhandler411 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=411)\nhandler412 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=412)\nhandler413 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=413)\nhandler414 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=414)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler406",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler406 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=406)\nhandler407 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=407)\nhandler408 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=408)\nhandler409 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=409)\nhandler410 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=410)\nhandler411 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=411)\nhandler412 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=412)\nhandler413 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=413)\nhandler414 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=414)\nhandler415 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=415)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler407",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler407 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=407)\nhandler408 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=408)\nhandler409 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=409)\nhandler410 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=410)\nhandler411 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=411)\nhandler412 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=412)\nhandler413 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=413)\nhandler414 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=414)\nhandler415 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=415)\nhandler416 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=416)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler408",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler408 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=408)\nhandler409 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=409)\nhandler410 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=410)\nhandler411 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=411)\nhandler412 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=412)\nhandler413 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=413)\nhandler414 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=414)\nhandler415 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=415)\nhandler416 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=416)\nhandler417 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=417)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler409",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler409 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=409)\nhandler410 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=410)\nhandler411 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=411)\nhandler412 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=412)\nhandler413 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=413)\nhandler414 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=414)\nhandler415 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=415)\nhandler416 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=416)\nhandler417 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=417)\nhandler418 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=418)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler410",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler410 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=410)\nhandler411 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=411)\nhandler412 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=412)\nhandler413 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=413)\nhandler414 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=414)\nhandler415 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=415)\nhandler416 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=416)\nhandler417 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=417)\nhandler418 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=418)\nhandler421 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=421)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler411",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler411 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=411)\nhandler412 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=412)\nhandler413 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=413)\nhandler414 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=414)\nhandler415 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=415)\nhandler416 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=416)\nhandler417 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=417)\nhandler418 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=418)\nhandler421 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=421)\nhandler422 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=422)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler412",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler412 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=412)\nhandler413 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=413)\nhandler414 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=414)\nhandler415 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=415)\nhandler416 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=416)\nhandler417 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=417)\nhandler418 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=418)\nhandler421 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=421)\nhandler422 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=422)\nhandler423 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=423)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler413",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler413 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=413)\nhandler414 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=414)\nhandler415 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=415)\nhandler416 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=416)\nhandler417 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=417)\nhandler418 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=418)\nhandler421 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=421)\nhandler422 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=422)\nhandler423 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=423)\nhandler424 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=424)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler414",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler414 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=414)\nhandler415 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=415)\nhandler416 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=416)\nhandler417 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=417)\nhandler418 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=418)\nhandler421 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=421)\nhandler422 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=422)\nhandler423 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=423)\nhandler424 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=424)\nhandler425 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=425)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler415",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler415 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=415)\nhandler416 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=416)\nhandler417 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=417)\nhandler418 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=418)\nhandler421 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=421)\nhandler422 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=422)\nhandler423 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=423)\nhandler424 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=424)\nhandler425 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=425)\nhandler426 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=426)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler416",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler416 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=416)\nhandler417 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=417)\nhandler418 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=418)\nhandler421 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=421)\nhandler422 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=422)\nhandler423 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=423)\nhandler424 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=424)\nhandler425 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=425)\nhandler426 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=426)\nhandler428 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=428)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler417",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler417 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=417)\nhandler418 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=418)\nhandler421 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=421)\nhandler422 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=422)\nhandler423 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=423)\nhandler424 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=424)\nhandler425 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=425)\nhandler426 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=426)\nhandler428 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=428)\nhandler429 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=429)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler418",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler418 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=418)\nhandler421 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=421)\nhandler422 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=422)\nhandler423 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=423)\nhandler424 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=424)\nhandler425 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=425)\nhandler426 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=426)\nhandler428 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=428)\nhandler429 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=429)\nhandler431 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=431)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler421",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler421 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=421)\nhandler422 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=422)\nhandler423 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=423)\nhandler424 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=424)\nhandler425 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=425)\nhandler426 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=426)\nhandler428 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=428)\nhandler429 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=429)\nhandler431 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=431)\nhandler451 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=451)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler422",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler422 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=422)\nhandler423 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=423)\nhandler424 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=424)\nhandler425 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=425)\nhandler426 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=426)\nhandler428 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=428)\nhandler429 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=429)\nhandler431 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=431)\nhandler451 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=451)\nhandler500 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=500)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler423",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler423 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=423)\nhandler424 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=424)\nhandler425 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=425)\nhandler426 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=426)\nhandler428 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=428)\nhandler429 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=429)\nhandler431 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=431)\nhandler451 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=451)\nhandler500 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=500)\nhandler501 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=501)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler424",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler424 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=424)\nhandler425 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=425)\nhandler426 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=426)\nhandler428 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=428)\nhandler429 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=429)\nhandler431 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=431)\nhandler451 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=451)\nhandler500 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=500)\nhandler501 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=501)\nhandler502 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=502)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler425",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler425 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=425)\nhandler426 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=426)\nhandler428 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=428)\nhandler429 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=429)\nhandler431 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=431)\nhandler451 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=451)\nhandler500 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=500)\nhandler501 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=501)\nhandler502 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=502)\nhandler503 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=503)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler426",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler426 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=426)\nhandler428 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=428)\nhandler429 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=429)\nhandler431 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=431)\nhandler451 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=451)\nhandler500 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=500)\nhandler501 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=501)\nhandler502 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=502)\nhandler503 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=503)\nhandler504 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=504)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler428",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler428 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=428)\nhandler429 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=429)\nhandler431 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=431)\nhandler451 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=451)\nhandler500 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=500)\nhandler501 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=501)\nhandler502 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=502)\nhandler503 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=503)\nhandler504 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=504)\nhandler505 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=505)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler429",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler429 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=429)\nhandler431 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=431)\nhandler451 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=451)\nhandler500 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=500)\nhandler501 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=501)\nhandler502 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=502)\nhandler503 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=503)\nhandler504 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=504)\nhandler505 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=505)\nhandler506 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=506)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler431",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler431 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=431)\nhandler451 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=451)\nhandler500 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=500)\nhandler501 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=501)\nhandler502 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=502)\nhandler503 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=503)\nhandler504 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=504)\nhandler505 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=505)\nhandler506 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=506)\nhandler507 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=507)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler451",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler451 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=451)\nhandler500 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=500)\nhandler501 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=501)\nhandler502 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=502)\nhandler503 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=503)\nhandler504 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=504)\nhandler505 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=505)\nhandler506 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=506)\nhandler507 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=507)\nhandler508 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=508)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler500",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler500 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=500)\nhandler501 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=501)\nhandler502 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=502)\nhandler503 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=503)\nhandler504 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=504)\nhandler505 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=505)\nhandler506 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=506)\nhandler507 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=507)\nhandler508 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=508)\nhandler510 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=510)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler501",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler501 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=501)\nhandler502 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=502)\nhandler503 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=503)\nhandler504 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=504)\nhandler505 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=505)\nhandler506 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=506)\nhandler507 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=507)\nhandler508 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=508)\nhandler510 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=510)\nhandler511 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=511)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler502",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler502 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=502)\nhandler503 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=503)\nhandler504 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=504)\nhandler505 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=505)\nhandler506 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=506)\nhandler507 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=507)\nhandler508 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=508)\nhandler510 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=510)\nhandler511 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=511)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler503",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler503 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=503)\nhandler504 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=504)\nhandler505 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=505)\nhandler506 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=506)\nhandler507 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=507)\nhandler508 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=508)\nhandler510 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=510)\nhandler511 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=511)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler504",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler504 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=504)\nhandler505 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=505)\nhandler506 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=506)\nhandler507 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=507)\nhandler508 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=508)\nhandler510 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=510)\nhandler511 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=511)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler505",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler505 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=505)\nhandler506 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=506)\nhandler507 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=507)\nhandler508 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=508)\nhandler510 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=510)\nhandler511 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=511)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler506",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler506 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=506)\nhandler507 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=507)\nhandler508 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=508)\nhandler510 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=510)\nhandler511 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=511)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler507",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler507 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=507)\nhandler508 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=508)\nhandler510 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=510)\nhandler511 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=511)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler508",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler508 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=508)\nhandler510 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=510)\nhandler511 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=511)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler510",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler510 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=510)\nhandler511 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=511)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "handler511",
        "kind": 5,
        "importPath": "config.urls",
        "description": "config.urls",
        "peekOfCode": "handler511 = SystemView.as_view(template_name=\"pages_misc_error.html\", status=511)",
        "detail": "config.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "config.wsgi",
        "description": "config.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "config.wsgi",
        "documentation": {}
    },
    {
        "label": "BoilerplateDataLoader",
        "kind": 6,
        "importPath": "data.loader",
        "description": "data.loader",
        "peekOfCode": "class BoilerplateDataLoader:\n    @staticmethod\n    def load():\n        try:\n            BoilerplateDataLoader._load_forum_data()\n            # print(\"[BoilerplateDataLoader.load_forum_data] Forum data loaded successfully\")\n        except Exception as e:\n            print(f\"[BoilerplateDataLoader.load_forum_data] Error while loading forum data: {e}\")\n        #####\n        try:",
        "detail": "data.loader",
        "documentation": {}
    },
    {
        "label": "DataPaths",
        "kind": 6,
        "importPath": "data.path_consts",
        "description": "data.path_consts",
        "peekOfCode": "class DataPaths:\n    class Forum:\n        CATEGORIES = \"data/community/forum/categories.json\"\n        THREADS = \"data/community/forum/threads.json\"\n    class Blog:\n        BLOGS = \"data/community/blog/blogs.json\"\n    class Functions:\n        FUNCTIONS = \"data/marketplace/functions/custom_functions.json\"\n    class APIs:\n        APIs = \"data/marketplace/apis/custom_apis.json\"",
        "detail": "data.path_consts",
        "documentation": {}
    },
    {
        "label": "project",
        "kind": 5,
        "importPath": "source.conf",
        "description": "source.conf",
        "peekOfCode": "project = 'Bimod.io'\ncopyright = '2024, Ege Dogan Dursun'\nauthor = 'Ege Dogan Dursun'\nrelease = 'v0.1.0'\n# -- General configuration ---------------------------------------------------\nextensions = [\n    'sphinx.ext.autodoc',\n    'sphinx.ext.napoleon',\n    'sphinx.ext.autosummary',\n    # 'sphinx.ext.viewcode',  # Comment this out or remove it",
        "detail": "source.conf",
        "documentation": {}
    },
    {
        "label": "copyright",
        "kind": 5,
        "importPath": "source.conf",
        "description": "source.conf",
        "peekOfCode": "copyright = '2024, Ege Dogan Dursun'\nauthor = 'Ege Dogan Dursun'\nrelease = 'v0.1.0'\n# -- General configuration ---------------------------------------------------\nextensions = [\n    'sphinx.ext.autodoc',\n    'sphinx.ext.napoleon',\n    'sphinx.ext.autosummary',\n    # 'sphinx.ext.viewcode',  # Comment this out or remove it\n]",
        "detail": "source.conf",
        "documentation": {}
    },
    {
        "label": "author",
        "kind": 5,
        "importPath": "source.conf",
        "description": "source.conf",
        "peekOfCode": "author = 'Ege Dogan Dursun'\nrelease = 'v0.1.0'\n# -- General configuration ---------------------------------------------------\nextensions = [\n    'sphinx.ext.autodoc',\n    'sphinx.ext.napoleon',\n    'sphinx.ext.autosummary',\n    # 'sphinx.ext.viewcode',  # Comment this out or remove it\n]\nautosummary_generate = True  # Automatically generate summary tables",
        "detail": "source.conf",
        "documentation": {}
    },
    {
        "label": "release",
        "kind": 5,
        "importPath": "source.conf",
        "description": "source.conf",
        "peekOfCode": "release = 'v0.1.0'\n# -- General configuration ---------------------------------------------------\nextensions = [\n    'sphinx.ext.autodoc',\n    'sphinx.ext.napoleon',\n    'sphinx.ext.autosummary',\n    # 'sphinx.ext.viewcode',  # Comment this out or remove it\n]\nautosummary_generate = True  # Automatically generate summary tables\ntemplates_path = ['_templates']",
        "detail": "source.conf",
        "documentation": {}
    },
    {
        "label": "extensions",
        "kind": 5,
        "importPath": "source.conf",
        "description": "source.conf",
        "peekOfCode": "extensions = [\n    'sphinx.ext.autodoc',\n    'sphinx.ext.napoleon',\n    'sphinx.ext.autosummary',\n    # 'sphinx.ext.viewcode',  # Comment this out or remove it\n]\nautosummary_generate = True  # Automatically generate summary tables\ntemplates_path = ['_templates']\nexclude_patterns = []\n# -- Path setup --------------------------------------------------------------",
        "detail": "source.conf",
        "documentation": {}
    },
    {
        "label": "autosummary_generate",
        "kind": 5,
        "importPath": "source.conf",
        "description": "source.conf",
        "peekOfCode": "autosummary_generate = True  # Automatically generate summary tables\ntemplates_path = ['_templates']\nexclude_patterns = []\n# -- Path setup --------------------------------------------------------------\nimport os\nimport sys\nsys.path.insert(0, os.path.abspath('../'))  # Adjust the number of '../' based on where your conf.py is located\nsys.path.insert(0, os.path.abspath('../apps/'))  # Path to the 'apps' directory\n# Ensure your Django settings are configured before Sphinx attempts to import any Django modules\nos.environ['DJANGO_SETTINGS_MODULE'] = 'config.settings'",
        "detail": "source.conf",
        "documentation": {}
    },
    {
        "label": "templates_path",
        "kind": 5,
        "importPath": "source.conf",
        "description": "source.conf",
        "peekOfCode": "templates_path = ['_templates']\nexclude_patterns = []\n# -- Path setup --------------------------------------------------------------\nimport os\nimport sys\nsys.path.insert(0, os.path.abspath('../'))  # Adjust the number of '../' based on where your conf.py is located\nsys.path.insert(0, os.path.abspath('../apps/'))  # Path to the 'apps' directory\n# Ensure your Django settings are configured before Sphinx attempts to import any Django modules\nos.environ['DJANGO_SETTINGS_MODULE'] = 'config.settings'\nimport django",
        "detail": "source.conf",
        "documentation": {}
    },
    {
        "label": "exclude_patterns",
        "kind": 5,
        "importPath": "source.conf",
        "description": "source.conf",
        "peekOfCode": "exclude_patterns = []\n# -- Path setup --------------------------------------------------------------\nimport os\nimport sys\nsys.path.insert(0, os.path.abspath('../'))  # Adjust the number of '../' based on where your conf.py is located\nsys.path.insert(0, os.path.abspath('../apps/'))  # Path to the 'apps' directory\n# Ensure your Django settings are configured before Sphinx attempts to import any Django modules\nos.environ['DJANGO_SETTINGS_MODULE'] = 'config.settings'\nimport django\ndjango.setup()",
        "detail": "source.conf",
        "documentation": {}
    },
    {
        "label": "os.environ['DJANGO_SETTINGS_MODULE']",
        "kind": 5,
        "importPath": "source.conf",
        "description": "source.conf",
        "peekOfCode": "os.environ['DJANGO_SETTINGS_MODULE'] = 'config.settings'\nimport django\ndjango.setup()\n# -- Options for HTML output -------------------------------------------------\nhtml_theme = 'alabaster'\nhtml_static_path = ['_static']",
        "detail": "source.conf",
        "documentation": {}
    },
    {
        "label": "html_theme",
        "kind": 5,
        "importPath": "source.conf",
        "description": "source.conf",
        "peekOfCode": "html_theme = 'alabaster'\nhtml_static_path = ['_static']",
        "detail": "source.conf",
        "documentation": {}
    },
    {
        "label": "html_static_path",
        "kind": 5,
        "importPath": "source.conf",
        "description": "source.conf",
        "peekOfCode": "html_static_path = ['_static']",
        "detail": "source.conf",
        "documentation": {}
    },
    {
        "label": "TemplateBootstrapLayoutBlank",
        "kind": 6,
        "importPath": "templates.layout.bootstrap.layout_blank",
        "description": "templates.layout.bootstrap.layout_blank",
        "peekOfCode": "class TemplateBootstrapLayoutBlank:\n    def init(context):\n        context.update(\n            {\n                \"layout\": \"blank\",\n                \"content_layout\": \"wide\",\n                \"display_customizer\": False,\n            }\n        )\n        # map_context according to updated context values",
        "detail": "templates.layout.bootstrap.layout_blank",
        "documentation": {}
    },
    {
        "label": "TemplateBootstrapLayoutFront",
        "kind": 6,
        "importPath": "templates.layout.bootstrap.layout_front",
        "description": "templates.layout.bootstrap.layout_front",
        "peekOfCode": "class TemplateBootstrapLayoutFront:\n    def init(context):\n        context.update(\n            {\n                \"layout\": \"front\",\n                \"is_front\": True,\n                \"display_customizer\": True,\n                \"content_layout\": \"wide\",\n                \"navbar_type\": \"fixed\",\n            }",
        "detail": "templates.layout.bootstrap.layout_front",
        "documentation": {}
    },
    {
        "label": "TemplateBootstrapLayoutHorizontal",
        "kind": 6,
        "importPath": "templates.layout.bootstrap.layout_horizontal",
        "description": "templates.layout.bootstrap.layout_horizontal",
        "peekOfCode": "class TemplateBootstrapLayoutHorizontal:\n    def init(context):\n        context.update(\n            {\n                \"layout\": \"horizontal\",\n                \"is_navbar\": True,\n                \"navbar_full\": True,\n                \"is_menu\": True,\n                \"menu_horizontal\": True,\n                \"is_footer\": True,",
        "detail": "templates.layout.bootstrap.layout_horizontal",
        "documentation": {}
    },
    {
        "label": "menu_file_path",
        "kind": 5,
        "importPath": "templates.layout.bootstrap.layout_horizontal",
        "description": "templates.layout.bootstrap.layout_horizontal",
        "peekOfCode": "menu_file_path =  settings.BASE_DIR / \"templates\" / \"layout\" / \"partials\" / \"menu\" / \"horizontal\" / \"json\" / \"horizontal_menu.json\"\n\"\"\"\nThis is an entry and Bootstrap class for the theme level.\nThe init() function will be called in web_project/__init__.py.py\n\"\"\"\nclass TemplateBootstrapLayoutHorizontal:\n    def init(context):\n        context.update(\n            {\n                \"layout\": \"horizontal\",",
        "detail": "templates.layout.bootstrap.layout_horizontal",
        "documentation": {}
    },
    {
        "label": "TemplateBootstrapLayoutVertical",
        "kind": 6,
        "importPath": "templates.layout.bootstrap.layout_vertical",
        "description": "templates.layout.bootstrap.layout_vertical",
        "peekOfCode": "class TemplateBootstrapLayoutVertical:\n    def init(context):\n        context.update(\n            {\n                \"layout\": \"vertical\",\n                \"content_navbar\": True,\n                \"is_navbar\": True,\n                \"is_menu\": True,\n                \"is_footer\": True,\n                \"navbar_detached\": True,",
        "detail": "templates.layout.bootstrap.layout_vertical",
        "documentation": {}
    },
    {
        "label": "menu_file_path",
        "kind": 5,
        "importPath": "templates.layout.bootstrap.layout_vertical",
        "description": "templates.layout.bootstrap.layout_vertical",
        "peekOfCode": "menu_file_path =  settings.BASE_DIR / \"templates\" / \"layout\" / \"partials\" / \"menu\" / \"vertical\" / \"json\" / \"vertical_menu.json\"\n\"\"\"\nThis is an entry and Bootstrap class for the theme level.\nThe init() function will be called in web_project/__init__.py.py\n\"\"\"\nclass TemplateBootstrapLayoutVertical:\n    def init(context):\n        context.update(\n            {\n                \"layout\": \"vertical\",",
        "detail": "templates.layout.bootstrap.layout_vertical",
        "documentation": {}
    },
    {
        "label": "TemplateBootstrapSystem",
        "kind": 6,
        "importPath": "templates.layout.bootstrap.system",
        "description": "templates.layout.bootstrap.system",
        "peekOfCode": "class TemplateBootstrapSystem:\n    def init(context):\n        context.update(\n            {\n                \"layout\": \"blank\",\n                \"content_layout\": \"wide\",\n                \"display_customizer\": False,\n            }\n        )\n        # map_context according to updated context values",
        "detail": "templates.layout.bootstrap.system",
        "documentation": {}
    },
    {
        "label": "detect_tool_call",
        "kind": 2,
        "importPath": "tests.helper_functions.json_decoder.mtest_json_1",
        "description": "tests.helper_functions.json_decoder.mtest_json_1",
        "peekOfCode": "def detect_tool_call(output: str, decoder=JSONDecoder()):\n    objects_json_list = []\n    output = output.replace(\"\\n\", \"\").replace(\"'\", '\"')\n    pos = 0\n    while True:\n        match = output.find('{', pos)\n        if match == -1:\n            break\n        try:\n            res, idx = decoder.raw_decode(output[match:])",
        "detail": "tests.helper_functions.json_decoder.mtest_json_1",
        "documentation": {}
    },
    {
        "label": "anonymize_text",
        "kind": 2,
        "importPath": "tests.security.ner.ner_mtest",
        "description": "tests.security.ner.ner_mtest",
        "peekOfCode": "def anonymize_text(text):\n    doc = nlp(text)\n    entity_mapping = defaultdict(dict)\n    anonymized_tokens = []\n    entity_counters = {\n        \"PERSON\": 0,\n        \"ORG\": 0,\n        \"GPE\": 0,\n        \"DATE\": 0,\n        \"CARDINAL\": 0",
        "detail": "tests.security.ner.ner_mtest",
        "documentation": {}
    },
    {
        "label": "deanonymize_text",
        "kind": 2,
        "importPath": "tests.security.ner.ner_mtest",
        "description": "tests.security.ner.ner_mtest",
        "peekOfCode": "def deanonymize_text(anonymized_text, entity_mapping):\n    tokens = anonymized_text.split()\n    deanonymized_tokens = []\n    for token in tokens:\n        for entity_type, mappings in entity_mapping.items():\n            if token in mappings:\n                deanonymized_tokens.append(mappings[token])\n                break\n        else:\n            deanonymized_tokens.append(token)",
        "detail": "tests.security.ner.ner_mtest",
        "documentation": {}
    },
    {
        "label": "NER_MODEL_NAME_DESCRIPTOR",
        "kind": 5,
        "importPath": "tests.security.ner.ner_mtest",
        "description": "tests.security.ner.ner_mtest",
        "peekOfCode": "NER_MODEL_NAME_DESCRIPTOR = \"en_core_web_md\"\nnlp = None\ntry:\n    nlp = spacy.load(NER_MODEL_NAME_DESCRIPTOR)\nexcept OSError:\n    try:\n        from spacy.cli.download import download\n        download(NER_MODEL_NAME_DESCRIPTOR)\n        nlp = spacy.load(NER_MODEL_NAME_DESCRIPTOR)\n    except Exception as e:",
        "detail": "tests.security.ner.ner_mtest",
        "documentation": {}
    },
    {
        "label": "nlp",
        "kind": 5,
        "importPath": "tests.security.ner.ner_mtest",
        "description": "tests.security.ner.ner_mtest",
        "peekOfCode": "nlp = None\ntry:\n    nlp = spacy.load(NER_MODEL_NAME_DESCRIPTOR)\nexcept OSError:\n    try:\n        from spacy.cli.download import download\n        download(NER_MODEL_NAME_DESCRIPTOR)\n        nlp = spacy.load(NER_MODEL_NAME_DESCRIPTOR)\n    except Exception as e:\n        pass",
        "detail": "tests.security.ner.ner_mtest",
        "documentation": {}
    },
    {
        "label": "text",
        "kind": 5,
        "importPath": "tests.security.ner.ner_mtest",
        "description": "tests.security.ner.ner_mtest",
        "peekOfCode": "text = \"John Doe works at OpenAI in San Francisco. He was born on January 1, 1980.\"\nanonymized_text, entity_mapping = anonymize_text(text)\nprint(\"Original Text:\")\nprint(text)\nprint(\"\\nAnonymized Text:\")\nprint(anonymized_text)\nprint(\"\\nEntity Mapping:\")\nprint(entity_mapping)\nde_anonymized_text = deanonymize_text(anonymized_text, entity_mapping)\nprint(de_anonymized_text)",
        "detail": "tests.security.ner.ner_mtest",
        "documentation": {}
    },
    {
        "label": "de_anonymized_text",
        "kind": 5,
        "importPath": "tests.security.ner.ner_mtest",
        "description": "tests.security.ner.ner_mtest",
        "peekOfCode": "de_anonymized_text = deanonymize_text(anonymized_text, entity_mapping)\nprint(de_anonymized_text)",
        "detail": "tests.security.ner.ner_mtest",
        "documentation": {}
    },
    {
        "label": "TemplateHelper",
        "kind": 6,
        "importPath": "web_project.template_helpers.theme",
        "description": "web_project.template_helpers.theme",
        "peekOfCode": "class TemplateHelper:\n    # Init the Template Context using TEMPLATE_CONFIG\n    def init_context(context):\n        context.update(\n            {\n                \"layout\": settings.TEMPLATE_CONFIG.get(\"layout\"),\n                \"theme\": settings.TEMPLATE_CONFIG.get(\"theme\"),\n                \"style\": settings.TEMPLATE_CONFIG.get(\"style\"),\n                \"rtl_support\": settings.TEMPLATE_CONFIG.get(\"rtl_support\"),\n                \"rtl_mode\": settings.TEMPLATE_CONFIG.get(\"rtl_mode\"),",
        "detail": "web_project.template_helpers.theme",
        "documentation": {}
    },
    {
        "label": "get_theme_variables",
        "kind": 2,
        "importPath": "web_project.template_tags.theme",
        "description": "web_project.template_tags.theme",
        "peekOfCode": "def get_theme_variables(scope):\n    return mark_safe(TemplateHelper.get_theme_variables(scope))\n@register.simple_tag\ndef get_theme_config(scope):\n    return mark_safe(TemplateHelper.get_theme_config(scope))\n@register.filter\ndef filter_by_url(submenu, url):\n    if submenu:\n        for subitem in submenu:\n            subitem_url = subitem.get(\"url\")",
        "detail": "web_project.template_tags.theme",
        "documentation": {}
    },
    {
        "label": "get_theme_config",
        "kind": 2,
        "importPath": "web_project.template_tags.theme",
        "description": "web_project.template_tags.theme",
        "peekOfCode": "def get_theme_config(scope):\n    return mark_safe(TemplateHelper.get_theme_config(scope))\n@register.filter\ndef filter_by_url(submenu, url):\n    if submenu:\n        for subitem in submenu:\n            subitem_url = subitem.get(\"url\")\n            if subitem_url == url.path or subitem_url == url.resolver_match.url_name:\n                return True\n            # Recursively check for submenus",
        "detail": "web_project.template_tags.theme",
        "documentation": {}
    },
    {
        "label": "filter_by_url",
        "kind": 2,
        "importPath": "web_project.template_tags.theme",
        "description": "web_project.template_tags.theme",
        "peekOfCode": "def filter_by_url(submenu, url):\n    if submenu:\n        for subitem in submenu:\n            subitem_url = subitem.get(\"url\")\n            if subitem_url == url.path or subitem_url == url.resolver_match.url_name:\n                return True\n            # Recursively check for submenus\n            elif subitem.get(\"submenu\"):\n                if filter_by_url(subitem[\"submenu\"], url):\n                    return True",
        "detail": "web_project.template_tags.theme",
        "documentation": {}
    },
    {
        "label": "has_group",
        "kind": 2,
        "importPath": "web_project.template_tags.theme",
        "description": "web_project.template_tags.theme",
        "peekOfCode": "def has_group(user, group):\n    if user.groups.filter(name=group).exists():\n        return True\n# Check if the user has the permission\n@register.filter\ndef has_permission(user, permission):\n    if user.has_perm(permission):\n        return True\n# For checking if the user group is admin\n@register.filter(name=\"is_admin\")",
        "detail": "web_project.template_tags.theme",
        "documentation": {}
    },
    {
        "label": "has_permission",
        "kind": 2,
        "importPath": "web_project.template_tags.theme",
        "description": "web_project.template_tags.theme",
        "peekOfCode": "def has_permission(user, permission):\n    if user.has_perm(permission):\n        return True\n# For checking if the user group is admin\n@register.filter(name=\"is_admin\")\ndef is_admin(user):\n    return user.groups.filter(name=\"admin\").exists()\n@register.filter(name=\"admin_required\")\ndef admin_required(view_func):\n    return user_passes_test(is_admin, login_url='login')(view_func)",
        "detail": "web_project.template_tags.theme",
        "documentation": {}
    },
    {
        "label": "is_admin",
        "kind": 2,
        "importPath": "web_project.template_tags.theme",
        "description": "web_project.template_tags.theme",
        "peekOfCode": "def is_admin(user):\n    return user.groups.filter(name=\"admin\").exists()\n@register.filter(name=\"admin_required\")\ndef admin_required(view_func):\n    return user_passes_test(is_admin, login_url='login')(view_func)\n# For checking if the user group is client\n@register.filter(name=\"is_client\")\ndef is_client(user):\n    return user.groups.filter(name=\"client\").exists()\n@register.filter(name=\"client_required\")",
        "detail": "web_project.template_tags.theme",
        "documentation": {}
    },
    {
        "label": "admin_required",
        "kind": 2,
        "importPath": "web_project.template_tags.theme",
        "description": "web_project.template_tags.theme",
        "peekOfCode": "def admin_required(view_func):\n    return user_passes_test(is_admin, login_url='login')(view_func)\n# For checking if the user group is client\n@register.filter(name=\"is_client\")\ndef is_client(user):\n    return user.groups.filter(name=\"client\").exists()\n@register.filter(name=\"client_required\")\ndef client_required(view_func):\n    return user_passes_test(is_client, login_url='login')(view_func)\n# For checking if is_superuser",
        "detail": "web_project.template_tags.theme",
        "documentation": {}
    },
    {
        "label": "is_client",
        "kind": 2,
        "importPath": "web_project.template_tags.theme",
        "description": "web_project.template_tags.theme",
        "peekOfCode": "def is_client(user):\n    return user.groups.filter(name=\"client\").exists()\n@register.filter(name=\"client_required\")\ndef client_required(view_func):\n    return user_passes_test(is_client, login_url='login')(view_func)\n# For checking if is_superuser\n@register.filter(name=\"is_superuser\")\ndef is_superuser(user):\n    return user.is_superuser\n@register.filter(name=\"superuser_required\")",
        "detail": "web_project.template_tags.theme",
        "documentation": {}
    },
    {
        "label": "client_required",
        "kind": 2,
        "importPath": "web_project.template_tags.theme",
        "description": "web_project.template_tags.theme",
        "peekOfCode": "def client_required(view_func):\n    return user_passes_test(is_client, login_url='login')(view_func)\n# For checking if is_superuser\n@register.filter(name=\"is_superuser\")\ndef is_superuser(user):\n    return user.is_superuser\n@register.filter(name=\"superuser_required\")\ndef superuser_required(view_func):\n    return user_passes_test(is_superuser, login_url='login')(view_func)\n# For checking if is_staff",
        "detail": "web_project.template_tags.theme",
        "documentation": {}
    },
    {
        "label": "is_superuser",
        "kind": 2,
        "importPath": "web_project.template_tags.theme",
        "description": "web_project.template_tags.theme",
        "peekOfCode": "def is_superuser(user):\n    return user.is_superuser\n@register.filter(name=\"superuser_required\")\ndef superuser_required(view_func):\n    return user_passes_test(is_superuser, login_url='login')(view_func)\n# For checking if is_staff\n@register.filter(name=\"is_staff\")\ndef is_staff(user):\n    return user.is_staff\n@register.filter(name=\"staff_required\")",
        "detail": "web_project.template_tags.theme",
        "documentation": {}
    },
    {
        "label": "superuser_required",
        "kind": 2,
        "importPath": "web_project.template_tags.theme",
        "description": "web_project.template_tags.theme",
        "peekOfCode": "def superuser_required(view_func):\n    return user_passes_test(is_superuser, login_url='login')(view_func)\n# For checking if is_staff\n@register.filter(name=\"is_staff\")\ndef is_staff(user):\n    return user.is_staff\n@register.filter(name=\"staff_required\")\ndef staff_required(view_func):\n    return user_passes_test(is_staff, login_url='login')(view_func)\n@register.simple_tag",
        "detail": "web_project.template_tags.theme",
        "documentation": {}
    },
    {
        "label": "is_staff",
        "kind": 2,
        "importPath": "web_project.template_tags.theme",
        "description": "web_project.template_tags.theme",
        "peekOfCode": "def is_staff(user):\n    return user.is_staff\n@register.filter(name=\"staff_required\")\ndef staff_required(view_func):\n    return user_passes_test(is_staff, login_url='login')(view_func)\n@register.simple_tag\ndef current_url(request):\n    return request.build_absolute_uri()",
        "detail": "web_project.template_tags.theme",
        "documentation": {}
    },
    {
        "label": "staff_required",
        "kind": 2,
        "importPath": "web_project.template_tags.theme",
        "description": "web_project.template_tags.theme",
        "peekOfCode": "def staff_required(view_func):\n    return user_passes_test(is_staff, login_url='login')(view_func)\n@register.simple_tag\ndef current_url(request):\n    return request.build_absolute_uri()",
        "detail": "web_project.template_tags.theme",
        "documentation": {}
    },
    {
        "label": "current_url",
        "kind": 2,
        "importPath": "web_project.template_tags.theme",
        "description": "web_project.template_tags.theme",
        "peekOfCode": "def current_url(request):\n    return request.build_absolute_uri()",
        "detail": "web_project.template_tags.theme",
        "documentation": {}
    },
    {
        "label": "register",
        "kind": 5,
        "importPath": "web_project.template_tags.theme",
        "description": "web_project.template_tags.theme",
        "peekOfCode": "register = template.Library()\n# Register tags as an adapter for the Theme class usage in the HTML template\n@register.simple_tag\ndef get_theme_variables(scope):\n    return mark_safe(TemplateHelper.get_theme_variables(scope))\n@register.simple_tag\ndef get_theme_config(scope):\n    return mark_safe(TemplateHelper.get_theme_config(scope))\n@register.filter\ndef filter_by_url(submenu, url):",
        "detail": "web_project.template_tags.theme",
        "documentation": {}
    },
    {
        "label": "DefaultLanguageMiddleware",
        "kind": 6,
        "importPath": "web_project.language_middleware",
        "description": "web_project.language_middleware",
        "peekOfCode": "class DefaultLanguageMiddleware:\n    def __init__(self, get_response):\n        self.get_response = get_response\n    def __call__(self, request):\n        # Check if the django_language cookie is not set\n        if 'django_language' not in request.COOKIES:\n            # Get the default language from settings.LANGUAGE_CODE\n            default_language = settings.LANGUAGE_CODE\n            activate(default_language)\n            response = self.get_response(request)",
        "detail": "web_project.language_middleware",
        "documentation": {}
    },
    {
        "label": "SystemView",
        "kind": 6,
        "importPath": "web_project.views",
        "description": "web_project.views",
        "peekOfCode": "class SystemView(TemplateView):\n    status = \"\"\n    def get_context_data(self, **kwargs):\n        # A function to init the global layout. It is defined in web_project/__init__.py.py file\n        context = TemplateLayout.init(self, super().get_context_data(**kwargs))\n        # Define the layout for this module\n        # _templates/layout/system.html\n        context.update(\n            {\n                \"layout_path\": TemplateHelper.set_layout(\"system.html\", context),",
        "detail": "web_project.views",
        "documentation": {}
    },
    {
        "label": "bind",
        "kind": 5,
        "importPath": "gunicorn-cfg",
        "description": "gunicorn-cfg",
        "peekOfCode": "bind = '0.0.0.0:5005'\nworkers = 1\naccesslog = '-'\nloglevel = 'debug'\ncapture_output = True\nenable_stdio_inheritance = True",
        "detail": "gunicorn-cfg",
        "documentation": {}
    },
    {
        "label": "workers",
        "kind": 5,
        "importPath": "gunicorn-cfg",
        "description": "gunicorn-cfg",
        "peekOfCode": "workers = 1\naccesslog = '-'\nloglevel = 'debug'\ncapture_output = True\nenable_stdio_inheritance = True",
        "detail": "gunicorn-cfg",
        "documentation": {}
    },
    {
        "label": "accesslog",
        "kind": 5,
        "importPath": "gunicorn-cfg",
        "description": "gunicorn-cfg",
        "peekOfCode": "accesslog = '-'\nloglevel = 'debug'\ncapture_output = True\nenable_stdio_inheritance = True",
        "detail": "gunicorn-cfg",
        "documentation": {}
    },
    {
        "label": "loglevel",
        "kind": 5,
        "importPath": "gunicorn-cfg",
        "description": "gunicorn-cfg",
        "peekOfCode": "loglevel = 'debug'\ncapture_output = True\nenable_stdio_inheritance = True",
        "detail": "gunicorn-cfg",
        "documentation": {}
    },
    {
        "label": "capture_output",
        "kind": 5,
        "importPath": "gunicorn-cfg",
        "description": "gunicorn-cfg",
        "peekOfCode": "capture_output = True\nenable_stdio_inheritance = True",
        "detail": "gunicorn-cfg",
        "documentation": {}
    },
    {
        "label": "enable_stdio_inheritance",
        "kind": 5,
        "importPath": "gunicorn-cfg",
        "description": "gunicorn-cfg",
        "peekOfCode": "enable_stdio_inheritance = True",
        "detail": "gunicorn-cfg",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    import warnings\n    warnings.filterwarnings(\"ignore\", category=DeprecationWarning)\n    warnings.filterwarnings(\"ignore\", category=ResourceWarning)\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"config.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(",
        "detail": "manage",
        "documentation": {}
    }
]
